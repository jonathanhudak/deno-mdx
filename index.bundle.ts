// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var A = Object.create;
var v = Object.defineProperty;
var M = Object.getOwnPropertyDescriptor;
var z = Object.getOwnPropertyNames;
var B = Object.getPrototypeOf, H = Object.prototype.hasOwnProperty;
var a = (e9, t14)=>v(e9, "name", {
        value: t14,
        configurable: !0
    });
var w59 = (e10, t15)=>()=>(t15 || e10((t15 = {
            exports: {}
        }).exports, t15), t15.exports);
var W = (e11, t16, r12, u29)=>{
    if (t16 && typeof t16 == "object" || typeof t16 == "function") for (let o18 of z(t16))!H.call(e11, o18) && o18 !== r12 && v(e11, o18, {
        get: ()=>t16[o18],
        enumerable: !(u29 = M(t16, o18)) || u29.enumerable
    });
    return e11;
};
var b = (e12, t17, r13)=>(r13 = e12 != null ? A(B(e12)) : {}, W(t17 || !e12 || !e12.__esModule ? v(r13, "default", {
        value: e12,
        enumerable: !0
    }) : r13, e12));
var N = w59((n23)=>{
    "use strict";
    var d27 = Symbol.for("react.element"), Y6 = Symbol.for("react.portal"), G13 = Symbol.for("react.fragment"), J10 = Symbol.for("react.strict_mode"), K12 = Symbol.for("react.profiler"), Q6 = Symbol.for("react.provider"), X12 = Symbol.for("react.context"), Z9 = Symbol.for("react.forward_ref"), ee5 = Symbol.for("react.suspense"), te5 = Symbol.for("react.memo"), re6 = Symbol.for("react.lazy"), x42 = Symbol.iterator;
    function ne7(e13) {
        return e13 === null || typeof e13 != "object" ? null : (e13 = x42 && e13[x42] || e13["@@iterator"], typeof e13 == "function" ? e13 : null);
    }
    a(ne7, "A");
    var I27 = {
        isMounted: function() {
            return !1;
        },
        enqueueForceUpdate: function() {},
        enqueueReplaceState: function() {},
        enqueueSetState: function() {}
    }, g32 = Object.assign, P21 = {};
    function y27(e14, t18, r14) {
        this.props = e14, this.context = t18, this.refs = P21, this.updater = r14 || I27;
    }
    a(y27, "E");
    y27.prototype.isReactComponent = {};
    y27.prototype.setState = function(e15, t19) {
        if (typeof e15 != "object" && typeof e15 != "function" && e15 != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, e15, t19, "setState");
    };
    y27.prototype.forceUpdate = function(e16) {
        this.updater.enqueueForceUpdate(this, e16, "forceUpdate");
    };
    function T18() {}
    a(T18, "F");
    T18.prototype = y27.prototype;
    function E16(e17, t20, r15) {
        this.props = e17, this.context = t20, this.refs = P21, this.updater = r15 || I27;
    }
    a(E16, "G");
    var R14 = E16.prototype = new T18;
    R14.constructor = E16;
    g32(R14, y27.prototype);
    R14.isPureReactComponent = !0;
    var O18 = Array.isArray, D21 = Object.prototype.hasOwnProperty, C26 = {
        current: null
    }, V11 = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
    };
    function L13(e18, t21, r16) {
        var u30, o19 = {}, c27 = null, f28 = null;
        if (t21 != null) for(u30 in t21.ref !== void 0 && (f28 = t21.ref), t21.key !== void 0 && (c27 = "" + t21.key), t21)D21.call(t21, u30) && !V11.hasOwnProperty(u30) && (o19[u30] = t21[u30]);
        var i29 = arguments.length - 2;
        if (i29 === 1) o19.children = r16;
        else if (1 < i29) {
            for(var s29 = Array(i29), p41 = 0; p41 < i29; p41++)s29[p41] = arguments[p41 + 2];
            o19.children = s29;
        }
        if (e18 && e18.defaultProps) for(u30 in i29 = e18.defaultProps, i29)o19[u30] === void 0 && (o19[u30] = i29[u30]);
        return {
            $$typeof: d27,
            type: e18,
            key: c27,
            ref: f28,
            props: o19,
            _owner: C26.current
        };
    }
    a(L13, "M");
    function oe5(e19, t22) {
        return {
            $$typeof: d27,
            type: e19.type,
            key: t22,
            ref: e19.ref,
            props: e19.props,
            _owner: e19._owner
        };
    }
    a(oe5, "N");
    function $31(e20) {
        return typeof e20 == "object" && e20 !== null && e20.$$typeof === d27;
    }
    a($31, "O");
    function ue4(e21) {
        var t23 = {
            "=": "=0",
            ":": "=2"
        };
        return "$" + e21.replace(/[=:]/g, function(r17) {
            return t23[r17];
        });
    }
    a(ue4, "escape");
    var j32 = /\/+/g;
    function S24(e22, t24) {
        return typeof e22 == "object" && e22 !== null && e22.key != null ? ue4("" + e22.key) : t24.toString(36);
    }
    a(S24, "Q");
    function m32(e23, t25, r18, u31, o20) {
        var c28 = typeof e23;
        (c28 === "undefined" || c28 === "boolean") && (e23 = null);
        var f29 = !1;
        if (e23 === null) f29 = !0;
        else switch(c28){
            case "string":
            case "number":
                f29 = !0;
                break;
            case "object":
                switch(e23.$$typeof){
                    case d27:
                    case Y6:
                        f29 = !0;
                }
        }
        if (f29) return f29 = e23, o20 = o20(f29), e23 = u31 === "" ? "." + S24(f29, 0) : u31, O18(o20) ? (r18 = "", e23 != null && (r18 = e23.replace(j32, "$&/") + "/"), m32(o20, t25, r18, "", function(p42) {
            return p42;
        })) : o20 != null && ($31(o20) && (o20 = oe5(o20, r18 + (!o20.key || f29 && f29.key === o20.key ? "" : ("" + o20.key).replace(j32, "$&/") + "/") + e23)), t25.push(o20)), 1;
        if (f29 = 0, u31 = u31 === "" ? "." : u31 + ":", O18(e23)) for(var i30 = 0; i30 < e23.length; i30++){
            c28 = e23[i30];
            var s30 = u31 + S24(c28, i30);
            f29 += m32(c28, t25, r18, s30, o20);
        }
        else if (s30 = ne7(e23), typeof s30 == "function") for(e23 = s30.call(e23), i30 = 0; !(c28 = e23.next()).done;)c28 = c28.value, s30 = u31 + S24(c28, i30++), f29 += m32(c28, t25, r18, s30, o20);
        else if (c28 === "object") throw t25 = String(e23), Error("Objects are not valid as a React child (found: " + (t25 === "[object Object]" ? "object with keys {" + Object.keys(e23).join(", ") + "}" : t25) + "). If you meant to render a collection of children, use an array instead.");
        return f29;
    }
    a(m32, "R");
    function _13(e24, t26, r19) {
        if (e24 == null) return e24;
        var u32 = [], o21 = 0;
        return m32(e24, u32, "", "", function(c29) {
            return t26.call(r19, c29, o21++);
        }), u32;
    }
    a(_13, "S");
    function se4(e25) {
        if (e25._status === -1) {
            var t27 = e25._result;
            t27 = t27(), t27.then(function(r20) {
                (e25._status === 0 || e25._status === -1) && (e25._status = 1, e25._result = r20);
            }, function(r21) {
                (e25._status === 0 || e25._status === -1) && (e25._status = 2, e25._result = r21);
            }), e25._status === -1 && (e25._status = 0, e25._result = t27);
        }
        if (e25._status === 1) return e25._result.default;
        throw e25._result;
    }
    a(se4, "T");
    var l32 = {
        current: null
    }, h34 = {
        transition: null
    }, ce3 = {
        ReactCurrentDispatcher: l32,
        ReactCurrentBatchConfig: h34,
        ReactCurrentOwner: C26
    };
    n23.Children = {
        map: _13,
        forEach: function(e26, t28, r22) {
            _13(e26, function() {
                t28.apply(this, arguments);
            }, r22);
        },
        count: function(e27) {
            var t29 = 0;
            return _13(e27, function() {
                t29++;
            }), t29;
        },
        toArray: function(e28) {
            return _13(e28, function(t30) {
                return t30;
            }) || [];
        },
        only: function(e29) {
            if (!$31(e29)) throw Error("React.Children.only expected to receive a single React element child.");
            return e29;
        }
    };
    n23.Component = y27;
    n23.Fragment = G13;
    n23.Profiler = K12;
    n23.PureComponent = E16;
    n23.StrictMode = J10;
    n23.Suspense = ee5;
    n23.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ce3;
    n23.cloneElement = function(e30, t31, r23) {
        if (e30 == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e30 + ".");
        var u33 = g32({}, e30.props), o22 = e30.key, c30 = e30.ref, f30 = e30._owner;
        if (t31 != null) {
            if (t31.ref !== void 0 && (c30 = t31.ref, f30 = C26.current), t31.key !== void 0 && (o22 = "" + t31.key), e30.type && e30.type.defaultProps) var i31 = e30.type.defaultProps;
            for(s31 in t31)D21.call(t31, s31) && !V11.hasOwnProperty(s31) && (u33[s31] = t31[s31] === void 0 && i31 !== void 0 ? i31[s31] : t31[s31]);
        }
        var s31 = arguments.length - 2;
        if (s31 === 1) u33.children = r23;
        else if (1 < s31) {
            i31 = Array(s31);
            for(var p43 = 0; p43 < s31; p43++)i31[p43] = arguments[p43 + 2];
            u33.children = i31;
        }
        return {
            $$typeof: d27,
            type: e30.type,
            key: o22,
            ref: c30,
            props: u33,
            _owner: f30
        };
    };
    n23.createContext = function(e31) {
        return e31 = {
            $$typeof: X12,
            _currentValue: e31,
            _currentValue2: e31,
            _threadCount: 0,
            Provider: null,
            Consumer: null,
            _defaultValue: null,
            _globalName: null
        }, e31.Provider = {
            $$typeof: Q6,
            _context: e31
        }, e31.Consumer = e31;
    };
    n23.createElement = L13;
    n23.createFactory = function(e32) {
        var t32 = L13.bind(null, e32);
        return t32.type = e32, t32;
    };
    n23.createRef = function() {
        return {
            current: null
        };
    };
    n23.forwardRef = function(e33) {
        return {
            $$typeof: Z9,
            render: e33
        };
    };
    n23.isValidElement = $31;
    n23.lazy = function(e34) {
        return {
            $$typeof: re6,
            _payload: {
                _status: -1,
                _result: e34
            },
            _init: se4
        };
    };
    n23.memo = function(e35, t33) {
        return {
            $$typeof: te5,
            type: e35,
            compare: t33 === void 0 ? null : t33
        };
    };
    n23.startTransition = function(e36) {
        var t34 = h34.transition;
        h34.transition = {};
        try {
            e36();
        } finally{
            h34.transition = t34;
        }
    };
    n23.unstable_act = function() {
        throw Error("act(...) is not supported in production builds of React.");
    };
    n23.useCallback = function(e37, t35) {
        return l32.current.useCallback(e37, t35);
    };
    n23.useContext = function(e38) {
        return l32.current.useContext(e38);
    };
    n23.useDebugValue = function() {};
    n23.useDeferredValue = function(e39) {
        return l32.current.useDeferredValue(e39);
    };
    n23.useEffect = function(e40, t36) {
        return l32.current.useEffect(e40, t36);
    };
    n23.useId = function() {
        return l32.current.useId();
    };
    n23.useImperativeHandle = function(e41, t37, r24) {
        return l32.current.useImperativeHandle(e41, t37, r24);
    };
    n23.useInsertionEffect = function(e42, t38) {
        return l32.current.useInsertionEffect(e42, t38);
    };
    n23.useLayoutEffect = function(e43, t39) {
        return l32.current.useLayoutEffect(e43, t39);
    };
    n23.useMemo = function(e44, t40) {
        return l32.current.useMemo(e44, t40);
    };
    n23.useReducer = function(e45, t41, r25) {
        return l32.current.useReducer(e45, t41, r25);
    };
    n23.useRef = function(e46) {
        return l32.current.useRef(e46);
    };
    n23.useState = function(e47) {
        return l32.current.useState(e47);
    };
    n23.useSyncExternalStore = function(e48, t42, r26) {
        return l32.current.useSyncExternalStore(e48, t42, r26);
    };
    n23.useTransition = function() {
        return l32.current.useTransition();
    };
    n23.version = "18.1.0";
});
var k = w59((pe, F16)=>{
    "use strict";
    F16.exports = N();
});
var U = b(k()), q = b(k()), { Children: ye , Component: de , Fragment: _e , Profiler: me , PureComponent: he , StrictMode: ve , Suspense: Se , __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: Ee , cloneElement: Re , createContext: Ce , createElement: $e , createFactory: ke , createRef: we , forwardRef: be , isValidElement: xe , lazy: Oe , memo: je , startTransition: Ie , unstable_act: ge , useCallback: Pe , useContext: Te , useDebugValue: De , useDeferredValue: Ve , useEffect: Le , useId: Ne , useImperativeHandle: Fe , useInsertionEffect: Ue , useLayoutEffect: qe , useMemo: Ae , useReducer: Me , useRef: ze , useState: Be , useSyncExternalStore: He , useTransition: We , version: Ye  } = q, { default: ie , ...fe } = q, Ge = (U.default ?? ie) ?? fe;
var kr = Object.create;
var be1 = Object.defineProperty;
var wr = Object.getOwnPropertyDescriptor;
var Cr = Object.getOwnPropertyNames;
var Er = Object.getPrototypeOf, Fr = Object.prototype.hasOwnProperty;
var s = (e49, t43)=>be1(e49, "name", {
        value: t43,
        configurable: !0
    }), Rt = ((e50)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e50, {
        get: (t44, n24)=>(typeof require != "undefined" ? require : t44)[n24]
    }) : e50)(function(e51) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e51 + '" is not supported');
});
var Ue1 = (e52, t45)=>()=>(t45 || e52((t45 = {
            exports: {}
        }).exports, t45), t45.exports);
var Rr = (e53, t46, n25, r27)=>{
    if (t46 && typeof t46 == "object" || typeof t46 == "function") for (let l33 of Cr(t46))!Fr.call(e53, l33) && l33 !== n25 && be1(e53, l33, {
        get: ()=>t46[l33],
        enumerable: !(r27 = wr(t46, l33)) || r27.enumerable
    });
    return e53;
};
var Tt = (e54, t47, n26)=>(n26 = e54 != null ? kr(Er(e54)) : {}, Rr(t47 || !e54 || !e54.__esModule ? be1(n26, "default", {
        value: e54,
        enumerable: !0
    }) : n26, e54));
var Sn = Ue1((ee6)=>{
    "use strict";
    var Xt = Ge;
    function m33(e55) {
        for(var t48 = "https://reactjs.org/docs/error-decoder.html?invariant=" + e55, n27 = 1; n27 < arguments.length; n27++)t48 += "&args[]=" + encodeURIComponent(arguments[n27]);
        return "Minified React error #" + e55 + "; visit " + t48 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    s(m33, "k");
    var We3 = !1;
    function c31(e56, t49) {
        return We3 && (We3 = !1, t49[0] !== "<" && e56.push("<!-- -->")), t49 === "<!-- -->" ? We3 = !0 : e56.push(t49);
    }
    s(c31, "m");
    var M12 = Object.prototype.hasOwnProperty, Tr = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, _t3 = {}, It2 = {};
    function Gt1(e57) {
        return M12.call(It2, e57) ? !0 : M12.call(_t3, e57) ? !1 : Tr.test(e57) ? It2[e57] = !0 : (_t3[e57] = !0, !1);
    }
    s(Gt1, "fa");
    function _14(e58, t50, n28, r28, l34, o23, i32) {
        this.acceptsBooleans = t50 === 2 || t50 === 3 || t50 === 4, this.attributeName = r28, this.attributeNamespace = l34, this.mustUseProperty = n28, this.propertyName = e58, this.type = t50, this.sanitizeURL = o23, this.removeEmptyString = i32;
    }
    s(_14, "r");
    var E17 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e59) {
        E17[e59] = new _14(e59, 0, !1, e59, null, !1, !1);
    });
    [
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "className",
            "class"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ]
    ].forEach(function(e60) {
        var t51 = e60[0];
        E17[t51] = new _14(t51, 1, !1, e60[1], null, !1, !1);
    });
    [
        "contentEditable",
        "draggable",
        "spellCheck",
        "value"
    ].forEach(function(e61) {
        E17[e61] = new _14(e61, 2, !1, e61.toLowerCase(), null, !1, !1);
    });
    [
        "autoReverse",
        "externalResourcesRequired",
        "focusable",
        "preserveAlpha"
    ].forEach(function(e62) {
        E17[e62] = new _14(e62, 2, !1, e62, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e63) {
        E17[e63] = new _14(e63, 3, !1, e63.toLowerCase(), null, !1, !1);
    });
    [
        "checked",
        "multiple",
        "muted",
        "selected"
    ].forEach(function(e64) {
        E17[e64] = new _14(e64, 3, !0, e64, null, !1, !1);
    });
    [
        "capture",
        "download"
    ].forEach(function(e65) {
        E17[e65] = new _14(e65, 4, !1, e65, null, !1, !1);
    });
    [
        "cols",
        "rows",
        "size",
        "span"
    ].forEach(function(e66) {
        E17[e66] = new _14(e66, 6, !1, e66, null, !1, !1);
    });
    [
        "rowSpan",
        "start"
    ].forEach(function(e67) {
        E17[e67] = new _14(e67, 5, !1, e67.toLowerCase(), null, !1, !1);
    });
    var Qe3 = /[\-:]([a-z])/g;
    function et3(e68) {
        return e68[1].toUpperCase();
    }
    s(et3, "ia");
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e69) {
        var t52 = e69.replace(Qe3, et3);
        E17[t52] = new _14(t52, 1, !1, e69, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e70) {
        var t53 = e70.replace(Qe3, et3);
        E17[t53] = new _14(t53, 1, !1, e70, "http://www.w3.org/1999/xlink", !1, !1);
    });
    [
        "xml:base",
        "xml:lang",
        "xml:space"
    ].forEach(function(e71) {
        var t54 = e71.replace(Qe3, et3);
        E17[t54] = new _14(t54, 1, !1, e71, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    [
        "tabIndex",
        "crossOrigin"
    ].forEach(function(e72) {
        E17[e72] = new _14(e72, 1, !1, e72.toLowerCase(), null, !1, !1);
    });
    E17.xlinkHref = new _14("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    [
        "src",
        "href",
        "action",
        "formAction"
    ].forEach(function(e73) {
        E17[e73] = new _14(e73, 1, !1, e73.toLowerCase(), null, !0, !0);
    });
    var me4 = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
    }, _r = [
        "Webkit",
        "ms",
        "Moz",
        "O"
    ];
    Object.keys(me4).forEach(function(e74) {
        _r.forEach(function(t55) {
            t55 = t55 + e74.charAt(0).toUpperCase() + e74.substring(1), me4[t55] = me4[e74];
        });
    });
    var Ir1 = /["'&<>]/;
    function T19(e75) {
        if (typeof e75 == "boolean" || typeof e75 == "number") return "" + e75;
        e75 = "" + e75;
        var t56 = Ir1.exec(e75);
        if (t56) {
            var n29 = "", r29, l35 = 0;
            for(r29 = t56.index; r29 < e75.length; r29++){
                switch(e75.charCodeAt(r29)){
                    case 34:
                        t56 = "&quot;";
                        break;
                    case 38:
                        t56 = "&amp;";
                        break;
                    case 39:
                        t56 = "&#x27;";
                        break;
                    case 60:
                        t56 = "&lt;";
                        break;
                    case 62:
                        t56 = "&gt;";
                        break;
                    default:
                        continue;
                }
                l35 !== r29 && (n29 += e75.substring(l35, r29)), l35 = r29 + 1, n29 += t56;
            }
            e75 = l35 !== r29 ? n29 + e75.substring(l35, r29) : n29;
        }
        return e75;
    }
    s(T19, "v");
    var Mr = /([A-Z])/g, Pr = /^ms-/, Xe3 = Array.isArray;
    function O19(e76, t57) {
        return {
            insertionMode: e76,
            selectedValue: t57
        };
    }
    s(O19, "w");
    function Br(e77, t58, n30) {
        switch(t58){
            case "select":
                return O19(1, n30.value != null ? n30.value : n30.defaultValue);
            case "svg":
                return O19(2, null);
            case "math":
                return O19(3, null);
            case "foreignObject":
                return O19(1, null);
            case "table":
                return O19(4, null);
            case "thead":
            case "tbody":
            case "tfoot":
                return O19(5, null);
            case "colgroup":
                return O19(7, null);
            case "tr":
                return O19(6, null);
        }
        return 4 <= e77.insertionMode || e77.insertionMode === 0 ? O19(1, null) : e77;
    }
    s(Br, "oa");
    function Mt1(e78, t59) {
        t59 !== "" && e78.push(T19(t59), "<!-- -->");
    }
    s(Mt1, "pa");
    var Pt1 = new Map;
    function Yt(e79, t60, n31) {
        if (typeof n31 != "object") throw Error(m33(62));
        t60 = !0;
        for(var r30 in n31)if (M12.call(n31, r30)) {
            var l36 = n31[r30];
            if (l36 != null && typeof l36 != "boolean" && l36 !== "") {
                if (r30.indexOf("--") === 0) {
                    var o = T19(r30);
                    l36 = T19(("" + l36).trim());
                } else {
                    o = r30;
                    var i33 = Pt1.get(o);
                    i33 !== void 0 || (i33 = T19(o.replace(Mr, "-$1").toLowerCase().replace(Pr, "-ms-")), Pt1.set(o, i33)), o = i33, l36 = typeof l36 == "number" ? l36 === 0 || M12.call(me4, r30) ? "" + l36 : l36 + "px" : T19(("" + l36).trim());
                }
                t60 ? (t60 = !1, e79.push(' style="', o, ":", l36)) : e79.push(";", o, ":", l36);
            }
        }
        t60 || e79.push('"');
    }
    s(Yt, "ra");
    function $32(e80, t61, n32, r31) {
        switch(n32){
            case "style":
                Yt(e80, t61, r31);
                return;
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
                return;
        }
        if (!(2 < n32.length) || n32[0] !== "o" && n32[0] !== "O" || n32[1] !== "n" && n32[1] !== "N") {
            if (t61 = E17.hasOwnProperty(n32) ? E17[n32] : null, t61 !== null) {
                switch(typeof r31){
                    case "function":
                    case "symbol":
                        return;
                    case "boolean":
                        if (!t61.acceptsBooleans) return;
                }
                switch(n32 = t61.attributeName, t61.type){
                    case 3:
                        r31 && e80.push(" ", n32, '=""');
                        break;
                    case 4:
                        r31 === !0 ? e80.push(" ", n32, '=""') : r31 !== !1 && e80.push(" ", n32, '="', T19(r31), '"');
                        break;
                    case 5:
                        isNaN(r31) || e80.push(" ", n32, '="', T19(r31), '"');
                        break;
                    case 6:
                        !isNaN(r31) && 1 <= r31 && e80.push(" ", n32, '="', T19(r31), '"');
                        break;
                    default:
                        t61.sanitizeURL && (r31 = "" + r31), e80.push(" ", n32, '="', T19(r31), '"');
                }
            } else if (Gt1(n32)) {
                switch(typeof r31){
                    case "function":
                    case "symbol":
                        return;
                    case "boolean":
                        if (t61 = n32.toLowerCase().slice(0, 5), t61 !== "data-" && t61 !== "aria-") return;
                }
                e80.push(" ", n32, '="', T19(r31), '"');
            }
        }
    }
    s($32, "y");
    function ye4(e81, t62, n33) {
        if (t62 != null) {
            if (n33 != null) throw Error(m33(60));
            if (typeof t62 != "object" || !("__html" in t62)) throw Error(m33(61));
            t62 = t62.__html, t62 != null && e81.push("" + t62);
        }
    }
    s(ye4, "A");
    function Nr(e82) {
        var t63 = "";
        return Xt.Children.forEach(e82, function(n34) {
            n34 != null && (t63 += n34);
        }), t63;
    }
    s(Nr, "sa");
    function qe5(e83, t64, n35, r32) {
        e83.push(j33(n35));
        var l37 = n35 = null, o;
        for(o in t64)if (M12.call(t64, o)) {
            var i34 = t64[o];
            if (i34 != null) switch(o){
                case "children":
                    n35 = i34;
                    break;
                case "dangerouslySetInnerHTML":
                    l37 = i34;
                    break;
                default:
                    $32(e83, r32, o, i34);
            }
        }
        return e83.push(">"), ye4(e83, l37, n35), typeof n35 == "string" ? (e83.push(T19(n35)), null) : n35;
    }
    s(qe5, "ta");
    var Dr = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Bt1 = new Map;
    function j33(e84) {
        var t65 = Bt1.get(e84);
        if (t65 === void 0) {
            if (!Dr.test(e84)) throw Error(m33(65, e84));
            t65 = "<" + e84, Bt1.set(e84, t65);
        }
        return t65;
    }
    s(j33, "B");
    function Vr(e85, t66, n36, r33, l38) {
        switch(t66){
            case "select":
                e85.push(j33("select"));
                var o = null, i35 = null;
                for(p44 in n36)if (M12.call(n36, p44)) {
                    var u34 = n36[p44];
                    if (u34 != null) switch(p44){
                        case "children":
                            o = u34;
                            break;
                        case "dangerouslySetInnerHTML":
                            i35 = u34;
                            break;
                        case "defaultValue":
                        case "value":
                            break;
                        default:
                            $32(e85, r33, p44, u34);
                    }
                }
                return e85.push(">"), ye4(e85, i35, o), o;
            case "option":
                i35 = l38.selectedValue, e85.push(j33("option"));
                var a35 = u34 = null, f31 = null, p44 = null;
                for(o in n36)if (M12.call(n36, o) && (t66 = n36[o], t66 != null)) switch(o){
                    case "children":
                        u34 = t66;
                        break;
                    case "selected":
                        f31 = t66;
                        break;
                    case "dangerouslySetInnerHTML":
                        p44 = t66;
                        break;
                    case "value":
                        a35 = t66;
                    default:
                        $32(e85, r33, o, t66);
                }
                if (i35 != null) if (n36 = a35 !== null ? "" + a35 : Nr(u34), Xe3(i35)) {
                    for(r33 = 0; r33 < i35.length; r33++)if ("" + i35[r33] === n36) {
                        e85.push(' selected=""');
                        break;
                    }
                } else "" + i35 === n36 && e85.push(' selected=""');
                else f31 && e85.push(' selected=""');
                return e85.push(">"), ye4(e85, p44, u34), u34;
            case "textarea":
                e85.push(j33("textarea")), p44 = i35 = o = null;
                for(u34 in n36)if (M12.call(n36, u34) && (a35 = n36[u34], a35 != null)) switch(u34){
                    case "children":
                        p44 = a35;
                        break;
                    case "value":
                        o = a35;
                        break;
                    case "defaultValue":
                        i35 = a35;
                        break;
                    case "dangerouslySetInnerHTML":
                        throw Error(m33(91));
                    default:
                        $32(e85, r33, u34, a35);
                }
                if (o === null && i35 !== null && (o = i35), e85.push(">"), p44 != null) {
                    if (o != null) throw Error(m33(92));
                    if (Xe3(p44) && 1 < p44.length) throw Error(m33(93));
                    o = "" + p44;
                }
                return typeof o == "string" && o[0] === `
` && e85.push(`
`), o !== null && e85.push(T19("" + o)), null;
            case "input":
                e85.push(j33("input")), a35 = p44 = u34 = o = null;
                for(i35 in n36)if (M12.call(n36, i35) && (f31 = n36[i35], f31 != null)) switch(i35){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(m33(399, "input"));
                    case "defaultChecked":
                        a35 = f31;
                        break;
                    case "defaultValue":
                        u34 = f31;
                        break;
                    case "checked":
                        p44 = f31;
                        break;
                    case "value":
                        o = f31;
                        break;
                    default:
                        $32(e85, r33, i35, f31);
                }
                return p44 !== null ? $32(e85, r33, "checked", p44) : a35 !== null && $32(e85, r33, "checked", a35), o !== null ? $32(e85, r33, "value", o) : u34 !== null && $32(e85, r33, "value", u34), e85.push("/>"), null;
            case "menuitem":
                e85.push(j33("menuitem"));
                for(var g33 in n36)if (M12.call(n36, g33) && (o = n36[g33], o != null)) switch(g33){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(m33(400));
                    default:
                        $32(e85, r33, g33, o);
                }
                return e85.push(">"), null;
            case "listing":
            case "pre":
                e85.push(j33(t66)), i35 = o = null;
                for(a35 in n36)if (M12.call(n36, a35) && (u34 = n36[a35], u34 != null)) switch(a35){
                    case "children":
                        o = u34;
                        break;
                    case "dangerouslySetInnerHTML":
                        i35 = u34;
                        break;
                    default:
                        $32(e85, r33, a35, u34);
                }
                if (e85.push(">"), i35 != null) {
                    if (o != null) throw Error(m33(60));
                    if (typeof i35 != "object" || !("__html" in i35)) throw Error(m33(61));
                    n36 = i35.__html, n36 != null && (typeof n36 == "string" && 0 < n36.length && n36[0] === `
` ? e85.push(`
`, n36) : e85.push("" + n36));
                }
                return typeof o == "string" && o[0] === `
` && e85.push(`
`), o;
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
                e85.push(j33(t66));
                for(var C27 in n36)if (M12.call(n36, C27) && (o = n36[C27], o != null)) switch(C27){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(m33(399, t66));
                    default:
                        $32(e85, r33, C27, o);
                }
                return e85.push("/>"), null;
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return qe5(e85, n36, t66, r33);
            case "html":
                return l38.insertionMode === 0 && e85.push("<!DOCTYPE html>"), qe5(e85, n36, t66, r33);
            default:
                if (t66.indexOf("-") === -1 && typeof n36.is != "string") return qe5(e85, n36, t66, r33);
                e85.push(j33(t66)), i35 = o = null;
                for(f31 in n36)if (M12.call(n36, f31) && (u34 = n36[f31], u34 != null)) switch(f31){
                    case "children":
                        o = u34;
                        break;
                    case "dangerouslySetInnerHTML":
                        i35 = u34;
                        break;
                    case "style":
                        Yt(e85, r33, u34);
                        break;
                    case "suppressContentEditableWarning":
                    case "suppressHydrationWarning":
                        break;
                    default:
                        Gt1(f31) && typeof u34 != "function" && typeof u34 != "symbol" && e85.push(" ", f31, '="', T19(u34), '"');
                }
                return e85.push(">"), ye4(e85, i35, o), o;
        }
    }
    s(Vr, "wa");
    function Nt2(e86, t, n37) {
        if (c31(e86, '<!--$?--><template id="'), n37 === null) throw Error(m33(395));
        return c31(e86, n37), c31(e86, '"></template>');
    }
    s(Nt2, "xa");
    function $r(e87, t67, n38, r34) {
        switch(n38.insertionMode){
            case 0:
            case 1:
                return c31(e87, '<div hidden id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            case 2:
                return c31(e87, '<svg aria-hidden="true" style="display:none" id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            case 3:
                return c31(e87, '<math aria-hidden="true" style="display:none" id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            case 4:
                return c31(e87, '<table hidden id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            case 5:
                return c31(e87, '<table hidden><tbody id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            case 6:
                return c31(e87, '<table hidden><tr id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            case 7:
                return c31(e87, '<table hidden><colgroup id="'), c31(e87, t67.segmentPrefix), t67 = r34.toString(16), c31(e87, t67), c31(e87, '">');
            default:
                throw Error(m33(397));
        }
    }
    s($r, "ya");
    function zr1(e88, t68) {
        switch(t68.insertionMode){
            case 0:
            case 1:
                return c31(e88, "</div>");
            case 2:
                return c31(e88, "</svg>");
            case 3:
                return c31(e88, "</math>");
            case 4:
                return c31(e88, "</table>");
            case 5:
                return c31(e88, "</tbody></table>");
            case 6:
                return c31(e88, "</tr></table>");
            case 7:
                return c31(e88, "</colgroup></table>");
            default:
                throw Error(m33(397));
        }
    }
    s(zr1, "za");
    function Lr1(e89, t69) {
        return t69 = t69 === void 0 ? "" : t69, {
            bootstrapChunks: [],
            startInlineScript: "<script>",
            placeholderPrefix: t69 + "P:",
            segmentPrefix: t69 + "S:",
            boundaryPrefix: t69 + "B:",
            idPrefix: t69,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: !1,
            sentCompleteBoundaryFunction: !1,
            sentClientRenderFunction: !1,
            generateStaticMarkup: e89
        };
    }
    s(Lr1, "Aa");
    var le4 = Object.assign, Or = Symbol.for("react.element"), Jt = Symbol.for("react.portal"), Kt = Symbol.for("react.fragment"), Qt1 = Symbol.for("react.strict_mode"), en1 = Symbol.for("react.profiler"), tn1 = Symbol.for("react.provider"), nn1 = Symbol.for("react.context"), rn1 = Symbol.for("react.forward_ref"), on1 = Symbol.for("react.suspense"), ln1 = Symbol.for("react.suspense_list"), un1 = Symbol.for("react.memo"), tt3 = Symbol.for("react.lazy"), jr = Symbol.for("react.scope"), Ar1 = Symbol.for("react.debug_trace_mode"), Hr = Symbol.for("react.legacy_hidden"), br1 = Symbol.for("react.default_value"), Dt2 = Symbol.iterator;
    function Ge4(e90) {
        if (e90 == null) return null;
        if (typeof e90 == "function") return e90.displayName || e90.name || null;
        if (typeof e90 == "string") return e90;
        switch(e90){
            case Kt:
                return "Fragment";
            case Jt:
                return "Portal";
            case en1:
                return "Profiler";
            case Qt1:
                return "StrictMode";
            case on1:
                return "Suspense";
            case ln1:
                return "SuspenseList";
        }
        if (typeof e90 == "object") switch(e90.$$typeof){
            case nn1:
                return (e90.displayName || "Context") + ".Consumer";
            case tn1:
                return (e90._context.displayName || "Context") + ".Provider";
            case rn1:
                var t70 = e90.render;
                return e90 = e90.displayName, e90 || (e90 = t70.displayName || t70.name || "", e90 = e90 !== "" ? "ForwardRef(" + e90 + ")" : "ForwardRef"), e90;
            case un1:
                return t70 = e90.displayName || null, t70 !== null ? t70 : Ge4(e90.type) || "Memo";
            case tt3:
                t70 = e90._payload, e90 = e90._init;
                try {
                    return Ge4(e90(t70));
                } catch  {}
        }
        return null;
    }
    s(Ge4, "Sa");
    var sn2 = {};
    function Vt2(e91, t71) {
        if (e91 = e91.contextTypes, !e91) return sn2;
        var n39 = {}, r35;
        for(r35 in e91)n39[r35] = t71[r35];
        return n39;
    }
    s(Vt2, "Ua");
    var X13 = null;
    function Fe4(e92, t72) {
        if (e92 !== t72) {
            e92.context._currentValue2 = e92.parentValue, e92 = e92.parent;
            var n40 = t72.parent;
            if (e92 === null) {
                if (n40 !== null) throw Error(m33(401));
            } else {
                if (n40 === null) throw Error(m33(401));
                Fe4(e92, n40);
            }
            t72.context._currentValue2 = t72.value;
        }
    }
    s(Fe4, "F");
    function an1(e93) {
        e93.context._currentValue2 = e93.parentValue, e93 = e93.parent, e93 !== null && an1(e93);
    }
    s(an1, "Va");
    function cn1(e94) {
        var t73 = e94.parent;
        t73 !== null && cn1(t73), e94.context._currentValue2 = e94.value;
    }
    s(cn1, "Wa");
    function fn(e95, t74) {
        if (e95.context._currentValue2 = e95.parentValue, e95 = e95.parent, e95 === null) throw Error(m33(402));
        e95.depth === t74.depth ? Fe4(e95, t74) : fn(e95, t74);
    }
    s(fn, "Xa");
    function pn(e96, t75) {
        var n41 = t75.parent;
        if (n41 === null) throw Error(m33(402));
        e96.depth === n41.depth ? Fe4(e96, n41) : pn(e96, n41), t75.context._currentValue2 = t75.value;
    }
    s(pn, "Ya");
    function xe5(e97) {
        var t76 = X13;
        t76 !== e97 && (t76 === null ? cn1(e97) : e97 === null ? an1(t76) : t76.depth === e97.depth ? Fe4(t76, e97) : t76.depth > e97.depth ? fn(t76, e97) : pn(t76, e97), X13 = e97);
    }
    s(xe5, "G");
    var $t1 = {
        isMounted: function() {
            return !1;
        },
        enqueueSetState: function(e98, t77) {
            e98 = e98._reactInternals, e98.queue !== null && e98.queue.push(t77);
        },
        enqueueReplaceState: function(e99, t78) {
            e99 = e99._reactInternals, e99.replace = !0, e99.queue = [
                t78
            ];
        },
        enqueueForceUpdate: function() {}
    };
    function zt(e100, t79, n42, r36) {
        var l39 = e100.state !== void 0 ? e100.state : null;
        e100.updater = $t1, e100.props = n42, e100.state = l39;
        var o = {
            queue: [],
            replace: !1
        };
        e100._reactInternals = o;
        var i36 = t79.contextType;
        if (e100.context = typeof i36 == "object" && i36 !== null ? i36._currentValue2 : r36, i36 = t79.getDerivedStateFromProps, typeof i36 == "function" && (i36 = i36(n42, l39), l39 = i36 == null ? l39 : le4({}, l39, i36), e100.state = l39), typeof t79.getDerivedStateFromProps != "function" && typeof e100.getSnapshotBeforeUpdate != "function" && (typeof e100.UNSAFE_componentWillMount == "function" || typeof e100.componentWillMount == "function")) if (t79 = e100.state, typeof e100.componentWillMount == "function" && e100.componentWillMount(), typeof e100.UNSAFE_componentWillMount == "function" && e100.UNSAFE_componentWillMount(), t79 !== e100.state && $t1.enqueueReplaceState(e100, e100.state, null), o.queue !== null && 0 < o.queue.length) if (t79 = o.queue, i36 = o.replace, o.queue = null, o.replace = !1, i36 && t79.length === 1) e100.state = t79[0];
        else {
            for(o = i36 ? t79[0] : e100.state, l39 = !0, i36 = i36 ? 1 : 0; i36 < t79.length; i36++){
                var u35 = t79[i36];
                u35 = typeof u35 == "function" ? u35.call(e100, o, n42, r36) : u35, u35 != null && (l39 ? (l39 = !1, o = le4({}, o, u35)) : le4(o, u35));
            }
            e100.state = o;
        }
        else o.queue = null;
    }
    s(zt, "$a");
    var Ur = {
        id: 1,
        overflow: ""
    };
    function Ye3(e101, t80, n43) {
        var r37 = e101.id;
        e101 = e101.overflow;
        var l40 = 32 - ve4(r37) - 1;
        r37 &= ~(1 << l40), n43 += 1;
        var o = 32 - ve4(t80) + l40;
        if (30 < o) {
            var i37 = l40 - l40 % 5;
            return o = (r37 & (1 << i37) - 1).toString(32), r37 >>= i37, l40 -= i37, {
                id: 1 << 32 - ve4(t80) + l40 | n43 << l40 | r37,
                overflow: o + e101
            };
        }
        return {
            id: 1 << o | n43 << l40 | r37,
            overflow: e101
        };
    }
    s(Ye3, "bb");
    var ve4 = Math.clz32 ? Math.clz32 : Zr, Wr = Math.log, qr = Math.LN2;
    function Zr(e102) {
        return e102 >>>= 0, e102 === 0 ? 32 : 31 - (Wr(e102) / qr | 0) | 0;
    }
    s(Zr, "cb");
    function Xr(e103, t81) {
        return e103 === t81 && (e103 !== 0 || 1 / e103 === 1 / t81) || e103 !== e103 && t81 !== t81;
    }
    s(Xr, "fb");
    var Gr = typeof Object.is == "function" ? Object.is : Xr, A23 = null, nt3 = null, ge5 = null, x43 = null, re7 = !1, ke4 = !1, ie6 = 0, U14 = null, Re3 = 0;
    function Z10() {
        if (A23 === null) throw Error(m33(321));
        return A23;
    }
    s(Z10, "Q");
    function Lt3() {
        if (0 < Re3) throw Error(m33(312));
        return {
            memoizedState: null,
            queue: null,
            next: null
        };
    }
    s(Lt3, "ib");
    function rt4() {
        return x43 === null ? ge5 === null ? (re7 = !1, ge5 = x43 = Lt3()) : (re7 = !0, x43 = ge5) : x43.next === null ? (re7 = !1, x43 = x43.next = Lt3()) : (re7 = !0, x43 = x43.next), x43;
    }
    s(rt4, "jb");
    function ot2() {
        nt3 = A23 = null, ke4 = !1, ge5 = null, Re3 = 0, x43 = U14 = null;
    }
    s(ot2, "kb");
    function dn1(e104, t82) {
        return typeof t82 == "function" ? t82(e104) : t82;
    }
    s(dn1, "lb");
    function Ot(e105, t83, n44) {
        if (A23 = Z10(), x43 = rt4(), re7) {
            var r38 = x43.queue;
            if (t83 = r38.dispatch, U14 !== null && (n44 = U14.get(r38), n44 !== void 0)) {
                U14.delete(r38), r38 = x43.memoizedState;
                do r38 = e105(r38, n44.action), n44 = n44.next;
                while (n44 !== null)
                return x43.memoizedState = r38, [
                    r38,
                    t83
                ];
            }
            return [
                x43.memoizedState,
                t83
            ];
        }
        return e105 = e105 === dn1 ? typeof t83 == "function" ? t83() : t83 : n44 !== void 0 ? n44(t83) : t83, x43.memoizedState = e105, e105 = x43.queue = {
            last: null,
            dispatch: null
        }, e105 = e105.dispatch = Yr.bind(null, A23, e105), [
            x43.memoizedState,
            e105
        ];
    }
    s(Ot, "mb");
    function jt1(e106, t84) {
        if (A23 = Z10(), x43 = rt4(), t84 = t84 === void 0 ? null : t84, x43 !== null) {
            var n45 = x43.memoizedState;
            if (n45 !== null && t84 !== null) {
                var r39 = n45[1];
                e: if (r39 === null) r39 = !1;
                else {
                    for(var l41 = 0; l41 < r39.length && l41 < t84.length; l41++)if (!Gr(t84[l41], r39[l41])) {
                        r39 = !1;
                        break e;
                    }
                    r39 = !0;
                }
                if (r39) return n45[0];
            }
        }
        return e106 = e106(), x43.memoizedState = [
            e106,
            t84
        ], e106;
    }
    s(jt1, "ob");
    function Yr(e107, t85, n46) {
        if (25 <= Re3) throw Error(m33(301));
        if (e107 === A23) if (ke4 = !0, e107 = {
            action: n46,
            next: null
        }, U14 === null && (U14 = new Map), n46 = U14.get(t85), n46 === void 0) U14.set(t85, e107);
        else {
            for(t85 = n46; t85.next !== null;)t85 = t85.next;
            t85.next = e107;
        }
    }
    s(Yr, "nb");
    function Jr() {
        throw Error(m33(394));
    }
    s(Jr, "pb");
    function de4() {}
    s(de4, "R");
    var At1 = {
        readContext: function(e108) {
            return e108._currentValue2;
        },
        useContext: function(e109) {
            return Z10(), e109._currentValue2;
        },
        useMemo: jt1,
        useReducer: Ot,
        useRef: function(e110) {
            A23 = Z10(), x43 = rt4();
            var t86 = x43.memoizedState;
            return t86 === null ? (e110 = {
                current: e110
            }, x43.memoizedState = e110) : t86;
        },
        useState: function(e111) {
            return Ot(dn1, e111);
        },
        useInsertionEffect: de4,
        useLayoutEffect: function() {},
        useCallback: function(e112, t87) {
            return jt1(function() {
                return e112;
            }, t87);
        },
        useImperativeHandle: de4,
        useEffect: de4,
        useDebugValue: de4,
        useDeferredValue: function(e113) {
            return Z10(), e113;
        },
        useTransition: function() {
            return Z10(), [
                !1,
                Jr
            ];
        },
        useId: function() {
            var e114 = nt3.treeContext, t88 = e114.overflow;
            e114 = e114.id, e114 = (e114 & ~(1 << 32 - ve4(e114) - 1)).toString(32) + t88;
            var n47 = Se4;
            if (n47 === null) throw Error(m33(404));
            return t88 = ie6++, e114 = ":" + n47.idPrefix + "R" + e114, 0 < t88 && (e114 += "H" + t88.toString(32)), e114 + ":";
        },
        useMutableSource: function(e115, t89) {
            return Z10(), t89(e115._source);
        },
        useSyncExternalStore: function(e, t, n48) {
            if (n48 === void 0) throw Error(m33(407));
            return n48();
        }
    }, Se4 = null, Ze2 = Xt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Kr(e116) {
        console.error(e116);
    }
    s(Kr, "sb");
    function oe6() {}
    s(oe6, "T");
    function Qr(e117, t90, n49, r40, l42, o, i38, u36, a36) {
        var f32 = [], p45 = new Set;
        return t90 = {
            destination: null,
            responseState: t90,
            progressiveChunkSize: r40 === void 0 ? 12800 : r40,
            status: 0,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: p45,
            pingedTasks: f32,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: l42 === void 0 ? Kr : l42,
            onAllReady: o === void 0 ? oe6 : o,
            onShellReady: i38 === void 0 ? oe6 : i38,
            onShellError: u36 === void 0 ? oe6 : u36,
            onFatalError: a36 === void 0 ? oe6 : a36
        }, n49 = we3(t90, 0, null, n49), n49.parentFlushed = !0, e117 = lt2(t90, e117, null, n49, p45, sn2, null, Ur), f32.push(e117), t90;
    }
    s(Qr, "tb");
    function lt2(e118, t91, n50, r41, l43, o, i39, u37) {
        e118.allPendingTasks++, n50 === null ? e118.pendingRootTasks++ : n50.pendingTasks++;
        var a37 = {
            node: t91,
            ping: function() {
                var f33 = e118.pingedTasks;
                f33.push(a37), f33.length === 1 && yn(e118);
            },
            blockedBoundary: n50,
            blockedSegment: r41,
            abortSet: l43,
            legacyContext: o,
            context: i39,
            treeContext: u37
        };
        return l43.add(a37), a37;
    }
    s(lt2, "ub");
    function we3(e, t92, n51, r42) {
        return {
            status: 0,
            id: -1,
            index: t92,
            parentFlushed: !1,
            chunks: [],
            children: [],
            formatContext: r42,
            boundary: n51
        };
    }
    s(we3, "U");
    function ue5(e119, t93) {
        e119 = e119.onError, e119(t93);
    }
    s(ue5, "V");
    function Ce4(e120, t94) {
        var n52 = e120.onShellError;
        n52(t94), n52 = e120.onFatalError, n52(t94), e120.destination !== null ? (e120.status = 2, e120.destination.destroy(t94)) : (e120.status = 1, e120.fatalError = t94);
    }
    s(Ce4, "W");
    function Ht(e121, t95, n53, r43, l44) {
        for(A23 = {}, nt3 = t95, ie6 = 0, e121 = n53(r43, l44); ke4;)ke4 = !1, ie6 = 0, Re3 += 1, x43 = null, e121 = n53(r43, l44);
        return ot2(), e121;
    }
    s(Ht, "wb");
    function bt2(e122, t96, n54, r44) {
        var l45 = n54.render(), o = r44.childContextTypes;
        if (o != null) {
            var i40 = t96.legacyContext;
            if (typeof n54.getChildContext != "function") r44 = i40;
            else {
                n54 = n54.getChildContext();
                for(var u38 in n54)if (!(u38 in o)) throw Error(m33(108, Ge4(r44) || "Unknown", u38));
                r44 = le4({}, i40, n54);
            }
            t96.legacyContext = r44, P22(e122, t96, l45), t96.legacyContext = i40;
        } else P22(e122, t96, l45);
    }
    s(bt2, "xb");
    function Ut1(e123, t97) {
        if (e123 && e123.defaultProps) {
            t97 = le4({}, t97), e123 = e123.defaultProps;
            for(var n55 in e123)t97[n55] === void 0 && (t97[n55] = e123[n55]);
            return t97;
        }
        return t97;
    }
    s(Ut1, "yb");
    function Je3(e124, t98, n56, r45, l46) {
        if (typeof n56 == "function") if (n56.prototype && n56.prototype.isReactComponent) {
            l46 = Vt2(n56, t98.legacyContext);
            var o = n56.contextType;
            o = new n56(r45, typeof o == "object" && o !== null ? o._currentValue2 : l46), zt(o, n56, r45, l46), bt2(e124, t98, o, n56);
        } else {
            o = Vt2(n56, t98.legacyContext), l46 = Ht(e124, t98, n56, r45, o);
            var i41 = ie6 !== 0;
            if (typeof l46 == "object" && l46 !== null && typeof l46.render == "function" && l46.$$typeof === void 0) zt(l46, n56, r45, o), bt2(e124, t98, l46, n56);
            else if (i41) {
                r45 = t98.treeContext, t98.treeContext = Ye3(r45, 1, 0);
                try {
                    P22(e124, t98, l46);
                } finally{
                    t98.treeContext = r45;
                }
            } else P22(e124, t98, l46);
        }
        else if (typeof n56 == "string") switch(l46 = t98.blockedSegment, o = Vr(l46.chunks, n56, r45, e124.responseState, l46.formatContext), i41 = l46.formatContext, l46.formatContext = Br(i41, n56, r45), Ke3(e124, t98, o), l46.formatContext = i41, n56){
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
                break;
            default:
                l46.chunks.push("</", n56, ">");
        }
        else {
            switch(n56){
                case Hr:
                case Ar1:
                case Qt1:
                case en1:
                case Kt:
                    P22(e124, t98, r45.children);
                    return;
                case ln1:
                    P22(e124, t98, r45.children);
                    return;
                case jr:
                    throw Error(m33(343));
                case on1:
                    e: {
                        n56 = t98.blockedBoundary, l46 = t98.blockedSegment, o = r45.fallback, r45 = r45.children, i41 = new Set;
                        var u39 = {
                            id: null,
                            rootSegmentID: -1,
                            parentFlushed: !1,
                            pendingTasks: 0,
                            forceClientRender: !1,
                            completedSegments: [],
                            byteSize: 0,
                            fallbackAbortableTasks: i41
                        }, a38 = we3(e124, l46.chunks.length, u39, l46.formatContext);
                        l46.children.push(a38);
                        var f34 = we3(e124, 0, null, l46.formatContext);
                        f34.parentFlushed = !0, t98.blockedBoundary = u39, t98.blockedSegment = f34;
                        try {
                            if (Ke3(e124, t98, r45), f34.status = 1, Ee3(u39, f34), u39.pendingTasks === 0) break e;
                        } catch (p46) {
                            f34.status = 4, ue5(e124, p46), u39.forceClientRender = !0;
                        } finally{
                            t98.blockedBoundary = n56, t98.blockedSegment = l46;
                        }
                        t98 = lt2(e124, o, n56, a38, i41, t98.legacyContext, t98.context, t98.treeContext), e124.pingedTasks.push(t98);
                    }
                    return;
            }
            if (typeof n56 == "object" && n56 !== null) switch(n56.$$typeof){
                case rn1:
                    if (r45 = Ht(e124, t98, n56.render, r45, l46), ie6 !== 0) {
                        n56 = t98.treeContext, t98.treeContext = Ye3(n56, 1, 0);
                        try {
                            P22(e124, t98, r45);
                        } finally{
                            t98.treeContext = n56;
                        }
                    } else P22(e124, t98, r45);
                    return;
                case un1:
                    n56 = n56.type, r45 = Ut1(n56, r45), Je3(e124, t98, n56, r45, l46);
                    return;
                case tn1:
                    if (l46 = r45.children, n56 = n56._context, r45 = r45.value, o = n56._currentValue2, n56._currentValue2 = r45, i41 = X13, X13 = r45 = {
                        parent: i41,
                        depth: i41 === null ? 0 : i41.depth + 1,
                        context: n56,
                        parentValue: o,
                        value: r45
                    }, t98.context = r45, P22(e124, t98, l46), e124 = X13, e124 === null) throw Error(m33(403));
                    r45 = e124.parentValue, e124.context._currentValue2 = r45 === br1 ? e124.context._defaultValue : r45, e124 = X13 = e124.parent, t98.context = e124;
                    return;
                case nn1:
                    r45 = r45.children, r45 = r45(n56._currentValue2), P22(e124, t98, r45);
                    return;
                case tt3:
                    l46 = n56._init, n56 = l46(n56._payload), r45 = Ut1(n56, r45), Je3(e124, t98, n56, r45, void 0);
                    return;
            }
            throw Error(m33(130, n56 == null ? n56 : typeof n56, ""));
        }
    }
    s(Je3, "zb");
    function P22(e125, t99, n57) {
        if (t99.node = n57, typeof n57 == "object" && n57 !== null) {
            switch(n57.$$typeof){
                case Or:
                    Je3(e125, t99, n57.type, n57.props, n57.ref);
                    return;
                case Jt:
                    throw Error(m33(257));
                case tt3:
                    var r46 = n57._init;
                    n57 = r46(n57._payload), P22(e125, t99, n57);
                    return;
            }
            if (Xe3(n57)) {
                Wt(e125, t99, n57);
                return;
            }
            if (n57 === null || typeof n57 != "object" ? r46 = null : (r46 = Dt2 && n57[Dt2] || n57["@@iterator"], r46 = typeof r46 == "function" ? r46 : null), r46 && (r46 = r46.call(n57))) {
                if (n57 = r46.next(), !n57.done) {
                    var l47 = [];
                    do l47.push(n57.value), n57 = r46.next();
                    while (!n57.done)
                    Wt(e125, t99, l47);
                }
                return;
            }
            throw e125 = Object.prototype.toString.call(n57), Error(m33(31, e125 === "[object Object]" ? "object with keys {" + Object.keys(n57).join(", ") + "}" : e125));
        }
        typeof n57 == "string" ? (t99 = t99.blockedSegment.chunks, e125.responseState.generateStaticMarkup ? t99.push(T19(n57)) : Mt1(t99, n57)) : typeof n57 == "number" && (t99 = t99.blockedSegment.chunks, n57 = "" + n57, e125.responseState.generateStaticMarkup ? t99.push(T19(n57)) : Mt1(t99, n57));
    }
    s(P22, "X");
    function Wt(e126, t100, n58) {
        for(var r47 = n58.length, l48 = 0; l48 < r47; l48++){
            var o = t100.treeContext;
            t100.treeContext = Ye3(o, r47, l48);
            try {
                Ke3(e126, t100, n58[l48]);
            } finally{
                t100.treeContext = o;
            }
        }
    }
    s(Wt, "Bb");
    function Ke3(e127, t101, n59) {
        var r48 = t101.blockedSegment.formatContext, l49 = t101.legacyContext, o = t101.context;
        try {
            return P22(e127, t101, n59);
        } catch (a39) {
            if (ot2(), typeof a39 == "object" && a39 !== null && typeof a39.then == "function") {
                n59 = a39;
                var i42 = t101.blockedSegment, u40 = we3(e127, i42.chunks.length, null, i42.formatContext);
                i42.children.push(u40), e127 = lt2(e127, t101.node, t101.blockedBoundary, u40, t101.abortSet, t101.legacyContext, t101.context, t101.treeContext).ping, n59.then(e127, e127), t101.blockedSegment.formatContext = r48, t101.legacyContext = l49, t101.context = o, xe5(o);
            } else throw t101.blockedSegment.formatContext = r48, t101.legacyContext = l49, t101.context = o, xe5(o), a39;
        }
    }
    s(Ke3, "Ab");
    function eo1(e128) {
        var t102 = e128.blockedBoundary;
        e128 = e128.blockedSegment, e128.status = 3, mn1(this, t102, e128);
    }
    s(eo1, "Cb");
    function hn(e129) {
        var t103 = e129.blockedBoundary;
        e129.blockedSegment.status = 3, t103 === null ? (this.allPendingTasks--, this.status !== 2 && (this.status = 2, this.destination !== null && this.destination.push(null))) : (t103.pendingTasks--, t103.forceClientRender || (t103.forceClientRender = !0, t103.parentFlushed && this.clientRenderedBoundaries.push(t103)), t103.fallbackAbortableTasks.forEach(hn, this), t103.fallbackAbortableTasks.clear(), this.allPendingTasks--, this.allPendingTasks === 0 && (e129 = this.onAllReady, e129()));
    }
    s(hn, "Eb");
    function Ee3(e130, t104) {
        if (t104.chunks.length === 0 && t104.children.length === 1 && t104.children[0].boundary === null) {
            var n60 = t104.children[0];
            n60.id = t104.id, n60.parentFlushed = !0, n60.status === 1 && Ee3(e130, n60);
        } else e130.completedSegments.push(t104);
    }
    s(Ee3, "Y");
    function mn1(e131, t105, n61) {
        if (t105 === null) {
            if (n61.parentFlushed) {
                if (e131.completedRootSegment !== null) throw Error(m33(389));
                e131.completedRootSegment = n61;
            }
            e131.pendingRootTasks--, e131.pendingRootTasks === 0 && (e131.onShellError = oe6, t105 = e131.onShellReady, t105());
        } else t105.pendingTasks--, t105.forceClientRender || (t105.pendingTasks === 0 ? (n61.parentFlushed && n61.status === 1 && Ee3(t105, n61), t105.parentFlushed && e131.completedBoundaries.push(t105), t105.fallbackAbortableTasks.forEach(eo1, e131), t105.fallbackAbortableTasks.clear()) : n61.parentFlushed && n61.status === 1 && (Ee3(t105, n61), t105.completedSegments.length === 1 && t105.parentFlushed && e131.partialBoundaries.push(t105)));
        e131.allPendingTasks--, e131.allPendingTasks === 0 && (e131 = e131.onAllReady, e131());
    }
    s(mn1, "Db");
    function yn(e132) {
        if (e132.status !== 2) {
            var t106 = X13, n62 = Ze2.current;
            Ze2.current = At1;
            var r49 = Se4;
            Se4 = e132.responseState;
            try {
                var l50 = e132.pingedTasks, o;
                for(o = 0; o < l50.length; o++){
                    var i43 = l50[o], u41 = e132, a40 = i43.blockedSegment;
                    if (a40.status === 0) {
                        xe5(i43.context);
                        try {
                            P22(u41, i43, i43.node), i43.abortSet.delete(i43), a40.status = 1, mn1(u41, i43.blockedBoundary, a40);
                        } catch (S25) {
                            if (ot2(), typeof S25 == "object" && S25 !== null && typeof S25.then == "function") {
                                var f35 = i43.ping;
                                S25.then(f35, f35);
                            } else {
                                i43.abortSet.delete(i43), a40.status = 4;
                                var p47 = i43.blockedBoundary, g34 = S25;
                                if (ue5(u41, g34), p47 === null ? Ce4(u41, g34) : (p47.pendingTasks--, p47.forceClientRender || (p47.forceClientRender = !0, p47.parentFlushed && u41.clientRenderedBoundaries.push(p47))), u41.allPendingTasks--, u41.allPendingTasks === 0) {
                                    var C28 = u41.onAllReady;
                                    C28();
                                }
                            }
                        } finally{}
                    }
                }
                l50.splice(0, o), e132.destination !== null && it2(e132, e132.destination);
            } catch (S26) {
                ue5(e132, S26), Ce4(e132, S26);
            } finally{
                Se4 = r49, Ze2.current = n62, n62 === At1 && xe5(t106);
            }
        }
    }
    s(yn, "vb");
    function he5(e133, t107, n63) {
        switch(n63.parentFlushed = !0, n63.status){
            case 0:
                var r50 = n63.id = e133.nextSegmentId++;
                return e133 = e133.responseState, c31(t107, '<template id="'), c31(t107, e133.placeholderPrefix), e133 = r50.toString(16), c31(t107, e133), c31(t107, '"></template>');
            case 1:
                n63.status = 2;
                var l51 = !0;
                r50 = n63.chunks;
                var o = 0;
                n63 = n63.children;
                for(var i44 = 0; i44 < n63.length; i44++){
                    for(l51 = n63[i44]; o < l51.index; o++)c31(t107, r50[o]);
                    l51 = Te4(e133, t107, l51);
                }
                for(; o < r50.length - 1; o++)c31(t107, r50[o]);
                return o < r50.length && (l51 = c31(t107, r50[o])), l51;
            default:
                throw Error(m33(390));
        }
    }
    s(he5, "Z");
    function Te4(e134, t108, n64) {
        var r51 = n64.boundary;
        if (r51 === null) return he5(e134, t108, n64);
        if (r51.parentFlushed = !0, r51.forceClientRender) return e134.responseState.generateStaticMarkup || c31(t108, "<!--$!-->"), he5(e134, t108, n64), e134 = e134.responseState.generateStaticMarkup ? !0 : c31(t108, "<!--/$-->"), e134;
        if (0 < r51.pendingTasks) {
            r51.rootSegmentID = e134.nextSegmentId++, 0 < r51.completedSegments.length && e134.partialBoundaries.push(r51);
            var l52 = e134.responseState, o = l52.nextSuspenseID++;
            return l52 = l52.boundaryPrefix + o.toString(16), r51 = r51.id = l52, Nt2(t108, e134.responseState, r51), he5(e134, t108, n64), c31(t108, "<!--/$-->");
        }
        if (r51.byteSize > e134.progressiveChunkSize) return r51.rootSegmentID = e134.nextSegmentId++, e134.completedBoundaries.push(r51), Nt2(t108, e134.responseState, r51.id), he5(e134, t108, n64), c31(t108, "<!--/$-->");
        if (e134.responseState.generateStaticMarkup || c31(t108, "<!--$-->"), n64 = r51.completedSegments, n64.length !== 1) throw Error(m33(391));
        return Te4(e134, t108, n64[0]), e134 = e134.responseState.generateStaticMarkup ? !0 : c31(t108, "<!--/$-->"), e134;
    }
    s(Te4, "Gb");
    function qt1(e135, t109, n65) {
        return $r(t109, e135.responseState, n65.formatContext, n65.id), Te4(e135, t109, n65), zr1(t109, n65.formatContext);
    }
    s(qt1, "Hb");
    function Zt(e136, t110, n66) {
        for(var r52 = n66.completedSegments, l53 = 0; l53 < r52.length; l53++)vn1(e136, t110, n66, r52[l53]);
        if (r52.length = 0, e136 = e136.responseState, r52 = n66.id, n66 = n66.rootSegmentID, c31(t110, e136.startInlineScript), e136.sentCompleteBoundaryFunction ? c31(t110, '$RC("') : (e136.sentCompleteBoundaryFunction = !0, c31(t110, 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("')), r52 === null) throw Error(m33(395));
        return n66 = n66.toString(16), c31(t110, r52), c31(t110, '","'), c31(t110, e136.segmentPrefix), c31(t110, n66), c31(t110, '")<\/script>');
    }
    s(Zt, "Ib");
    function vn1(e137, t111, n67, r53) {
        if (r53.status === 2) return !0;
        var l54 = r53.id;
        if (l54 === -1) {
            if ((r53.id = n67.rootSegmentID) === -1) throw Error(m33(392));
            return qt1(e137, t111, r53);
        }
        return qt1(e137, t111, r53), e137 = e137.responseState, c31(t111, e137.startInlineScript), e137.sentCompleteSegmentFunction ? c31(t111, '$RS("') : (e137.sentCompleteSegmentFunction = !0, c31(t111, 'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("')), c31(t111, e137.segmentPrefix), l54 = l54.toString(16), c31(t111, l54), c31(t111, '","'), c31(t111, e137.placeholderPrefix), c31(t111, l54), c31(t111, '")<\/script>');
    }
    s(vn1, "Jb");
    function it2(e138, t112) {
        try {
            var n68 = e138.completedRootSegment;
            if (n68 !== null && e138.pendingRootTasks === 0) {
                Te4(e138, t112, n68), e138.completedRootSegment = null;
                var r54 = e138.responseState.bootstrapChunks;
                for(n68 = 0; n68 < r54.length - 1; n68++)c31(t112, r54[n68]);
                n68 < r54.length && c31(t112, r54[n68]);
            }
            var l55 = e138.clientRenderedBoundaries, o;
            for(o = 0; o < l55.length; o++){
                r54 = t112;
                var i45 = e138.responseState, u42 = l55[o].id;
                if (c31(r54, i45.startInlineScript), i45.sentClientRenderFunction ? c31(r54, '$RX("') : (i45.sentClientRenderFunction = !0, c31(r54, 'function $RX(a){if(a=document.getElementById(a))a=a.previousSibling,a.data="$!",a._reactRetry&&a._reactRetry()};$RX("')), u42 === null) throw Error(m33(395));
                if (c31(r54, u42), !c31(r54, '")<\/script>')) {
                    e138.destination = null, o++, l55.splice(0, o);
                    return;
                }
            }
            l55.splice(0, o);
            var a41 = e138.completedBoundaries;
            for(o = 0; o < a41.length; o++)if (!Zt(e138, t112, a41[o])) {
                e138.destination = null, o++, a41.splice(0, o);
                return;
            }
            a41.splice(0, o);
            var f36 = e138.partialBoundaries;
            for(o = 0; o < f36.length; o++){
                var p48 = f36[o];
                e: {
                    l55 = e138, i45 = t112;
                    var g35 = p48.completedSegments;
                    for(u42 = 0; u42 < g35.length; u42++)if (!vn1(l55, i45, p48, g35[u42])) {
                        u42++, g35.splice(0, u42);
                        var C = !1;
                        break e;
                    }
                    g35.splice(0, u42), C = !0;
                }
                if (!C) {
                    e138.destination = null, o++, f36.splice(0, o);
                    return;
                }
            }
            f36.splice(0, o);
            var S27 = e138.completedBoundaries;
            for(o = 0; o < S27.length; o++)if (!Zt(e138, t112, S27[o])) {
                e138.destination = null, o++, S27.splice(0, o);
                return;
            }
            S27.splice(0, o);
        } finally{
            e138.allPendingTasks === 0 && e138.pingedTasks.length === 0 && e138.clientRenderedBoundaries.length === 0 && e138.completedBoundaries.length === 0 && t112.push(null);
        }
    }
    s(it2, "Fb");
    function to1(e139) {
        try {
            var t113 = e139.abortableTasks;
            t113.forEach(hn, e139), t113.clear(), e139.destination !== null && it2(e139, e139.destination);
        } catch (n69) {
            ue5(e139, n69), Ce4(e139, n69);
        }
    }
    s(to1, "Kb");
    function no() {}
    s(no, "Lb");
    function gn(e140, t114, n70) {
        var r55 = !1, l56 = null, o = "", i46 = {
            push: function(a42) {
                return a42 !== null && (o += a42), !0;
            },
            destroy: function(a43) {
                r55 = !0, l56 = a43;
            }
        }, u43 = !1;
        if (e140 = Qr(e140, Lr1(n70, t114 ? t114.identifierPrefix : void 0), {
            insertionMode: 1,
            selectedValue: null
        }, 1 / 0, no, void 0, function() {
            u43 = !0;
        }, void 0, void 0), yn(e140), to1(e140), e140.status === 1) e140.status = 2, i46.destroy(e140.fatalError);
        else if (e140.status !== 2 && e140.destination === null) {
            e140.destination = i46;
            try {
                it2(e140, i46);
            } catch (a44) {
                ue5(e140, a44), Ce4(e140, a44);
            }
        }
        if (r55) throw l56;
        if (!u43) throw Error(m33(426));
        return o;
    }
    s(gn, "Mb");
    ee6.renderToNodeStream = function() {
        throw Error(m33(207));
    };
    ee6.renderToStaticMarkup = function(e141, t115) {
        return gn(e141, t115, !0);
    };
    ee6.renderToStaticNodeStream = function() {
        throw Error(m33(208));
    };
    ee6.renderToString = function(e142, t116) {
        return gn(e142, t116, !1);
    };
    ee6.version = "18.1.0";
});
var vr = Ue1((Et1)=>{
    "use strict";
    var qn1 = Ge;
    function y28(e143) {
        for(var t117 = "https://reactjs.org/docs/error-decoder.html?invariant=" + e143, n71 = 1; n71 < arguments.length; n71++)t117 += "&args[]=" + encodeURIComponent(arguments[n71]);
        return "Minified React error #" + e143 + "; visit " + t117 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    s(y28, "k");
    var B22 = null, N17 = 0;
    function h35(e144, t118) {
        if (t118.length !== 0) if (512 < t118.length) 0 < N17 && (e144.enqueue(new Uint8Array(B22.buffer, 0, N17)), B22 = new Uint8Array(512), N17 = 0), e144.enqueue(t118);
        else {
            var n72 = B22.length - N17;
            n72 < t118.length && (n72 === 0 ? e144.enqueue(B22) : (B22.set(t118.subarray(0, n72), N17), e144.enqueue(B22), t118 = t118.subarray(n72)), B22 = new Uint8Array(512), N17 = 0), B22.set(t118, N17), N17 += t118.length;
        }
    }
    s(h35, "p");
    function w27(e145, t119) {
        return h35(e145, t119), !0;
    }
    s(w27, "t");
    function xn(e146) {
        B22 && 0 < N17 && (e146.enqueue(new Uint8Array(B22.buffer, 0, N17)), B22 = null, N17 = 0);
    }
    s(xn, "ba");
    var Zn1 = new TextEncoder;
    function v29(e147) {
        return Zn1.encode(e147);
    }
    s(v29, "u");
    function d28(e148) {
        return Zn1.encode(e148);
    }
    s(d28, "v");
    function Xn2(e149, t120) {
        typeof e149.error == "function" ? e149.error(t120) : e149.close();
    }
    s(Xn2, "da");
    var D22 = Object.prototype.hasOwnProperty, ro1 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, kn1 = {}, wn1 = {};
    function Gn1(e150) {
        return D22.call(wn1, e150) ? !0 : D22.call(kn1, e150) ? !1 : ro1.test(e150) ? wn1[e150] = !0 : (kn1[e150] = !0, !1);
    }
    s(Gn1, "ia");
    function I28(e151, t121, n73, r56, l57, o, i47) {
        this.acceptsBooleans = t121 === 2 || t121 === 3 || t121 === 4, this.attributeName = r56, this.attributeNamespace = l57, this.mustUseProperty = n73, this.propertyName = e151, this.type = t121, this.sanitizeURL = o, this.removeEmptyString = i47;
    }
    s(I28, "x");
    var R15 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e152) {
        R15[e152] = new I28(e152, 0, !1, e152, null, !1, !1);
    });
    [
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "className",
            "class"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ]
    ].forEach(function(e153) {
        var t122 = e153[0];
        R15[t122] = new I28(t122, 1, !1, e153[1], null, !1, !1);
    });
    [
        "contentEditable",
        "draggable",
        "spellCheck",
        "value"
    ].forEach(function(e154) {
        R15[e154] = new I28(e154, 2, !1, e154.toLowerCase(), null, !1, !1);
    });
    [
        "autoReverse",
        "externalResourcesRequired",
        "focusable",
        "preserveAlpha"
    ].forEach(function(e155) {
        R15[e155] = new I28(e155, 2, !1, e155, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e156) {
        R15[e156] = new I28(e156, 3, !1, e156.toLowerCase(), null, !1, !1);
    });
    [
        "checked",
        "multiple",
        "muted",
        "selected"
    ].forEach(function(e157) {
        R15[e157] = new I28(e157, 3, !0, e157, null, !1, !1);
    });
    [
        "capture",
        "download"
    ].forEach(function(e158) {
        R15[e158] = new I28(e158, 4, !1, e158, null, !1, !1);
    });
    [
        "cols",
        "rows",
        "size",
        "span"
    ].forEach(function(e159) {
        R15[e159] = new I28(e159, 6, !1, e159, null, !1, !1);
    });
    [
        "rowSpan",
        "start"
    ].forEach(function(e160) {
        R15[e160] = new I28(e160, 5, !1, e160.toLowerCase(), null, !1, !1);
    });
    var yt2 = /[\-:]([a-z])/g;
    function vt2(e161) {
        return e161[1].toUpperCase();
    }
    s(vt2, "ka");
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e162) {
        var t123 = e162.replace(yt2, vt2);
        R15[t123] = new I28(t123, 1, !1, e162, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e163) {
        var t124 = e163.replace(yt2, vt2);
        R15[t124] = new I28(t124, 1, !1, e163, "http://www.w3.org/1999/xlink", !1, !1);
    });
    [
        "xml:base",
        "xml:lang",
        "xml:space"
    ].forEach(function(e164) {
        var t125 = e164.replace(yt2, vt2);
        R15[t125] = new I28(t125, 1, !1, e164, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    [
        "tabIndex",
        "crossOrigin"
    ].forEach(function(e165) {
        R15[e165] = new I28(e165, 1, !1, e165.toLowerCase(), null, !1, !1);
    });
    R15.xlinkHref = new I28("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    [
        "src",
        "href",
        "action",
        "formAction"
    ].forEach(function(e166) {
        R15[e166] = new I28(e166, 1, !1, e166.toLowerCase(), null, !0, !0);
    });
    var Me5 = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
    }, oo1 = [
        "Webkit",
        "ms",
        "Moz",
        "O"
    ];
    Object.keys(Me5).forEach(function(e167) {
        oo1.forEach(function(t126) {
            t126 = t126 + e167.charAt(0).toUpperCase() + e167.substring(1), Me5[t126] = Me5[e167];
        });
    });
    var lo = /["'&<>]/;
    function F17(e168) {
        if (typeof e168 == "boolean" || typeof e168 == "number") return "" + e168;
        e168 = "" + e168;
        var t127 = lo.exec(e168);
        if (t127) {
            var n74 = "", r57, l58 = 0;
            for(r57 = t127.index; r57 < e168.length; r57++){
                switch(e168.charCodeAt(r57)){
                    case 34:
                        t127 = "&quot;";
                        break;
                    case 38:
                        t127 = "&amp;";
                        break;
                    case 39:
                        t127 = "&#x27;";
                        break;
                    case 60:
                        t127 = "&lt;";
                        break;
                    case 62:
                        t127 = "&gt;";
                        break;
                    default:
                        continue;
                }
                l58 !== r57 && (n74 += e168.substring(l58, r57)), l58 = r57 + 1, n74 += t127;
            }
            e168 = l58 !== r57 ? n74 + e168.substring(l58, r57) : n74;
        }
        return e168;
    }
    s(F17, "A");
    var io1 = /([A-Z])/g, uo = /^ms-/, ft1 = Array.isArray, so1 = d28("<script>"), ao = d28("<\/script>"), co = d28('<script src="'), fo1 = d28('<script type="module" src="'), Cn2 = d28('" async=""><\/script>'), po1 = /(<\/|<)(s)(cript)/gi;
    function ho(e, t128, n75, r58) {
        return "" + t128 + (n75 === "s" ? "\\u0073" : "\\u0053") + r58;
    }
    s(ho, "wa");
    function mo(e169, t129, n76, r59, l59) {
        e169 = e169 === void 0 ? "" : e169, t129 = t129 === void 0 ? so1 : d28('<script nonce="' + F17(t129) + '">');
        var o = [];
        if (n76 !== void 0 && o.push(t129, v29(("" + n76).replace(po1, ho)), ao), r59 !== void 0) for(n76 = 0; n76 < r59.length; n76++)o.push(co, v29(F17(r59[n76])), Cn2);
        if (l59 !== void 0) for(r59 = 0; r59 < l59.length; r59++)o.push(fo1, v29(F17(l59[r59])), Cn2);
        return {
            bootstrapChunks: o,
            startInlineScript: t129,
            placeholderPrefix: d28(e169 + "P:"),
            segmentPrefix: d28(e169 + "S:"),
            boundaryPrefix: e169 + "B:",
            idPrefix: e169,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: !1,
            sentCompleteBoundaryFunction: !1,
            sentClientRenderFunction: !1
        };
    }
    s(mo, "xa");
    function L14(e170, t130) {
        return {
            insertionMode: e170,
            selectedValue: t130
        };
    }
    s(L14, "B");
    function yo1(e171) {
        return L14(e171 === "http://www.w3.org/2000/svg" ? 2 : e171 === "http://www.w3.org/1998/Math/MathML" ? 3 : 0, null);
    }
    s(yo1, "ya");
    function vo(e172, t131, n77) {
        switch(t131){
            case "select":
                return L14(1, n77.value != null ? n77.value : n77.defaultValue);
            case "svg":
                return L14(2, null);
            case "math":
                return L14(3, null);
            case "foreignObject":
                return L14(1, null);
            case "table":
                return L14(4, null);
            case "thead":
            case "tbody":
            case "tfoot":
                return L14(5, null);
            case "colgroup":
                return L14(7, null);
            case "tr":
                return L14(6, null);
        }
        return 4 <= e172.insertionMode || e172.insertionMode === 0 ? L14(1, null) : e172;
    }
    s(vo, "za");
    var En = d28("<!-- -->"), Fn1 = new Map, go = d28(' style="'), Rn1 = d28(":"), So1 = d28(";");
    function Yn1(e173, t132, n78) {
        if (typeof n78 != "object") throw Error(y28(62));
        t132 = !0;
        for(var r60 in n78)if (D22.call(n78, r60)) {
            var l60 = n78[r60];
            if (l60 != null && typeof l60 != "boolean" && l60 !== "") {
                if (r60.indexOf("--") === 0) {
                    var o = v29(F17(r60));
                    l60 = v29(F17(("" + l60).trim()));
                } else {
                    o = r60;
                    var i48 = Fn1.get(o);
                    i48 !== void 0 || (i48 = d28(F17(o.replace(io1, "-$1").toLowerCase().replace(uo, "-ms-"))), Fn1.set(o, i48)), o = i48, l60 = typeof l60 == "number" ? l60 === 0 || D22.call(Me5, r60) ? v29("" + l60) : v29(l60 + "px") : v29(F17(("" + l60).trim()));
                }
                t132 ? (t132 = !1, e173.push(go, o, Rn1, l60)) : e173.push(So1, o, Rn1, l60);
            }
        }
        t132 || e173.push(Y7);
    }
    s(Yn1, "Fa");
    var W11 = d28(" "), te6 = d28('="'), Y7 = d28('"'), Tn1 = d28('=""');
    function z15(e174, t133, n79, r61) {
        switch(n79){
            case "style":
                Yn1(e174, t133, r61);
                return;
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
                return;
        }
        if (!(2 < n79.length) || n79[0] !== "o" && n79[0] !== "O" || n79[1] !== "n" && n79[1] !== "N") {
            if (t133 = R15.hasOwnProperty(n79) ? R15[n79] : null, t133 !== null) {
                switch(typeof r61){
                    case "function":
                    case "symbol":
                        return;
                    case "boolean":
                        if (!t133.acceptsBooleans) return;
                }
                switch(n79 = v29(t133.attributeName), t133.type){
                    case 3:
                        r61 && e174.push(W11, n79, Tn1);
                        break;
                    case 4:
                        r61 === !0 ? e174.push(W11, n79, Tn1) : r61 !== !1 && e174.push(W11, n79, te6, v29(F17(r61)), Y7);
                        break;
                    case 5:
                        isNaN(r61) || e174.push(W11, n79, te6, v29(F17(r61)), Y7);
                        break;
                    case 6:
                        !isNaN(r61) && 1 <= r61 && e174.push(W11, n79, te6, v29(F17(r61)), Y7);
                        break;
                    default:
                        t133.sanitizeURL && (r61 = "" + r61), e174.push(W11, n79, te6, v29(F17(r61)), Y7);
                }
            } else if (Gn1(n79)) {
                switch(typeof r61){
                    case "function":
                    case "symbol":
                        return;
                    case "boolean":
                        if (t133 = n79.toLowerCase().slice(0, 5), t133 !== "data-" && t133 !== "aria-") return;
                }
                e174.push(W11, v29(n79), te6, v29(F17(r61)), Y7);
            }
        }
    }
    s(z15, "I");
    var G14 = d28(">"), _n2 = d28("/>");
    function Pe7(e175, t134, n80) {
        if (t134 != null) {
            if (n80 != null) throw Error(y28(60));
            if (typeof t134 != "object" || !("__html" in t134)) throw Error(y28(61));
            t134 = t134.__html, t134 != null && e175.push(v29("" + t134));
        }
    }
    s(Pe7, "K");
    function xo(e176) {
        var t135 = "";
        return qn1.Children.forEach(e176, function(n81) {
            n81 != null && (t135 += n81);
        }), t135;
    }
    s(xo, "Ia");
    var ut2 = d28(' selected=""');
    function st1(e177, t136, n82, r62) {
        e177.push(H7(n82));
        var l61 = n82 = null, o;
        for(o in t136)if (D22.call(t136, o)) {
            var i49 = t136[o];
            if (i49 != null) switch(o){
                case "children":
                    n82 = i49;
                    break;
                case "dangerouslySetInnerHTML":
                    l61 = i49;
                    break;
                default:
                    z15(e177, r62, o, i49);
            }
        }
        return e177.push(G14), Pe7(e177, l61, n82), typeof n82 == "string" ? (e177.push(v29(F17(n82))), null) : n82;
    }
    s(st1, "Ka");
    var at3 = d28(`
`), ko1 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, In1 = new Map;
    function H7(e178) {
        var t137 = In1.get(e178);
        if (t137 === void 0) {
            if (!ko1.test(e178)) throw Error(y28(65, e178));
            t137 = d28("<" + e178), In1.set(e178, t137);
        }
        return t137;
    }
    s(H7, "L");
    var wo1 = d28("<!DOCTYPE html>");
    function Co(e179, t138, n83, r63, l62) {
        switch(t138){
            case "select":
                e179.push(H7("select"));
                var o = null, i50 = null;
                for(p49 in n83)if (D22.call(n83, p49)) {
                    var u44 = n83[p49];
                    if (u44 != null) switch(p49){
                        case "children":
                            o = u44;
                            break;
                        case "dangerouslySetInnerHTML":
                            i50 = u44;
                            break;
                        case "defaultValue":
                        case "value":
                            break;
                        default:
                            z15(e179, r63, p49, u44);
                    }
                }
                return e179.push(G14), Pe7(e179, i50, o), o;
            case "option":
                i50 = l62.selectedValue, e179.push(H7("option"));
                var a45 = u44 = null, f37 = null, p49 = null;
                for(o in n83)if (D22.call(n83, o) && (t138 = n83[o], t138 != null)) switch(o){
                    case "children":
                        u44 = t138;
                        break;
                    case "selected":
                        f37 = t138;
                        break;
                    case "dangerouslySetInnerHTML":
                        p49 = t138;
                        break;
                    case "value":
                        a45 = t138;
                    default:
                        z15(e179, r63, o, t138);
                }
                if (i50 != null) if (n83 = a45 !== null ? "" + a45 : xo(u44), ft1(i50)) {
                    for(r63 = 0; r63 < i50.length; r63++)if ("" + i50[r63] === n83) {
                        e179.push(ut2);
                        break;
                    }
                } else "" + i50 === n83 && e179.push(ut2);
                else f37 && e179.push(ut2);
                return e179.push(G14), Pe7(e179, p49, u44), u44;
            case "textarea":
                e179.push(H7("textarea")), p49 = i50 = o = null;
                for(u44 in n83)if (D22.call(n83, u44) && (a45 = n83[u44], a45 != null)) switch(u44){
                    case "children":
                        p49 = a45;
                        break;
                    case "value":
                        o = a45;
                        break;
                    case "defaultValue":
                        i50 = a45;
                        break;
                    case "dangerouslySetInnerHTML":
                        throw Error(y28(91));
                    default:
                        z15(e179, r63, u44, a45);
                }
                if (o === null && i50 !== null && (o = i50), e179.push(G14), p49 != null) {
                    if (o != null) throw Error(y28(92));
                    if (ft1(p49) && 1 < p49.length) throw Error(y28(93));
                    o = "" + p49;
                }
                return typeof o == "string" && o[0] === `
` && e179.push(at3), o !== null && e179.push(v29(F17("" + o))), null;
            case "input":
                e179.push(H7("input")), a45 = p49 = u44 = o = null;
                for(i50 in n83)if (D22.call(n83, i50) && (f37 = n83[i50], f37 != null)) switch(i50){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(y28(399, "input"));
                    case "defaultChecked":
                        a45 = f37;
                        break;
                    case "defaultValue":
                        u44 = f37;
                        break;
                    case "checked":
                        p49 = f37;
                        break;
                    case "value":
                        o = f37;
                        break;
                    default:
                        z15(e179, r63, i50, f37);
                }
                return p49 !== null ? z15(e179, r63, "checked", p49) : a45 !== null && z15(e179, r63, "checked", a45), o !== null ? z15(e179, r63, "value", o) : u44 !== null && z15(e179, r63, "value", u44), e179.push(_n2), null;
            case "menuitem":
                e179.push(H7("menuitem"));
                for(var g36 in n83)if (D22.call(n83, g36) && (o = n83[g36], o != null)) switch(g36){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(y28(400));
                    default:
                        z15(e179, r63, g36, o);
                }
                return e179.push(G14), null;
            case "listing":
            case "pre":
                e179.push(H7(t138)), i50 = o = null;
                for(a45 in n83)if (D22.call(n83, a45) && (u44 = n83[a45], u44 != null)) switch(a45){
                    case "children":
                        o = u44;
                        break;
                    case "dangerouslySetInnerHTML":
                        i50 = u44;
                        break;
                    default:
                        z15(e179, r63, a45, u44);
                }
                if (e179.push(G14), i50 != null) {
                    if (o != null) throw Error(y28(60));
                    if (typeof i50 != "object" || !("__html" in i50)) throw Error(y28(61));
                    n83 = i50.__html, n83 != null && (typeof n83 == "string" && 0 < n83.length && n83[0] === `
` ? e179.push(at3, v29(n83)) : e179.push(v29("" + n83)));
                }
                return typeof o == "string" && o[0] === `
` && e179.push(at3), o;
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
                e179.push(H7(t138));
                for(var C in n83)if (D22.call(n83, C) && (o = n83[C], o != null)) switch(C){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(y28(399, t138));
                    default:
                        z15(e179, r63, C, o);
                }
                return e179.push(_n2), null;
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return st1(e179, n83, t138, r63);
            case "html":
                return l62.insertionMode === 0 && e179.push(wo1), st1(e179, n83, t138, r63);
            default:
                if (t138.indexOf("-") === -1 && typeof n83.is != "string") return st1(e179, n83, t138, r63);
                e179.push(H7(t138)), i50 = o = null;
                for(f37 in n83)if (D22.call(n83, f37) && (u44 = n83[f37], u44 != null)) switch(f37){
                    case "children":
                        o = u44;
                        break;
                    case "dangerouslySetInnerHTML":
                        i50 = u44;
                        break;
                    case "style":
                        Yn1(e179, r63, u44);
                        break;
                    case "suppressContentEditableWarning":
                    case "suppressHydrationWarning":
                        break;
                    default:
                        Gn1(f37) && typeof u44 != "function" && typeof u44 != "symbol" && e179.push(W11, v29(f37), te6, v29(F17(u44)), Y7);
                }
                return e179.push(G14), Pe7(e179, i50, o), o;
        }
    }
    s(Co, "Pa");
    var Eo = d28("</"), Fo = d28(">"), Ro = d28('<template id="'), To = d28('"></template>'), _o1 = d28("<!--$-->"), Io1 = d28('<!--$?--><template id="'), Mo1 = d28('"></template>'), Po1 = d28("<!--$!-->"), Bo = d28("<!--/$-->");
    function Mn(e180, t, n84) {
        if (h35(e180, Io1), n84 === null) throw Error(y28(395));
        return h35(e180, n84), w27(e180, Mo1);
    }
    s(Mn, "Za");
    var No = d28('<div hidden id="'), Do = d28('">'), Vo1 = d28("</div>"), $o1 = d28('<svg aria-hidden="true" style="display:none" id="'), zo = d28('">'), Lo = d28("</svg>"), Oo1 = d28('<math aria-hidden="true" style="display:none" id="'), jo1 = d28('">'), Ao = d28("</math>"), Ho1 = d28('<table hidden id="'), bo1 = d28('">'), Uo1 = d28("</table>"), Wo = d28('<table hidden><tbody id="'), qo = d28('">'), Zo = d28("</tbody></table>"), Xo1 = d28('<table hidden><tr id="'), Go = d28('">'), Yo = d28("</tr></table>"), Jo1 = d28('<table hidden><colgroup id="'), Ko1 = d28('">'), Qo = d28("</colgroup></table>");
    function el1(e181, t139, n85, r64) {
        switch(n85.insertionMode){
            case 0:
            case 1:
                return h35(e181, No), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, Do);
            case 2:
                return h35(e181, $o1), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, zo);
            case 3:
                return h35(e181, Oo1), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, jo1);
            case 4:
                return h35(e181, Ho1), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, bo1);
            case 5:
                return h35(e181, Wo), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, qo);
            case 6:
                return h35(e181, Xo1), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, Go);
            case 7:
                return h35(e181, Jo1), h35(e181, t139.segmentPrefix), h35(e181, v29(r64.toString(16))), w27(e181, Ko1);
            default:
                throw Error(y28(397));
        }
    }
    s(el1, "ub");
    function tl1(e182, t140) {
        switch(t140.insertionMode){
            case 0:
            case 1:
                return w27(e182, Vo1);
            case 2:
                return w27(e182, Lo);
            case 3:
                return w27(e182, Ao);
            case 4:
                return w27(e182, Uo1);
            case 5:
                return w27(e182, Zo);
            case 6:
                return w27(e182, Yo);
            case 7:
                return w27(e182, Qo);
            default:
                throw Error(y28(397));
        }
    }
    s(tl1, "vb");
    var nl = d28('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'), rl1 = d28('$RS("'), ol = d28('","'), ll = d28('")<\/script>'), il2 = d28('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'), ul2 = d28('$RC("'), sl1 = d28('","'), al1 = d28('")<\/script>'), cl2 = d28('function $RX(a){if(a=document.getElementById(a))a=a.previousSibling,a.data="$!",a._reactRetry&&a._reactRetry()};$RX("'), fl2 = d28('$RX("'), pl = d28('")<\/script>'), ce4 = Object.assign, dl1 = Symbol.for("react.element"), Jn = Symbol.for("react.portal"), Kn1 = Symbol.for("react.fragment"), Qn = Symbol.for("react.strict_mode"), er2 = Symbol.for("react.profiler"), tr1 = Symbol.for("react.provider"), nr1 = Symbol.for("react.context"), rr2 = Symbol.for("react.forward_ref"), or1 = Symbol.for("react.suspense"), lr1 = Symbol.for("react.suspense_list"), ir1 = Symbol.for("react.memo"), gt2 = Symbol.for("react.lazy"), hl1 = Symbol.for("react.scope"), ml1 = Symbol.for("react.debug_trace_mode"), yl1 = Symbol.for("react.legacy_hidden"), vl2 = Symbol.for("react.default_value"), Pn2 = Symbol.iterator;
    function pt2(e183) {
        if (e183 == null) return null;
        if (typeof e183 == "function") return e183.displayName || e183.name || null;
        if (typeof e183 == "string") return e183;
        switch(e183){
            case Kn1:
                return "Fragment";
            case Jn:
                return "Portal";
            case er2:
                return "Profiler";
            case Qn:
                return "StrictMode";
            case or1:
                return "Suspense";
            case lr1:
                return "SuspenseList";
        }
        if (typeof e183 == "object") switch(e183.$$typeof){
            case nr1:
                return (e183.displayName || "Context") + ".Consumer";
            case tr1:
                return (e183._context.displayName || "Context") + ".Provider";
            case rr2:
                var t141 = e183.render;
                return e183 = e183.displayName, e183 || (e183 = t141.displayName || t141.name || "", e183 = e183 !== "" ? "ForwardRef(" + e183 + ")" : "ForwardRef"), e183;
            case ir1:
                return t141 = e183.displayName || null, t141 !== null ? t141 : pt2(e183.type) || "Memo";
            case gt2:
                t141 = e183._payload, e183 = e183._init;
                try {
                    return pt2(e183(t141));
                } catch  {}
        }
        return null;
    }
    s(pt2, "Yb");
    var ur1 = {};
    function Bn1(e184, t142) {
        if (e184 = e184.contextTypes, !e184) return ur1;
        var n86 = {}, r65;
        for(r65 in e184)n86[r65] = t142[r65];
        return n86;
    }
    s(Bn1, "$b");
    var K13 = null;
    function je5(e185, t143) {
        if (e185 !== t143) {
            e185.context._currentValue = e185.parentValue, e185 = e185.parent;
            var n87 = t143.parent;
            if (e185 === null) {
                if (n87 !== null) throw Error(y28(401));
            } else {
                if (n87 === null) throw Error(y28(401));
                je5(e185, n87);
            }
            t143.context._currentValue = t143.value;
        }
    }
    s(je5, "O");
    function sr(e186) {
        e186.context._currentValue = e186.parentValue, e186 = e186.parent, e186 !== null && sr(e186);
    }
    s(sr, "ac");
    function ar1(e187) {
        var t144 = e187.parent;
        t144 !== null && ar1(t144), e187.context._currentValue = e187.value;
    }
    s(ar1, "bc");
    function cr(e188, t145) {
        if (e188.context._currentValue = e188.parentValue, e188 = e188.parent, e188 === null) throw Error(y28(402));
        e188.depth === t145.depth ? je5(e188, t145) : cr(e188, t145);
    }
    s(cr, "cc");
    function fr1(e189, t146) {
        var n88 = t146.parent;
        if (n88 === null) throw Error(y28(402));
        e189.depth === n88.depth ? je5(e189, n88) : fr1(e189, n88), t146.context._currentValue = t146.value;
    }
    s(fr1, "dc");
    function Ve5(e190) {
        var t147 = K13;
        t147 !== e190 && (t147 === null ? ar1(e190) : e190 === null ? sr(t147) : t147.depth === e190.depth ? je5(t147, e190) : t147.depth > e190.depth ? cr(t147, e190) : fr1(t147, e190), K13 = e190);
    }
    s(Ve5, "P");
    var Nn1 = {
        isMounted: function() {
            return !1;
        },
        enqueueSetState: function(e191, t148) {
            e191 = e191._reactInternals, e191.queue !== null && e191.queue.push(t148);
        },
        enqueueReplaceState: function(e192, t149) {
            e192 = e192._reactInternals, e192.replace = !0, e192.queue = [
                t149
            ];
        },
        enqueueForceUpdate: function() {}
    };
    function Dn(e193, t150, n89, r66) {
        var l63 = e193.state !== void 0 ? e193.state : null;
        e193.updater = Nn1, e193.props = n89, e193.state = l63;
        var o = {
            queue: [],
            replace: !1
        };
        e193._reactInternals = o;
        var i51 = t150.contextType;
        if (e193.context = typeof i51 == "object" && i51 !== null ? i51._currentValue : r66, i51 = t150.getDerivedStateFromProps, typeof i51 == "function" && (i51 = i51(n89, l63), l63 = i51 == null ? l63 : ce4({}, l63, i51), e193.state = l63), typeof t150.getDerivedStateFromProps != "function" && typeof e193.getSnapshotBeforeUpdate != "function" && (typeof e193.UNSAFE_componentWillMount == "function" || typeof e193.componentWillMount == "function")) if (t150 = e193.state, typeof e193.componentWillMount == "function" && e193.componentWillMount(), typeof e193.UNSAFE_componentWillMount == "function" && e193.UNSAFE_componentWillMount(), t150 !== e193.state && Nn1.enqueueReplaceState(e193, e193.state, null), o.queue !== null && 0 < o.queue.length) if (t150 = o.queue, i51 = o.replace, o.queue = null, o.replace = !1, i51 && t150.length === 1) e193.state = t150[0];
        else {
            for(o = i51 ? t150[0] : e193.state, l63 = !0, i51 = i51 ? 1 : 0; i51 < t150.length; i51++){
                var u45 = t150[i51];
                u45 = typeof u45 == "function" ? u45.call(e193, o, n89, r66) : u45, u45 != null && (l63 ? (l63 = !1, o = ce4({}, o, u45)) : ce4(o, u45));
            }
            e193.state = o;
        }
        else o.queue = null;
    }
    s(Dn, "fc");
    var gl2 = {
        id: 1,
        overflow: ""
    };
    function dt2(e194, t151, n90) {
        var r67 = e194.id;
        e194 = e194.overflow;
        var l64 = 32 - Be3(r67) - 1;
        r67 &= ~(1 << l64), n90 += 1;
        var o = 32 - Be3(t151) + l64;
        if (30 < o) {
            var i52 = l64 - l64 % 5;
            return o = (r67 & (1 << i52) - 1).toString(32), r67 >>= i52, l64 -= i52, {
                id: 1 << 32 - Be3(t151) + l64 | n90 << l64 | r67,
                overflow: o + e194
            };
        }
        return {
            id: 1 << o | n90 << l64 | r67,
            overflow: e194
        };
    }
    s(dt2, "hc");
    var Be3 = Math.clz32 ? Math.clz32 : kl, Sl2 = Math.log, xl1 = Math.LN2;
    function kl(e195) {
        return e195 >>>= 0, e195 === 0 ? 32 : 31 - (Sl2(e195) / xl1 | 0) | 0;
    }
    s(kl, "ic");
    function wl(e196, t152) {
        return e196 === t152 && (e196 !== 0 || 1 / e196 === 1 / t152) || e196 !== e196 && t152 !== t152;
    }
    s(wl, "lc");
    var Cl1 = typeof Object.is == "function" ? Object.is : wl, b28 = null, St2 = null, Ne4 = null, k27 = null, se5 = !1, $e4 = !1, fe6 = 0, q25 = null, Ae5 = 0;
    function J11() {
        if (b28 === null) throw Error(y28(321));
        return b28;
    }
    s(J11, "W");
    function Vn1() {
        if (0 < Ae5) throw Error(y28(312));
        return {
            memoizedState: null,
            queue: null,
            next: null
        };
    }
    s(Vn1, "rc");
    function xt1() {
        return k27 === null ? Ne4 === null ? (se5 = !1, Ne4 = k27 = Vn1()) : (se5 = !0, k27 = Ne4) : k27.next === null ? (se5 = !1, k27 = k27.next = Vn1()) : (se5 = !0, k27 = k27.next), k27;
    }
    s(xt1, "sc");
    function kt3() {
        St2 = b28 = null, $e4 = !1, Ne4 = null, Ae5 = 0, k27 = q25 = null;
    }
    s(kt3, "tc");
    function pr1(e197, t153) {
        return typeof t153 == "function" ? t153(e197) : t153;
    }
    s(pr1, "uc");
    function $n1(e198, t154, n91) {
        if (b28 = J11(), k27 = xt1(), se5) {
            var r68 = k27.queue;
            if (t154 = r68.dispatch, q25 !== null && (n91 = q25.get(r68), n91 !== void 0)) {
                q25.delete(r68), r68 = k27.memoizedState;
                do r68 = e198(r68, n91.action), n91 = n91.next;
                while (n91 !== null)
                return k27.memoizedState = r68, [
                    r68,
                    t154
                ];
            }
            return [
                k27.memoizedState,
                t154
            ];
        }
        return e198 = e198 === pr1 ? typeof t154 == "function" ? t154() : t154 : n91 !== void 0 ? n91(t154) : t154, k27.memoizedState = e198, e198 = k27.queue = {
            last: null,
            dispatch: null
        }, e198 = e198.dispatch = El.bind(null, b28, e198), [
            k27.memoizedState,
            e198
        ];
    }
    s($n1, "vc");
    function zn1(e199, t155) {
        if (b28 = J11(), k27 = xt1(), t155 = t155 === void 0 ? null : t155, k27 !== null) {
            var n92 = k27.memoizedState;
            if (n92 !== null && t155 !== null) {
                var r69 = n92[1];
                e: if (r69 === null) r69 = !1;
                else {
                    for(var l65 = 0; l65 < r69.length && l65 < t155.length; l65++)if (!Cl1(t155[l65], r69[l65])) {
                        r69 = !1;
                        break e;
                    }
                    r69 = !0;
                }
                if (r69) return n92[0];
            }
        }
        return e199 = e199(), k27.memoizedState = [
            e199,
            t155
        ], e199;
    }
    s(zn1, "xc");
    function El(e200, t156, n93) {
        if (25 <= Ae5) throw Error(y28(301));
        if (e200 === b28) if ($e4 = !0, e200 = {
            action: n93,
            next: null
        }, q25 === null && (q25 = new Map), n93 = q25.get(t156), n93 === void 0) q25.set(t156, e200);
        else {
            for(t156 = n93; t156.next !== null;)t156 = t156.next;
            t156.next = e200;
        }
    }
    s(El, "wc");
    function Fl1() {
        throw Error(y28(394));
    }
    s(Fl1, "yc");
    function _e3() {}
    s(_e3, "zc");
    var Ln1 = {
        readContext: function(e201) {
            return e201._currentValue;
        },
        useContext: function(e202) {
            return J11(), e202._currentValue;
        },
        useMemo: zn1,
        useReducer: $n1,
        useRef: function(e203) {
            b28 = J11(), k27 = xt1();
            var t157 = k27.memoizedState;
            return t157 === null ? (e203 = {
                current: e203
            }, k27.memoizedState = e203) : t157;
        },
        useState: function(e204) {
            return $n1(pr1, e204);
        },
        useInsertionEffect: _e3,
        useLayoutEffect: function() {},
        useCallback: function(e205, t158) {
            return zn1(function() {
                return e205;
            }, t158);
        },
        useImperativeHandle: _e3,
        useEffect: _e3,
        useDebugValue: _e3,
        useDeferredValue: function(e206) {
            return J11(), e206;
        },
        useTransition: function() {
            return J11(), [
                !1,
                Fl1
            ];
        },
        useId: function() {
            var e207 = St2.treeContext, t159 = e207.overflow;
            e207 = e207.id, e207 = (e207 & ~(1 << 32 - Be3(e207) - 1)).toString(32) + t159;
            var n94 = De4;
            if (n94 === null) throw Error(y28(404));
            return t159 = fe6++, e207 = ":" + n94.idPrefix + "R" + e207, 0 < t159 && (e207 += "H" + t159.toString(32)), e207 + ":";
        },
        useMutableSource: function(e208, t160) {
            return J11(), t160(e208._source);
        },
        useSyncExternalStore: function(e, t, n95) {
            if (n95 === void 0) throw Error(y28(407));
            return n95();
        }
    }, De4 = null, ct2 = qn1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Rl1(e209) {
        console.error(e209);
    }
    s(Rl1, "Dc");
    function ae6() {}
    s(ae6, "X");
    function Tl(e210, t161, n96, r70, l66, o, i53, u46, a46) {
        var f38 = [], p50 = new Set;
        return t161 = {
            destination: null,
            responseState: t161,
            progressiveChunkSize: r70 === void 0 ? 12800 : r70,
            status: 0,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: p50,
            pingedTasks: f38,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: l66 === void 0 ? Rl1 : l66,
            onAllReady: o === void 0 ? ae6 : o,
            onShellReady: i53 === void 0 ? ae6 : i53,
            onShellError: u46 === void 0 ? ae6 : u46,
            onFatalError: a46 === void 0 ? ae6 : a46
        }, n96 = ze3(t161, 0, null, n96), n96.parentFlushed = !0, e210 = wt2(t161, e210, null, n96, p50, ur1, null, gl2), f38.push(e210), t161;
    }
    s(Tl, "Ec");
    function wt2(e211, t162, n97, r71, l67, o, i54, u47) {
        e211.allPendingTasks++, n97 === null ? e211.pendingRootTasks++ : n97.pendingTasks++;
        var a47 = {
            node: t162,
            ping: function() {
                var f39 = e211.pingedTasks;
                f39.push(a47), f39.length === 1 && mr1(e211);
            },
            blockedBoundary: n97,
            blockedSegment: r71,
            abortSet: l67,
            legacyContext: o,
            context: i54,
            treeContext: u47
        };
        return l67.add(a47), a47;
    }
    s(wt2, "Gc");
    function ze3(e, t163, n98, r72) {
        return {
            status: 0,
            id: -1,
            index: t163,
            parentFlushed: !1,
            chunks: [],
            children: [],
            formatContext: r72,
            boundary: n98
        };
    }
    s(ze3, "Fc");
    function pe3(e212, t164) {
        e212 = e212.onError, e212(t164);
    }
    s(pe3, "Y");
    function Le4(e213, t165) {
        var n99 = e213.onShellError;
        n99(t165), n99 = e213.onFatalError, n99(t165), e213.destination !== null ? (e213.status = 2, Xn2(e213.destination, t165)) : (e213.status = 1, e213.fatalError = t165);
    }
    s(Le4, "Ic");
    function On1(e214, t166, n100, r73, l68) {
        for(b28 = {}, St2 = t166, fe6 = 0, e214 = n100(r73, l68); $e4;)$e4 = !1, fe6 = 0, Ae5 += 1, k27 = null, e214 = n100(r73, l68);
        return kt3(), e214;
    }
    s(On1, "Jc");
    function jn(e215, t167, n101, r74) {
        var l69 = n101.render(), o = r74.childContextTypes;
        if (o != null) {
            var i55 = t167.legacyContext;
            if (typeof n101.getChildContext != "function") r74 = i55;
            else {
                n101 = n101.getChildContext();
                for(var u48 in n101)if (!(u48 in o)) throw Error(y28(108, pt2(r74) || "Unknown", u48));
                r74 = ce4({}, i55, n101);
            }
            t167.legacyContext = r74, V12(e215, t167, l69), t167.legacyContext = i55;
        } else V12(e215, t167, l69);
    }
    s(jn, "Kc");
    function An(e216, t168) {
        if (e216 && e216.defaultProps) {
            t168 = ce4({}, t168), e216 = e216.defaultProps;
            for(var n102 in e216)t168[n102] === void 0 && (t168[n102] = e216[n102]);
            return t168;
        }
        return t168;
    }
    s(An, "Lc");
    function ht2(e217, t169, n103, r75, l70) {
        if (typeof n103 == "function") if (n103.prototype && n103.prototype.isReactComponent) {
            l70 = Bn1(n103, t169.legacyContext);
            var o = n103.contextType;
            o = new n103(r75, typeof o == "object" && o !== null ? o._currentValue : l70), Dn(o, n103, r75, l70), jn(e217, t169, o, n103);
        } else {
            o = Bn1(n103, t169.legacyContext), l70 = On1(e217, t169, n103, r75, o);
            var i56 = fe6 !== 0;
            if (typeof l70 == "object" && l70 !== null && typeof l70.render == "function" && l70.$$typeof === void 0) Dn(l70, n103, r75, o), jn(e217, t169, l70, n103);
            else if (i56) {
                r75 = t169.treeContext, t169.treeContext = dt2(r75, 1, 0);
                try {
                    V12(e217, t169, l70);
                } finally{
                    t169.treeContext = r75;
                }
            } else V12(e217, t169, l70);
        }
        else if (typeof n103 == "string") switch(l70 = t169.blockedSegment, o = Co(l70.chunks, n103, r75, e217.responseState, l70.formatContext), i56 = l70.formatContext, l70.formatContext = vo(i56, n103, r75), mt2(e217, t169, o), l70.formatContext = i56, n103){
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
                break;
            default:
                l70.chunks.push(Eo, v29(n103), Fo);
        }
        else {
            switch(n103){
                case yl1:
                case ml1:
                case Qn:
                case er2:
                case Kn1:
                    V12(e217, t169, r75.children);
                    return;
                case lr1:
                    V12(e217, t169, r75.children);
                    return;
                case hl1:
                    throw Error(y28(343));
                case or1:
                    e: {
                        n103 = t169.blockedBoundary, l70 = t169.blockedSegment, o = r75.fallback, r75 = r75.children, i56 = new Set;
                        var u49 = {
                            id: null,
                            rootSegmentID: -1,
                            parentFlushed: !1,
                            pendingTasks: 0,
                            forceClientRender: !1,
                            completedSegments: [],
                            byteSize: 0,
                            fallbackAbortableTasks: i56
                        }, a48 = ze3(e217, l70.chunks.length, u49, l70.formatContext);
                        l70.children.push(a48);
                        var f40 = ze3(e217, 0, null, l70.formatContext);
                        f40.parentFlushed = !0, t169.blockedBoundary = u49, t169.blockedSegment = f40;
                        try {
                            if (mt2(e217, t169, r75), f40.status = 1, Oe4(u49, f40), u49.pendingTasks === 0) break e;
                        } catch (p51) {
                            f40.status = 4, pe3(e217, p51), u49.forceClientRender = !0;
                        } finally{
                            t169.blockedBoundary = n103, t169.blockedSegment = l70;
                        }
                        t169 = wt2(e217, o, n103, a48, i56, t169.legacyContext, t169.context, t169.treeContext), e217.pingedTasks.push(t169);
                    }
                    return;
            }
            if (typeof n103 == "object" && n103 !== null) switch(n103.$$typeof){
                case rr2:
                    if (r75 = On1(e217, t169, n103.render, r75, l70), fe6 !== 0) {
                        n103 = t169.treeContext, t169.treeContext = dt2(n103, 1, 0);
                        try {
                            V12(e217, t169, r75);
                        } finally{
                            t169.treeContext = n103;
                        }
                    } else V12(e217, t169, r75);
                    return;
                case ir1:
                    n103 = n103.type, r75 = An(n103, r75), ht2(e217, t169, n103, r75, l70);
                    return;
                case tr1:
                    if (l70 = r75.children, n103 = n103._context, r75 = r75.value, o = n103._currentValue, n103._currentValue = r75, i56 = K13, K13 = r75 = {
                        parent: i56,
                        depth: i56 === null ? 0 : i56.depth + 1,
                        context: n103,
                        parentValue: o,
                        value: r75
                    }, t169.context = r75, V12(e217, t169, l70), e217 = K13, e217 === null) throw Error(y28(403));
                    r75 = e217.parentValue, e217.context._currentValue = r75 === vl2 ? e217.context._defaultValue : r75, e217 = K13 = e217.parent, t169.context = e217;
                    return;
                case nr1:
                    r75 = r75.children, r75 = r75(n103._currentValue), V12(e217, t169, r75);
                    return;
                case gt2:
                    l70 = n103._init, n103 = l70(n103._payload), r75 = An(n103, r75), ht2(e217, t169, n103, r75, void 0);
                    return;
            }
            throw Error(y28(130, n103 == null ? n103 : typeof n103, ""));
        }
    }
    s(ht2, "Mc");
    function V12(e218, t170, n104) {
        if (t170.node = n104, typeof n104 == "object" && n104 !== null) {
            switch(n104.$$typeof){
                case dl1:
                    ht2(e218, t170, n104.type, n104.props, n104.ref);
                    return;
                case Jn:
                    throw Error(y28(257));
                case gt2:
                    var r76 = n104._init;
                    n104 = r76(n104._payload), V12(e218, t170, n104);
                    return;
            }
            if (ft1(n104)) {
                Hn1(e218, t170, n104);
                return;
            }
            if (n104 === null || typeof n104 != "object" ? r76 = null : (r76 = Pn2 && n104[Pn2] || n104["@@iterator"], r76 = typeof r76 == "function" ? r76 : null), r76 && (r76 = r76.call(n104))) {
                if (n104 = r76.next(), !n104.done) {
                    var l71 = [];
                    do l71.push(n104.value), n104 = r76.next();
                    while (!n104.done)
                    Hn1(e218, t170, l71);
                }
                return;
            }
            throw t170 = Object.prototype.toString.call(n104), Error(y28(31, t170 === "[object Object]" ? "object with keys {" + Object.keys(n104).join(", ") + "}" : t170));
        }
        typeof n104 == "string" ? n104 !== "" && t170.blockedSegment.chunks.push(v29(F17(n104)), En) : typeof n104 == "number" && (e218 = "" + n104, e218 !== "" && t170.blockedSegment.chunks.push(v29(F17(e218)), En));
    }
    s(V12, "Z");
    function Hn1(e219, t171, n105) {
        for(var r77 = n105.length, l72 = 0; l72 < r77; l72++){
            var o = t171.treeContext;
            t171.treeContext = dt2(o, r77, l72);
            try {
                mt2(e219, t171, n105[l72]);
            } finally{
                t171.treeContext = o;
            }
        }
    }
    s(Hn1, "Pc");
    function mt2(e220, t172, n106) {
        var r78 = t172.blockedSegment.formatContext, l73 = t172.legacyContext, o = t172.context;
        try {
            return V12(e220, t172, n106);
        } catch (a49) {
            if (kt3(), typeof a49 == "object" && a49 !== null && typeof a49.then == "function") {
                n106 = a49;
                var i57 = t172.blockedSegment, u50 = ze3(e220, i57.chunks.length, null, i57.formatContext);
                i57.children.push(u50), e220 = wt2(e220, t172.node, t172.blockedBoundary, u50, t172.abortSet, t172.legacyContext, t172.context, t172.treeContext).ping, n106.then(e220, e220), t172.blockedSegment.formatContext = r78, t172.legacyContext = l73, t172.context = o, Ve5(o);
            } else throw t172.blockedSegment.formatContext = r78, t172.legacyContext = l73, t172.context = o, Ve5(o), a49;
        }
    }
    s(mt2, "Nc");
    function _l(e221) {
        var t173 = e221.blockedBoundary;
        e221 = e221.blockedSegment, e221.status = 3, hr1(this, t173, e221);
    }
    s(_l, "Qc");
    function dr(e222) {
        var t174 = e222.blockedBoundary;
        e222.blockedSegment.status = 3, t174 === null ? (this.allPendingTasks--, this.status !== 2 && (this.status = 2, this.destination !== null && this.destination.close())) : (t174.pendingTasks--, t174.forceClientRender || (t174.forceClientRender = !0, t174.parentFlushed && this.clientRenderedBoundaries.push(t174)), t174.fallbackAbortableTasks.forEach(dr, this), t174.fallbackAbortableTasks.clear(), this.allPendingTasks--, this.allPendingTasks === 0 && (e222 = this.onAllReady, e222()));
    }
    s(dr, "Sc");
    function Oe4(e223, t175) {
        if (t175.chunks.length === 0 && t175.children.length === 1 && t175.children[0].boundary === null) {
            var n107 = t175.children[0];
            n107.id = t175.id, n107.parentFlushed = !0, n107.status === 1 && Oe4(e223, n107);
        } else e223.completedSegments.push(t175);
    }
    s(Oe4, "Oc");
    function hr1(e224, t176, n108) {
        if (t176 === null) {
            if (n108.parentFlushed) {
                if (e224.completedRootSegment !== null) throw Error(y28(389));
                e224.completedRootSegment = n108;
            }
            e224.pendingRootTasks--, e224.pendingRootTasks === 0 && (e224.onShellError = ae6, t176 = e224.onShellReady, t176());
        } else t176.pendingTasks--, t176.forceClientRender || (t176.pendingTasks === 0 ? (n108.parentFlushed && n108.status === 1 && Oe4(t176, n108), t176.parentFlushed && e224.completedBoundaries.push(t176), t176.fallbackAbortableTasks.forEach(_l, e224), t176.fallbackAbortableTasks.clear()) : n108.parentFlushed && n108.status === 1 && (Oe4(t176, n108), t176.completedSegments.length === 1 && t176.parentFlushed && e224.partialBoundaries.push(t176)));
        e224.allPendingTasks--, e224.allPendingTasks === 0 && (e224 = e224.onAllReady, e224());
    }
    s(hr1, "Rc");
    function mr1(e225) {
        if (e225.status !== 2) {
            var t177 = K13, n109 = ct2.current;
            ct2.current = Ln1;
            var r79 = De4;
            De4 = e225.responseState;
            try {
                var l74 = e225.pingedTasks, o;
                for(o = 0; o < l74.length; o++){
                    var i58 = l74[o], u51 = e225, a50 = i58.blockedSegment;
                    if (a50.status === 0) {
                        Ve5(i58.context);
                        try {
                            V12(u51, i58, i58.node), i58.abortSet.delete(i58), a50.status = 1, hr1(u51, i58.blockedBoundary, a50);
                        } catch (S28) {
                            if (kt3(), typeof S28 == "object" && S28 !== null && typeof S28.then == "function") {
                                var f41 = i58.ping;
                                S28.then(f41, f41);
                            } else {
                                i58.abortSet.delete(i58), a50.status = 4;
                                var p52 = i58.blockedBoundary, g37 = S28;
                                if (pe3(u51, g37), p52 === null ? Le4(u51, g37) : (p52.pendingTasks--, p52.forceClientRender || (p52.forceClientRender = !0, p52.parentFlushed && u51.clientRenderedBoundaries.push(p52))), u51.allPendingTasks--, u51.allPendingTasks === 0) {
                                    var C = u51.onAllReady;
                                    C();
                                }
                            }
                        } finally{}
                    }
                }
                l74.splice(0, o), e225.destination !== null && Ct2(e225, e225.destination);
            } catch (S29) {
                pe3(e225, S29), Le4(e225, S29);
            } finally{
                De4 = r79, ct2.current = n109, n109 === Ln1 && Ve5(t177);
            }
        }
    }
    s(mr1, "Hc");
    function Ie4(e226, t178, n110) {
        switch(n110.parentFlushed = !0, n110.status){
            case 0:
                var r80 = n110.id = e226.nextSegmentId++;
                return e226 = e226.responseState, h35(t178, Ro), h35(t178, e226.placeholderPrefix), e226 = v29(r80.toString(16)), h35(t178, e226), w27(t178, To);
            case 1:
                n110.status = 2;
                var l75 = !0;
                r80 = n110.chunks;
                var o = 0;
                n110 = n110.children;
                for(var i59 = 0; i59 < n110.length; i59++){
                    for(l75 = n110[i59]; o < l75.index; o++)h35(t178, r80[o]);
                    l75 = He4(e226, t178, l75);
                }
                for(; o < r80.length - 1; o++)h35(t178, r80[o]);
                return o < r80.length && (l75 = w27(t178, r80[o])), l75;
            default:
                throw Error(y28(390));
        }
    }
    s(Ie4, "Uc");
    function He4(e227, t179, n111) {
        var r81 = n111.boundary;
        if (r81 === null) return Ie4(e227, t179, n111);
        if (r81.parentFlushed = !0, r81.forceClientRender) w27(t179, Po1), Ie4(e227, t179, n111);
        else if (0 < r81.pendingTasks) {
            r81.rootSegmentID = e227.nextSegmentId++, 0 < r81.completedSegments.length && e227.partialBoundaries.push(r81);
            var l76 = e227.responseState, o = l76.nextSuspenseID++;
            l76 = d28(l76.boundaryPrefix + o.toString(16)), r81 = r81.id = l76, Mn(t179, e227.responseState, r81), Ie4(e227, t179, n111);
        } else if (r81.byteSize > e227.progressiveChunkSize) r81.rootSegmentID = e227.nextSegmentId++, e227.completedBoundaries.push(r81), Mn(t179, e227.responseState, r81.id), Ie4(e227, t179, n111);
        else {
            if (w27(t179, _o1), n111 = r81.completedSegments, n111.length !== 1) throw Error(y28(391));
            He4(e227, t179, n111[0]);
        }
        return w27(t179, Bo);
    }
    s(He4, "Vc");
    function bn(e228, t180, n112) {
        return el1(t180, e228.responseState, n112.formatContext, n112.id), He4(e228, t180, n112), tl1(t180, n112.formatContext);
    }
    s(bn, "Wc");
    function Un1(e229, t181, n113) {
        for(var r82 = n113.completedSegments, l77 = 0; l77 < r82.length; l77++)yr1(e229, t181, n113, r82[l77]);
        if (r82.length = 0, e229 = e229.responseState, r82 = n113.id, n113 = n113.rootSegmentID, h35(t181, e229.startInlineScript), e229.sentCompleteBoundaryFunction ? h35(t181, ul2) : (e229.sentCompleteBoundaryFunction = !0, h35(t181, il2)), r82 === null) throw Error(y28(395));
        return n113 = v29(n113.toString(16)), h35(t181, r82), h35(t181, sl1), h35(t181, e229.segmentPrefix), h35(t181, n113), w27(t181, al1);
    }
    s(Un1, "Xc");
    function yr1(e230, t182, n114, r83) {
        if (r83.status === 2) return !0;
        var l78 = r83.id;
        if (l78 === -1) {
            if ((r83.id = n114.rootSegmentID) === -1) throw Error(y28(392));
            return bn(e230, t182, r83);
        }
        return bn(e230, t182, r83), e230 = e230.responseState, h35(t182, e230.startInlineScript), e230.sentCompleteSegmentFunction ? h35(t182, rl1) : (e230.sentCompleteSegmentFunction = !0, h35(t182, nl)), h35(t182, e230.segmentPrefix), l78 = v29(l78.toString(16)), h35(t182, l78), h35(t182, ol), h35(t182, e230.placeholderPrefix), h35(t182, l78), w27(t182, ll);
    }
    s(yr1, "Yc");
    function Ct2(e231, t183) {
        B22 = new Uint8Array(512), N17 = 0;
        try {
            var n115 = e231.completedRootSegment;
            if (n115 !== null && e231.pendingRootTasks === 0) {
                He4(e231, t183, n115), e231.completedRootSegment = null;
                var r84 = e231.responseState.bootstrapChunks;
                for(n115 = 0; n115 < r84.length - 1; n115++)h35(t183, r84[n115]);
                n115 < r84.length && w27(t183, r84[n115]);
            }
            var l79 = e231.clientRenderedBoundaries, o;
            for(o = 0; o < l79.length; o++){
                r84 = t183;
                var i60 = e231.responseState, u52 = l79[o].id;
                if (h35(r84, i60.startInlineScript), i60.sentClientRenderFunction ? h35(r84, fl2) : (i60.sentClientRenderFunction = !0, h35(r84, cl2)), u52 === null) throw Error(y28(395));
                if (h35(r84, u52), !w27(r84, pl)) {
                    e231.destination = null, o++, l79.splice(0, o);
                    return;
                }
            }
            l79.splice(0, o);
            var a51 = e231.completedBoundaries;
            for(o = 0; o < a51.length; o++)if (!Un1(e231, t183, a51[o])) {
                e231.destination = null, o++, a51.splice(0, o);
                return;
            }
            a51.splice(0, o), xn(t183), B22 = new Uint8Array(512), N17 = 0;
            var f42 = e231.partialBoundaries;
            for(o = 0; o < f42.length; o++){
                var p53 = f42[o];
                e: {
                    l79 = e231, i60 = t183;
                    var g38 = p53.completedSegments;
                    for(u52 = 0; u52 < g38.length; u52++)if (!yr1(l79, i60, p53, g38[u52])) {
                        u52++, g38.splice(0, u52);
                        var C = !1;
                        break e;
                    }
                    g38.splice(0, u52), C = !0;
                }
                if (!C) {
                    e231.destination = null, o++, f42.splice(0, o);
                    return;
                }
            }
            f42.splice(0, o);
            var S30 = e231.completedBoundaries;
            for(o = 0; o < S30.length; o++)if (!Un1(e231, t183, S30[o])) {
                e231.destination = null, o++, S30.splice(0, o);
                return;
            }
            S30.splice(0, o);
        } finally{
            xn(t183), e231.allPendingTasks === 0 && e231.pingedTasks.length === 0 && e231.clientRenderedBoundaries.length === 0 && e231.completedBoundaries.length === 0 && t183.close();
        }
    }
    s(Ct2, "Tc");
    function Wn2(e232) {
        try {
            var t184 = e232.abortableTasks;
            t184.forEach(dr, e232), t184.clear(), e232.destination !== null && Ct2(e232, e232.destination);
        } catch (n116) {
            pe3(e232, n116), Le4(e232, n116);
        }
    }
    s(Wn2, "Zc");
    Et1.renderToReadableStream = function(e233, t185) {
        return new Promise(function(n117, r85) {
            var l80, o, i61 = new Promise(function(p54, g39) {
                o = p54, l80 = g39;
            }), u53 = Tl(e233, mo(t185 ? t185.identifierPrefix : void 0, t185 ? t185.nonce : void 0, t185 ? t185.bootstrapScriptContent : void 0, t185 ? t185.bootstrapScripts : void 0, t185 ? t185.bootstrapModules : void 0), yo1(t185 ? t185.namespaceURI : void 0), t185 ? t185.progressiveChunkSize : void 0, t185 ? t185.onError : void 0, o, function() {
                var p55 = new ReadableStream({
                    type: "bytes",
                    pull: function(g40) {
                        if (u53.status === 1) u53.status = 2, Xn2(g40, u53.fatalError);
                        else if (u53.status !== 2 && u53.destination === null) {
                            u53.destination = g40;
                            try {
                                Ct2(u53, g40);
                            } catch (C) {
                                pe3(u53, C), Le4(u53, C);
                            }
                        }
                    },
                    cancel: function() {
                        Wn2(u53);
                    }
                });
                p55.allReady = i61, n117(p55);
            }, function(p56) {
                i61.catch(function() {}), r85(p56);
            }, l80);
            if (t185 && t185.signal) {
                var a52 = t185.signal, f43 = s(function() {
                    Wn2(u53), a52.removeEventListener("abort", f43);
                }, "q");
                a52.addEventListener("abort", f43);
            }
            mr1(u53);
        });
    };
    Et1.version = "18.1.0";
});
var Ft = Ue1((Q7)=>{
    "use strict";
    var ne8, gr;
    ne8 = Sn(), gr = vr();
    Q7.version = ne8.version;
    Q7.renderToString = ne8.renderToString;
    Q7.renderToStaticMarkup = ne8.renderToStaticMarkup;
    Q7.renderToNodeStream = ne8.renderToNodeStream;
    Q7.renderToStaticNodeStream = ne8.renderToStaticNodeStream;
    Q7.renderToReadableStream = gr.renderToReadableStream;
});
var Sr = Tt(Ft()), xr = Tt(Ft()), { version: Vl , renderToString: $l , renderToStaticMarkup: zl , renderToNodeStream: Ll , renderToStaticNodeStream: Ol , renderToReadableStream: jl  } = xr, { default: Il , ...Ml } = xr, Al = (Sr.default ?? Il) ?? Ml;
function t(i62) {
    if (i62) throw i62;
}
var i = Object.create;
var u = Object.defineProperty;
var d = Object.getOwnPropertyDescriptor;
var m = Object.getOwnPropertyNames;
var p = Object.getPrototypeOf, a1 = Object.prototype.hasOwnProperty;
var $ = (r86)=>u(r86, "__esModule", {
        value: !0
    });
var B1 = (r87, t186)=>()=>(t186 || r87((t186 = {
            exports: {}
        }).exports, t186), t186.exports);
var x = (r88, t187, l81, o)=>{
    if (t187 && typeof t187 == "object" || typeof t187 == "function") for (let f44 of m(t187))!a1.call(r88, f44) && (l81 || f44 !== "default") && u(r88, f44, {
        get: ()=>t187[f44],
        enumerable: !(o = d(t187, f44)) || o.enumerable
    });
    return r88;
}, n = (r89, t188)=>x($(u(r89 != null ? i(p(r89)) : {}, "default", !t188 && r89 && r89.__esModule ? {
        get: ()=>r89.default,
        enumerable: !0
    } : {
        value: r89,
        enumerable: !0
    })), r89);
var e = B1((q, s32)=>{
    s32.exports = function(t189) {
        return t189 != null && t189.constructor != null && typeof t189.constructor.isBuffer == "function" && t189.constructor.isBuffer(t189);
    };
});
var c = n(e()), y = n(e()), { default: g , ...h } = y, v1 = (c.default ?? g) ?? h;
var b1 = Object.create;
var s1 = Object.defineProperty;
var V = Object.getOwnPropertyDescriptor;
var $1 = Object.getOwnPropertyNames;
var x1 = Object.getPrototypeOf, D = Object.prototype.hasOwnProperty;
var I = (e234)=>s1(e234, "__esModule", {
        value: !0
    });
var S = (e235, r90)=>()=>(r90 || e235((r90 = {
            exports: {}
        }).exports, r90), r90.exports);
var k1 = (e236, r91, t190, a53)=>{
    if (r91 && typeof r91 == "object" || typeof r91 == "function") for (let n118 of $1(r91))!D.call(e236, n118) && (t190 || n118 !== "default") && s1(e236, n118, {
        get: ()=>r91[n118],
        enumerable: !(a53 = V(r91, n118)) || a53.enumerable
    });
    return e236;
}, y1 = (e237, r92)=>k1(I(s1(e237 != null ? b1(x1(e237)) : {}, "default", !r92 && e237 && e237.__esModule ? {
        get: ()=>e237.default,
        enumerable: !0
    } : {
        value: e237,
        enumerable: !0
    })), e237);
var p1 = S((B, A24)=>{
    "use strict";
    var u54 = Object.prototype.hasOwnProperty, w28 = Object.prototype.toString, v30 = Object.defineProperty, d29 = Object.getOwnPropertyDescriptor, O20 = function(r93) {
        return typeof Array.isArray == "function" ? Array.isArray(r93) : w28.call(r93) === "[object Array]";
    }, m34 = function(r94) {
        if (!r94 || w28.call(r94) !== "[object Object]") return !1;
        var t191 = u54.call(r94, "constructor"), a54 = r94.constructor && r94.constructor.prototype && u54.call(r94.constructor.prototype, "isPrototypeOf");
        if (r94.constructor && !t191 && !a54) return !1;
        var n119;
        for(n119 in r94);
        return typeof n119 > "u" || u54.call(r94, n119);
    }, P23 = function(r95, t192) {
        v30 && t192.name === "__proto__" ? v30(r95, t192.name, {
            enumerable: !0,
            configurable: !0,
            value: t192.newValue,
            writable: !0
        }) : r95[t192.name] = t192.newValue;
    }, g41 = function(r96, t193) {
        if (t193 === "__proto__") if (u54.call(r96, t193)) {
            if (d29) return d29(r96, t193).value;
        } else return;
        return r96[t193];
    };
    A24.exports = function e238() {
        var r97, t194, a55, n120, l82, c32, o = arguments[0], f45 = 1, h36 = arguments.length, i63 = !1;
        for(typeof o == "boolean" && (i63 = o, o = arguments[1] || {}, f45 = 2), (o == null || typeof o != "object" && typeof o != "function") && (o = {}); f45 < h36; ++f45)if (r97 = arguments[f45], r97 != null) for(t194 in r97)a55 = g41(o, t194), n120 = g41(r97, t194), o !== n120 && (i63 && n120 && (m34(n120) || (l82 = O20(n120))) ? (l82 ? (l82 = !1, c32 = a55 && O20(a55) ? a55 : []) : c32 = a55 && m34(a55) ? a55 : {}, P23(o, {
            name: t194,
            newValue: e238(i63, c32, n120)
        })) : typeof n120 < "u" && P23(o, {
            name: t194,
            newValue: n120
        }));
        return o;
    };
});
var _ = y1(p1()), C29 = y1(p1()), { default: j , ...q1 } = C29, E = (_.default ?? j) ?? q1;
function o24(t195) {
    if (Object.prototype.toString.call(t195) !== "[object Object]") return !1;
    let e239 = Object.getPrototypeOf(t195);
    return e239 === null || e239 === Object.prototype;
}
function x2() {
    let i64 = [], u55 = {
        run: c33,
        use: h37
    };
    return u55;
    function c33(...n121) {
        let s33 = -1, e240 = n121.pop();
        if (typeof e240 != "function") throw new TypeError("Expected function as last argument, not " + e240);
        o(null, ...n121);
        function o(t196, ...f46) {
            let r98 = i64[++s33], l83 = -1;
            if (t196) {
                e240(t196);
                return;
            }
            for(; ++l83 < n121.length;)(f46[l83] === null || f46[l83] === void 0) && (f46[l83] = n121[l83]);
            n121 = f46, r98 ? p2(r98, o)(...f46) : e240(null, ...f46);
        }
    }
    function h37(n122) {
        if (typeof n122 != "function") throw new TypeError("Expected `middelware` to be a function, not " + n122);
        return i64.push(n122), u55;
    }
}
function p2(i65, u56) {
    let c34;
    return h38;
    function h38(...e241) {
        let o = i65.length > e241.length, t197;
        o && e241.push(n123);
        try {
            t197 = i65(...e241);
        } catch (f47) {
            let r99 = f47;
            if (o && c34) throw r99;
            return n123(r99);
        }
        o || (t197 instanceof Promise ? t197.then(s34, n123) : t197 instanceof Error ? n123(t197) : s34(t197));
    }
    function n123(e242, ...o) {
        c34 || (c34 = !0, u56(e242, ...o));
    }
    function s34(e243) {
        n123(null, e243);
    }
}
var t1 = {}.hasOwnProperty;
function c1(n124) {
    return !n124 || typeof n124 != "object" ? "" : t1.call(n124, "position") || t1.call(n124, "type") ? i1(n124.position) : t1.call(n124, "start") || t1.call(n124, "end") ? i1(n124) : t1.call(n124, "line") || t1.call(n124, "column") ? r(n124) : "";
}
function r(n125) {
    return o1(n125 && n125.line) + ":" + o1(n125 && n125.column);
}
function i1(n126) {
    return r(n126 && n126.start) + "-" + r(n126 && n126.end);
}
function o1(n127) {
    return n127 && typeof n127 == "number" ? n127 : 1;
}
var s2 = class extends Error {
    constructor(e244, t198, i66){
        var n128 = [
            null,
            null
        ], o = {
            start: {
                line: null,
                column: null
            },
            end: {
                line: null,
                column: null
            }
        }, l84;
        super();
        typeof t198 == "string" && (i66 = t198, t198 = null), typeof i66 == "string" && (l84 = i66.indexOf(":"), l84 === -1 ? n128[1] = i66 : (n128[0] = i66.slice(0, l84), n128[1] = i66.slice(l84 + 1))), t198 && ("type" in t198 || "position" in t198 ? t198.position && (o = t198.position) : "start" in t198 || "end" in t198 ? o = t198 : ("line" in t198 || "column" in t198) && (o.start = t198)), this.name = c1(t198) || "1:1", this.message = typeof e244 == "object" ? e244.message : e244, this.stack = typeof e244 == "object" ? e244.stack : "", this.reason = this.message, this.fatal, this.line = o.start.line, this.column = o.start.column, this.source = n128[0], this.ruleId = n128[1], this.position = o, this.actual, this.expected, this.file, this.url, this.note;
    }
};
s2.prototype.file = "";
s2.prototype.name = "";
s2.prototype.reason = "";
s2.prototype.message = "";
s2.prototype.stack = "";
s2.prototype.fatal = null;
s2.prototype.column = null;
s2.prototype.line = null;
s2.prototype.source = null;
s2.prototype.ruleId = null;
s2.prototype.position = null;
var h1 = {
    basename: b2,
    dirname: A1,
    extname: x3,
    join: E1,
    sep: "/"
};
function b2(n129, e245) {
    if (e245 !== void 0 && typeof e245 != "string") throw new TypeError('"ext" argument must be a string');
    a2(n129);
    let t199 = 0, r100 = -1, i67 = n129.length, s35;
    if (e245 === void 0 || e245.length === 0 || e245.length > n129.length) {
        for(; i67--;)if (n129.charCodeAt(i67) === 47) {
            if (s35) {
                t199 = i67 + 1;
                break;
            }
        } else r100 < 0 && (s35 = !0, r100 = i67 + 1);
        return r100 < 0 ? "" : n129.slice(t199, r100);
    }
    if (e245 === n129) return "";
    let o = -1, l85 = e245.length - 1;
    for(; i67--;)if (n129.charCodeAt(i67) === 47) {
        if (s35) {
            t199 = i67 + 1;
            break;
        }
    } else o < 0 && (s35 = !0, o = i67 + 1), l85 > -1 && (n129.charCodeAt(i67) === e245.charCodeAt(l85--) ? l85 < 0 && (r100 = i67) : (l85 = -1, r100 = o));
    return t199 === r100 ? r100 = o : r100 < 0 && (r100 = n129.length), n129.slice(t199, r100);
}
function A1(n130) {
    if (a2(n130), n130.length === 0) return ".";
    let e246 = -1, t200 = n130.length, r101;
    for(; --t200;)if (n130.charCodeAt(t200) === 47) {
        if (r101) {
            e246 = t200;
            break;
        }
    } else r101 || (r101 = !0);
    return e246 < 0 ? n130.charCodeAt(0) === 47 ? "/" : "." : e246 === 1 && n130.charCodeAt(0) === 47 ? "//" : n130.slice(0, e246);
}
function x3(n131) {
    a2(n131);
    let e247 = n131.length, t201 = -1, r102 = 0, i68 = -1, s36 = 0, o;
    for(; e247--;){
        let l86 = n131.charCodeAt(e247);
        if (l86 === 47) {
            if (o) {
                r102 = e247 + 1;
                break;
            }
            continue;
        }
        t201 < 0 && (o = !0, t201 = e247 + 1), l86 === 46 ? i68 < 0 ? i68 = e247 : s36 !== 1 && (s36 = 1) : i68 > -1 && (s36 = -1);
    }
    return i68 < 0 || t201 < 0 || s36 === 0 || s36 === 1 && i68 === t201 - 1 && i68 === r102 + 1 ? "" : n131.slice(i68, t201);
}
function E1(...n132) {
    let e248 = -1, t202;
    for(; ++e248 < n132.length;)a2(n132[e248]), n132[e248] && (t202 = t202 === void 0 ? n132[e248] : t202 + "/" + n132[e248]);
    return t202 === void 0 ? "." : C1(t202);
}
function C1(n133) {
    a2(n133);
    let e249 = n133.charCodeAt(0) === 47, t203 = R(n133, !e249);
    return t203.length === 0 && !e249 && (t203 = "."), t203.length > 0 && n133.charCodeAt(n133.length - 1) === 47 && (t203 += "/"), e249 ? "/" + t203 : t203;
}
function R(n134, e250) {
    let t204 = "", r103 = 0, i69 = -1, s37 = 0, o = -1, l87, c35;
    for(; ++o <= n134.length;){
        if (o < n134.length) l87 = n134.charCodeAt(o);
        else {
            if (l87 === 47) break;
            l87 = 47;
        }
        if (l87 === 47) {
            if (!(i69 === o - 1 || s37 === 1)) if (i69 !== o - 1 && s37 === 2) {
                if (t204.length < 2 || r103 !== 2 || t204.charCodeAt(t204.length - 1) !== 46 || t204.charCodeAt(t204.length - 2) !== 46) {
                    if (t204.length > 2) {
                        if (c35 = t204.lastIndexOf("/"), c35 !== t204.length - 1) {
                            c35 < 0 ? (t204 = "", r103 = 0) : (t204 = t204.slice(0, c35), r103 = t204.length - 1 - t204.lastIndexOf("/")), i69 = o, s37 = 0;
                            continue;
                        }
                    } else if (t204.length > 0) {
                        t204 = "", r103 = 0, i69 = o, s37 = 0;
                        continue;
                    }
                }
                e250 && (t204 = t204.length > 0 ? t204 + "/.." : "..", r103 = 2);
            } else t204.length > 0 ? t204 += "/" + n134.slice(i69 + 1, o) : t204 = n134.slice(i69 + 1, o), r103 = o - i69 - 1;
            i69 = o, s37 = 0;
        } else l87 === 46 && s37 > -1 ? s37++ : s37 = -1;
    }
    return t204;
}
function a2(n135) {
    if (typeof n135 != "string") throw new TypeError("Path must be a string. Received " + JSON.stringify(n135));
}
var g1 = {
    cwd: I1
};
function I1() {
    return "/";
}
function f(n136) {
    return n136 !== null && typeof n136 == "object" && n136.href && n136.origin;
}
function p3(n137) {
    if (typeof n137 == "string") n137 = new URL(n137);
    else if (!f(n137)) {
        let e251 = new TypeError('The "path" argument must be of type string or an instance of URL. Received `' + n137 + "`");
        throw e251.code = "ERR_INVALID_ARG_TYPE", e251;
    }
    if (n137.protocol !== "file:") {
        let e252 = new TypeError("The URL must be of scheme file");
        throw e252.code = "ERR_INVALID_URL_SCHEME", e252;
    }
    return S1(n137);
}
function S1(n138) {
    if (n138.hostname !== "") {
        let r104 = new TypeError('File URL host must be "localhost" or empty on darwin');
        throw r104.code = "ERR_INVALID_FILE_URL_HOST", r104;
    }
    let e253 = n138.pathname, t205 = -1;
    for(; ++t205 < e253.length;)if (e253.charCodeAt(t205) === 37 && e253.charCodeAt(t205 + 1) === 50) {
        let r105 = e253.charCodeAt(t205 + 2);
        if (r105 === 70 || r105 === 102) {
            let i70 = new TypeError("File URL path must not include encoded / characters");
            throw i70.code = "ERR_INVALID_FILE_URL_PATH", i70;
        }
    }
    return decodeURIComponent(e253);
}
var d1 = [
    "history",
    "path",
    "basename",
    "stem",
    "extname",
    "dirname"
], y2 = class {
    constructor(e254){
        let t206;
        e254 ? typeof e254 == "string" || v1(e254) ? t206 = {
            value: e254
        } : f(e254) ? t206 = {
            path: e254
        } : t206 = e254 : t206 = {}, this.data = {}, this.messages = [], this.history = [], this.cwd = g1.cwd(), this.value, this.stored, this.result, this.map;
        let r106 = -1;
        for(; ++r106 < d1.length;){
            let s38 = d1[r106];
            s38 in t206 && t206[s38] !== void 0 && (this[s38] = s38 === "history" ? [
                ...t206[s38]
            ] : t206[s38]);
        }
        let i71;
        for(i71 in t206)d1.includes(i71) || (this[i71] = t206[i71]);
    }
    get path() {
        return this.history[this.history.length - 1];
    }
    set path(e255) {
        f(e255) && (e255 = p3(e255)), m1(e255, "path"), this.path !== e255 && this.history.push(e255);
    }
    get dirname() {
        return typeof this.path == "string" ? h1.dirname(this.path) : void 0;
    }
    set dirname(e256) {
        w1(this.basename, "dirname"), this.path = h1.join(e256 || "", this.basename);
    }
    get basename() {
        return typeof this.path == "string" ? h1.basename(this.path) : void 0;
    }
    set basename(e257) {
        m1(e257, "basename"), u1(e257, "basename"), this.path = h1.join(this.dirname || "", e257);
    }
    get extname() {
        return typeof this.path == "string" ? h1.extname(this.path) : void 0;
    }
    set extname(e258) {
        if (u1(e258, "extname"), w1(this.dirname, "extname"), e258) {
            if (e258.charCodeAt(0) !== 46) throw new Error("`extname` must start with `.`");
            if (e258.includes(".", 1)) throw new Error("`extname` cannot contain multiple dots");
        }
        this.path = h1.join(this.dirname, this.stem + (e258 || ""));
    }
    get stem() {
        return typeof this.path == "string" ? h1.basename(this.path, this.extname) : void 0;
    }
    set stem(e259) {
        m1(e259, "stem"), u1(e259, "stem"), this.path = h1.join(this.dirname || "", e259 + (this.extname || ""));
    }
    toString(e260) {
        return (this.value || "").toString(e260);
    }
    message(e261, t207, r107) {
        let i72 = new s2(e261, t207, r107);
        return this.path && (i72.name = this.path + ":" + i72.name, i72.file = this.path), i72.fatal = !1, this.messages.push(i72), i72;
    }
    info(e262, t208, r108) {
        let i73 = this.message(e262, t208, r108);
        return i73.fatal = null, i73;
    }
    fail(e263, t209, r109) {
        let i74 = this.message(e263, t209, r109);
        throw i74.fatal = !0, i74;
    }
};
function u1(n139, e264) {
    if (n139 && n139.includes(h1.sep)) throw new Error("`" + e264 + "` cannot be a path: did not expect `" + h1.sep + "`");
}
function m1(n140, e265) {
    if (!n140) throw new Error("`" + e265 + "` cannot be empty");
}
function w1(n141, e266) {
    if (!n141) throw new Error("Setting `" + e266 + "` requires `path` to be set too");
}
var G = j1().freeze(), T = {}.hasOwnProperty;
function j1() {
    let t210 = x2(), s39 = [], a56 = {}, m35, g42 = -1;
    return n142.data = I29, n142.Parser = void 0, n142.Compiler = void 0, n142.freeze = O21, n142.attachers = s39, n142.use = V13, n142.parse = F18, n142.stringify = N18, n142.run = L15, n142.runSync = B23, n142.process = U15, n142.processSync = D23, n142;
    function n142() {
        let e267 = j1(), r110 = -1;
        for(; ++r110 < s39.length;)e267.use(...s39[r110]);
        return e267.data(E(!0, {}, a56)), e267;
    }
    function I29(e268, r111) {
        return typeof e268 == "string" ? arguments.length === 2 ? (x4("data", m35), a56[e268] = r111, n142) : T.call(a56, e268) && a56[e268] || null : e268 ? (x4("data", m35), a56 = e268, n142) : a56;
    }
    function O21() {
        if (m35) return n142;
        for(; ++g42 < s39.length;){
            let [e269, ...r112] = s39[g42];
            if (r112[0] === !1) continue;
            r112[0] === !0 && (r112[1] = void 0);
            let o = e269.call(n142, ...r112);
            typeof o == "function" && t210.use(o);
        }
        return m35 = !0, g42 = Number.POSITIVE_INFINITY, n142;
    }
    function V13(e270, ...r113) {
        let o;
        if (x4("use", m35), e270 != null) if (typeof e270 == "function") y29(e270, ...r113);
        else if (typeof e270 == "object") Array.isArray(e270) ? d30(e270) : p57(e270);
        else throw new TypeError("Expected usable value, not `" + e270 + "`");
        return o && (a56.settings = Object.assign(a56.settings || {}, o)), n142;
        function u57(i75) {
            if (typeof i75 == "function") y29(i75);
            else if (typeof i75 == "object") if (Array.isArray(i75)) {
                let [f48, ...c36] = i75;
                y29(f48, ...c36);
            } else p57(i75);
            else throw new TypeError("Expected usable value, not `" + i75 + "`");
        }
        function p57(i76) {
            d30(i76.plugins), i76.settings && (o = Object.assign(o || {}, i76.settings));
        }
        function d30(i77) {
            let f49 = -1;
            if (i77 != null) if (Array.isArray(i77)) for(; ++f49 < i77.length;){
                let c37 = i77[f49];
                u57(c37);
            }
            else throw new TypeError("Expected a list of plugins, not `" + i77 + "`");
        }
        function y29(i78, f50) {
            let c38 = -1, l88;
            for(; ++c38 < s39.length;)if (s39[c38][0] === i78) {
                l88 = s39[c38];
                break;
            }
            l88 ? (o24(l88[1]) && o24(f50) && (f50 = E(!0, l88[1], f50)), l88[1] = f50) : s39.push([
                ...arguments
            ]);
        }
    }
    function F18(e271) {
        n142.freeze();
        let r114 = w2(e271), o = n142.Parser;
        return h2("parse", o), S2(o, "parse") ? new o(String(r114), r114).parse() : o(String(r114), r114);
    }
    function N18(e272, r115) {
        n142.freeze();
        let o = w2(r115), u58 = n142.Compiler;
        return P("stringify", u58), b3(e272), S2(u58, "compile") ? new u58(e272, o).compile() : u58(e272, o);
    }
    function L15(e273, r116, o) {
        if (b3(e273), n142.freeze(), !o && typeof r116 == "function" && (o = r116, r116 = void 0), !o) return new Promise(u59);
        u59(null, o);
        function u59(p58, d31) {
            t210.run(e273, w2(r116), y30);
            function y30(i79, f51, c39) {
                f51 = f51 || e273, i79 ? d31(i79) : p58 ? p58(f51) : o(null, f51, c39);
            }
        }
    }
    function B23(e274, r117) {
        let o, u60;
        return n142.run(e274, r117, p59), A2("runSync", "run", u60), o;
        function p59(d32, y31) {
            t(d32), o = y31, u60 = !0;
        }
    }
    function U15(e275, r118) {
        if (n142.freeze(), h2("process", n142.Parser), P("process", n142.Compiler), !r118) return new Promise(o);
        o(null, r118);
        function o(u61, p60) {
            let d33 = w2(e275);
            n142.run(n142.parse(d33), d33, (i80, f52, c40)=>{
                if (i80 || !f52 || !c40) y32(i80);
                else {
                    let l89 = n142.stringify(f52, c40);
                    l89 == null || (K(l89) ? c40.value = l89 : c40.result = l89), y32(i80, c40);
                }
            });
            function y32(i81, f53) {
                i81 || !f53 ? p60(i81) : u61 ? u61(f53) : r118(null, f53);
            }
        }
    }
    function D23(e276) {
        let r119;
        n142.freeze(), h2("processSync", n142.Parser), P("processSync", n142.Compiler);
        let o = w2(e276);
        return n142.process(o, u62), A2("processSync", "process", r119), o;
        function u62(p61) {
            r119 = !0, t(p61);
        }
    }
}
function S2(t211, s40) {
    return typeof t211 == "function" && t211.prototype && (H1(t211.prototype) || s40 in t211.prototype);
}
function H1(t212) {
    let s41;
    for(s41 in t212)if (T.call(t212, s41)) return !0;
    return !1;
}
function h2(t213, s42) {
    if (typeof s42 != "function") throw new TypeError("Cannot `" + t213 + "` without `Parser`");
}
function P(t214, s43) {
    if (typeof s43 != "function") throw new TypeError("Cannot `" + t214 + "` without `Compiler`");
}
function x4(t215, s44) {
    if (s44) throw new Error("Cannot call `" + t215 + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.");
}
function b3(t216) {
    if (!o24(t216) || typeof t216.type != "string") throw new TypeError("Expected node, got `" + t216 + "`");
}
function A2(t217, s45, a57) {
    if (!a57) throw new Error("`" + t217 + "` finished async. Use `" + s45 + "` instead");
}
function w2(t218) {
    return J(t218) ? t218 : new y2(t218);
}
function J(t219) {
    return Boolean(t219 && typeof t219 == "object" && "message" in t219 && "messages" in t219);
}
function K(t220) {
    return typeof t220 == "string" || v1(t220);
}
var ue = {
    3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
    5: "class enum extends super const export import",
    6: "enum",
    strict: "implements interface let package private protected public static yield",
    strictBind: "eval arguments"
}, oe = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this", rt = {
    5: oe,
    "5module": oe + " export import",
    6: oe + " const class extends export import super"
}, nt = /^in(stanceof)?$/, fe1 = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC", Ae1 = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F", ut = new RegExp("[" + fe1 + "]"), ot = new RegExp("[" + fe1 + Ae1 + "]");
fe1 = Ae1 = null;
var Ee1 = [
    0,
    11,
    2,
    25,
    2,
    18,
    2,
    1,
    2,
    14,
    3,
    13,
    35,
    122,
    70,
    52,
    268,
    28,
    4,
    48,
    48,
    31,
    14,
    29,
    6,
    37,
    11,
    29,
    3,
    35,
    5,
    7,
    2,
    4,
    43,
    157,
    19,
    35,
    5,
    35,
    5,
    39,
    9,
    51,
    13,
    10,
    2,
    14,
    2,
    6,
    2,
    1,
    2,
    10,
    2,
    14,
    2,
    6,
    2,
    1,
    68,
    310,
    10,
    21,
    11,
    7,
    25,
    5,
    2,
    41,
    2,
    8,
    70,
    5,
    3,
    0,
    2,
    43,
    2,
    1,
    4,
    0,
    3,
    22,
    11,
    22,
    10,
    30,
    66,
    18,
    2,
    1,
    11,
    21,
    11,
    25,
    71,
    55,
    7,
    1,
    65,
    0,
    16,
    3,
    2,
    2,
    2,
    28,
    43,
    28,
    4,
    28,
    36,
    7,
    2,
    27,
    28,
    53,
    11,
    21,
    11,
    18,
    14,
    17,
    111,
    72,
    56,
    50,
    14,
    50,
    14,
    35,
    349,
    41,
    7,
    1,
    79,
    28,
    11,
    0,
    9,
    21,
    43,
    17,
    47,
    20,
    28,
    22,
    13,
    52,
    58,
    1,
    3,
    0,
    14,
    44,
    33,
    24,
    27,
    35,
    30,
    0,
    3,
    0,
    9,
    34,
    4,
    0,
    13,
    47,
    15,
    3,
    22,
    0,
    2,
    0,
    36,
    17,
    2,
    24,
    85,
    6,
    2,
    0,
    2,
    3,
    2,
    14,
    2,
    9,
    8,
    46,
    39,
    7,
    3,
    1,
    3,
    21,
    2,
    6,
    2,
    1,
    2,
    4,
    4,
    0,
    19,
    0,
    13,
    4,
    159,
    52,
    19,
    3,
    21,
    2,
    31,
    47,
    21,
    1,
    2,
    0,
    185,
    46,
    42,
    3,
    37,
    47,
    21,
    0,
    60,
    42,
    14,
    0,
    72,
    26,
    38,
    6,
    186,
    43,
    117,
    63,
    32,
    7,
    3,
    0,
    3,
    7,
    2,
    1,
    2,
    23,
    16,
    0,
    2,
    0,
    95,
    7,
    3,
    38,
    17,
    0,
    2,
    0,
    29,
    0,
    11,
    39,
    8,
    0,
    22,
    0,
    12,
    45,
    20,
    0,
    19,
    72,
    264,
    8,
    2,
    36,
    18,
    0,
    50,
    29,
    113,
    6,
    2,
    1,
    2,
    37,
    22,
    0,
    26,
    5,
    2,
    1,
    2,
    31,
    15,
    0,
    328,
    18,
    190,
    0,
    80,
    921,
    103,
    110,
    18,
    195,
    2637,
    96,
    16,
    1070,
    4050,
    582,
    8634,
    568,
    8,
    30,
    18,
    78,
    18,
    29,
    19,
    47,
    17,
    3,
    32,
    20,
    6,
    18,
    689,
    63,
    129,
    74,
    6,
    0,
    67,
    12,
    65,
    1,
    2,
    0,
    29,
    6135,
    9,
    1237,
    43,
    8,
    8936,
    3,
    2,
    6,
    2,
    1,
    2,
    290,
    46,
    2,
    18,
    3,
    9,
    395,
    2309,
    106,
    6,
    12,
    4,
    8,
    8,
    9,
    5991,
    84,
    2,
    70,
    2,
    1,
    3,
    0,
    3,
    1,
    3,
    3,
    2,
    11,
    2,
    0,
    2,
    6,
    2,
    64,
    2,
    3,
    3,
    7,
    2,
    6,
    2,
    27,
    2,
    3,
    2,
    4,
    2,
    0,
    4,
    6,
    2,
    339,
    3,
    24,
    2,
    24,
    2,
    30,
    2,
    24,
    2,
    30,
    2,
    24,
    2,
    30,
    2,
    24,
    2,
    30,
    2,
    24,
    2,
    7,
    1845,
    30,
    482,
    44,
    11,
    6,
    17,
    0,
    322,
    29,
    19,
    43,
    1269,
    6,
    2,
    3,
    2,
    1,
    2,
    14,
    2,
    196,
    60,
    67,
    8,
    0,
    1205,
    3,
    2,
    26,
    2,
    1,
    2,
    0,
    3,
    0,
    2,
    9,
    2,
    3,
    2,
    0,
    2,
    0,
    7,
    0,
    5,
    0,
    2,
    0,
    2,
    0,
    2,
    2,
    2,
    1,
    2,
    0,
    3,
    0,
    2,
    0,
    2,
    0,
    2,
    0,
    2,
    0,
    2,
    1,
    2,
    0,
    3,
    3,
    2,
    6,
    2,
    3,
    2,
    3,
    2,
    0,
    2,
    9,
    2,
    16,
    6,
    2,
    2,
    4,
    2,
    16,
    4421,
    42719,
    33,
    4152,
    8,
    221,
    3,
    5761,
    15,
    7472,
    3104,
    541,
    1507,
    4938
], ht = [
    509,
    0,
    227,
    0,
    150,
    4,
    294,
    9,
    1368,
    2,
    2,
    1,
    6,
    3,
    41,
    2,
    5,
    0,
    166,
    1,
    574,
    3,
    9,
    9,
    370,
    1,
    154,
    10,
    50,
    3,
    123,
    2,
    54,
    14,
    32,
    10,
    3,
    1,
    11,
    3,
    46,
    10,
    8,
    0,
    46,
    9,
    7,
    2,
    37,
    13,
    2,
    9,
    6,
    1,
    45,
    0,
    13,
    2,
    49,
    13,
    9,
    3,
    2,
    11,
    83,
    11,
    7,
    0,
    161,
    11,
    6,
    9,
    7,
    3,
    56,
    1,
    2,
    6,
    3,
    1,
    3,
    2,
    10,
    0,
    11,
    1,
    3,
    6,
    4,
    4,
    193,
    17,
    10,
    9,
    5,
    0,
    82,
    19,
    13,
    9,
    214,
    6,
    3,
    8,
    28,
    1,
    83,
    16,
    16,
    9,
    82,
    12,
    9,
    9,
    84,
    14,
    5,
    9,
    243,
    14,
    166,
    9,
    71,
    5,
    2,
    1,
    3,
    3,
    2,
    0,
    2,
    1,
    13,
    9,
    120,
    6,
    3,
    6,
    4,
    0,
    29,
    9,
    41,
    6,
    2,
    3,
    9,
    0,
    10,
    10,
    47,
    15,
    406,
    7,
    2,
    7,
    17,
    9,
    57,
    21,
    2,
    13,
    123,
    5,
    4,
    0,
    2,
    1,
    2,
    6,
    2,
    0,
    9,
    9,
    49,
    4,
    2,
    1,
    2,
    4,
    9,
    9,
    330,
    3,
    19306,
    9,
    87,
    9,
    39,
    4,
    60,
    6,
    26,
    9,
    1014,
    0,
    2,
    54,
    8,
    3,
    82,
    0,
    12,
    1,
    19628,
    1,
    4706,
    45,
    3,
    22,
    543,
    4,
    4,
    5,
    9,
    7,
    3,
    6,
    31,
    3,
    149,
    2,
    1418,
    49,
    513,
    54,
    5,
    49,
    9,
    0,
    15,
    0,
    23,
    4,
    2,
    14,
    1361,
    6,
    2,
    16,
    3,
    6,
    2,
    1,
    2,
    4,
    262,
    6,
    10,
    9,
    357,
    0,
    62,
    13,
    1495,
    6,
    110,
    6,
    6,
    9,
    4759,
    9,
    787719,
    239
];
function ce(e277, t221) {
    for(var i82 = 65536, s46 = 0; s46 < t221.length; s46 += 2){
        if (i82 += t221[s46], i82 > e277) return !1;
        if (i82 += t221[s46 + 1], i82 >= e277) return !0;
    }
}
function V1(e278, t222) {
    return e278 < 65 ? e278 === 36 : e278 < 91 ? !0 : e278 < 97 ? e278 === 95 : e278 < 123 ? !0 : e278 <= 65535 ? e278 >= 170 && ut.test(String.fromCharCode(e278)) : t222 === !1 ? !1 : ce(e278, Ee1);
}
function D1(e279, t223) {
    return e279 < 48 ? e279 === 36 : e279 < 58 ? !0 : e279 < 65 ? !1 : e279 < 91 ? !0 : e279 < 97 ? e279 === 95 : e279 < 123 ? !0 : e279 <= 65535 ? e279 >= 170 && ot.test(String.fromCharCode(e279)) : t223 === !1 ? !1 : ce(e279, Ee1) || ce(e279, ht);
}
var v2 = function(t224, i83) {
    i83 === void 0 && (i83 = {}), this.label = t224, this.keyword = i83.keyword, this.beforeExpr = !!i83.beforeExpr, this.startsExpr = !!i83.startsExpr, this.isLoop = !!i83.isLoop, this.isAssign = !!i83.isAssign, this.prefix = !!i83.prefix, this.postfix = !!i83.postfix, this.binop = i83.binop || null, this.updateContext = null;
};
function C2(e280, t225) {
    return new v2(e280, {
        beforeExpr: !0,
        binop: t225
    });
}
var S3 = {
    beforeExpr: !0
}, _1 = {
    startsExpr: !0
}, de1 = {};
function m2(e281, t226) {
    return t226 === void 0 && (t226 = {}), t226.keyword = e281, de1[e281] = new v2(e281, t226);
}
var a3 = {
    num: new v2("num", _1),
    regexp: new v2("regexp", _1),
    string: new v2("string", _1),
    name: new v2("name", _1),
    privateId: new v2("privateId", _1),
    eof: new v2("eof"),
    bracketL: new v2("[", {
        beforeExpr: !0,
        startsExpr: !0
    }),
    bracketR: new v2("]"),
    braceL: new v2("{", {
        beforeExpr: !0,
        startsExpr: !0
    }),
    braceR: new v2("}"),
    parenL: new v2("(", {
        beforeExpr: !0,
        startsExpr: !0
    }),
    parenR: new v2(")"),
    comma: new v2(",", S3),
    semi: new v2(";", S3),
    colon: new v2(":", S3),
    dot: new v2("."),
    question: new v2("?", S3),
    questionDot: new v2("?."),
    arrow: new v2("=>", S3),
    template: new v2("template"),
    invalidTemplate: new v2("invalidTemplate"),
    ellipsis: new v2("...", S3),
    backQuote: new v2("`", _1),
    dollarBraceL: new v2("${", {
        beforeExpr: !0,
        startsExpr: !0
    }),
    eq: new v2("=", {
        beforeExpr: !0,
        isAssign: !0
    }),
    assign: new v2("_=", {
        beforeExpr: !0,
        isAssign: !0
    }),
    incDec: new v2("++/--", {
        prefix: !0,
        postfix: !0,
        startsExpr: !0
    }),
    prefix: new v2("!/~", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
    }),
    logicalOR: C2("||", 1),
    logicalAND: C2("&&", 2),
    bitwiseOR: C2("|", 3),
    bitwiseXOR: C2("^", 4),
    bitwiseAND: C2("&", 5),
    equality: C2("==/!=/===/!==", 6),
    relational: C2("</>/<=/>=", 7),
    bitShift: C2("<</>>/>>>", 8),
    plusMin: new v2("+/-", {
        beforeExpr: !0,
        binop: 9,
        prefix: !0,
        startsExpr: !0
    }),
    modulo: C2("%", 10),
    star: C2("*", 10),
    slash: C2("/", 10),
    starstar: new v2("**", {
        beforeExpr: !0
    }),
    coalesce: C2("??", 1),
    _break: m2("break"),
    _case: m2("case", S3),
    _catch: m2("catch"),
    _continue: m2("continue"),
    _debugger: m2("debugger"),
    _default: m2("default", S3),
    _do: m2("do", {
        isLoop: !0,
        beforeExpr: !0
    }),
    _else: m2("else", S3),
    _finally: m2("finally"),
    _for: m2("for", {
        isLoop: !0
    }),
    _function: m2("function", _1),
    _if: m2("if"),
    _return: m2("return", S3),
    _switch: m2("switch"),
    _throw: m2("throw", S3),
    _try: m2("try"),
    _var: m2("var"),
    _const: m2("const"),
    _while: m2("while", {
        isLoop: !0
    }),
    _with: m2("with"),
    _new: m2("new", {
        beforeExpr: !0,
        startsExpr: !0
    }),
    _this: m2("this", _1),
    _super: m2("super", _1),
    _class: m2("class", _1),
    _extends: m2("extends", S3),
    _export: m2("export"),
    _import: m2("import", _1),
    _null: m2("null", _1),
    _true: m2("true", _1),
    _false: m2("false", _1),
    _in: m2("in", {
        beforeExpr: !0,
        binop: 7
    }),
    _instanceof: m2("instanceof", {
        beforeExpr: !0,
        binop: 7
    }),
    _typeof: m2("typeof", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
    }),
    _void: m2("void", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
    }),
    _delete: m2("delete", {
        beforeExpr: !0,
        prefix: !0,
        startsExpr: !0
    })
}, A3 = /\r\n?|\n|\u2028|\u2029/, ct = new RegExp(A3.source, "g");
function U1(e282) {
    return e282 === 10 || e282 === 13 || e282 === 8232 || e282 === 8233;
}
function Ie1(e283, t227, i84) {
    i84 === void 0 && (i84 = e283.length);
    for(var s47 = t227; s47 < i84; s47++){
        var r120 = e283.charCodeAt(s47);
        if (U1(r120)) return s47 < i84 - 1 && r120 === 13 && e283.charCodeAt(s47 + 1) === 10 ? s47 + 2 : s47 + 1;
    }
    return -1;
}
var Pe1 = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/, w3 = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, Ne1 = Object.prototype, lt = Ne1.hasOwnProperty, pt = Ne1.toString, Q = Object.hasOwn || function(e284, t228) {
    return lt.call(e284, t228);
}, _e1 = Array.isArray || function(e285) {
    return pt.call(e285) === "[object Array]";
};
function B2(e286) {
    return new RegExp("^(?:" + e286.replace(/ /g, "|") + ")$");
}
var ft = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, W1 = function(t229, i85) {
    this.line = t229, this.column = i85;
};
W1.prototype.offset = function(t230) {
    return new W1(this.line, this.column + t230);
};
var ie1 = function(t231, i86, s48) {
    this.start = i86, this.end = s48, t231.sourceFile !== null && (this.source = t231.sourceFile);
};
function Ve1(e287, t232) {
    for(var i87 = 1, s49 = 0;;){
        var r121 = Ie1(e287, s49, t232);
        if (r121 < 0) return new W1(i87, t232 - s49);
        ++i87, s49 = r121;
    }
}
var le = {
    ecmaVersion: null,
    sourceType: "script",
    onInsertedSemicolon: null,
    onTrailingComma: null,
    allowReserved: null,
    allowReturnOutsideFunction: !1,
    allowImportExportEverywhere: !1,
    allowAwaitOutsideFunction: null,
    allowSuperOutsideMethod: null,
    allowHashBang: !1,
    locations: !1,
    onToken: null,
    onComment: null,
    ranges: !1,
    program: null,
    sourceFile: null,
    directSourceFile: null,
    preserveParens: !1
}, Ce1 = !1;
function dt(e288) {
    var t233 = {};
    for(var i88 in le)t233[i88] = e288 && Q(e288, i88) ? e288[i88] : le[i88];
    if (t233.ecmaVersion === "latest" ? t233.ecmaVersion = 1e8 : t233.ecmaVersion == null ? (!Ce1 && typeof console == "object" && console.warn && (Ce1 = !0, console.warn(`Since Acorn 8.0.0, options.ecmaVersion is required.
Defaulting to 2020, but this will stop working in the future.`)), t233.ecmaVersion = 11) : t233.ecmaVersion >= 2015 && (t233.ecmaVersion -= 2009), t233.allowReserved == null && (t233.allowReserved = t233.ecmaVersion < 5), _e1(t233.onToken)) {
        var s50 = t233.onToken;
        t233.onToken = function(r122) {
            return s50.push(r122);
        };
    }
    return _e1(t233.onComment) && (t233.onComment = xt(t233, t233.onComment)), t233;
}
function xt(e289, t234) {
    return function(i89, s51, r123, n143, u63, o) {
        var h39 = {
            type: i89 ? "Block" : "Line",
            value: s51,
            start: r123,
            end: n143
        };
        e289.locations && (h39.loc = new ie1(this, u63, o)), e289.ranges && (h39.range = [
            r123,
            n143
        ]), t234.push(h39);
    };
}
var z1 = 1, q2 = 2, xe1 = 4, Te1 = 8, Le1 = 16, Re1 = 32, me1 = 64, Be1 = 128, K1 = 256, ve1 = z1 | q2 | K1;
function ge1(e290, t235) {
    return q2 | (e290 ? xe1 : 0) | (t235 ? Te1 : 0);
}
var J1 = 0, be2 = 1, N1 = 2, Fe1 = 3, Oe1 = 4, Me1 = 5, b4 = function(t236, i90, s52) {
    this.options = t236 = dt(t236), this.sourceFile = t236.sourceFile, this.keywords = B2(rt[t236.ecmaVersion >= 6 ? 6 : t236.sourceType === "module" ? "5module" : 5]);
    var r124 = "";
    t236.allowReserved !== !0 && (r124 = ue[t236.ecmaVersion >= 6 ? 6 : t236.ecmaVersion === 5 ? 5 : 3], t236.sourceType === "module" && (r124 += " await")), this.reservedWords = B2(r124);
    var n144 = (r124 ? r124 + " " : "") + ue.strict;
    this.reservedWordsStrict = B2(n144), this.reservedWordsStrictBind = B2(n144 + " " + ue.strictBind), this.input = String(i90), this.containsEsc = !1, s52 ? (this.pos = s52, this.lineStart = this.input.lastIndexOf(`
`, s52 - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(A3).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = a3.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = t236.sourceType === "module", this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = Object.create(null), this.pos === 0 && t236.allowHashBang && this.input.slice(0, 2) === "#!" && this.skipLineComment(2), this.scopeStack = [], this.enterScope(z1), this.regexpState = null, this.privateNameStack = [];
}, P1 = {
    inFunction: {
        configurable: !0
    },
    inGenerator: {
        configurable: !0
    },
    inAsync: {
        configurable: !0
    },
    canAwait: {
        configurable: !0
    },
    allowSuper: {
        configurable: !0
    },
    allowDirectSuper: {
        configurable: !0
    },
    treatFunctionsAsVar: {
        configurable: !0
    },
    allowNewDotTarget: {
        configurable: !0
    },
    inClassStaticBlock: {
        configurable: !0
    }
};
b4.prototype.parse = function() {
    var t237 = this.options.program || this.startNode();
    return this.nextToken(), this.parseTopLevel(t237);
};
P1.inFunction.get = function() {
    return (this.currentVarScope().flags & q2) > 0;
};
P1.inGenerator.get = function() {
    return (this.currentVarScope().flags & Te1) > 0 && !this.currentVarScope().inClassFieldInit;
};
P1.inAsync.get = function() {
    return (this.currentVarScope().flags & xe1) > 0 && !this.currentVarScope().inClassFieldInit;
};
P1.canAwait.get = function() {
    for(var e291 = this.scopeStack.length - 1; e291 >= 0; e291--){
        var t238 = this.scopeStack[e291];
        if (t238.inClassFieldInit || t238.flags & K1) return !1;
        if (t238.flags & q2) return (t238.flags & xe1) > 0;
    }
    return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
};
P1.allowSuper.get = function() {
    var e292 = this.currentThisScope(), t239 = e292.flags, i91 = e292.inClassFieldInit;
    return (t239 & me1) > 0 || i91 || this.options.allowSuperOutsideMethod;
};
P1.allowDirectSuper.get = function() {
    return (this.currentThisScope().flags & Be1) > 0;
};
P1.treatFunctionsAsVar.get = function() {
    return this.treatFunctionsAsVarInScope(this.currentScope());
};
P1.allowNewDotTarget.get = function() {
    var e293 = this.currentThisScope(), t240 = e293.flags, i92 = e293.inClassFieldInit;
    return (t240 & (q2 | K1)) > 0 || i92;
};
P1.inClassStaticBlock.get = function() {
    return (this.currentVarScope().flags & K1) > 0;
};
b4.extend = function() {
    for(var t241 = [], i93 = arguments.length; i93--;)t241[i93] = arguments[i93];
    for(var s53 = this, r125 = 0; r125 < t241.length; r125++)s53 = t241[r125](s53);
    return s53;
};
b4.parse = function(t242, i94) {
    return new this(i94, t242).parse();
};
b4.parseExpressionAt = function(t243, i95, s54) {
    var r126 = new this(s54, t243, i95);
    return r126.nextToken(), r126.parseExpression();
};
b4.tokenizer = function(t244, i96) {
    return new this(i96, t244);
};
Object.defineProperties(b4.prototype, P1);
var k2 = b4.prototype, mt = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
k2.strictDirective = function(e294) {
    for(;;){
        w3.lastIndex = e294, e294 += w3.exec(this.input)[0].length;
        var t245 = mt.exec(this.input.slice(e294));
        if (!t245) return !1;
        if ((t245[1] || t245[2]) === "use strict") {
            w3.lastIndex = e294 + t245[0].length;
            var i97 = w3.exec(this.input), s55 = i97.index + i97[0].length, r127 = this.input.charAt(s55);
            return r127 === ";" || r127 === "}" || A3.test(i97[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(r127) || r127 === "!" && this.input.charAt(s55 + 1) === "=");
        }
        e294 += t245[0].length, w3.lastIndex = e294, e294 += w3.exec(this.input)[0].length, this.input[e294] === ";" && e294++;
    }
};
k2.eat = function(e295) {
    return this.type === e295 ? (this.next(), !0) : !1;
};
k2.isContextual = function(e296) {
    return this.type === a3.name && this.value === e296 && !this.containsEsc;
};
k2.eatContextual = function(e297) {
    return this.isContextual(e297) ? (this.next(), !0) : !1;
};
k2.expectContextual = function(e298) {
    this.eatContextual(e298) || this.unexpected();
};
k2.canInsertSemicolon = function() {
    return this.type === a3.eof || this.type === a3.braceR || A3.test(this.input.slice(this.lastTokEnd, this.start));
};
k2.insertSemicolon = function() {
    if (this.canInsertSemicolon()) return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;
};
k2.semicolon = function() {
    !this.eat(a3.semi) && !this.insertSemicolon() && this.unexpected();
};
k2.afterTrailingComma = function(e299, t246) {
    if (this.type === e299) return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), t246 || this.next(), !0;
};
k2.expect = function(e300) {
    this.eat(e300) || this.unexpected();
};
k2.unexpected = function(e301) {
    this.raise(e301 ?? this.start, "Unexpected token");
};
function se() {
    this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
}
k2.checkPatternErrors = function(e302, t247) {
    if (!!e302) {
        e302.trailingComma > -1 && this.raiseRecoverable(e302.trailingComma, "Comma is not permitted after the rest element");
        var i98 = t247 ? e302.parenthesizedAssign : e302.parenthesizedBind;
        i98 > -1 && this.raiseRecoverable(i98, "Parenthesized pattern");
    }
};
k2.checkExpressionErrors = function(e303, t248) {
    if (!e303) return !1;
    var i99 = e303.shorthandAssign, s56 = e303.doubleProto;
    if (!t248) return i99 >= 0 || s56 >= 0;
    i99 >= 0 && this.raise(i99, "Shorthand property assignments are valid only in destructuring patterns"), s56 >= 0 && this.raiseRecoverable(s56, "Redefinition of __proto__ property");
};
k2.checkYieldAwaitInDefaultParams = function() {
    this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
};
k2.isSimpleAssignTarget = function(e304) {
    return e304.type === "ParenthesizedExpression" ? this.isSimpleAssignTarget(e304.expression) : e304.type === "Identifier" || e304.type === "MemberExpression";
};
var l = b4.prototype;
l.parseTopLevel = function(e305) {
    var t249 = Object.create(null);
    for(e305.body || (e305.body = []); this.type !== a3.eof;){
        var i100 = this.parseStatement(null, !0, t249);
        e305.body.push(i100);
    }
    if (this.inModule) for(var s57 = 0, r128 = Object.keys(this.undefinedExports); s57 < r128.length; s57 += 1){
        var n145 = r128[s57];
        this.raiseRecoverable(this.undefinedExports[n145].start, "Export '" + n145 + "' is not defined");
    }
    return this.adaptDirectivePrologue(e305.body), this.next(), e305.sourceType = this.options.sourceType, this.finishNode(e305, "Program");
};
var ye1 = {
    kind: "loop"
}, vt = {
    kind: "switch"
};
l.isLet = function(e306) {
    if (this.options.ecmaVersion < 6 || !this.isContextual("let")) return !1;
    w3.lastIndex = this.pos;
    var t250 = w3.exec(this.input), i101 = this.pos + t250[0].length, s58 = this.input.charCodeAt(i101);
    if (s58 === 91 || s58 === 92 || s58 > 55295 && s58 < 56320) return !0;
    if (e306) return !1;
    if (s58 === 123) return !0;
    if (V1(s58, !0)) {
        for(var r129 = i101 + 1; D1(s58 = this.input.charCodeAt(r129), !0);)++r129;
        if (s58 === 92 || s58 > 55295 && s58 < 56320) return !0;
        var n146 = this.input.slice(i101, r129);
        if (!nt.test(n146)) return !0;
    }
    return !1;
};
l.isAsyncFunction = function() {
    if (this.options.ecmaVersion < 8 || !this.isContextual("async")) return !1;
    w3.lastIndex = this.pos;
    var e307 = w3.exec(this.input), t251 = this.pos + e307[0].length, i102;
    return !A3.test(this.input.slice(this.pos, t251)) && this.input.slice(t251, t251 + 8) === "function" && (t251 + 8 === this.input.length || !(D1(i102 = this.input.charCodeAt(t251 + 8)) || i102 > 55295 && i102 < 56320));
};
l.parseStatement = function(e308, t252, i103) {
    var s59 = this.type, r130 = this.startNode(), n147;
    switch(this.isLet(e308) && (s59 = a3._var, n147 = "let"), s59){
        case a3._break:
        case a3._continue:
            return this.parseBreakContinueStatement(r130, s59.keyword);
        case a3._debugger:
            return this.parseDebuggerStatement(r130);
        case a3._do:
            return this.parseDoStatement(r130);
        case a3._for:
            return this.parseForStatement(r130);
        case a3._function:
            return e308 && (this.strict || e308 !== "if" && e308 !== "label") && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(r130, !1, !e308);
        case a3._class:
            return e308 && this.unexpected(), this.parseClass(r130, !0);
        case a3._if:
            return this.parseIfStatement(r130);
        case a3._return:
            return this.parseReturnStatement(r130);
        case a3._switch:
            return this.parseSwitchStatement(r130);
        case a3._throw:
            return this.parseThrowStatement(r130);
        case a3._try:
            return this.parseTryStatement(r130);
        case a3._const:
        case a3._var:
            return n147 = n147 || this.value, e308 && n147 !== "var" && this.unexpected(), this.parseVarStatement(r130, n147);
        case a3._while:
            return this.parseWhileStatement(r130);
        case a3._with:
            return this.parseWithStatement(r130);
        case a3.braceL:
            return this.parseBlock(!0, r130);
        case a3.semi:
            return this.parseEmptyStatement(r130);
        case a3._export:
        case a3._import:
            if (this.options.ecmaVersion > 10 && s59 === a3._import) {
                w3.lastIndex = this.pos;
                var u64 = w3.exec(this.input), o = this.pos + u64[0].length, h40 = this.input.charCodeAt(o);
                if (h40 === 40 || h40 === 46) return this.parseExpressionStatement(r130, this.parseExpression());
            }
            return this.options.allowImportExportEverywhere || (t252 || this.raise(this.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), s59 === a3._import ? this.parseImport(r130) : this.parseExport(r130, i103);
        default:
            if (this.isAsyncFunction()) return e308 && this.unexpected(), this.next(), this.parseFunctionStatement(r130, !0, !e308);
            var p62 = this.value, d34 = this.parseExpression();
            return s59 === a3.name && d34.type === "Identifier" && this.eat(a3.colon) ? this.parseLabeledStatement(r130, p62, d34, e308) : this.parseExpressionStatement(r130, d34);
    }
};
l.parseBreakContinueStatement = function(e309, t253) {
    var i104 = t253 === "break";
    this.next(), this.eat(a3.semi) || this.insertSemicolon() ? e309.label = null : this.type !== a3.name ? this.unexpected() : (e309.label = this.parseIdent(), this.semicolon());
    for(var s60 = 0; s60 < this.labels.length; ++s60){
        var r131 = this.labels[s60];
        if ((e309.label == null || r131.name === e309.label.name) && (r131.kind != null && (i104 || r131.kind === "loop") || e309.label && i104)) break;
    }
    return s60 === this.labels.length && this.raise(e309.start, "Unsyntactic " + t253), this.finishNode(e309, i104 ? "BreakStatement" : "ContinueStatement");
};
l.parseDebuggerStatement = function(e310) {
    return this.next(), this.semicolon(), this.finishNode(e310, "DebuggerStatement");
};
l.parseDoStatement = function(e311) {
    return this.next(), this.labels.push(ye1), e311.body = this.parseStatement("do"), this.labels.pop(), this.expect(a3._while), e311.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(a3.semi) : this.semicolon(), this.finishNode(e311, "DoWhileStatement");
};
l.parseForStatement = function(e312) {
    this.next();
    var t254 = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
    if (this.labels.push(ye1), this.enterScope(0), this.expect(a3.parenL), this.type === a3.semi) return t254 > -1 && this.unexpected(t254), this.parseFor(e312, null);
    var i105 = this.isLet();
    if (this.type === a3._var || this.type === a3._const || i105) {
        var s61 = this.startNode(), r132 = i105 ? "let" : this.value;
        return this.next(), this.parseVar(s61, !0, r132), this.finishNode(s61, "VariableDeclaration"), (this.type === a3._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && s61.declarations.length === 1 ? (this.options.ecmaVersion >= 9 && (this.type === a3._in ? t254 > -1 && this.unexpected(t254) : e312.await = t254 > -1), this.parseForIn(e312, s61)) : (t254 > -1 && this.unexpected(t254), this.parseFor(e312, s61));
    }
    var n148 = this.isContextual("let"), u65 = !1, o = new se, h41 = this.parseExpression(t254 > -1 ? "await" : !0, o);
    return this.type === a3._in || (u65 = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (this.options.ecmaVersion >= 9 && (this.type === a3._in ? t254 > -1 && this.unexpected(t254) : e312.await = t254 > -1), n148 && u65 && this.raise(h41.start, "The left-hand side of a for-of loop may not start with 'let'."), this.toAssignable(h41, !1, o), this.checkLValPattern(h41), this.parseForIn(e312, h41)) : (this.checkExpressionErrors(o, !0), t254 > -1 && this.unexpected(t254), this.parseFor(e312, h41));
};
l.parseFunctionStatement = function(e313, t255, i106) {
    return this.next(), this.parseFunction(e313, j2 | (i106 ? 0 : pe), !1, t255);
};
l.parseIfStatement = function(e314) {
    return this.next(), e314.test = this.parseParenExpression(), e314.consequent = this.parseStatement("if"), e314.alternate = this.eat(a3._else) ? this.parseStatement("if") : null, this.finishNode(e314, "IfStatement");
};
l.parseReturnStatement = function(e315) {
    return !this.inFunction && !this.options.allowReturnOutsideFunction && this.raise(this.start, "'return' outside of function"), this.next(), this.eat(a3.semi) || this.insertSemicolon() ? e315.argument = null : (e315.argument = this.parseExpression(), this.semicolon()), this.finishNode(e315, "ReturnStatement");
};
l.parseSwitchStatement = function(e316) {
    this.next(), e316.discriminant = this.parseParenExpression(), e316.cases = [], this.expect(a3.braceL), this.labels.push(vt), this.enterScope(0);
    for(var t256, i107 = !1; this.type !== a3.braceR;)if (this.type === a3._case || this.type === a3._default) {
        var s62 = this.type === a3._case;
        t256 && this.finishNode(t256, "SwitchCase"), e316.cases.push(t256 = this.startNode()), t256.consequent = [], this.next(), s62 ? t256.test = this.parseExpression() : (i107 && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), i107 = !0, t256.test = null), this.expect(a3.colon);
    } else t256 || this.unexpected(), t256.consequent.push(this.parseStatement(null));
    return this.exitScope(), t256 && this.finishNode(t256, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(e316, "SwitchStatement");
};
l.parseThrowStatement = function(e317) {
    return this.next(), A3.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), e317.argument = this.parseExpression(), this.semicolon(), this.finishNode(e317, "ThrowStatement");
};
var gt = [];
l.parseTryStatement = function(e318) {
    if (this.next(), e318.block = this.parseBlock(), e318.handler = null, this.type === a3._catch) {
        var t257 = this.startNode();
        if (this.next(), this.eat(a3.parenL)) {
            t257.param = this.parseBindingAtom();
            var i108 = t257.param.type === "Identifier";
            this.enterScope(i108 ? Re1 : 0), this.checkLValPattern(t257.param, i108 ? Oe1 : N1), this.expect(a3.parenR);
        } else this.options.ecmaVersion < 10 && this.unexpected(), t257.param = null, this.enterScope(0);
        t257.body = this.parseBlock(!1), this.exitScope(), e318.handler = this.finishNode(t257, "CatchClause");
    }
    return e318.finalizer = this.eat(a3._finally) ? this.parseBlock() : null, !e318.handler && !e318.finalizer && this.raise(e318.start, "Missing catch or finally clause"), this.finishNode(e318, "TryStatement");
};
l.parseVarStatement = function(e319, t258) {
    return this.next(), this.parseVar(e319, !1, t258), this.semicolon(), this.finishNode(e319, "VariableDeclaration");
};
l.parseWhileStatement = function(e320) {
    return this.next(), e320.test = this.parseParenExpression(), this.labels.push(ye1), e320.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(e320, "WhileStatement");
};
l.parseWithStatement = function(e321) {
    return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), e321.object = this.parseParenExpression(), e321.body = this.parseStatement("with"), this.finishNode(e321, "WithStatement");
};
l.parseEmptyStatement = function(e322) {
    return this.next(), this.finishNode(e322, "EmptyStatement");
};
l.parseLabeledStatement = function(e323, t259, i109, s63) {
    for(var r133 = 0, n149 = this.labels; r133 < n149.length; r133 += 1){
        var u66 = n149[r133];
        u66.name === t259 && this.raise(i109.start, "Label '" + t259 + "' is already declared");
    }
    for(var o = this.type.isLoop ? "loop" : this.type === a3._switch ? "switch" : null, h42 = this.labels.length - 1; h42 >= 0; h42--){
        var p63 = this.labels[h42];
        if (p63.statementStart === e323.start) p63.statementStart = this.start, p63.kind = o;
        else break;
    }
    return this.labels.push({
        name: t259,
        kind: o,
        statementStart: this.start
    }), e323.body = this.parseStatement(s63 ? s63.indexOf("label") === -1 ? s63 + "label" : s63 : "label"), this.labels.pop(), e323.label = i109, this.finishNode(e323, "LabeledStatement");
};
l.parseExpressionStatement = function(e324, t260) {
    return e324.expression = t260, this.semicolon(), this.finishNode(e324, "ExpressionStatement");
};
l.parseBlock = function(e325, t261, i110) {
    for(e325 === void 0 && (e325 = !0), t261 === void 0 && (t261 = this.startNode()), t261.body = [], this.expect(a3.braceL), e325 && this.enterScope(0); this.type !== a3.braceR;){
        var s64 = this.parseStatement(null);
        t261.body.push(s64);
    }
    return i110 && (this.strict = !1), this.next(), e325 && this.exitScope(), this.finishNode(t261, "BlockStatement");
};
l.parseFor = function(e326, t262) {
    return e326.init = t262, this.expect(a3.semi), e326.test = this.type === a3.semi ? null : this.parseExpression(), this.expect(a3.semi), e326.update = this.type === a3.parenR ? null : this.parseExpression(), this.expect(a3.parenR), e326.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(e326, "ForStatement");
};
l.parseForIn = function(e327, t263) {
    var i111 = this.type === a3._in;
    return this.next(), t263.type === "VariableDeclaration" && t263.declarations[0].init != null && (!i111 || this.options.ecmaVersion < 8 || this.strict || t263.kind !== "var" || t263.declarations[0].id.type !== "Identifier") && this.raise(t263.start, (i111 ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"), e327.left = t263, e327.right = i111 ? this.parseExpression() : this.parseMaybeAssign(), this.expect(a3.parenR), e327.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(e327, i111 ? "ForInStatement" : "ForOfStatement");
};
l.parseVar = function(e328, t264, i112) {
    for(e328.declarations = [], e328.kind = i112;;){
        var s65 = this.startNode();
        if (this.parseVarId(s65, i112), this.eat(a3.eq) ? s65.init = this.parseMaybeAssign(t264) : i112 === "const" && !(this.type === a3._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) ? this.unexpected() : s65.id.type !== "Identifier" && !(t264 && (this.type === a3._in || this.isContextual("of"))) ? this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : s65.init = null, e328.declarations.push(this.finishNode(s65, "VariableDeclarator")), !this.eat(a3.comma)) break;
    }
    return e328;
};
l.parseVarId = function(e329, t265) {
    e329.id = this.parseBindingAtom(), this.checkLValPattern(e329.id, t265 === "var" ? be2 : N1, !1);
};
var j2 = 1, pe = 2, De1 = 4;
l.parseFunction = function(e330, t266, i113, s66, r134) {
    this.initFunction(e330), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !s66) && (this.type === a3.star && t266 & pe && this.unexpected(), e330.generator = this.eat(a3.star)), this.options.ecmaVersion >= 8 && (e330.async = !!s66), t266 & j2 && (e330.id = t266 & De1 && this.type !== a3.name ? null : this.parseIdent(), e330.id && !(t266 & pe) && this.checkLValSimple(e330.id, this.strict || e330.generator || e330.async ? this.treatFunctionsAsVar ? be2 : N1 : Fe1));
    var n150 = this.yieldPos, u67 = this.awaitPos, o = this.awaitIdentPos;
    return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(ge1(e330.async, e330.generator)), t266 & j2 || (e330.id = this.type === a3.name ? this.parseIdent() : null), this.parseFunctionParams(e330), this.parseFunctionBody(e330, i113, !1, r134), this.yieldPos = n150, this.awaitPos = u67, this.awaitIdentPos = o, this.finishNode(e330, t266 & j2 ? "FunctionDeclaration" : "FunctionExpression");
};
l.parseFunctionParams = function(e331) {
    this.expect(a3.parenL), e331.params = this.parseBindingList(a3.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
};
l.parseClass = function(e332, t267) {
    this.next();
    var i114 = this.strict;
    this.strict = !0, this.parseClassId(e332, t267), this.parseClassSuper(e332);
    var s67 = this.enterClassBody(), r135 = this.startNode(), n151 = !1;
    for(r135.body = [], this.expect(a3.braceL); this.type !== a3.braceR;){
        var u68 = this.parseClassElement(e332.superClass !== null);
        u68 && (r135.body.push(u68), u68.type === "MethodDefinition" && u68.kind === "constructor" ? (n151 && this.raise(u68.start, "Duplicate constructor in the same class"), n151 = !0) : u68.key && u68.key.type === "PrivateIdentifier" && bt(s67, u68) && this.raiseRecoverable(u68.key.start, "Identifier '#" + u68.key.name + "' has already been declared"));
    }
    return this.strict = i114, this.next(), e332.body = this.finishNode(r135, "ClassBody"), this.exitClassBody(), this.finishNode(e332, t267 ? "ClassDeclaration" : "ClassExpression");
};
l.parseClassElement = function(e333) {
    if (this.eat(a3.semi)) return null;
    var t268 = this.options.ecmaVersion, i115 = this.startNode(), s68 = "", r136 = !1, n152 = !1, u69 = "method", o = !1;
    if (this.eatContextual("static")) {
        if (t268 >= 13 && this.eat(a3.braceL)) return this.parseClassStaticBlock(i115), i115;
        this.isClassElementNameStart() || this.type === a3.star ? o = !0 : s68 = "static";
    }
    if (i115.static = o, !s68 && t268 >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === a3.star) && !this.canInsertSemicolon() ? n152 = !0 : s68 = "async"), !s68 && (t268 >= 9 || !n152) && this.eat(a3.star) && (r136 = !0), !s68 && !n152 && !r136) {
        var h43 = this.value;
        (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? u69 = h43 : s68 = h43);
    }
    if (s68 ? (i115.computed = !1, i115.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), i115.key.name = s68, this.finishNode(i115.key, "Identifier")) : this.parseClassElementName(i115), t268 < 13 || this.type === a3.parenL || u69 !== "method" || r136 || n152) {
        var p64 = !i115.static && $2(i115, "constructor"), d35 = p64 && e333;
        p64 && u69 !== "method" && this.raise(i115.key.start, "Constructor can't have get/set modifier"), i115.kind = p64 ? "constructor" : u69, this.parseClassMethod(i115, r136, n152, d35);
    } else this.parseClassField(i115);
    return i115;
};
l.isClassElementNameStart = function() {
    return this.type === a3.name || this.type === a3.privateId || this.type === a3.num || this.type === a3.string || this.type === a3.bracketL || this.type.keyword;
};
l.parseClassElementName = function(e334) {
    this.type === a3.privateId ? (this.value === "constructor" && this.raise(this.start, "Classes can't have an element named '#constructor'"), e334.computed = !1, e334.key = this.parsePrivateIdent()) : this.parsePropertyName(e334);
};
l.parseClassMethod = function(e335, t269, i116, s69) {
    var r137 = e335.key;
    e335.kind === "constructor" ? (t269 && this.raise(r137.start, "Constructor can't be a generator"), i116 && this.raise(r137.start, "Constructor can't be an async method")) : e335.static && $2(e335, "prototype") && this.raise(r137.start, "Classes may not have a static property named prototype");
    var n153 = e335.value = this.parseMethod(t269, i116, s69);
    return e335.kind === "get" && n153.params.length !== 0 && this.raiseRecoverable(n153.start, "getter should have no params"), e335.kind === "set" && n153.params.length !== 1 && this.raiseRecoverable(n153.start, "setter should have exactly one param"), e335.kind === "set" && n153.params[0].type === "RestElement" && this.raiseRecoverable(n153.params[0].start, "Setter cannot use rest params"), this.finishNode(e335, "MethodDefinition");
};
l.parseClassField = function(e336) {
    if ($2(e336, "constructor") ? this.raise(e336.key.start, "Classes can't have a field named 'constructor'") : e336.static && $2(e336, "prototype") && this.raise(e336.key.start, "Classes can't have a static field named 'prototype'"), this.eat(a3.eq)) {
        var t270 = this.currentThisScope(), i117 = t270.inClassFieldInit;
        t270.inClassFieldInit = !0, e336.value = this.parseMaybeAssign(), t270.inClassFieldInit = i117;
    } else e336.value = null;
    return this.semicolon(), this.finishNode(e336, "PropertyDefinition");
};
l.parseClassStaticBlock = function(e337) {
    e337.body = [];
    var t271 = this.labels;
    for(this.labels = [], this.enterScope(K1 | me1); this.type !== a3.braceR;){
        var i118 = this.parseStatement(null);
        e337.body.push(i118);
    }
    return this.next(), this.exitScope(), this.labels = t271, this.finishNode(e337, "StaticBlock");
};
l.parseClassId = function(e338, t272) {
    this.type === a3.name ? (e338.id = this.parseIdent(), t272 && this.checkLValSimple(e338.id, N1, !1)) : (t272 === !0 && this.unexpected(), e338.id = null);
};
l.parseClassSuper = function(e339) {
    e339.superClass = this.eat(a3._extends) ? this.parseExprSubscripts(!1) : null;
};
l.enterClassBody = function() {
    var e340 = {
        declared: Object.create(null),
        used: []
    };
    return this.privateNameStack.push(e340), e340.declared;
};
l.exitClassBody = function() {
    for(var e341 = this.privateNameStack.pop(), t273 = e341.declared, i119 = e341.used, s70 = this.privateNameStack.length, r138 = s70 === 0 ? null : this.privateNameStack[s70 - 1], n154 = 0; n154 < i119.length; ++n154){
        var u70 = i119[n154];
        Q(t273, u70.name) || (r138 ? r138.used.push(u70) : this.raiseRecoverable(u70.start, "Private field '#" + u70.name + "' must be declared in an enclosing class"));
    }
};
function bt(e342, t274) {
    var i120 = t274.key.name, s71 = e342[i120], r139 = "true";
    return t274.type === "MethodDefinition" && (t274.kind === "get" || t274.kind === "set") && (r139 = (t274.static ? "s" : "i") + t274.kind), s71 === "iget" && r139 === "iset" || s71 === "iset" && r139 === "iget" || s71 === "sget" && r139 === "sset" || s71 === "sset" && r139 === "sget" ? (e342[i120] = "true", !1) : s71 ? !0 : (e342[i120] = r139, !1);
}
function $2(e343, t275) {
    var i121 = e343.computed, s72 = e343.key;
    return !i121 && (s72.type === "Identifier" && s72.name === t275 || s72.type === "Literal" && s72.value === t275);
}
l.parseExport = function(e344, t276) {
    if (this.next(), this.eat(a3.star)) return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (e344.exported = this.parseModuleExportName(), this.checkExport(t276, e344.exported.name, this.lastTokStart)) : e344.exported = null), this.expectContextual("from"), this.type !== a3.string && this.unexpected(), e344.source = this.parseExprAtom(), this.semicolon(), this.finishNode(e344, "ExportAllDeclaration");
    if (this.eat(a3._default)) {
        this.checkExport(t276, "default", this.lastTokStart);
        var i122;
        if (this.type === a3._function || (i122 = this.isAsyncFunction())) {
            var s73 = this.startNode();
            this.next(), i122 && this.next(), e344.declaration = this.parseFunction(s73, j2 | De1, !1, i122);
        } else if (this.type === a3._class) {
            var r140 = this.startNode();
            e344.declaration = this.parseClass(r140, "nullableID");
        } else e344.declaration = this.parseMaybeAssign(), this.semicolon();
        return this.finishNode(e344, "ExportDefaultDeclaration");
    }
    if (this.shouldParseExportStatement()) e344.declaration = this.parseStatement(null), e344.declaration.type === "VariableDeclaration" ? this.checkVariableExport(t276, e344.declaration.declarations) : this.checkExport(t276, e344.declaration.id.name, e344.declaration.id.start), e344.specifiers = [], e344.source = null;
    else {
        if (e344.declaration = null, e344.specifiers = this.parseExportSpecifiers(t276), this.eatContextual("from")) this.type !== a3.string && this.unexpected(), e344.source = this.parseExprAtom();
        else {
            for(var n155 = 0, u71 = e344.specifiers; n155 < u71.length; n155 += 1){
                var o = u71[n155];
                this.checkUnreserved(o.local), this.checkLocalExport(o.local), o.local.type === "Literal" && this.raise(o.local.start, "A string literal cannot be used as an exported binding without `from`.");
            }
            e344.source = null;
        }
        this.semicolon();
    }
    return this.finishNode(e344, "ExportNamedDeclaration");
};
l.checkExport = function(e345, t277, i123) {
    !e345 || (Q(e345, t277) && this.raiseRecoverable(i123, "Duplicate export '" + t277 + "'"), e345[t277] = !0);
};
l.checkPatternExport = function(e346, t278) {
    var i124 = t278.type;
    if (i124 === "Identifier") this.checkExport(e346, t278.name, t278.start);
    else if (i124 === "ObjectPattern") for(var s74 = 0, r141 = t278.properties; s74 < r141.length; s74 += 1){
        var n156 = r141[s74];
        this.checkPatternExport(e346, n156);
    }
    else if (i124 === "ArrayPattern") for(var u72 = 0, o = t278.elements; u72 < o.length; u72 += 1){
        var h44 = o[u72];
        h44 && this.checkPatternExport(e346, h44);
    }
    else i124 === "Property" ? this.checkPatternExport(e346, t278.value) : i124 === "AssignmentPattern" ? this.checkPatternExport(e346, t278.left) : i124 === "RestElement" ? this.checkPatternExport(e346, t278.argument) : i124 === "ParenthesizedExpression" && this.checkPatternExport(e346, t278.expression);
};
l.checkVariableExport = function(e347, t279) {
    if (!!e347) for(var i125 = 0, s75 = t279; i125 < s75.length; i125 += 1){
        var r142 = s75[i125];
        this.checkPatternExport(e347, r142.id);
    }
};
l.shouldParseExportStatement = function() {
    return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
};
l.parseExportSpecifiers = function(e348) {
    var t280 = [], i126 = !0;
    for(this.expect(a3.braceL); !this.eat(a3.braceR);){
        if (i126) i126 = !1;
        else if (this.expect(a3.comma), this.afterTrailingComma(a3.braceR)) break;
        var s76 = this.startNode();
        s76.local = this.parseModuleExportName(), s76.exported = this.eatContextual("as") ? this.parseModuleExportName() : s76.local, this.checkExport(e348, s76.exported[s76.exported.type === "Identifier" ? "name" : "value"], s76.exported.start), t280.push(this.finishNode(s76, "ExportSpecifier"));
    }
    return t280;
};
l.parseImport = function(e349) {
    return this.next(), this.type === a3.string ? (e349.specifiers = gt, e349.source = this.parseExprAtom()) : (e349.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), e349.source = this.type === a3.string ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(e349, "ImportDeclaration");
};
l.parseImportSpecifiers = function() {
    var e350 = [], t281 = !0;
    if (this.type === a3.name) {
        var i127 = this.startNode();
        if (i127.local = this.parseIdent(), this.checkLValSimple(i127.local, N1), e350.push(this.finishNode(i127, "ImportDefaultSpecifier")), !this.eat(a3.comma)) return e350;
    }
    if (this.type === a3.star) {
        var s77 = this.startNode();
        return this.next(), this.expectContextual("as"), s77.local = this.parseIdent(), this.checkLValSimple(s77.local, N1), e350.push(this.finishNode(s77, "ImportNamespaceSpecifier")), e350;
    }
    for(this.expect(a3.braceL); !this.eat(a3.braceR);){
        if (t281) t281 = !1;
        else if (this.expect(a3.comma), this.afterTrailingComma(a3.braceR)) break;
        var r143 = this.startNode();
        r143.imported = this.parseModuleExportName(), this.eatContextual("as") ? r143.local = this.parseIdent() : (this.checkUnreserved(r143.imported), r143.local = r143.imported), this.checkLValSimple(r143.local, N1), e350.push(this.finishNode(r143, "ImportSpecifier"));
    }
    return e350;
};
l.parseModuleExportName = function() {
    if (this.options.ecmaVersion >= 13 && this.type === a3.string) {
        var e351 = this.parseLiteral(this.value);
        return ft.test(e351.value) && this.raise(e351.start, "An export name cannot include a lone surrogate."), e351;
    }
    return this.parseIdent(!0);
};
l.adaptDirectivePrologue = function(e352) {
    for(var t282 = 0; t282 < e352.length && this.isDirectiveCandidate(e352[t282]); ++t282)e352[t282].directive = e352[t282].expression.raw.slice(1, -1);
};
l.isDirectiveCandidate = function(e353) {
    return e353.type === "ExpressionStatement" && e353.expression.type === "Literal" && typeof e353.expression.value == "string" && (this.input[e353.start] === '"' || this.input[e353.start] === "'");
};
var I2 = b4.prototype;
I2.toAssignable = function(e354, t283, i128) {
    if (this.options.ecmaVersion >= 6 && e354) switch(e354.type){
        case "Identifier":
            this.inAsync && e354.name === "await" && this.raise(e354.start, "Cannot use 'await' as identifier inside an async function");
            break;
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
        case "RestElement":
            break;
        case "ObjectExpression":
            e354.type = "ObjectPattern", i128 && this.checkPatternErrors(i128, !0);
            for(var s78 = 0, r144 = e354.properties; s78 < r144.length; s78 += 1){
                var n157 = r144[s78];
                this.toAssignable(n157, t283), n157.type === "RestElement" && (n157.argument.type === "ArrayPattern" || n157.argument.type === "ObjectPattern") && this.raise(n157.argument.start, "Unexpected token");
            }
            break;
        case "Property":
            e354.kind !== "init" && this.raise(e354.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(e354.value, t283);
            break;
        case "ArrayExpression":
            e354.type = "ArrayPattern", i128 && this.checkPatternErrors(i128, !0), this.toAssignableList(e354.elements, t283);
            break;
        case "SpreadElement":
            e354.type = "RestElement", this.toAssignable(e354.argument, t283), e354.argument.type === "AssignmentPattern" && this.raise(e354.argument.start, "Rest elements cannot have a default value");
            break;
        case "AssignmentExpression":
            e354.operator !== "=" && this.raise(e354.left.end, "Only '=' operator can be used for specifying default value."), e354.type = "AssignmentPattern", delete e354.operator, this.toAssignable(e354.left, t283);
            break;
        case "ParenthesizedExpression":
            this.toAssignable(e354.expression, t283, i128);
            break;
        case "ChainExpression":
            this.raiseRecoverable(e354.start, "Optional chaining cannot appear in left-hand side");
            break;
        case "MemberExpression":
            if (!t283) break;
        default:
            this.raise(e354.start, "Assigning to rvalue");
    }
    else i128 && this.checkPatternErrors(i128, !0);
    return e354;
};
I2.toAssignableList = function(e355, t284) {
    for(var i129 = e355.length, s79 = 0; s79 < i129; s79++){
        var r145 = e355[s79];
        r145 && this.toAssignable(r145, t284);
    }
    if (i129) {
        var n158 = e355[i129 - 1];
        this.options.ecmaVersion === 6 && t284 && n158 && n158.type === "RestElement" && n158.argument.type !== "Identifier" && this.unexpected(n158.argument.start);
    }
    return e355;
};
I2.parseSpread = function(e356) {
    var t285 = this.startNode();
    return this.next(), t285.argument = this.parseMaybeAssign(!1, e356), this.finishNode(t285, "SpreadElement");
};
I2.parseRestBinding = function() {
    var e357 = this.startNode();
    return this.next(), this.options.ecmaVersion === 6 && this.type !== a3.name && this.unexpected(), e357.argument = this.parseBindingAtom(), this.finishNode(e357, "RestElement");
};
I2.parseBindingAtom = function() {
    if (this.options.ecmaVersion >= 6) switch(this.type){
        case a3.bracketL:
            var e358 = this.startNode();
            return this.next(), e358.elements = this.parseBindingList(a3.bracketR, !0, !0), this.finishNode(e358, "ArrayPattern");
        case a3.braceL:
            return this.parseObj(!0);
    }
    return this.parseIdent();
};
I2.parseBindingList = function(e359, t286, i130) {
    for(var s80 = [], r146 = !0; !this.eat(e359);)if (r146 ? r146 = !1 : this.expect(a3.comma), t286 && this.type === a3.comma) s80.push(null);
    else {
        if (i130 && this.afterTrailingComma(e359)) break;
        if (this.type === a3.ellipsis) {
            var n159 = this.parseRestBinding();
            this.parseBindingListItem(n159), s80.push(n159), this.type === a3.comma && this.raise(this.start, "Comma is not permitted after the rest element"), this.expect(e359);
            break;
        } else {
            var u73 = this.parseMaybeDefault(this.start, this.startLoc);
            this.parseBindingListItem(u73), s80.push(u73);
        }
    }
    return s80;
};
I2.parseBindingListItem = function(e360) {
    return e360;
};
I2.parseMaybeDefault = function(e361, t287, i131) {
    if (i131 = i131 || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(a3.eq)) return i131;
    var s81 = this.startNodeAt(e361, t287);
    return s81.left = i131, s81.right = this.parseMaybeAssign(), this.finishNode(s81, "AssignmentPattern");
};
I2.checkLValSimple = function(e362, t288, i132) {
    t288 === void 0 && (t288 = J1);
    var s82 = t288 !== J1;
    switch(e362.type){
        case "Identifier":
            this.strict && this.reservedWordsStrictBind.test(e362.name) && this.raiseRecoverable(e362.start, (s82 ? "Binding " : "Assigning to ") + e362.name + " in strict mode"), s82 && (t288 === N1 && e362.name === "let" && this.raiseRecoverable(e362.start, "let is disallowed as a lexically bound name"), i132 && (Q(i132, e362.name) && this.raiseRecoverable(e362.start, "Argument name clash"), i132[e362.name] = !0), t288 !== Me1 && this.declareName(e362.name, t288, e362.start));
            break;
        case "ChainExpression":
            this.raiseRecoverable(e362.start, "Optional chaining cannot appear in left-hand side");
            break;
        case "MemberExpression":
            s82 && this.raiseRecoverable(e362.start, "Binding member expression");
            break;
        case "ParenthesizedExpression":
            return s82 && this.raiseRecoverable(e362.start, "Binding parenthesized expression"), this.checkLValSimple(e362.expression, t288, i132);
        default:
            this.raise(e362.start, (s82 ? "Binding" : "Assigning to") + " rvalue");
    }
};
I2.checkLValPattern = function(e363, t289, i133) {
    switch(t289 === void 0 && (t289 = J1), e363.type){
        case "ObjectPattern":
            for(var s83 = 0, r147 = e363.properties; s83 < r147.length; s83 += 1){
                var n160 = r147[s83];
                this.checkLValInnerPattern(n160, t289, i133);
            }
            break;
        case "ArrayPattern":
            for(var u74 = 0, o = e363.elements; u74 < o.length; u74 += 1){
                var h45 = o[u74];
                h45 && this.checkLValInnerPattern(h45, t289, i133);
            }
            break;
        default:
            this.checkLValSimple(e363, t289, i133);
    }
};
I2.checkLValInnerPattern = function(e364, t290, i134) {
    switch(t290 === void 0 && (t290 = J1), e364.type){
        case "Property":
            this.checkLValInnerPattern(e364.value, t290, i134);
            break;
        case "AssignmentPattern":
            this.checkLValPattern(e364.left, t290, i134);
            break;
        case "RestElement":
            this.checkLValPattern(e364.argument, t290, i134);
            break;
        default:
            this.checkLValPattern(e364, t290, i134);
    }
};
var E2 = function(t291, i135, s84, r148, n161) {
    this.token = t291, this.isExpr = !!i135, this.preserveSpace = !!s84, this.override = r148, this.generator = !!n161;
}, g2 = {
    b_stat: new E2("{", !1),
    b_expr: new E2("{", !0),
    b_tmpl: new E2("${", !1),
    p_stat: new E2("(", !1),
    p_expr: new E2("(", !0),
    q_tmpl: new E2("`", !0, !0, function(e365) {
        return e365.tryReadTemplateToken();
    }),
    f_stat: new E2("function", !1),
    f_expr: new E2("function", !0),
    f_expr_gen: new E2("function", !0, !1, null, !0),
    f_gen: new E2("function", !1, !1, null, !0)
}, G1 = b4.prototype;
G1.initialContext = function() {
    return [
        g2.b_stat
    ];
};
G1.curContext = function() {
    return this.context[this.context.length - 1];
};
G1.braceIsBlock = function(e366) {
    var t292 = this.curContext();
    return t292 === g2.f_expr || t292 === g2.f_stat ? !0 : e366 === a3.colon && (t292 === g2.b_stat || t292 === g2.b_expr) ? !t292.isExpr : e366 === a3._return || e366 === a3.name && this.exprAllowed ? A3.test(this.input.slice(this.lastTokEnd, this.start)) : e366 === a3._else || e366 === a3.semi || e366 === a3.eof || e366 === a3.parenR || e366 === a3.arrow ? !0 : e366 === a3.braceL ? t292 === g2.b_stat : e366 === a3._var || e366 === a3._const || e366 === a3.name ? !1 : !this.exprAllowed;
};
G1.inGeneratorContext = function() {
    for(var e367 = this.context.length - 1; e367 >= 1; e367--){
        var t293 = this.context[e367];
        if (t293.token === "function") return t293.generator;
    }
    return !1;
};
G1.updateContext = function(e368) {
    var t294, i136 = this.type;
    i136.keyword && e368 === a3.dot ? this.exprAllowed = !1 : (t294 = i136.updateContext) ? t294.call(this, e368) : this.exprAllowed = i136.beforeExpr;
};
G1.overrideContext = function(e369) {
    this.curContext() !== e369 && (this.context[this.context.length - 1] = e369);
};
a3.parenR.updateContext = a3.braceR.updateContext = function() {
    if (this.context.length === 1) {
        this.exprAllowed = !0;
        return;
    }
    var e370 = this.context.pop();
    e370 === g2.b_stat && this.curContext().token === "function" && (e370 = this.context.pop()), this.exprAllowed = !e370.isExpr;
};
a3.braceL.updateContext = function(e371) {
    this.context.push(this.braceIsBlock(e371) ? g2.b_stat : g2.b_expr), this.exprAllowed = !0;
};
a3.dollarBraceL.updateContext = function() {
    this.context.push(g2.b_tmpl), this.exprAllowed = !0;
};
a3.parenL.updateContext = function(e372) {
    var t295 = e372 === a3._if || e372 === a3._for || e372 === a3._with || e372 === a3._while;
    this.context.push(t295 ? g2.p_stat : g2.p_expr), this.exprAllowed = !0;
};
a3.incDec.updateContext = function() {};
a3._function.updateContext = a3._class.updateContext = function(e373) {
    e373.beforeExpr && e373 !== a3._else && !(e373 === a3.semi && this.curContext() !== g2.p_stat) && !(e373 === a3._return && A3.test(this.input.slice(this.lastTokEnd, this.start))) && !((e373 === a3.colon || e373 === a3.braceL) && this.curContext() === g2.b_stat) ? this.context.push(g2.f_expr) : this.context.push(g2.f_stat), this.exprAllowed = !1;
};
a3.backQuote.updateContext = function() {
    this.curContext() === g2.q_tmpl ? this.context.pop() : this.context.push(g2.q_tmpl), this.exprAllowed = !1;
};
a3.star.updateContext = function(e374) {
    if (e374 === a3._function) {
        var t296 = this.context.length - 1;
        this.context[t296] === g2.f_expr ? this.context[t296] = g2.f_expr_gen : this.context[t296] = g2.f_gen;
    }
    this.exprAllowed = !0;
};
a3.name.updateContext = function(e375) {
    var t297 = !1;
    this.options.ecmaVersion >= 6 && e375 !== a3.dot && (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) && (t297 = !0), this.exprAllowed = t297;
};
var f1 = b4.prototype;
f1.checkPropClash = function(e376, t298, i137) {
    if (!(this.options.ecmaVersion >= 9 && e376.type === "SpreadElement") && !(this.options.ecmaVersion >= 6 && (e376.computed || e376.method || e376.shorthand))) {
        var s85 = e376.key, r149;
        switch(s85.type){
            case "Identifier":
                r149 = s85.name;
                break;
            case "Literal":
                r149 = String(s85.value);
                break;
            default:
                return;
        }
        var n162 = e376.kind;
        if (this.options.ecmaVersion >= 6) {
            r149 === "__proto__" && n162 === "init" && (t298.proto && (i137 ? i137.doubleProto < 0 && (i137.doubleProto = s85.start) : this.raiseRecoverable(s85.start, "Redefinition of __proto__ property")), t298.proto = !0);
            return;
        }
        r149 = "$" + r149;
        var u75 = t298[r149];
        if (u75) {
            var o;
            n162 === "init" ? o = this.strict && u75.init || u75.get || u75.set : o = u75.init || u75[n162], o && this.raiseRecoverable(s85.start, "Redefinition of property");
        } else u75 = t298[r149] = {
            init: !1,
            get: !1,
            set: !1
        };
        u75[n162] = !0;
    }
};
f1.parseExpression = function(e377, t299) {
    var i138 = this.start, s86 = this.startLoc, r150 = this.parseMaybeAssign(e377, t299);
    if (this.type === a3.comma) {
        var n163 = this.startNodeAt(i138, s86);
        for(n163.expressions = [
            r150
        ]; this.eat(a3.comma);)n163.expressions.push(this.parseMaybeAssign(e377, t299));
        return this.finishNode(n163, "SequenceExpression");
    }
    return r150;
};
f1.parseMaybeAssign = function(e378, t300, i139) {
    if (this.isContextual("yield")) {
        if (this.inGenerator) return this.parseYield(e378);
        this.exprAllowed = !1;
    }
    var s87 = !1, r151 = -1, n164 = -1, u76 = -1;
    t300 ? (r151 = t300.parenthesizedAssign, n164 = t300.trailingComma, u76 = t300.doubleProto, t300.parenthesizedAssign = t300.trailingComma = -1) : (t300 = new se, s87 = !0);
    var o = this.start, h46 = this.startLoc;
    (this.type === a3.parenL || this.type === a3.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = e378 === "await");
    var p65 = this.parseMaybeConditional(e378, t300);
    if (i139 && (p65 = i139.call(this, p65, o, h46)), this.type.isAssign) {
        var d36 = this.startNodeAt(o, h46);
        return d36.operator = this.value, this.type === a3.eq && (p65 = this.toAssignable(p65, !1, t300)), s87 || (t300.parenthesizedAssign = t300.trailingComma = t300.doubleProto = -1), t300.shorthandAssign >= p65.start && (t300.shorthandAssign = -1), this.type === a3.eq ? this.checkLValPattern(p65) : this.checkLValSimple(p65), d36.left = p65, this.next(), d36.right = this.parseMaybeAssign(e378), u76 > -1 && (t300.doubleProto = u76), this.finishNode(d36, "AssignmentExpression");
    } else s87 && this.checkExpressionErrors(t300, !0);
    return r151 > -1 && (t300.parenthesizedAssign = r151), n164 > -1 && (t300.trailingComma = n164), p65;
};
f1.parseMaybeConditional = function(e379, t301) {
    var i140 = this.start, s88 = this.startLoc, r152 = this.parseExprOps(e379, t301);
    if (this.checkExpressionErrors(t301)) return r152;
    if (this.eat(a3.question)) {
        var n165 = this.startNodeAt(i140, s88);
        return n165.test = r152, n165.consequent = this.parseMaybeAssign(), this.expect(a3.colon), n165.alternate = this.parseMaybeAssign(e379), this.finishNode(n165, "ConditionalExpression");
    }
    return r152;
};
f1.parseExprOps = function(e380, t302) {
    var i141 = this.start, s89 = this.startLoc, r153 = this.parseMaybeUnary(t302, !1, !1, e380);
    return this.checkExpressionErrors(t302) || r153.start === i141 && r153.type === "ArrowFunctionExpression" ? r153 : this.parseExprOp(r153, i141, s89, -1, e380);
};
f1.parseExprOp = function(e381, t303, i142, s90, r154) {
    var n166 = this.type.binop;
    if (n166 != null && (!r154 || this.type !== a3._in) && n166 > s90) {
        var u77 = this.type === a3.logicalOR || this.type === a3.logicalAND, o = this.type === a3.coalesce;
        o && (n166 = a3.logicalAND.binop);
        var h47 = this.value;
        this.next();
        var p66 = this.start, d37 = this.startLoc, y33 = this.parseExprOp(this.parseMaybeUnary(null, !1, !1, r154), p66, d37, n166, r154), R16 = this.buildBinary(t303, i142, e381, y33, h47, u77 || o);
        return (u77 && this.type === a3.coalesce || o && (this.type === a3.logicalOR || this.type === a3.logicalAND)) && this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(R16, t303, i142, s90, r154);
    }
    return e381;
};
f1.buildBinary = function(e382, t304, i143, s91, r155, n167) {
    s91.type === "PrivateIdentifier" && this.raise(s91.start, "Private identifier can only be left side of binary expression");
    var u78 = this.startNodeAt(e382, t304);
    return u78.left = i143, u78.operator = r155, u78.right = s91, this.finishNode(u78, n167 ? "LogicalExpression" : "BinaryExpression");
};
f1.parseMaybeUnary = function(e383, t305, i144, s92) {
    var r156 = this.start, n168 = this.startLoc, u79;
    if (this.isContextual("await") && this.canAwait) u79 = this.parseAwait(s92), t305 = !0;
    else if (this.type.prefix) {
        var o = this.startNode(), h48 = this.type === a3.incDec;
        o.operator = this.value, o.prefix = !0, this.next(), o.argument = this.parseMaybeUnary(null, !0, h48, s92), this.checkExpressionErrors(e383, !0), h48 ? this.checkLValSimple(o.argument) : this.strict && o.operator === "delete" && o.argument.type === "Identifier" ? this.raiseRecoverable(o.start, "Deleting local variable in strict mode") : o.operator === "delete" && Ue2(o.argument) ? this.raiseRecoverable(o.start, "Private fields can not be deleted") : t305 = !0, u79 = this.finishNode(o, h48 ? "UpdateExpression" : "UnaryExpression");
    } else if (!t305 && this.type === a3.privateId) (s92 || this.privateNameStack.length === 0) && this.unexpected(), u79 = this.parsePrivateIdent(), this.type !== a3._in && this.unexpected();
    else {
        if (u79 = this.parseExprSubscripts(e383, s92), this.checkExpressionErrors(e383)) return u79;
        for(; this.type.postfix && !this.canInsertSemicolon();){
            var p67 = this.startNodeAt(r156, n168);
            p67.operator = this.value, p67.prefix = !1, p67.argument = u79, this.checkLValSimple(u79), this.next(), u79 = this.finishNode(p67, "UpdateExpression");
        }
    }
    if (!i144 && this.eat(a3.starstar)) if (t305) this.unexpected(this.lastTokStart);
    else return this.buildBinary(r156, n168, u79, this.parseMaybeUnary(null, !1, !1, s92), "**", !1);
    else return u79;
};
function Ue2(e384) {
    return e384.type === "MemberExpression" && e384.property.type === "PrivateIdentifier" || e384.type === "ChainExpression" && Ue2(e384.expression);
}
f1.parseExprSubscripts = function(e385, t306) {
    var i145 = this.start, s93 = this.startLoc, r157 = this.parseExprAtom(e385, t306);
    if (r157.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") return r157;
    var n169 = this.parseSubscripts(r157, i145, s93, !1, t306);
    return e385 && n169.type === "MemberExpression" && (e385.parenthesizedAssign >= n169.start && (e385.parenthesizedAssign = -1), e385.parenthesizedBind >= n169.start && (e385.parenthesizedBind = -1), e385.trailingComma >= n169.start && (e385.trailingComma = -1)), n169;
};
f1.parseSubscripts = function(e386, t307, i146, s94, r158) {
    for(var n170 = this.options.ecmaVersion >= 8 && e386.type === "Identifier" && e386.name === "async" && this.lastTokEnd === e386.end && !this.canInsertSemicolon() && e386.end - e386.start === 5 && this.potentialArrowAt === e386.start, u80 = !1;;){
        var o = this.parseSubscript(e386, t307, i146, s94, n170, u80, r158);
        if (o.optional && (u80 = !0), o === e386 || o.type === "ArrowFunctionExpression") {
            if (u80) {
                var h49 = this.startNodeAt(t307, i146);
                h49.expression = o, o = this.finishNode(h49, "ChainExpression");
            }
            return o;
        }
        e386 = o;
    }
};
f1.parseSubscript = function(e387, t308, i147, s95, r159, n171, u81) {
    var o = this.options.ecmaVersion >= 11, h50 = o && this.eat(a3.questionDot);
    s95 && h50 && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
    var p68 = this.eat(a3.bracketL);
    if (p68 || h50 && this.type !== a3.parenL && this.type !== a3.backQuote || this.eat(a3.dot)) {
        var d38 = this.startNodeAt(t308, i147);
        d38.object = e387, p68 ? (d38.property = this.parseExpression(), this.expect(a3.bracketR)) : this.type === a3.privateId && e387.type !== "Super" ? d38.property = this.parsePrivateIdent() : d38.property = this.parseIdent(this.options.allowReserved !== "never"), d38.computed = !!p68, o && (d38.optional = h50), e387 = this.finishNode(d38, "MemberExpression");
    } else if (!s95 && this.eat(a3.parenL)) {
        var y34 = new se, R17 = this.yieldPos, H8 = this.awaitPos, F19 = this.awaitIdentPos;
        this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
        var X14 = this.parseExprList(a3.parenR, this.options.ecmaVersion >= 8, !1, y34);
        if (r159 && !h50 && !this.canInsertSemicolon() && this.eat(a3.arrow)) return this.checkPatternErrors(y34, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"), this.yieldPos = R17, this.awaitPos = H8, this.awaitIdentPos = F19, this.parseArrowExpression(this.startNodeAt(t308, i147), X14, !0, u81);
        this.checkExpressionErrors(y34, !0), this.yieldPos = R17 || this.yieldPos, this.awaitPos = H8 || this.awaitPos, this.awaitIdentPos = F19 || this.awaitIdentPos;
        var O22 = this.startNodeAt(t308, i147);
        O22.callee = e387, O22.arguments = X14, o && (O22.optional = h50), e387 = this.finishNode(O22, "CallExpression");
    } else if (this.type === a3.backQuote) {
        (h50 || n171) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
        var M13 = this.startNodeAt(t308, i147);
        M13.tag = e387, M13.quasi = this.parseTemplate({
            isTagged: !0
        }), e387 = this.finishNode(M13, "TaggedTemplateExpression");
    }
    return e387;
};
f1.parseExprAtom = function(e388, t309) {
    this.type === a3.slash && this.readRegexp();
    var i148, s96 = this.potentialArrowAt === this.start;
    switch(this.type){
        case a3._super:
            return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), i148 = this.startNode(), this.next(), this.type === a3.parenL && !this.allowDirectSuper && this.raise(i148.start, "super() call outside constructor of a subclass"), this.type !== a3.dot && this.type !== a3.bracketL && this.type !== a3.parenL && this.unexpected(), this.finishNode(i148, "Super");
        case a3._this:
            return i148 = this.startNode(), this.next(), this.finishNode(i148, "ThisExpression");
        case a3.name:
            var r160 = this.start, n172 = this.startLoc, u82 = this.containsEsc, o = this.parseIdent(!1);
            if (this.options.ecmaVersion >= 8 && !u82 && o.name === "async" && !this.canInsertSemicolon() && this.eat(a3._function)) return this.overrideContext(g2.f_expr), this.parseFunction(this.startNodeAt(r160, n172), 0, !1, !0, t309);
            if (s96 && !this.canInsertSemicolon()) {
                if (this.eat(a3.arrow)) return this.parseArrowExpression(this.startNodeAt(r160, n172), [
                    o
                ], !1, t309);
                if (this.options.ecmaVersion >= 8 && o.name === "async" && this.type === a3.name && !u82 && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) return o = this.parseIdent(!1), (this.canInsertSemicolon() || !this.eat(a3.arrow)) && this.unexpected(), this.parseArrowExpression(this.startNodeAt(r160, n172), [
                    o
                ], !0, t309);
            }
            return o;
        case a3.regexp:
            var h51 = this.value;
            return i148 = this.parseLiteral(h51.value), i148.regex = {
                pattern: h51.pattern,
                flags: h51.flags
            }, i148;
        case a3.num:
        case a3.string:
            return this.parseLiteral(this.value);
        case a3._null:
        case a3._true:
        case a3._false:
            return i148 = this.startNode(), i148.value = this.type === a3._null ? null : this.type === a3._true, i148.raw = this.type.keyword, this.next(), this.finishNode(i148, "Literal");
        case a3.parenL:
            var p69 = this.start, d39 = this.parseParenAndDistinguishExpression(s96, t309);
            return e388 && (e388.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(d39) && (e388.parenthesizedAssign = p69), e388.parenthesizedBind < 0 && (e388.parenthesizedBind = p69)), d39;
        case a3.bracketL:
            return i148 = this.startNode(), this.next(), i148.elements = this.parseExprList(a3.bracketR, !0, !0, e388), this.finishNode(i148, "ArrayExpression");
        case a3.braceL:
            return this.overrideContext(g2.b_expr), this.parseObj(!1, e388);
        case a3._function:
            return i148 = this.startNode(), this.next(), this.parseFunction(i148, 0);
        case a3._class:
            return this.parseClass(this.startNode(), !1);
        case a3._new:
            return this.parseNew();
        case a3.backQuote:
            return this.parseTemplate();
        case a3._import:
            return this.options.ecmaVersion >= 11 ? this.parseExprImport() : this.unexpected();
        default:
            this.unexpected();
    }
};
f1.parseExprImport = function() {
    var e389 = this.startNode();
    this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import");
    var t310 = this.parseIdent(!0);
    switch(this.type){
        case a3.parenL:
            return this.parseDynamicImport(e389);
        case a3.dot:
            return e389.meta = t310, this.parseImportMeta(e389);
        default:
            this.unexpected();
    }
};
f1.parseDynamicImport = function(e390) {
    if (this.next(), e390.source = this.parseMaybeAssign(), !this.eat(a3.parenR)) {
        var t311 = this.start;
        this.eat(a3.comma) && this.eat(a3.parenR) ? this.raiseRecoverable(t311, "Trailing comma is not allowed in import()") : this.unexpected(t311);
    }
    return this.finishNode(e390, "ImportExpression");
};
f1.parseImportMeta = function(e391) {
    this.next();
    var t312 = this.containsEsc;
    return e391.property = this.parseIdent(!0), e391.property.name !== "meta" && this.raiseRecoverable(e391.property.start, "The only valid meta property for import is 'import.meta'"), t312 && this.raiseRecoverable(e391.start, "'import.meta' must not contain escaped characters"), this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere && this.raiseRecoverable(e391.start, "Cannot use 'import.meta' outside a module"), this.finishNode(e391, "MetaProperty");
};
f1.parseLiteral = function(e392) {
    var t313 = this.startNode();
    return t313.value = e392, t313.raw = this.input.slice(this.start, this.end), t313.raw.charCodeAt(t313.raw.length - 1) === 110 && (t313.bigint = t313.raw.slice(0, -1).replace(/_/g, "")), this.next(), this.finishNode(t313, "Literal");
};
f1.parseParenExpression = function() {
    this.expect(a3.parenL);
    var e393 = this.parseExpression();
    return this.expect(a3.parenR), e393;
};
f1.parseParenAndDistinguishExpression = function(e394, t314) {
    var i149 = this.start, s97 = this.startLoc, r161, n173 = this.options.ecmaVersion >= 8;
    if (this.options.ecmaVersion >= 6) {
        this.next();
        var u83 = this.start, o = this.startLoc, h52 = [], p70 = !0, d40 = !1, y35 = new se, R18 = this.yieldPos, H9 = this.awaitPos, F20;
        for(this.yieldPos = 0, this.awaitPos = 0; this.type !== a3.parenR;)if (p70 ? p70 = !1 : this.expect(a3.comma), n173 && this.afterTrailingComma(a3.parenR, !0)) {
            d40 = !0;
            break;
        } else if (this.type === a3.ellipsis) {
            F20 = this.start, h52.push(this.parseParenItem(this.parseRestBinding())), this.type === a3.comma && this.raise(this.start, "Comma is not permitted after the rest element");
            break;
        } else h52.push(this.parseMaybeAssign(!1, y35, this.parseParenItem));
        var X15 = this.lastTokEnd, O23 = this.lastTokEndLoc;
        if (this.expect(a3.parenR), e394 && !this.canInsertSemicolon() && this.eat(a3.arrow)) return this.checkPatternErrors(y35, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = R18, this.awaitPos = H9, this.parseParenArrowList(i149, s97, h52, t314);
        (!h52.length || d40) && this.unexpected(this.lastTokStart), F20 && this.unexpected(F20), this.checkExpressionErrors(y35, !0), this.yieldPos = R18 || this.yieldPos, this.awaitPos = H9 || this.awaitPos, h52.length > 1 ? (r161 = this.startNodeAt(u83, o), r161.expressions = h52, this.finishNodeAt(r161, "SequenceExpression", X15, O23)) : r161 = h52[0];
    } else r161 = this.parseParenExpression();
    if (this.options.preserveParens) {
        var M14 = this.startNodeAt(i149, s97);
        return M14.expression = r161, this.finishNode(M14, "ParenthesizedExpression");
    } else return r161;
};
f1.parseParenItem = function(e395) {
    return e395;
};
f1.parseParenArrowList = function(e396, t315, i150, s98) {
    return this.parseArrowExpression(this.startNodeAt(e396, t315), i150, !1, s98);
};
var yt = [];
f1.parseNew = function() {
    this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
    var e397 = this.startNode(), t316 = this.parseIdent(!0);
    if (this.options.ecmaVersion >= 6 && this.eat(a3.dot)) {
        e397.meta = t316;
        var i151 = this.containsEsc;
        return e397.property = this.parseIdent(!0), e397.property.name !== "target" && this.raiseRecoverable(e397.property.start, "The only valid meta property for new is 'new.target'"), i151 && this.raiseRecoverable(e397.start, "'new.target' must not contain escaped characters"), this.allowNewDotTarget || this.raiseRecoverable(e397.start, "'new.target' can only be used in functions and class static block"), this.finishNode(e397, "MetaProperty");
    }
    var s99 = this.start, r162 = this.startLoc, n174 = this.type === a3._import;
    return e397.callee = this.parseSubscripts(this.parseExprAtom(), s99, r162, !0, !1), n174 && e397.callee.type === "ImportExpression" && this.raise(s99, "Cannot use new with import()"), this.eat(a3.parenL) ? e397.arguments = this.parseExprList(a3.parenR, this.options.ecmaVersion >= 8, !1) : e397.arguments = yt, this.finishNode(e397, "NewExpression");
};
f1.parseTemplateElement = function(e398) {
    var t317 = e398.isTagged, i152 = this.startNode();
    return this.type === a3.invalidTemplate ? (t317 || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), i152.value = {
        raw: this.value,
        cooked: null
    }) : i152.value = {
        raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, `
`),
        cooked: this.value
    }, this.next(), i152.tail = this.type === a3.backQuote, this.finishNode(i152, "TemplateElement");
};
f1.parseTemplate = function(e399) {
    e399 === void 0 && (e399 = {});
    var t318 = e399.isTagged;
    t318 === void 0 && (t318 = !1);
    var i153 = this.startNode();
    this.next(), i153.expressions = [];
    var s100 = this.parseTemplateElement({
        isTagged: t318
    });
    for(i153.quasis = [
        s100
    ]; !s100.tail;)this.type === a3.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(a3.dollarBraceL), i153.expressions.push(this.parseExpression()), this.expect(a3.braceR), i153.quasis.push(s100 = this.parseTemplateElement({
        isTagged: t318
    }));
    return this.next(), this.finishNode(i153, "TemplateLiteral");
};
f1.isAsyncProp = function(e400) {
    return !e400.computed && e400.key.type === "Identifier" && e400.key.name === "async" && (this.type === a3.name || this.type === a3.num || this.type === a3.string || this.type === a3.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === a3.star) && !A3.test(this.input.slice(this.lastTokEnd, this.start));
};
f1.parseObj = function(e401, t319) {
    var i154 = this.startNode(), s101 = !0, r163 = {};
    for(i154.properties = [], this.next(); !this.eat(a3.braceR);){
        if (s101) s101 = !1;
        else if (this.expect(a3.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(a3.braceR)) break;
        var n175 = this.parseProperty(e401, t319);
        e401 || this.checkPropClash(n175, r163, t319), i154.properties.push(n175);
    }
    return this.finishNode(i154, e401 ? "ObjectPattern" : "ObjectExpression");
};
f1.parseProperty = function(e402, t320) {
    var i155 = this.startNode(), s102, r164, n176, u84;
    if (this.options.ecmaVersion >= 9 && this.eat(a3.ellipsis)) return e402 ? (i155.argument = this.parseIdent(!1), this.type === a3.comma && this.raise(this.start, "Comma is not permitted after the rest element"), this.finishNode(i155, "RestElement")) : (this.type === a3.parenL && t320 && (t320.parenthesizedAssign < 0 && (t320.parenthesizedAssign = this.start), t320.parenthesizedBind < 0 && (t320.parenthesizedBind = this.start)), i155.argument = this.parseMaybeAssign(!1, t320), this.type === a3.comma && t320 && t320.trailingComma < 0 && (t320.trailingComma = this.start), this.finishNode(i155, "SpreadElement"));
    this.options.ecmaVersion >= 6 && (i155.method = !1, i155.shorthand = !1, (e402 || t320) && (n176 = this.start, u84 = this.startLoc), e402 || (s102 = this.eat(a3.star)));
    var o = this.containsEsc;
    return this.parsePropertyName(i155), !e402 && !o && this.options.ecmaVersion >= 8 && !s102 && this.isAsyncProp(i155) ? (r164 = !0, s102 = this.options.ecmaVersion >= 9 && this.eat(a3.star), this.parsePropertyName(i155, t320)) : r164 = !1, this.parsePropertyValue(i155, e402, s102, r164, n176, u84, t320, o), this.finishNode(i155, "Property");
};
f1.parsePropertyValue = function(e403, t321, i156, s103, r165, n177, u85, o) {
    if ((i156 || s103) && this.type === a3.colon && this.unexpected(), this.eat(a3.colon)) e403.value = t321 ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, u85), e403.kind = "init";
    else if (this.options.ecmaVersion >= 6 && this.type === a3.parenL) t321 && this.unexpected(), e403.kind = "init", e403.method = !0, e403.value = this.parseMethod(i156, s103);
    else if (!t321 && !o && this.options.ecmaVersion >= 5 && !e403.computed && e403.key.type === "Identifier" && (e403.key.name === "get" || e403.key.name === "set") && this.type !== a3.comma && this.type !== a3.braceR && this.type !== a3.eq) {
        (i156 || s103) && this.unexpected(), e403.kind = e403.key.name, this.parsePropertyName(e403), e403.value = this.parseMethod(!1);
        var h53 = e403.kind === "get" ? 0 : 1;
        if (e403.value.params.length !== h53) {
            var p71 = e403.value.start;
            e403.kind === "get" ? this.raiseRecoverable(p71, "getter should have no params") : this.raiseRecoverable(p71, "setter should have exactly one param");
        } else e403.kind === "set" && e403.value.params[0].type === "RestElement" && this.raiseRecoverable(e403.value.params[0].start, "Setter cannot use rest params");
    } else this.options.ecmaVersion >= 6 && !e403.computed && e403.key.type === "Identifier" ? ((i156 || s103) && this.unexpected(), this.checkUnreserved(e403.key), e403.key.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = r165), e403.kind = "init", t321 ? e403.value = this.parseMaybeDefault(r165, n177, this.copyNode(e403.key)) : this.type === a3.eq && u85 ? (u85.shorthandAssign < 0 && (u85.shorthandAssign = this.start), e403.value = this.parseMaybeDefault(r165, n177, this.copyNode(e403.key))) : e403.value = this.copyNode(e403.key), e403.shorthand = !0) : this.unexpected();
};
f1.parsePropertyName = function(e404) {
    if (this.options.ecmaVersion >= 6) {
        if (this.eat(a3.bracketL)) return e404.computed = !0, e404.key = this.parseMaybeAssign(), this.expect(a3.bracketR), e404.key;
        e404.computed = !1;
    }
    return e404.key = this.type === a3.num || this.type === a3.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
};
f1.initFunction = function(e405) {
    e405.id = null, this.options.ecmaVersion >= 6 && (e405.generator = e405.expression = !1), this.options.ecmaVersion >= 8 && (e405.async = !1);
};
f1.parseMethod = function(e406, t322, i157) {
    var s104 = this.startNode(), r166 = this.yieldPos, n178 = this.awaitPos, u86 = this.awaitIdentPos;
    return this.initFunction(s104), this.options.ecmaVersion >= 6 && (s104.generator = e406), this.options.ecmaVersion >= 8 && (s104.async = !!t322), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(ge1(t322, s104.generator) | me1 | (i157 ? Be1 : 0)), this.expect(a3.parenL), s104.params = this.parseBindingList(a3.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(s104, !1, !0, !1), this.yieldPos = r166, this.awaitPos = n178, this.awaitIdentPos = u86, this.finishNode(s104, "FunctionExpression");
};
f1.parseArrowExpression = function(e407, t323, i158, s105) {
    var r167 = this.yieldPos, n179 = this.awaitPos, u87 = this.awaitIdentPos;
    return this.enterScope(ge1(i158, !1) | Le1), this.initFunction(e407), this.options.ecmaVersion >= 8 && (e407.async = !!i158), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, e407.params = this.toAssignableList(t323, !0), this.parseFunctionBody(e407, !0, !1, s105), this.yieldPos = r167, this.awaitPos = n179, this.awaitIdentPos = u87, this.finishNode(e407, "ArrowFunctionExpression");
};
f1.parseFunctionBody = function(e408, t324, i159, s106) {
    var r168 = t324 && this.type !== a3.braceL, n180 = this.strict, u88 = !1;
    if (r168) e408.body = this.parseMaybeAssign(s106), e408.expression = !0, this.checkParams(e408, !1);
    else {
        var o = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(e408.params);
        (!n180 || o) && (u88 = this.strictDirective(this.end), u88 && o && this.raiseRecoverable(e408.start, "Illegal 'use strict' directive in function with non-simple parameter list"));
        var h54 = this.labels;
        this.labels = [], u88 && (this.strict = !0), this.checkParams(e408, !n180 && !u88 && !t324 && !i159 && this.isSimpleParamList(e408.params)), this.strict && e408.id && this.checkLValSimple(e408.id, Me1), e408.body = this.parseBlock(!1, void 0, u88 && !n180), e408.expression = !1, this.adaptDirectivePrologue(e408.body.body), this.labels = h54;
    }
    this.exitScope();
};
f1.isSimpleParamList = function(e409) {
    for(var t325 = 0, i160 = e409; t325 < i160.length; t325 += 1){
        var s107 = i160[t325];
        if (s107.type !== "Identifier") return !1;
    }
    return !0;
};
f1.checkParams = function(e410, t326) {
    for(var i161 = Object.create(null), s108 = 0, r169 = e410.params; s108 < r169.length; s108 += 1){
        var n181 = r169[s108];
        this.checkLValInnerPattern(n181, be2, t326 ? null : i161);
    }
};
f1.parseExprList = function(e411, t327, i162, s109) {
    for(var r170 = [], n182 = !0; !this.eat(e411);){
        if (n182) n182 = !1;
        else if (this.expect(a3.comma), t327 && this.afterTrailingComma(e411)) break;
        var u89 = void 0;
        i162 && this.type === a3.comma ? u89 = null : this.type === a3.ellipsis ? (u89 = this.parseSpread(s109), s109 && this.type === a3.comma && s109.trailingComma < 0 && (s109.trailingComma = this.start)) : u89 = this.parseMaybeAssign(!1, s109), r170.push(u89);
    }
    return r170;
};
f1.checkUnreserved = function(e412) {
    var t328 = e412.start, i163 = e412.end, s110 = e412.name;
    if (this.inGenerator && s110 === "yield" && this.raiseRecoverable(t328, "Cannot use 'yield' as identifier inside a generator"), this.inAsync && s110 === "await" && this.raiseRecoverable(t328, "Cannot use 'await' as identifier inside an async function"), this.currentThisScope().inClassFieldInit && s110 === "arguments" && this.raiseRecoverable(t328, "Cannot use 'arguments' in class field initializer"), this.inClassStaticBlock && (s110 === "arguments" || s110 === "await") && this.raise(t328, "Cannot use " + s110 + " in class static initialization block"), this.keywords.test(s110) && this.raise(t328, "Unexpected keyword '" + s110 + "'"), !(this.options.ecmaVersion < 6 && this.input.slice(t328, i163).indexOf("\\") !== -1)) {
        var r171 = this.strict ? this.reservedWordsStrict : this.reservedWords;
        r171.test(s110) && (!this.inAsync && s110 === "await" && this.raiseRecoverable(t328, "Cannot use keyword 'await' outside an async function"), this.raiseRecoverable(t328, "The keyword '" + s110 + "' is reserved"));
    }
};
f1.parseIdent = function(e413, t) {
    var i164 = this.startNode();
    return this.type === a3.name ? i164.name = this.value : this.type.keyword ? (i164.name = this.type.keyword, (i164.name === "class" || i164.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46) && this.context.pop()) : this.unexpected(), this.next(!!e413), this.finishNode(i164, "Identifier"), e413 || (this.checkUnreserved(i164), i164.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = i164.start)), i164;
};
f1.parsePrivateIdent = function() {
    var e414 = this.startNode();
    return this.type === a3.privateId ? e414.name = this.value : this.unexpected(), this.next(), this.finishNode(e414, "PrivateIdentifier"), this.privateNameStack.length === 0 ? this.raise(e414.start, "Private field '#" + e414.name + "' must be declared in an enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(e414), e414;
};
f1.parseYield = function(e415) {
    this.yieldPos || (this.yieldPos = this.start);
    var t329 = this.startNode();
    return this.next(), this.type === a3.semi || this.canInsertSemicolon() || this.type !== a3.star && !this.type.startsExpr ? (t329.delegate = !1, t329.argument = null) : (t329.delegate = this.eat(a3.star), t329.argument = this.parseMaybeAssign(e415)), this.finishNode(t329, "YieldExpression");
};
f1.parseAwait = function(e416) {
    this.awaitPos || (this.awaitPos = this.start);
    var t330 = this.startNode();
    return this.next(), t330.argument = this.parseMaybeUnary(null, !0, !1, e416), this.finishNode(t330, "AwaitExpression");
};
var ee = b4.prototype;
ee.raise = function(e417, t331) {
    var i165 = Ve1(this.input, e417);
    t331 += " (" + i165.line + ":" + i165.column + ")";
    var s111 = new SyntaxError(t331);
    throw s111.pos = e417, s111.loc = i165, s111.raisedAt = this.pos, s111;
};
ee.raiseRecoverable = ee.raise;
ee.curPosition = function() {
    if (this.options.locations) return new W1(this.curLine, this.pos - this.lineStart);
};
var L = b4.prototype, kt = function(t332) {
    this.flags = t332, this.var = [], this.lexical = [], this.functions = [], this.inClassFieldInit = !1;
};
L.enterScope = function(e418) {
    this.scopeStack.push(new kt(e418));
};
L.exitScope = function() {
    this.scopeStack.pop();
};
L.treatFunctionsAsVarInScope = function(e419) {
    return e419.flags & q2 || !this.inModule && e419.flags & z1;
};
L.declareName = function(e420, t333, i166) {
    var s112 = !1;
    if (t333 === N1) {
        var r172 = this.currentScope();
        s112 = r172.lexical.indexOf(e420) > -1 || r172.functions.indexOf(e420) > -1 || r172.var.indexOf(e420) > -1, r172.lexical.push(e420), this.inModule && r172.flags & z1 && delete this.undefinedExports[e420];
    } else if (t333 === Oe1) {
        var n183 = this.currentScope();
        n183.lexical.push(e420);
    } else if (t333 === Fe1) {
        var u90 = this.currentScope();
        this.treatFunctionsAsVar ? s112 = u90.lexical.indexOf(e420) > -1 : s112 = u90.lexical.indexOf(e420) > -1 || u90.var.indexOf(e420) > -1, u90.functions.push(e420);
    } else for(var o = this.scopeStack.length - 1; o >= 0; --o){
        var h55 = this.scopeStack[o];
        if (h55.lexical.indexOf(e420) > -1 && !(h55.flags & Re1 && h55.lexical[0] === e420) || !this.treatFunctionsAsVarInScope(h55) && h55.functions.indexOf(e420) > -1) {
            s112 = !0;
            break;
        }
        if (h55.var.push(e420), this.inModule && h55.flags & z1 && delete this.undefinedExports[e420], h55.flags & ve1) break;
    }
    s112 && this.raiseRecoverable(i166, "Identifier '" + e420 + "' has already been declared");
};
L.checkLocalExport = function(e421) {
    this.scopeStack[0].lexical.indexOf(e421.name) === -1 && this.scopeStack[0].var.indexOf(e421.name) === -1 && (this.undefinedExports[e421.name] = e421);
};
L.currentScope = function() {
    return this.scopeStack[this.scopeStack.length - 1];
};
L.currentVarScope = function() {
    for(var e422 = this.scopeStack.length - 1;; e422--){
        var t334 = this.scopeStack[e422];
        if (t334.flags & ve1) return t334;
    }
};
L.currentThisScope = function() {
    for(var e423 = this.scopeStack.length - 1;; e423--){
        var t335 = this.scopeStack[e423];
        if (t335.flags & ve1 && !(t335.flags & Le1)) return t335;
    }
};
var ae = function(t336, i167, s113) {
    this.type = "", this.start = i167, this.end = 0, t336.options.locations && (this.loc = new ie1(t336, s113)), t336.options.directSourceFile && (this.sourceFile = t336.options.directSourceFile), t336.options.ranges && (this.range = [
        i167,
        0
    ]);
}, Y = b4.prototype;
Y.startNode = function() {
    return new ae(this, this.start, this.startLoc);
};
Y.startNodeAt = function(e424, t337) {
    return new ae(this, e424, t337);
};
function qe1(e425, t338, i168, s114) {
    return e425.type = t338, e425.end = i168, this.options.locations && (e425.loc.end = s114), this.options.ranges && (e425.range[1] = i168), e425;
}
Y.finishNode = function(e426, t339) {
    return qe1.call(this, e426, t339, this.lastTokEnd, this.lastTokEndLoc);
};
Y.finishNodeAt = function(e427, t340, i169, s115) {
    return qe1.call(this, e427, t340, i169, s115);
};
Y.copyNode = function(e428) {
    var t341 = new ae(this, e428.start, this.startLoc);
    for(var i170 in e428)t341[i170] = e428[i170];
    return t341;
};
var Ge1 = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS", He1 = Ge1 + " Extended_Pictographic", je1 = He1, We1 = je1 + " EBase EComp EMod EPres ExtPict", _t = We1, Ct = {
    9: Ge1,
    10: He1,
    11: je1,
    12: We1,
    13: _t
}, Se1 = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", ze1 = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb", Qe = ze1 + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd", Ke = Qe + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", Ye1 = Ke + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi", St = Ye1 + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", wt = {
    9: ze1,
    10: Qe,
    11: Ke,
    12: Ye1,
    13: St
}, Xe = {};
function At(e429) {
    var t342 = Xe[e429] = {
        binary: B2(Ct[e429] + " " + Se1),
        nonBinary: {
            General_Category: B2(Se1),
            Script: B2(wt[e429])
        }
    };
    t342.nonBinary.Script_Extensions = t342.nonBinary.Script, t342.nonBinary.gc = t342.nonBinary.General_Category, t342.nonBinary.sc = t342.nonBinary.Script, t342.nonBinary.scx = t342.nonBinary.Script_Extensions;
}
for(Z = 0, he1 = [
    9,
    10,
    11,
    12,
    13
]; Z < he1.length; Z += 1)we1 = he1[Z], At(we1);
var we1, Z, he1, c2 = b4.prototype, T1 = function(t343) {
    this.parser = t343, this.validFlags = "gim" + (t343.options.ecmaVersion >= 6 ? "uy" : "") + (t343.options.ecmaVersion >= 9 ? "s" : "") + (t343.options.ecmaVersion >= 13 ? "d" : ""), this.unicodeProperties = Xe[t343.options.ecmaVersion >= 13 ? 13 : t343.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = [], this.backReferenceNames = [];
};
T1.prototype.reset = function(t344, i171, s116) {
    var r173 = s116.indexOf("u") !== -1;
    this.start = t344 | 0, this.source = i171 + "", this.flags = s116, this.switchU = r173 && this.parser.options.ecmaVersion >= 6, this.switchN = r173 && this.parser.options.ecmaVersion >= 9;
};
T1.prototype.raise = function(t345) {
    this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + t345);
};
T1.prototype.at = function(t346, i172) {
    i172 === void 0 && (i172 = !1);
    var s117 = this.source, r174 = s117.length;
    if (t346 >= r174) return -1;
    var n184 = s117.charCodeAt(t346);
    if (!(i172 || this.switchU) || n184 <= 55295 || n184 >= 57344 || t346 + 1 >= r174) return n184;
    var u91 = s117.charCodeAt(t346 + 1);
    return u91 >= 56320 && u91 <= 57343 ? (n184 << 10) + u91 - 56613888 : n184;
};
T1.prototype.nextIndex = function(t347, i173) {
    i173 === void 0 && (i173 = !1);
    var s118 = this.source, r175 = s118.length;
    if (t347 >= r175) return r175;
    var n185 = s118.charCodeAt(t347), u92;
    return !(i173 || this.switchU) || n185 <= 55295 || n185 >= 57344 || t347 + 1 >= r175 || (u92 = s118.charCodeAt(t347 + 1)) < 56320 || u92 > 57343 ? t347 + 1 : t347 + 2;
};
T1.prototype.current = function(t348) {
    return t348 === void 0 && (t348 = !1), this.at(this.pos, t348);
};
T1.prototype.lookahead = function(t349) {
    return t349 === void 0 && (t349 = !1), this.at(this.nextIndex(this.pos, t349), t349);
};
T1.prototype.advance = function(t350) {
    t350 === void 0 && (t350 = !1), this.pos = this.nextIndex(this.pos, t350);
};
T1.prototype.eat = function(t351, i174) {
    return i174 === void 0 && (i174 = !1), this.current(i174) === t351 ? (this.advance(i174), !0) : !1;
};
function te(e430) {
    return e430 <= 65535 ? String.fromCharCode(e430) : (e430 -= 65536, String.fromCharCode((e430 >> 10) + 55296, (e430 & 1023) + 56320));
}
c2.validateRegExpFlags = function(e431) {
    for(var t352 = e431.validFlags, i175 = e431.flags, s119 = 0; s119 < i175.length; s119++){
        var r176 = i175.charAt(s119);
        t352.indexOf(r176) === -1 && this.raise(e431.start, "Invalid regular expression flag"), i175.indexOf(r176, s119 + 1) > -1 && this.raise(e431.start, "Duplicate regular expression flag");
    }
};
c2.validateRegExpPattern = function(e432) {
    this.regexp_pattern(e432), !e432.switchN && this.options.ecmaVersion >= 9 && e432.groupNames.length > 0 && (e432.switchN = !0, this.regexp_pattern(e432));
};
c2.regexp_pattern = function(e433) {
    e433.pos = 0, e433.lastIntValue = 0, e433.lastStringValue = "", e433.lastAssertionIsQuantifiable = !1, e433.numCapturingParens = 0, e433.maxBackReference = 0, e433.groupNames.length = 0, e433.backReferenceNames.length = 0, this.regexp_disjunction(e433), e433.pos !== e433.source.length && (e433.eat(41) && e433.raise("Unmatched ')'"), (e433.eat(93) || e433.eat(125)) && e433.raise("Lone quantifier brackets")), e433.maxBackReference > e433.numCapturingParens && e433.raise("Invalid escape");
    for(var t353 = 0, i176 = e433.backReferenceNames; t353 < i176.length; t353 += 1){
        var s120 = i176[t353];
        e433.groupNames.indexOf(s120) === -1 && e433.raise("Invalid named capture referenced");
    }
};
c2.regexp_disjunction = function(e434) {
    for(this.regexp_alternative(e434); e434.eat(124);)this.regexp_alternative(e434);
    this.regexp_eatQuantifier(e434, !0) && e434.raise("Nothing to repeat"), e434.eat(123) && e434.raise("Lone quantifier brackets");
};
c2.regexp_alternative = function(e435) {
    for(; e435.pos < e435.source.length && this.regexp_eatTerm(e435););
};
c2.regexp_eatTerm = function(e436) {
    return this.regexp_eatAssertion(e436) ? (e436.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(e436) && e436.switchU && e436.raise("Invalid quantifier"), !0) : (e436.switchU ? this.regexp_eatAtom(e436) : this.regexp_eatExtendedAtom(e436)) ? (this.regexp_eatQuantifier(e436), !0) : !1;
};
c2.regexp_eatAssertion = function(e437) {
    var t354 = e437.pos;
    if (e437.lastAssertionIsQuantifiable = !1, e437.eat(94) || e437.eat(36)) return !0;
    if (e437.eat(92)) {
        if (e437.eat(66) || e437.eat(98)) return !0;
        e437.pos = t354;
    }
    if (e437.eat(40) && e437.eat(63)) {
        var i177 = !1;
        if (this.options.ecmaVersion >= 9 && (i177 = e437.eat(60)), e437.eat(61) || e437.eat(33)) return this.regexp_disjunction(e437), e437.eat(41) || e437.raise("Unterminated group"), e437.lastAssertionIsQuantifiable = !i177, !0;
    }
    return e437.pos = t354, !1;
};
c2.regexp_eatQuantifier = function(e438, t355) {
    return t355 === void 0 && (t355 = !1), this.regexp_eatQuantifierPrefix(e438, t355) ? (e438.eat(63), !0) : !1;
};
c2.regexp_eatQuantifierPrefix = function(e439, t356) {
    return e439.eat(42) || e439.eat(43) || e439.eat(63) || this.regexp_eatBracedQuantifier(e439, t356);
};
c2.regexp_eatBracedQuantifier = function(e440, t357) {
    var i178 = e440.pos;
    if (e440.eat(123)) {
        var s121 = 0, r177 = -1;
        if (this.regexp_eatDecimalDigits(e440) && (s121 = e440.lastIntValue, e440.eat(44) && this.regexp_eatDecimalDigits(e440) && (r177 = e440.lastIntValue), e440.eat(125))) return r177 !== -1 && r177 < s121 && !t357 && e440.raise("numbers out of order in {} quantifier"), !0;
        e440.switchU && !t357 && e440.raise("Incomplete quantifier"), e440.pos = i178;
    }
    return !1;
};
c2.regexp_eatAtom = function(e441) {
    return this.regexp_eatPatternCharacters(e441) || e441.eat(46) || this.regexp_eatReverseSolidusAtomEscape(e441) || this.regexp_eatCharacterClass(e441) || this.regexp_eatUncapturingGroup(e441) || this.regexp_eatCapturingGroup(e441);
};
c2.regexp_eatReverseSolidusAtomEscape = function(e442) {
    var t358 = e442.pos;
    if (e442.eat(92)) {
        if (this.regexp_eatAtomEscape(e442)) return !0;
        e442.pos = t358;
    }
    return !1;
};
c2.regexp_eatUncapturingGroup = function(e443) {
    var t359 = e443.pos;
    if (e443.eat(40)) {
        if (e443.eat(63) && e443.eat(58)) {
            if (this.regexp_disjunction(e443), e443.eat(41)) return !0;
            e443.raise("Unterminated group");
        }
        e443.pos = t359;
    }
    return !1;
};
c2.regexp_eatCapturingGroup = function(e444) {
    if (e444.eat(40)) {
        if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(e444) : e444.current() === 63 && e444.raise("Invalid group"), this.regexp_disjunction(e444), e444.eat(41)) return e444.numCapturingParens += 1, !0;
        e444.raise("Unterminated group");
    }
    return !1;
};
c2.regexp_eatExtendedAtom = function(e445) {
    return e445.eat(46) || this.regexp_eatReverseSolidusAtomEscape(e445) || this.regexp_eatCharacterClass(e445) || this.regexp_eatUncapturingGroup(e445) || this.regexp_eatCapturingGroup(e445) || this.regexp_eatInvalidBracedQuantifier(e445) || this.regexp_eatExtendedPatternCharacter(e445);
};
c2.regexp_eatInvalidBracedQuantifier = function(e446) {
    return this.regexp_eatBracedQuantifier(e446, !0) && e446.raise("Nothing to repeat"), !1;
};
c2.regexp_eatSyntaxCharacter = function(e447) {
    var t360 = e447.current();
    return Ze(t360) ? (e447.lastIntValue = t360, e447.advance(), !0) : !1;
};
function Ze(e448) {
    return e448 === 36 || e448 >= 40 && e448 <= 43 || e448 === 46 || e448 === 63 || e448 >= 91 && e448 <= 94 || e448 >= 123 && e448 <= 125;
}
c2.regexp_eatPatternCharacters = function(e449) {
    for(var t361 = e449.pos, i179 = 0; (i179 = e449.current()) !== -1 && !Ze(i179);)e449.advance();
    return e449.pos !== t361;
};
c2.regexp_eatExtendedPatternCharacter = function(e450) {
    var t362 = e450.current();
    return t362 !== -1 && t362 !== 36 && !(t362 >= 40 && t362 <= 43) && t362 !== 46 && t362 !== 63 && t362 !== 91 && t362 !== 94 && t362 !== 124 ? (e450.advance(), !0) : !1;
};
c2.regexp_groupSpecifier = function(e451) {
    if (e451.eat(63)) {
        if (this.regexp_eatGroupName(e451)) {
            e451.groupNames.indexOf(e451.lastStringValue) !== -1 && e451.raise("Duplicate capture group name"), e451.groupNames.push(e451.lastStringValue);
            return;
        }
        e451.raise("Invalid group");
    }
};
c2.regexp_eatGroupName = function(e452) {
    if (e452.lastStringValue = "", e452.eat(60)) {
        if (this.regexp_eatRegExpIdentifierName(e452) && e452.eat(62)) return !0;
        e452.raise("Invalid capture group name");
    }
    return !1;
};
c2.regexp_eatRegExpIdentifierName = function(e453) {
    if (e453.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(e453)) {
        for(e453.lastStringValue += te(e453.lastIntValue); this.regexp_eatRegExpIdentifierPart(e453);)e453.lastStringValue += te(e453.lastIntValue);
        return !0;
    }
    return !1;
};
c2.regexp_eatRegExpIdentifierStart = function(e454) {
    var t363 = e454.pos, i180 = this.options.ecmaVersion >= 11, s122 = e454.current(i180);
    return e454.advance(i180), s122 === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(e454, i180) && (s122 = e454.lastIntValue), Et(s122) ? (e454.lastIntValue = s122, !0) : (e454.pos = t363, !1);
};
function Et(e455) {
    return V1(e455, !0) || e455 === 36 || e455 === 95;
}
c2.regexp_eatRegExpIdentifierPart = function(e456) {
    var t364 = e456.pos, i181 = this.options.ecmaVersion >= 11, s123 = e456.current(i181);
    return e456.advance(i181), s123 === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(e456, i181) && (s123 = e456.lastIntValue), It(s123) ? (e456.lastIntValue = s123, !0) : (e456.pos = t364, !1);
};
function It(e457) {
    return D1(e457, !0) || e457 === 36 || e457 === 95 || e457 === 8204 || e457 === 8205;
}
c2.regexp_eatAtomEscape = function(e458) {
    return this.regexp_eatBackReference(e458) || this.regexp_eatCharacterClassEscape(e458) || this.regexp_eatCharacterEscape(e458) || e458.switchN && this.regexp_eatKGroupName(e458) ? !0 : (e458.switchU && (e458.current() === 99 && e458.raise("Invalid unicode escape"), e458.raise("Invalid escape")), !1);
};
c2.regexp_eatBackReference = function(e459) {
    var t365 = e459.pos;
    if (this.regexp_eatDecimalEscape(e459)) {
        var i182 = e459.lastIntValue;
        if (e459.switchU) return i182 > e459.maxBackReference && (e459.maxBackReference = i182), !0;
        if (i182 <= e459.numCapturingParens) return !0;
        e459.pos = t365;
    }
    return !1;
};
c2.regexp_eatKGroupName = function(e460) {
    if (e460.eat(107)) {
        if (this.regexp_eatGroupName(e460)) return e460.backReferenceNames.push(e460.lastStringValue), !0;
        e460.raise("Invalid named reference");
    }
    return !1;
};
c2.regexp_eatCharacterEscape = function(e461) {
    return this.regexp_eatControlEscape(e461) || this.regexp_eatCControlLetter(e461) || this.regexp_eatZero(e461) || this.regexp_eatHexEscapeSequence(e461) || this.regexp_eatRegExpUnicodeEscapeSequence(e461, !1) || !e461.switchU && this.regexp_eatLegacyOctalEscapeSequence(e461) || this.regexp_eatIdentityEscape(e461);
};
c2.regexp_eatCControlLetter = function(e462) {
    var t366 = e462.pos;
    if (e462.eat(99)) {
        if (this.regexp_eatControlLetter(e462)) return !0;
        e462.pos = t366;
    }
    return !1;
};
c2.regexp_eatZero = function(e463) {
    return e463.current() === 48 && !re(e463.lookahead()) ? (e463.lastIntValue = 0, e463.advance(), !0) : !1;
};
c2.regexp_eatControlEscape = function(e464) {
    var t367 = e464.current();
    return t367 === 116 ? (e464.lastIntValue = 9, e464.advance(), !0) : t367 === 110 ? (e464.lastIntValue = 10, e464.advance(), !0) : t367 === 118 ? (e464.lastIntValue = 11, e464.advance(), !0) : t367 === 102 ? (e464.lastIntValue = 12, e464.advance(), !0) : t367 === 114 ? (e464.lastIntValue = 13, e464.advance(), !0) : !1;
};
c2.regexp_eatControlLetter = function(e465) {
    var t368 = e465.current();
    return Je(t368) ? (e465.lastIntValue = t368 % 32, e465.advance(), !0) : !1;
};
function Je(e466) {
    return e466 >= 65 && e466 <= 90 || e466 >= 97 && e466 <= 122;
}
c2.regexp_eatRegExpUnicodeEscapeSequence = function(e467, t369) {
    t369 === void 0 && (t369 = !1);
    var i183 = e467.pos, s124 = t369 || e467.switchU;
    if (e467.eat(117)) {
        if (this.regexp_eatFixedHexDigits(e467, 4)) {
            var r178 = e467.lastIntValue;
            if (s124 && r178 >= 55296 && r178 <= 56319) {
                var n186 = e467.pos;
                if (e467.eat(92) && e467.eat(117) && this.regexp_eatFixedHexDigits(e467, 4)) {
                    var u93 = e467.lastIntValue;
                    if (u93 >= 56320 && u93 <= 57343) return e467.lastIntValue = (r178 - 55296) * 1024 + (u93 - 56320) + 65536, !0;
                }
                e467.pos = n186, e467.lastIntValue = r178;
            }
            return !0;
        }
        if (s124 && e467.eat(123) && this.regexp_eatHexDigits(e467) && e467.eat(125) && Pt(e467.lastIntValue)) return !0;
        s124 && e467.raise("Invalid unicode escape"), e467.pos = i183;
    }
    return !1;
};
function Pt(e468) {
    return e468 >= 0 && e468 <= 1114111;
}
c2.regexp_eatIdentityEscape = function(e469) {
    if (e469.switchU) return this.regexp_eatSyntaxCharacter(e469) ? !0 : e469.eat(47) ? (e469.lastIntValue = 47, !0) : !1;
    var t370 = e469.current();
    return t370 !== 99 && (!e469.switchN || t370 !== 107) ? (e469.lastIntValue = t370, e469.advance(), !0) : !1;
};
c2.regexp_eatDecimalEscape = function(e470) {
    e470.lastIntValue = 0;
    var t371 = e470.current();
    if (t371 >= 49 && t371 <= 57) {
        do e470.lastIntValue = 10 * e470.lastIntValue + (t371 - 48), e470.advance();
        while ((t371 = e470.current()) >= 48 && t371 <= 57)
        return !0;
    }
    return !1;
};
c2.regexp_eatCharacterClassEscape = function(e471) {
    var t372 = e471.current();
    if (Nt(t372)) return e471.lastIntValue = -1, e471.advance(), !0;
    if (e471.switchU && this.options.ecmaVersion >= 9 && (t372 === 80 || t372 === 112)) {
        if (e471.lastIntValue = -1, e471.advance(), e471.eat(123) && this.regexp_eatUnicodePropertyValueExpression(e471) && e471.eat(125)) return !0;
        e471.raise("Invalid property name");
    }
    return !1;
};
function Nt(e472) {
    return e472 === 100 || e472 === 68 || e472 === 115 || e472 === 83 || e472 === 119 || e472 === 87;
}
c2.regexp_eatUnicodePropertyValueExpression = function(e473) {
    var t373 = e473.pos;
    if (this.regexp_eatUnicodePropertyName(e473) && e473.eat(61)) {
        var i184 = e473.lastStringValue;
        if (this.regexp_eatUnicodePropertyValue(e473)) {
            var s125 = e473.lastStringValue;
            return this.regexp_validateUnicodePropertyNameAndValue(e473, i184, s125), !0;
        }
    }
    if (e473.pos = t373, this.regexp_eatLoneUnicodePropertyNameOrValue(e473)) {
        var r179 = e473.lastStringValue;
        return this.regexp_validateUnicodePropertyNameOrValue(e473, r179), !0;
    }
    return !1;
};
c2.regexp_validateUnicodePropertyNameAndValue = function(e474, t374, i185) {
    Q(e474.unicodeProperties.nonBinary, t374) || e474.raise("Invalid property name"), e474.unicodeProperties.nonBinary[t374].test(i185) || e474.raise("Invalid property value");
};
c2.regexp_validateUnicodePropertyNameOrValue = function(e475, t375) {
    e475.unicodeProperties.binary.test(t375) || e475.raise("Invalid property name");
};
c2.regexp_eatUnicodePropertyName = function(e476) {
    var t376 = 0;
    for(e476.lastStringValue = ""; $e1(t376 = e476.current());)e476.lastStringValue += te(t376), e476.advance();
    return e476.lastStringValue !== "";
};
function $e1(e477) {
    return Je(e477) || e477 === 95;
}
c2.regexp_eatUnicodePropertyValue = function(e478) {
    var t377 = 0;
    for(e478.lastStringValue = ""; Vt(t377 = e478.current());)e478.lastStringValue += te(t377), e478.advance();
    return e478.lastStringValue !== "";
};
function Vt(e479) {
    return $e1(e479) || re(e479);
}
c2.regexp_eatLoneUnicodePropertyNameOrValue = function(e480) {
    return this.regexp_eatUnicodePropertyValue(e480);
};
c2.regexp_eatCharacterClass = function(e481) {
    if (e481.eat(91)) {
        if (e481.eat(94), this.regexp_classRanges(e481), e481.eat(93)) return !0;
        e481.raise("Unterminated character class");
    }
    return !1;
};
c2.regexp_classRanges = function(e482) {
    for(; this.regexp_eatClassAtom(e482);){
        var t378 = e482.lastIntValue;
        if (e482.eat(45) && this.regexp_eatClassAtom(e482)) {
            var i186 = e482.lastIntValue;
            e482.switchU && (t378 === -1 || i186 === -1) && e482.raise("Invalid character class"), t378 !== -1 && i186 !== -1 && t378 > i186 && e482.raise("Range out of order in character class");
        }
    }
};
c2.regexp_eatClassAtom = function(e483) {
    var t379 = e483.pos;
    if (e483.eat(92)) {
        if (this.regexp_eatClassEscape(e483)) return !0;
        if (e483.switchU) {
            var i187 = e483.current();
            (i187 === 99 || it(i187)) && e483.raise("Invalid class escape"), e483.raise("Invalid escape");
        }
        e483.pos = t379;
    }
    var s126 = e483.current();
    return s126 !== 93 ? (e483.lastIntValue = s126, e483.advance(), !0) : !1;
};
c2.regexp_eatClassEscape = function(e484) {
    var t380 = e484.pos;
    if (e484.eat(98)) return e484.lastIntValue = 8, !0;
    if (e484.switchU && e484.eat(45)) return e484.lastIntValue = 45, !0;
    if (!e484.switchU && e484.eat(99)) {
        if (this.regexp_eatClassControlLetter(e484)) return !0;
        e484.pos = t380;
    }
    return this.regexp_eatCharacterClassEscape(e484) || this.regexp_eatCharacterEscape(e484);
};
c2.regexp_eatClassControlLetter = function(e485) {
    var t381 = e485.current();
    return re(t381) || t381 === 95 ? (e485.lastIntValue = t381 % 32, e485.advance(), !0) : !1;
};
c2.regexp_eatHexEscapeSequence = function(e486) {
    var t382 = e486.pos;
    if (e486.eat(120)) {
        if (this.regexp_eatFixedHexDigits(e486, 2)) return !0;
        e486.switchU && e486.raise("Invalid escape"), e486.pos = t382;
    }
    return !1;
};
c2.regexp_eatDecimalDigits = function(e487) {
    var t383 = e487.pos, i188 = 0;
    for(e487.lastIntValue = 0; re(i188 = e487.current());)e487.lastIntValue = 10 * e487.lastIntValue + (i188 - 48), e487.advance();
    return e487.pos !== t383;
};
function re(e488) {
    return e488 >= 48 && e488 <= 57;
}
c2.regexp_eatHexDigits = function(e489) {
    var t384 = e489.pos, i189 = 0;
    for(e489.lastIntValue = 0; et(i189 = e489.current());)e489.lastIntValue = 16 * e489.lastIntValue + tt(i189), e489.advance();
    return e489.pos !== t384;
};
function et(e490) {
    return e490 >= 48 && e490 <= 57 || e490 >= 65 && e490 <= 70 || e490 >= 97 && e490 <= 102;
}
function tt(e491) {
    return e491 >= 65 && e491 <= 70 ? 10 + (e491 - 65) : e491 >= 97 && e491 <= 102 ? 10 + (e491 - 97) : e491 - 48;
}
c2.regexp_eatLegacyOctalEscapeSequence = function(e492) {
    if (this.regexp_eatOctalDigit(e492)) {
        var t385 = e492.lastIntValue;
        if (this.regexp_eatOctalDigit(e492)) {
            var i190 = e492.lastIntValue;
            t385 <= 3 && this.regexp_eatOctalDigit(e492) ? e492.lastIntValue = t385 * 64 + i190 * 8 + e492.lastIntValue : e492.lastIntValue = t385 * 8 + i190;
        } else e492.lastIntValue = t385;
        return !0;
    }
    return !1;
};
c2.regexp_eatOctalDigit = function(e493) {
    var t386 = e493.current();
    return it(t386) ? (e493.lastIntValue = t386 - 48, e493.advance(), !0) : (e493.lastIntValue = 0, !1);
};
function it(e494) {
    return e494 >= 48 && e494 <= 55;
}
c2.regexp_eatFixedHexDigits = function(e495, t387) {
    var i191 = e495.pos;
    e495.lastIntValue = 0;
    for(var s127 = 0; s127 < t387; ++s127){
        var r180 = e495.current();
        if (!et(r180)) return e495.pos = i191, !1;
        e495.lastIntValue = 16 * e495.lastIntValue + tt(r180), e495.advance();
    }
    return !0;
};
var ke1 = function(t388) {
    this.type = t388.type, this.value = t388.value, this.start = t388.start, this.end = t388.end, t388.options.locations && (this.loc = new ie1(t388, t388.startLoc, t388.endLoc)), t388.options.ranges && (this.range = [
        t388.start,
        t388.end
    ]);
}, x5 = b4.prototype;
x5.next = function(e496) {
    !e496 && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new ke1(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
};
x5.getToken = function() {
    return this.next(), new ke1(this);
};
typeof Symbol < "u" && (x5[Symbol.iterator] = function() {
    var e497 = this;
    return {
        next: function() {
            var t389 = e497.getToken();
            return {
                done: t389.type === a3.eof,
                value: t389
            };
        }
    };
});
x5.nextToken = function() {
    var e498 = this.curContext();
    if ((!e498 || !e498.preserveSpace) && this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length) return this.finishToken(a3.eof);
    if (e498.override) return e498.override(this);
    this.readToken(this.fullCharCodeAtPos());
};
x5.readToken = function(e499) {
    return V1(e499, this.options.ecmaVersion >= 6) || e499 === 92 ? this.readWord() : this.getTokenFromCode(e499);
};
x5.fullCharCodeAtPos = function() {
    var e500 = this.input.charCodeAt(this.pos);
    if (e500 <= 55295 || e500 >= 56320) return e500;
    var t390 = this.input.charCodeAt(this.pos + 1);
    return t390 <= 56319 || t390 >= 57344 ? e500 : (e500 << 10) + t390 - 56613888;
};
x5.skipBlockComment = function() {
    var e501 = this.options.onComment && this.curPosition(), t391 = this.pos, i192 = this.input.indexOf("*/", this.pos += 2);
    if (i192 === -1 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = i192 + 2, this.options.locations) for(var s128 = void 0, r181 = t391; (s128 = Ie1(this.input, r181, this.pos)) > -1;)++this.curLine, r181 = this.lineStart = s128;
    this.options.onComment && this.options.onComment(!0, this.input.slice(t391 + 2, i192), t391, this.pos, e501, this.curPosition());
};
x5.skipLineComment = function(e502) {
    for(var t392 = this.pos, i193 = this.options.onComment && this.curPosition(), s129 = this.input.charCodeAt(this.pos += e502); this.pos < this.input.length && !U1(s129);)s129 = this.input.charCodeAt(++this.pos);
    this.options.onComment && this.options.onComment(!1, this.input.slice(t392 + e502, this.pos), t392, this.pos, i193, this.curPosition());
};
x5.skipSpace = function() {
    e: for(; this.pos < this.input.length;){
        var e503 = this.input.charCodeAt(this.pos);
        switch(e503){
            case 32:
            case 160:
                ++this.pos;
                break;
            case 13:
                this.input.charCodeAt(this.pos + 1) === 10 && ++this.pos;
            case 10:
            case 8232:
            case 8233:
                ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
                break;
            case 47:
                switch(this.input.charCodeAt(this.pos + 1)){
                    case 42:
                        this.skipBlockComment();
                        break;
                    case 47:
                        this.skipLineComment(2);
                        break;
                    default:
                        break e;
                }
                break;
            default:
                if (e503 > 8 && e503 < 14 || e503 >= 5760 && Pe1.test(String.fromCharCode(e503))) ++this.pos;
                else break e;
        }
    }
};
x5.finishToken = function(e504, t393) {
    this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
    var i194 = this.type;
    this.type = e504, this.value = t393, this.updateContext(i194);
};
x5.readToken_dot = function() {
    var e505 = this.input.charCodeAt(this.pos + 1);
    if (e505 >= 48 && e505 <= 57) return this.readNumber(!0);
    var t394 = this.input.charCodeAt(this.pos + 2);
    return this.options.ecmaVersion >= 6 && e505 === 46 && t394 === 46 ? (this.pos += 3, this.finishToken(a3.ellipsis)) : (++this.pos, this.finishToken(a3.dot));
};
x5.readToken_slash = function() {
    var e506 = this.input.charCodeAt(this.pos + 1);
    return this.exprAllowed ? (++this.pos, this.readRegexp()) : e506 === 61 ? this.finishOp(a3.assign, 2) : this.finishOp(a3.slash, 1);
};
x5.readToken_mult_modulo_exp = function(e507) {
    var t395 = this.input.charCodeAt(this.pos + 1), i195 = 1, s130 = e507 === 42 ? a3.star : a3.modulo;
    return this.options.ecmaVersion >= 7 && e507 === 42 && t395 === 42 && (++i195, s130 = a3.starstar, t395 = this.input.charCodeAt(this.pos + 2)), t395 === 61 ? this.finishOp(a3.assign, i195 + 1) : this.finishOp(s130, i195);
};
x5.readToken_pipe_amp = function(e508) {
    var t396 = this.input.charCodeAt(this.pos + 1);
    if (t396 === e508) {
        if (this.options.ecmaVersion >= 12) {
            var i196 = this.input.charCodeAt(this.pos + 2);
            if (i196 === 61) return this.finishOp(a3.assign, 3);
        }
        return this.finishOp(e508 === 124 ? a3.logicalOR : a3.logicalAND, 2);
    }
    return t396 === 61 ? this.finishOp(a3.assign, 2) : this.finishOp(e508 === 124 ? a3.bitwiseOR : a3.bitwiseAND, 1);
};
x5.readToken_caret = function() {
    var e509 = this.input.charCodeAt(this.pos + 1);
    return e509 === 61 ? this.finishOp(a3.assign, 2) : this.finishOp(a3.bitwiseXOR, 1);
};
x5.readToken_plus_min = function(e510) {
    var t397 = this.input.charCodeAt(this.pos + 1);
    return t397 === e510 ? t397 === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || A3.test(this.input.slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(a3.incDec, 2) : t397 === 61 ? this.finishOp(a3.assign, 2) : this.finishOp(a3.plusMin, 1);
};
x5.readToken_lt_gt = function(e511) {
    var t398 = this.input.charCodeAt(this.pos + 1), i197 = 1;
    return t398 === e511 ? (i197 = e511 === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.pos + i197) === 61 ? this.finishOp(a3.assign, i197 + 1) : this.finishOp(a3.bitShift, i197)) : t398 === 33 && e511 === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45 ? (this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (t398 === 61 && (i197 = 2), this.finishOp(a3.relational, i197));
};
x5.readToken_eq_excl = function(e512) {
    var t399 = this.input.charCodeAt(this.pos + 1);
    return t399 === 61 ? this.finishOp(a3.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) : e512 === 61 && t399 === 62 && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(a3.arrow)) : this.finishOp(e512 === 61 ? a3.eq : a3.prefix, 1);
};
x5.readToken_question = function() {
    var e513 = this.options.ecmaVersion;
    if (e513 >= 11) {
        var t400 = this.input.charCodeAt(this.pos + 1);
        if (t400 === 46) {
            var i198 = this.input.charCodeAt(this.pos + 2);
            if (i198 < 48 || i198 > 57) return this.finishOp(a3.questionDot, 2);
        }
        if (t400 === 63) {
            if (e513 >= 12) {
                var s131 = this.input.charCodeAt(this.pos + 2);
                if (s131 === 61) return this.finishOp(a3.assign, 3);
            }
            return this.finishOp(a3.coalesce, 2);
        }
    }
    return this.finishOp(a3.question, 1);
};
x5.readToken_numberSign = function() {
    var e514 = this.options.ecmaVersion, t401 = 35;
    if (e514 >= 13 && (++this.pos, t401 = this.fullCharCodeAtPos(), V1(t401, !0) || t401 === 92)) return this.finishToken(a3.privateId, this.readWord1());
    this.raise(this.pos, "Unexpected character '" + ne(t401) + "'");
};
x5.getTokenFromCode = function(e515) {
    switch(e515){
        case 46:
            return this.readToken_dot();
        case 40:
            return ++this.pos, this.finishToken(a3.parenL);
        case 41:
            return ++this.pos, this.finishToken(a3.parenR);
        case 59:
            return ++this.pos, this.finishToken(a3.semi);
        case 44:
            return ++this.pos, this.finishToken(a3.comma);
        case 91:
            return ++this.pos, this.finishToken(a3.bracketL);
        case 93:
            return ++this.pos, this.finishToken(a3.bracketR);
        case 123:
            return ++this.pos, this.finishToken(a3.braceL);
        case 125:
            return ++this.pos, this.finishToken(a3.braceR);
        case 58:
            return ++this.pos, this.finishToken(a3.colon);
        case 96:
            if (this.options.ecmaVersion < 6) break;
            return ++this.pos, this.finishToken(a3.backQuote);
        case 48:
            var t402 = this.input.charCodeAt(this.pos + 1);
            if (t402 === 120 || t402 === 88) return this.readRadixNumber(16);
            if (this.options.ecmaVersion >= 6) {
                if (t402 === 111 || t402 === 79) return this.readRadixNumber(8);
                if (t402 === 98 || t402 === 66) return this.readRadixNumber(2);
            }
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
            return this.readNumber(!1);
        case 34:
        case 39:
            return this.readString(e515);
        case 47:
            return this.readToken_slash();
        case 37:
        case 42:
            return this.readToken_mult_modulo_exp(e515);
        case 124:
        case 38:
            return this.readToken_pipe_amp(e515);
        case 94:
            return this.readToken_caret();
        case 43:
        case 45:
            return this.readToken_plus_min(e515);
        case 60:
        case 62:
            return this.readToken_lt_gt(e515);
        case 61:
        case 33:
            return this.readToken_eq_excl(e515);
        case 63:
            return this.readToken_question();
        case 126:
            return this.finishOp(a3.prefix, 1);
        case 35:
            return this.readToken_numberSign();
    }
    this.raise(this.pos, "Unexpected character '" + ne(e515) + "'");
};
x5.finishOp = function(e516, t403) {
    var i199 = this.input.slice(this.pos, this.pos + t403);
    return this.pos += t403, this.finishToken(e516, i199);
};
x5.readRegexp = function() {
    for(var e517, t404, i200 = this.pos;;){
        this.pos >= this.input.length && this.raise(i200, "Unterminated regular expression");
        var s132 = this.input.charAt(this.pos);
        if (A3.test(s132) && this.raise(i200, "Unterminated regular expression"), e517) e517 = !1;
        else {
            if (s132 === "[") t404 = !0;
            else if (s132 === "]" && t404) t404 = !1;
            else if (s132 === "/" && !t404) break;
            e517 = s132 === "\\";
        }
        ++this.pos;
    }
    var r182 = this.input.slice(i200, this.pos);
    ++this.pos;
    var n187 = this.pos, u94 = this.readWord1();
    this.containsEsc && this.unexpected(n187);
    var o = this.regexpState || (this.regexpState = new T1(this));
    o.reset(i200, r182, u94), this.validateRegExpFlags(o), this.validateRegExpPattern(o);
    var h56 = null;
    try {
        h56 = new RegExp(r182, u94);
    } catch  {}
    return this.finishToken(a3.regexp, {
        pattern: r182,
        flags: u94,
        value: h56
    });
};
x5.readInt = function(e518, t405, i201) {
    for(var s133 = this.options.ecmaVersion >= 12 && t405 === void 0, r183 = i201 && this.input.charCodeAt(this.pos) === 48, n188 = this.pos, u95 = 0, o = 0, h57 = 0, p72 = t405 ?? 1 / 0; h57 < p72; ++h57, ++this.pos){
        var d41 = this.input.charCodeAt(this.pos), y36 = void 0;
        if (s133 && d41 === 95) {
            r183 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), o === 95 && this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"), h57 === 0 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"), o = d41;
            continue;
        }
        if (d41 >= 97 ? y36 = d41 - 97 + 10 : d41 >= 65 ? y36 = d41 - 65 + 10 : d41 >= 48 && d41 <= 57 ? y36 = d41 - 48 : y36 = 1 / 0, y36 >= e518) break;
        o = d41, u95 = u95 * e518 + y36;
    }
    return s133 && o === 95 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === n188 || t405 != null && this.pos - n188 !== t405 ? null : u95;
};
function Tt1(e519, t406) {
    return t406 ? parseInt(e519, 8) : parseFloat(e519.replace(/_/g, ""));
}
function st(e520) {
    return typeof BigInt != "function" ? null : BigInt(e520.replace(/_/g, ""));
}
x5.readRadixNumber = function(e521) {
    var t407 = this.pos;
    this.pos += 2;
    var i202 = this.readInt(e521);
    return i202 == null && this.raise(this.start + 2, "Expected number in radix " + e521), this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110 ? (i202 = st(this.input.slice(t407, this.pos)), ++this.pos) : V1(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(a3.num, i202);
};
x5.readNumber = function(e522) {
    var t408 = this.pos;
    !e522 && this.readInt(10, void 0, !0) === null && this.raise(t408, "Invalid number");
    var i203 = this.pos - t408 >= 2 && this.input.charCodeAt(t408) === 48;
    i203 && this.strict && this.raise(t408, "Invalid number");
    var s134 = this.input.charCodeAt(this.pos);
    if (!i203 && !e522 && this.options.ecmaVersion >= 11 && s134 === 110) {
        var r184 = st(this.input.slice(t408, this.pos));
        return ++this.pos, V1(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(a3.num, r184);
    }
    i203 && /[89]/.test(this.input.slice(t408, this.pos)) && (i203 = !1), s134 === 46 && !i203 && (++this.pos, this.readInt(10), s134 = this.input.charCodeAt(this.pos)), (s134 === 69 || s134 === 101) && !i203 && (s134 = this.input.charCodeAt(++this.pos), (s134 === 43 || s134 === 45) && ++this.pos, this.readInt(10) === null && this.raise(t408, "Invalid number")), V1(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
    var n189 = Tt1(this.input.slice(t408, this.pos), i203);
    return this.finishToken(a3.num, n189);
};
x5.readCodePoint = function() {
    var e523 = this.input.charCodeAt(this.pos), t409;
    if (e523 === 123) {
        this.options.ecmaVersion < 6 && this.unexpected();
        var i204 = ++this.pos;
        t409 = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, t409 > 1114111 && this.invalidStringToken(i204, "Code point out of bounds");
    } else t409 = this.readHexChar(4);
    return t409;
};
function ne(e524) {
    return e524 <= 65535 ? String.fromCharCode(e524) : (e524 -= 65536, String.fromCharCode((e524 >> 10) + 55296, (e524 & 1023) + 56320));
}
x5.readString = function(e525) {
    for(var t410 = "", i205 = ++this.pos;;){
        this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
        var s135 = this.input.charCodeAt(this.pos);
        if (s135 === e525) break;
        s135 === 92 ? (t410 += this.input.slice(i205, this.pos), t410 += this.readEscapedChar(!1), i205 = this.pos) : s135 === 8232 || s135 === 8233 ? (this.options.ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.lineStart = this.pos)) : (U1(s135) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
    }
    return t410 += this.input.slice(i205, this.pos++), this.finishToken(a3.string, t410);
};
var at = {};
x5.tryReadTemplateToken = function() {
    this.inTemplateElement = !0;
    try {
        this.readTmplToken();
    } catch (e526) {
        if (e526 === at) this.readInvalidTemplateToken();
        else throw e526;
    }
    this.inTemplateElement = !1;
};
x5.invalidStringToken = function(e527, t411) {
    if (this.inTemplateElement && this.options.ecmaVersion >= 9) throw at;
    this.raise(e527, t411);
};
x5.readTmplToken = function() {
    for(var e528 = "", t412 = this.pos;;){
        this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
        var i206 = this.input.charCodeAt(this.pos);
        if (i206 === 96 || i206 === 36 && this.input.charCodeAt(this.pos + 1) === 123) return this.pos === this.start && (this.type === a3.template || this.type === a3.invalidTemplate) ? i206 === 36 ? (this.pos += 2, this.finishToken(a3.dollarBraceL)) : (++this.pos, this.finishToken(a3.backQuote)) : (e528 += this.input.slice(t412, this.pos), this.finishToken(a3.template, e528));
        if (i206 === 92) e528 += this.input.slice(t412, this.pos), e528 += this.readEscapedChar(!0), t412 = this.pos;
        else if (U1(i206)) {
            switch(e528 += this.input.slice(t412, this.pos), ++this.pos, i206){
                case 13:
                    this.input.charCodeAt(this.pos) === 10 && ++this.pos;
                case 10:
                    e528 += `
`;
                    break;
                default:
                    e528 += String.fromCharCode(i206);
                    break;
            }
            this.options.locations && (++this.curLine, this.lineStart = this.pos), t412 = this.pos;
        } else ++this.pos;
    }
};
x5.readInvalidTemplateToken = function() {
    for(; this.pos < this.input.length; this.pos++)switch(this.input[this.pos]){
        case "\\":
            ++this.pos;
            break;
        case "$":
            if (this.input[this.pos + 1] !== "{") break;
        case "`":
            return this.finishToken(a3.invalidTemplate, this.input.slice(this.start, this.pos));
    }
    this.raise(this.start, "Unterminated template");
};
x5.readEscapedChar = function(e529) {
    var t413 = this.input.charCodeAt(++this.pos);
    switch(++this.pos, t413){
        case 110:
            return `
`;
        case 114:
            return "\r";
        case 120:
            return String.fromCharCode(this.readHexChar(2));
        case 117:
            return ne(this.readCodePoint());
        case 116:
            return "	";
        case 98:
            return "\b";
        case 118:
            return "\v";
        case 102:
            return "\f";
        case 13:
            this.input.charCodeAt(this.pos) === 10 && ++this.pos;
        case 10:
            return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
        case 56:
        case 57:
            if (this.strict && this.invalidStringToken(this.pos - 1, "Invalid escape sequence"), e529) {
                var i207 = this.pos - 1;
                return this.invalidStringToken(i207, "Invalid escape sequence in template string"), null;
            }
        default:
            if (t413 >= 48 && t413 <= 55) {
                var s136 = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], r185 = parseInt(s136, 8);
                return r185 > 255 && (s136 = s136.slice(0, -1), r185 = parseInt(s136, 8)), this.pos += s136.length - 1, t413 = this.input.charCodeAt(this.pos), (s136 !== "0" || t413 === 56 || t413 === 57) && (this.strict || e529) && this.invalidStringToken(this.pos - 1 - s136.length, e529 ? "Octal literal in template string" : "Octal literal in strict mode"), String.fromCharCode(r185);
            }
            return U1(t413) ? "" : String.fromCharCode(t413);
    }
};
x5.readHexChar = function(e530) {
    var t414 = this.pos, i208 = this.readInt(16, e530);
    return i208 === null && this.invalidStringToken(t414, "Bad character escape sequence"), i208;
};
x5.readWord1 = function() {
    this.containsEsc = !1;
    for(var e531 = "", t415 = !0, i209 = this.pos, s137 = this.options.ecmaVersion >= 6; this.pos < this.input.length;){
        var r186 = this.fullCharCodeAtPos();
        if (D1(r186, s137)) this.pos += r186 <= 65535 ? 1 : 2;
        else if (r186 === 92) {
            this.containsEsc = !0, e531 += this.input.slice(i209, this.pos);
            var n190 = this.pos;
            this.input.charCodeAt(++this.pos) !== 117 && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.pos;
            var u96 = this.readCodePoint();
            (t415 ? V1 : D1)(u96, s137) || this.invalidStringToken(n190, "Invalid Unicode escape"), e531 += ne(u96), i209 = this.pos;
        } else break;
        t415 = !1;
    }
    return e531 + this.input.slice(i209, this.pos);
};
x5.readWord = function() {
    var e532 = this.readWord1(), t416 = a3.name;
    return this.keywords.test(e532) && (t416 = de1[e532]), this.finishToken(t416, e532);
};
var Lt = "8.7.0";
b4.acorn = {
    Parser: b4,
    version: Lt,
    defaultOptions: le,
    Position: W1,
    SourceLocation: ie1,
    getLineInfo: Ve1,
    Node: ae,
    TokenType: v2,
    tokTypes: a3,
    keywordTypes: de1,
    TokContext: E2,
    tokContexts: g2,
    isIdentifierChar: D1,
    isIdentifierStart: V1,
    Token: ke1,
    isNewLine: U1,
    lineBreak: A3,
    lineBreakG: ct,
    nonASCIIwhitespace: Pe1
};
function Rt1(e533, t417) {
    return b4.parse(e533, t417);
}
function Bt(e534, t418, i210) {
    return b4.parseExpressionAt(e534, t418, i210);
}
function Ft1(e535, t419) {
    return b4.tokenizer(e535, t419);
}
const mod = {
    Node: ae,
    Parser: b4,
    Position: W1,
    SourceLocation: ie1,
    TokContext: E2,
    Token: ke1,
    TokenType: v2,
    defaultOptions: le,
    getLineInfo: Ve1,
    isIdentifierChar: D1,
    isIdentifierStart: V1,
    isNewLine: U1,
    keywordTypes: de1,
    lineBreak: A3,
    lineBreakG: ct,
    nonASCIIwhitespace: Pe1,
    parse: Rt1,
    parseExpressionAt: Bt,
    tokContexts: g2,
    tokTypes: a3,
    tokenizer: Ft1,
    version: Lt
};
var J2 = Object.create;
var C3 = Object.defineProperty;
var X = Object.getOwnPropertyDescriptor;
var v3 = Object.getOwnPropertyNames;
var O = Object.getPrototypeOf, q3 = Object.prototype.hasOwnProperty;
var L1 = (e536)=>C3(e536, "__esModule", {
        value: !0
    });
((e537)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e537, {
        get: (a58, o)=>(typeof require != "undefined" ? require : a58)[o]
    }) : e537)(function(e538) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e538 + '" is not supported');
});
var y3 = (e539, a59)=>()=>(a59 || e539((a59 = {
            exports: {}
        }).exports, a59), a59.exports);
var I3 = (e540, a60, o, h58)=>{
    if (a60 && typeof a60 == "object" || typeof a60 == "function") for (let u97 of v3(a60))!q3.call(e540, u97) && (o || u97 !== "default") && C3(e540, u97, {
        get: ()=>a60[u97],
        enumerable: !(h58 = X(a60, u97)) || h58.enumerable
    });
    return e540;
}, _2 = (e541, a61)=>I3(L1(C3(e541 != null ? J2(O(e541)) : {}, "default", !a61 && e541 && e541.__esModule ? {
        get: ()=>e541.default,
        enumerable: !0
    } : {
        value: e541,
        enumerable: !0
    })), e541);
var k3 = y3((W, b29)=>{
    b29.exports = {
        quot: '"',
        amp: "&",
        apos: "'",
        lt: "<",
        gt: ">",
        nbsp: "\xA0",
        iexcl: "\xA1",
        cent: "\xA2",
        pound: "\xA3",
        curren: "\xA4",
        yen: "\xA5",
        brvbar: "\xA6",
        sect: "\xA7",
        uml: "\xA8",
        copy: "\xA9",
        ordf: "\xAA",
        laquo: "\xAB",
        not: "\xAC",
        shy: "\xAD",
        reg: "\xAE",
        macr: "\xAF",
        deg: "\xB0",
        plusmn: "\xB1",
        sup2: "\xB2",
        sup3: "\xB3",
        acute: "\xB4",
        micro: "\xB5",
        para: "\xB6",
        middot: "\xB7",
        cedil: "\xB8",
        sup1: "\xB9",
        ordm: "\xBA",
        raquo: "\xBB",
        frac14: "\xBC",
        frac12: "\xBD",
        frac34: "\xBE",
        iquest: "\xBF",
        Agrave: "\xC0",
        Aacute: "\xC1",
        Acirc: "\xC2",
        Atilde: "\xC3",
        Auml: "\xC4",
        Aring: "\xC5",
        AElig: "\xC6",
        Ccedil: "\xC7",
        Egrave: "\xC8",
        Eacute: "\xC9",
        Ecirc: "\xCA",
        Euml: "\xCB",
        Igrave: "\xCC",
        Iacute: "\xCD",
        Icirc: "\xCE",
        Iuml: "\xCF",
        ETH: "\xD0",
        Ntilde: "\xD1",
        Ograve: "\xD2",
        Oacute: "\xD3",
        Ocirc: "\xD4",
        Otilde: "\xD5",
        Ouml: "\xD6",
        times: "\xD7",
        Oslash: "\xD8",
        Ugrave: "\xD9",
        Uacute: "\xDA",
        Ucirc: "\xDB",
        Uuml: "\xDC",
        Yacute: "\xDD",
        THORN: "\xDE",
        szlig: "\xDF",
        agrave: "\xE0",
        aacute: "\xE1",
        acirc: "\xE2",
        atilde: "\xE3",
        auml: "\xE4",
        aring: "\xE5",
        aelig: "\xE6",
        ccedil: "\xE7",
        egrave: "\xE8",
        eacute: "\xE9",
        ecirc: "\xEA",
        euml: "\xEB",
        igrave: "\xEC",
        iacute: "\xED",
        icirc: "\xEE",
        iuml: "\xEF",
        eth: "\xF0",
        ntilde: "\xF1",
        ograve: "\xF2",
        oacute: "\xF3",
        ocirc: "\xF4",
        otilde: "\xF5",
        ouml: "\xF6",
        divide: "\xF7",
        oslash: "\xF8",
        ugrave: "\xF9",
        uacute: "\xFA",
        ucirc: "\xFB",
        uuml: "\xFC",
        yacute: "\xFD",
        thorn: "\xFE",
        yuml: "\xFF",
        OElig: "\u0152",
        oelig: "\u0153",
        Scaron: "\u0160",
        scaron: "\u0161",
        Yuml: "\u0178",
        fnof: "\u0192",
        circ: "\u02C6",
        tilde: "\u02DC",
        Alpha: "\u0391",
        Beta: "\u0392",
        Gamma: "\u0393",
        Delta: "\u0394",
        Epsilon: "\u0395",
        Zeta: "\u0396",
        Eta: "\u0397",
        Theta: "\u0398",
        Iota: "\u0399",
        Kappa: "\u039A",
        Lambda: "\u039B",
        Mu: "\u039C",
        Nu: "\u039D",
        Xi: "\u039E",
        Omicron: "\u039F",
        Pi: "\u03A0",
        Rho: "\u03A1",
        Sigma: "\u03A3",
        Tau: "\u03A4",
        Upsilon: "\u03A5",
        Phi: "\u03A6",
        Chi: "\u03A7",
        Psi: "\u03A8",
        Omega: "\u03A9",
        alpha: "\u03B1",
        beta: "\u03B2",
        gamma: "\u03B3",
        delta: "\u03B4",
        epsilon: "\u03B5",
        zeta: "\u03B6",
        eta: "\u03B7",
        theta: "\u03B8",
        iota: "\u03B9",
        kappa: "\u03BA",
        lambda: "\u03BB",
        mu: "\u03BC",
        nu: "\u03BD",
        xi: "\u03BE",
        omicron: "\u03BF",
        pi: "\u03C0",
        rho: "\u03C1",
        sigmaf: "\u03C2",
        sigma: "\u03C3",
        tau: "\u03C4",
        upsilon: "\u03C5",
        phi: "\u03C6",
        chi: "\u03C7",
        psi: "\u03C8",
        omega: "\u03C9",
        thetasym: "\u03D1",
        upsih: "\u03D2",
        piv: "\u03D6",
        ensp: "\u2002",
        emsp: "\u2003",
        thinsp: "\u2009",
        zwnj: "\u200C",
        zwj: "\u200D",
        lrm: "\u200E",
        rlm: "\u200F",
        ndash: "\u2013",
        mdash: "\u2014",
        lsquo: "\u2018",
        rsquo: "\u2019",
        sbquo: "\u201A",
        ldquo: "\u201C",
        rdquo: "\u201D",
        bdquo: "\u201E",
        dagger: "\u2020",
        Dagger: "\u2021",
        bull: "\u2022",
        hellip: "\u2026",
        permil: "\u2030",
        prime: "\u2032",
        Prime: "\u2033",
        lsaquo: "\u2039",
        rsaquo: "\u203A",
        oline: "\u203E",
        frasl: "\u2044",
        euro: "\u20AC",
        image: "\u2111",
        weierp: "\u2118",
        real: "\u211C",
        trade: "\u2122",
        alefsym: "\u2135",
        larr: "\u2190",
        uarr: "\u2191",
        rarr: "\u2192",
        darr: "\u2193",
        harr: "\u2194",
        crarr: "\u21B5",
        lArr: "\u21D0",
        uArr: "\u21D1",
        rArr: "\u21D2",
        dArr: "\u21D3",
        hArr: "\u21D4",
        forall: "\u2200",
        part: "\u2202",
        exist: "\u2203",
        empty: "\u2205",
        nabla: "\u2207",
        isin: "\u2208",
        notin: "\u2209",
        ni: "\u220B",
        prod: "\u220F",
        sum: "\u2211",
        minus: "\u2212",
        lowast: "\u2217",
        radic: "\u221A",
        prop: "\u221D",
        infin: "\u221E",
        ang: "\u2220",
        and: "\u2227",
        or: "\u2228",
        cap: "\u2229",
        cup: "\u222A",
        int: "\u222B",
        there4: "\u2234",
        sim: "\u223C",
        cong: "\u2245",
        asymp: "\u2248",
        ne: "\u2260",
        equiv: "\u2261",
        le: "\u2264",
        ge: "\u2265",
        sub: "\u2282",
        sup: "\u2283",
        nsub: "\u2284",
        sube: "\u2286",
        supe: "\u2287",
        oplus: "\u2295",
        otimes: "\u2297",
        perp: "\u22A5",
        sdot: "\u22C5",
        lceil: "\u2308",
        rceil: "\u2309",
        lfloor: "\u230A",
        rfloor: "\u230B",
        lang: "\u2329",
        rang: "\u232A",
        loz: "\u25CA",
        spades: "\u2660",
        clubs: "\u2663",
        hearts: "\u2665",
        diams: "\u2666"
    };
});
var T2 = y3((V, j34)=>{
    "use strict";
    var U16 = k3(), M15 = /^[\da-fA-F]+$/, $33 = /^\d+$/, S31 = new WeakMap;
    function B24(e542) {
        e542 = e542.Parser.acorn || e542;
        let a62 = S31.get(e542);
        if (!a62) {
            let o = e542.tokTypes, h59 = e542.TokContext, u98 = e542.TokenType, n191 = new h59("<tag", !1), d42 = new h59("</tag", !1), p73 = new h59("<tag>...</tag>", !0, !0), m36 = {
                tc_oTag: n191,
                tc_cTag: d42,
                tc_expr: p73
            }, c41 = {
                jsxName: new u98("jsxName"),
                jsxText: new u98("jsxText", {
                    beforeExpr: !0
                }),
                jsxTagStart: new u98("jsxTagStart", {
                    startsExpr: !0
                }),
                jsxTagEnd: new u98("jsxTagEnd")
            };
            c41.jsxTagStart.updateContext = function() {
                this.context.push(p73), this.context.push(n191), this.exprAllowed = !1;
            }, c41.jsxTagEnd.updateContext = function(f54) {
                let g43 = this.context.pop();
                g43 === n191 && f54 === o.slash || g43 === d42 ? (this.context.pop(), this.exprAllowed = this.curContext() === p73) : this.exprAllowed = !0;
            }, a62 = {
                tokContexts: m36,
                tokTypes: c41
            }, S31.set(e542, a62);
        }
        return a62;
    }
    function x44(e543) {
        if (!e543) return e543;
        if (e543.type === "JSXIdentifier") return e543.name;
        if (e543.type === "JSXNamespacedName") return e543.namespace.name + ":" + e543.name.name;
        if (e543.type === "JSXMemberExpression") return x44(e543.object) + "." + x44(e543.property);
    }
    j34.exports = function(e544) {
        return e544 = e544 || {}, function(a63) {
            return z16({
                allowNamespaces: e544.allowNamespaces !== !1,
                allowNamespacedObjects: !!e544.allowNamespacedObjects
            }, a63);
        };
    };
    Object.defineProperty(j34.exports, "tokTypes", {
        get: function() {
            return B24(mod).tokTypes;
        },
        configurable: !0,
        enumerable: !0
    });
    function z16(e545, a64) {
        let o = a64.acorn || mod, h60 = B24(o), u99 = o.tokTypes, n192 = h60.tokTypes, d43 = o.tokContexts, p74 = h60.tokContexts.tc_oTag, m37 = h60.tokContexts.tc_cTag, c42 = h60.tokContexts.tc_expr, f55 = o.isNewLine, g44 = o.isIdentifierStart, F21 = o.isIdentifierChar;
        return class extends a64 {
            static get acornJsx() {
                return h60;
            }
            jsx_readToken() {
                let t420 = "", s138 = this.pos;
                for(;;){
                    this.pos >= this.input.length && this.raise(this.start, "Unterminated JSX contents");
                    let i211 = this.input.charCodeAt(this.pos);
                    switch(i211){
                        case 60:
                        case 123:
                            return this.pos === this.start ? i211 === 60 && this.exprAllowed ? (++this.pos, this.finishToken(n192.jsxTagStart)) : this.getTokenFromCode(i211) : (t420 += this.input.slice(s138, this.pos), this.finishToken(n192.jsxText, t420));
                        case 38:
                            t420 += this.input.slice(s138, this.pos), t420 += this.jsx_readEntity(), s138 = this.pos;
                            break;
                        case 62:
                        case 125:
                            this.raise(this.pos, "Unexpected token `" + this.input[this.pos] + "`. Did you mean `" + (i211 === 62 ? "&gt;" : "&rbrace;") + '` or `{"' + this.input[this.pos] + '"}`?');
                        default:
                            f55(i211) ? (t420 += this.input.slice(s138, this.pos), t420 += this.jsx_readNewLine(!0), s138 = this.pos) : ++this.pos;
                    }
                }
            }
            jsx_readNewLine(t421) {
                let s139 = this.input.charCodeAt(this.pos), i212;
                return ++this.pos, s139 === 13 && this.input.charCodeAt(this.pos) === 10 ? (++this.pos, i212 = t421 ? `
` : `\r
`) : i212 = String.fromCharCode(s139), this.options.locations && (++this.curLine, this.lineStart = this.pos), i212;
            }
            jsx_readString(t422) {
                let s140 = "", i213 = ++this.pos;
                for(;;){
                    this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
                    let r187 = this.input.charCodeAt(this.pos);
                    if (r187 === t422) break;
                    r187 === 38 ? (s140 += this.input.slice(i213, this.pos), s140 += this.jsx_readEntity(), i213 = this.pos) : f55(r187) ? (s140 += this.input.slice(i213, this.pos), s140 += this.jsx_readNewLine(!1), i213 = this.pos) : ++this.pos;
                }
                return s140 += this.input.slice(i213, this.pos++), this.finishToken(u99.string, s140);
            }
            jsx_readEntity() {
                let t423 = "", s141 = 0, i214, r188 = this.input[this.pos];
                r188 !== "&" && this.raise(this.pos, "Entity must start with an ampersand");
                let l90 = ++this.pos;
                for(; this.pos < this.input.length && s141++ < 10;){
                    if (r188 = this.input[this.pos++], r188 === ";") {
                        t423[0] === "#" ? t423[1] === "x" ? (t423 = t423.substr(2), M15.test(t423) && (i214 = String.fromCharCode(parseInt(t423, 16)))) : (t423 = t423.substr(1), $33.test(t423) && (i214 = String.fromCharCode(parseInt(t423, 10)))) : i214 = U16[t423];
                        break;
                    }
                    t423 += r188;
                }
                return i214 || (this.pos = l90, "&");
            }
            jsx_readWord() {
                let t424, s142 = this.pos;
                do t424 = this.input.charCodeAt(++this.pos);
                while (F21(t424) || t424 === 45)
                return this.finishToken(n192.jsxName, this.input.slice(s142, this.pos));
            }
            jsx_parseIdentifier() {
                let t425 = this.startNode();
                return this.type === n192.jsxName ? t425.name = this.value : this.type.keyword ? t425.name = this.type.keyword : this.unexpected(), this.next(), this.finishNode(t425, "JSXIdentifier");
            }
            jsx_parseNamespacedName() {
                let t426 = this.start, s143 = this.startLoc, i215 = this.jsx_parseIdentifier();
                if (!e545.allowNamespaces || !this.eat(u99.colon)) return i215;
                var r189 = this.startNodeAt(t426, s143);
                return r189.namespace = i215, r189.name = this.jsx_parseIdentifier(), this.finishNode(r189, "JSXNamespacedName");
            }
            jsx_parseElementName() {
                if (this.type === n192.jsxTagEnd) return "";
                let t427 = this.start, s144 = this.startLoc, i216 = this.jsx_parseNamespacedName();
                for(this.type === u99.dot && i216.type === "JSXNamespacedName" && !e545.allowNamespacedObjects && this.unexpected(); this.eat(u99.dot);){
                    let r190 = this.startNodeAt(t427, s144);
                    r190.object = i216, r190.property = this.jsx_parseIdentifier(), i216 = this.finishNode(r190, "JSXMemberExpression");
                }
                return i216;
            }
            jsx_parseAttributeValue() {
                switch(this.type){
                    case u99.braceL:
                        let t428 = this.jsx_parseExpressionContainer();
                        return t428.expression.type === "JSXEmptyExpression" && this.raise(t428.start, "JSX attributes must only be assigned a non-empty expression"), t428;
                    case n192.jsxTagStart:
                    case u99.string:
                        return this.parseExprAtom();
                    default:
                        this.raise(this.start, "JSX value should be either an expression or a quoted JSX text");
                }
            }
            jsx_parseEmptyExpression() {
                let t429 = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
                return this.finishNodeAt(t429, "JSXEmptyExpression", this.start, this.startLoc);
            }
            jsx_parseExpressionContainer() {
                let t430 = this.startNode();
                return this.next(), t430.expression = this.type === u99.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression(), this.expect(u99.braceR), this.finishNode(t430, "JSXExpressionContainer");
            }
            jsx_parseAttribute() {
                let t431 = this.startNode();
                return this.eat(u99.braceL) ? (this.expect(u99.ellipsis), t431.argument = this.parseMaybeAssign(), this.expect(u99.braceR), this.finishNode(t431, "JSXSpreadAttribute")) : (t431.name = this.jsx_parseNamespacedName(), t431.value = this.eat(u99.eq) ? this.jsx_parseAttributeValue() : null, this.finishNode(t431, "JSXAttribute"));
            }
            jsx_parseOpeningElementAt(t432, s145) {
                let i217 = this.startNodeAt(t432, s145);
                i217.attributes = [];
                let r191 = this.jsx_parseElementName();
                for(r191 && (i217.name = r191); this.type !== u99.slash && this.type !== n192.jsxTagEnd;)i217.attributes.push(this.jsx_parseAttribute());
                return i217.selfClosing = this.eat(u99.slash), this.expect(n192.jsxTagEnd), this.finishNode(i217, r191 ? "JSXOpeningElement" : "JSXOpeningFragment");
            }
            jsx_parseClosingElementAt(t433, s146) {
                let i218 = this.startNodeAt(t433, s146), r192 = this.jsx_parseElementName();
                return r192 && (i218.name = r192), this.expect(n192.jsxTagEnd), this.finishNode(i218, r192 ? "JSXClosingElement" : "JSXClosingFragment");
            }
            jsx_parseElementAt(t434, s147) {
                let i219 = this.startNodeAt(t434, s147), r193 = [], l91 = this.jsx_parseOpeningElementAt(t434, s147), A25 = null;
                if (!l91.selfClosing) {
                    t: for(;;)switch(this.type){
                        case n192.jsxTagStart:
                            if (t434 = this.start, s147 = this.startLoc, this.next(), this.eat(u99.slash)) {
                                A25 = this.jsx_parseClosingElementAt(t434, s147);
                                break t;
                            }
                            r193.push(this.jsx_parseElementAt(t434, s147));
                            break;
                        case n192.jsxText:
                            r193.push(this.parseExprAtom());
                            break;
                        case u99.braceL:
                            r193.push(this.jsx_parseExpressionContainer());
                            break;
                        default:
                            this.unexpected();
                    }
                    x44(A25.name) !== x44(l91.name) && this.raise(A25.start, "Expected corresponding JSX closing tag for <" + x44(l91.name) + ">");
                }
                let E18 = l91.name ? "Element" : "Fragment";
                return i219["opening" + E18] = l91, i219["closing" + E18] = A25, i219.children = r193, this.type === u99.relational && this.value === "<" && this.raise(this.start, "Adjacent JSX elements must be wrapped in an enclosing tag"), this.finishNode(i219, "JSX" + E18);
            }
            jsx_parseText() {
                let t435 = this.parseLiteral(this.value);
                return t435.type = "JSXText", t435;
            }
            jsx_parseElement() {
                let t436 = this.start, s148 = this.startLoc;
                return this.next(), this.jsx_parseElementAt(t436, s148);
            }
            parseExprAtom(t437) {
                return this.type === n192.jsxText ? this.jsx_parseText() : this.type === n192.jsxTagStart ? this.jsx_parseElement() : super.parseExprAtom(t437);
            }
            readToken(t438) {
                let s149 = this.curContext();
                if (s149 === c42) return this.jsx_readToken();
                if (s149 === p74 || s149 === m37) {
                    if (g44(t438)) return this.jsx_readWord();
                    if (t438 == 62) return ++this.pos, this.finishToken(n192.jsxTagEnd);
                    if ((t438 === 34 || t438 === 39) && s149 == p74) return this.jsx_readString(t438);
                }
                return t438 === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33 ? (++this.pos, this.finishToken(n192.jsxTagStart)) : super.readToken(t438);
            }
            updateContext(t439) {
                if (this.type == u99.braceL) {
                    var s150 = this.curContext();
                    s150 == p74 ? this.context.push(d43.b_expr) : s150 == c42 ? this.context.push(d43.b_tmpl) : super.updateContext(t439), this.exprAllowed = !0;
                } else if (this.type === u99.slash && t439 === n192.jsxTagStart) this.context.length -= 2, this.context.push(m37), this.exprAllowed = !1;
                else return super.updateContext(t439);
            }
        };
    }
});
var w4 = _2(T2()), D2 = _2(T2()), { tokTypes: Y1  } = D2, { default: P2 , ...R1 } = D2, G2 = (w4.default ?? P2) ?? R1;
function u2(p75, n193, l92, h61) {
    let c43 = p75.length, f56 = 0, e546;
    if (n193 < 0 ? n193 = -n193 > c43 ? 0 : c43 + n193 : n193 = n193 > c43 ? c43 : n193, l92 = l92 > 0 ? l92 : 0, h61.length < 1e4) e546 = Array.from(h61), e546.unshift(n193, l92), [].splice.apply(p75, e546);
    else for(l92 && [].splice.apply(p75, [
        n193,
        l92
    ]); f56 < h61.length;)e546 = h61.slice(f56, f56 + 1e4), e546.unshift(n193, 0), [].splice.apply(p75, e546), f56 += 1e4, n193 += 1e4;
}
function g3(p76, n194) {
    return p76.length > 0 ? (u2(p76, p76.length, 0, n194), p76) : n194;
}
var l1 = {}.hasOwnProperty;
function y4(t440) {
    let e547 = {}, n195 = -1;
    for(; ++n195 < t440.length;)h3(e547, t440[n195]);
    return e547;
}
function h3(t441, e548) {
    let n196;
    for(n196 in e548){
        let c44 = (l1.call(t441, n196) ? t441[n196] : void 0) || (t441[n196] = {}), r194 = e548[n196], o;
        for(o in r194){
            l1.call(c44, o) || (c44[o] = []);
            let f57 = r194[o];
            a4(c44[o], Array.isArray(f57) ? f57 : f57 ? [
                f57
            ] : []);
        }
    }
}
function a4(t442, e549) {
    let n197 = -1, i220 = [];
    for(; ++n197 < e549.length;)(e549[n197].add === "after" ? t442 : i220).push(e549[n197]);
    u2(t442, 0, 0, i220);
}
var n1 = /[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;
var o2 = F(/[A-Za-z]/), r1 = F(/\d/), D3 = F(/[\dA-Fa-f]/), C4 = F(/[\dA-Za-z]/), e1 = F(/[!-/:-@[-`{-~]/), c3 = F(/[#-'*+\--9=?A-Z^-~]/);
function B3(u100) {
    return u100 !== null && (u100 < 32 || u100 === 127);
}
function a5(u101) {
    return u101 !== null && (u101 < 0 || u101 === 32);
}
function p4(u102) {
    return u102 !== null && u102 < -2;
}
function s3(u103) {
    return u103 === -2 || u103 === -1 || u103 === 32;
}
var x6 = F(/\s/), l2 = F(n1);
function F(u104) {
    return t443;
    function t443(A26) {
        return A26 !== null && u104.test(String.fromCharCode(A26));
    }
}
function p5(n198, t444, i221, u105) {
    let o = u105 ? u105 - 1 : Number.POSITIVE_INFINITY, I30 = 0;
    return a65;
    function a65(r195) {
        return s3(r195) ? (n198.enter(i221), e550(r195)) : t444(r195);
    }
    function e550(r196) {
        return s3(r196) && (I30++) < o ? (n198.consume(r196), e550) : (n198.exit(i221), t444(r196));
    }
}
function s4(r197) {
    let e551 = r197 || {}, n199 = e551.loc || {}, d44 = e551.range || [
        0,
        0
    ], t445 = d44[0] || e551.start, o = d44[1] || e551.end;
    return {
        start: {
            line: n199.start && typeof n199.start.line == "number" && n199.start.line > -1 ? n199.start.line : void 0,
            column: n199.start && typeof n199.start.column == "number" && n199.start.column > -1 ? n199.start.column + 1 : void 0,
            offset: typeof t445 == "number" && t445 > -1 ? t445 : void 0
        },
        end: {
            line: n199.end && typeof n199.end.line == "number" && n199.end.line > -1 ? n199.end.line : void 0,
            column: n199.end && typeof n199.end.column == "number" && n199.end.column > -1 ? n199.end.column + 1 : void 0,
            offset: typeof o == "number" && o > -1 ? o : void 0
        }
    };
}
var A4 = {}.hasOwnProperty, I4 = Symbol("continue"), S4 = Symbol("skip"), b5 = Symbol("exit");
function j3(r198, o) {
    var l93, a66;
    typeof o == "function" ? l93 = o : o && typeof o == "object" && (l93 = o.enter, a66 = o.leave), c45(r198, null, null, [])();
    function c45(t446, x45, g45, y37) {
        return m3(t446) && (h62.displayName = "node (" + t446.type + ")"), h62;
        function h62() {
            var u106 = l93 ? v4(l93(t446, x45, g45, y37)) : [], e552, n200, p77, f58, i222, s151;
            if (u106[0] === b5) return u106;
            if (u106[0] !== S4) {
                for(e552 in t446)if (A4.call(t446, e552) && t446[e552] && typeof t446[e552] == "object" && e552 !== "data" && e552 !== "position") {
                    if (i222 = t446[e552], p77 = y37.concat(t446), Array.isArray(i222)) for(n200 = 0; n200 > -1 && n200 < i222.length;)if (s151 = i222[n200], m3(s151)) {
                        if (f58 = c45(s151, e552, n200, p77)(), f58[0] === b5) return f58;
                        n200 = typeof f58[1] == "number" ? f58[1] : n200 + 1;
                    } else n200++;
                    else if (m3(i222) && (f58 = c45(i222, e552, null, p77)(), f58[0] === b5)) return f58;
                }
            }
            return a66 ? v4(a66(t446, x45, g45, y37)) : u106;
        }
    }
}
function v4(r199) {
    return Array.isArray(r199) ? r199 : typeof r199 == "number" ? [
        I4,
        r199
    ] : [
        r199
    ];
}
function m3(r200) {
    return Boolean(r200 && typeof r200 == "object" && typeof r200.type == "string" && r200.type.length > 0);
}
var T3 = {}.hasOwnProperty;
function C5(l94, n201) {
    let { prefix: f59 = "" , suffix: E19 = ""  } = n201, S32 = [], O24 = Object.assign({}, n201.acornOptions, {
        onComment: S32,
        preserveParens: !0
    }), P24 = [], o = {}, a67 = -1, b30 = !1, s152, m38, u107;
    for(n201.start && (u107 = n201.start.offset, o[n201.start.line] = n201.start); ++a67 < l94.length;){
        let e553 = l94[a67][1];
        l94[a67][0] === "exit" && (P24.push(l94[a67][2].sliceSerialize(e553)), u107 === void 0 && (u107 = l94[a67][1].start.offset), (!(e553.start.line in o) || o[e553.start.line].offset > e553.start.offset) && (o[e553.start.line] = e553.start));
    }
    let c46 = P24.join(""), g46 = f59 + c46 + E19, d45 = n201.expression && k4(c46);
    if (d45 && !n201.allowEmpty) throw new s2("Unexpected empty expression", p78(0), "micromark-extension-mdx-expression:unexpected-empty-expression");
    try {
        s152 = n201.expression && !d45 ? n201.acorn.parseExpressionAt(g46, 0, O24) : n201.acorn.parse(g46, O24);
    } catch (e1100) {
        let t447 = e1100, r201 = p78(t447.pos);
        t447.message = String(t447.message).replace(/ \(\d+:\d+\)$/, ""), t447.pos = r201.offset, t447.loc = {
            line: r201.line,
            column: r201.column - 1
        }, m38 = t447, b30 = t447.raisedAt >= f59.length + c46.length || t447.message === "Unterminated comment";
    }
    if (s152 && n201.expression && !d45) if (k4(g46.slice(s152.end, g46.length - E19.length))) s152 = {
        type: "Program",
        start: 0,
        end: f59.length + c46.length,
        body: [
            {
                type: "ExpressionStatement",
                expression: s152,
                start: 0,
                end: f59.length + c46.length
            }
        ],
        sourceType: "module",
        comments: []
    };
    else {
        let e554 = p78(s152.end);
        m38 = new Error("Unexpected content after expression"), m38.pos = e554.offset, m38.loc = {
            line: e554.line,
            column: e554.column - 1
        }, s152 = void 0;
    }
    return s152 && (s152.comments = S32, j3(s152, (e555, t448, r202, i223)=>{
        let x46 = i223[i223.length - 1], h63 = t448;
        e555.type === "ParenthesizedExpression" && x46 && h63 && (typeof r202 == "number" && (x46 = x46[h63], h63 = r202), x46[h63] = e555.expression);
        let y38 = p78(e555.start), w29 = p78(e555.end);
        e555.start = y38.offset, e555.end = w29.offset, e555.loc = {
            start: {
                line: y38.line,
                column: y38.column - 1
            },
            end: {
                line: w29.line,
                column: w29.column - 1
            }
        }, e555.range = [
            e555.start,
            e555.end
        ];
    })), {
        estree: s152,
        error: m38,
        swallow: b30
    };
    function p78(e556) {
        let t449 = e556 - f59.length, r203, i224;
        t449 < 0 ? t449 = 0 : t449 > c46.length && (t449 = c46.length), t449 += u107;
        for(r203 in o)if (T3.call(o, r203)) {
            if (i224 || (i224 = o[r203]), o[r203].offset > e556) break;
            i224 = o[r203];
        }
        return {
            line: i224.line,
            column: i224.column + (t449 - i224.offset),
            offset: t449
        };
    }
}
function k4(l95) {
    return /^\s*$/.test(l95.replace(/\/\*[\s\S]*?\*\//g, "").replace(/\/\/[^\r\n]*(\r\n|\n|\r)/g, ""));
}
function D4(e557, b31, u108, o, l96, d46, P25, j35, c47, M16, y39, v31) {
    let t450 = this, z17 = this.events.length + 3, a68 = this.events[this.events.length - 1], S33 = a68 && a68[1].type === "linePrefix" ? a68[2].sliceSerialize(a68[1], !0).length : 0, B25 = S33 ? S33 + 1 : 0, w30 = 1, g47, h64;
    return C;
    function C(n202) {
        return e557.enter(u108), e557.enter(o), e557.consume(n202), e557.exit(o), g47 = t450.now(), m39;
    }
    function m39(n203) {
        if (n203 === null) throw h64 || new s2("Unexpected end of file in expression, expected a corresponding closing brace for `{`", t450.now(), "micromark-extension-mdx-expression:unexpected-eof");
        if (n203 === 125) return F22(n203);
        if (p4(n203)) {
            e557.enter("lineEnding"), e557.consume(n203), e557.exit("lineEnding");
            let x47 = v31 ? v31 + 4 - t450.now().column : 0, r204 = Math.max(B25, x47);
            return r204 ? p5(e557, m39, "linePrefix", r204) : m39;
        }
        let i225 = t450.now();
        if (i225.line !== g47.line && !y39 && t450.parser.lazy[i225.line]) throw new s2("Unexpected end of file in expression, expected a corresponding closing brace for `{`", t450.now(), "micromark-extension-mdx-expression:unexpected-eof");
        return e557.enter(l96), p79(n203);
    }
    function p79(n204) {
        return n204 === null || n204 === 125 || p4(n204) ? (e557.exit(l96), m39(n204)) : n204 === 123 && !d46 ? (e557.consume(n204), w30++, p79) : (e557.consume(n204), p79);
    }
    function F22(n205) {
        if (w30--, !d46) return w30 ? (e557.enter(l96), e557.consume(n205), p79) : (e557.enter(o), e557.consume(n205), e557.exit(o), e557.exit(u108), b31);
        let i226 = C5(t450.events.slice(z17), {
            acorn: d46,
            acornOptions: P25,
            start: g47,
            expression: !0,
            allowEmpty: M16,
            prefix: c47 ? "({" : "",
            suffix: c47 ? "})" : ""
        }), x48 = i226.estree;
        if (c47 && x48) {
            let r205 = x48.body[0];
            if (r205.type !== "ExpressionStatement" || r205.expression.type !== "ObjectExpression") throw new s2("Unexpected `" + r205.type + "` in code: expected an object spread (`{...spread}`)", s4(r205).start, "micromark-extension-mdx-expression:non-spread");
            if (r205.expression.properties[1]) throw new s2("Unexpected extra content in spread: only a single spread is supported", s4(r205.expression.properties[1]).start, "micromark-extension-mdx-expression:spread-extra");
            if (r205.expression.properties[0] && r205.expression.properties[0].type !== "SpreadElement") throw new s2("Unexpected `" + r205.expression.properties[0].type + "` in code: only spread elements are supported", s4(r205.expression.properties[0]).start, "micromark-extension-mdx-expression:non-spread");
        }
        if (i226.error) {
            if (h64 = new s2("Could not parse expression with acorn: " + i226.error.message, {
                line: i226.error.loc.line,
                column: i226.error.loc.column + 1,
                offset: i226.error.pos
            }, "micromark-extension-mdx-expression:acorn"), n205 !== null && i226.swallow) return e557.enter(l96), e557.consume(n205), p79;
            throw h64;
        }
        return e557.enter(o), e557.consume(n205), e557.exit(o), Object.assign(e557.exit(u108), j35 ? {
            estree: x48
        } : void 0), b31;
    }
}
function k5(e558 = {}) {
    let x49 = e558.addResult, t451 = e558.acorn, l97 = e558.spread, n206 = e558.allowEmpty, s153;
    if (n206 == null && (n206 = !0), t451) {
        if (!t451.parseExpressionAt) throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
        s153 = Object.assign({
            ecmaVersion: 2020,
            sourceType: "module"
        }, e558.acornOptions);
    } else if (e558.acornOptions || e558.addResult) throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
    return {
        flow: {
            [123]: {
                tokenize: d47,
                concrete: !0
            }
        },
        text: {
            [123]: {
                tokenize: m40
            }
        }
    };
    function d47(o, i227, a69) {
        let c48 = this;
        return p80;
        function p80(r206) {
            return D4.call(c48, o, p5(o, f60, "whitespace"), "mdxFlowExpression", "mdxFlowExpressionMarker", "mdxFlowExpressionChunk", t451, s153, x49, l97, n206)(r206);
        }
        function f60(r207) {
            return r207 === null || p4(r207) ? i227(r207) : a69(r207);
        }
    }
    function m40(o, i228) {
        let a70 = this;
        return c49;
        function c49(p81) {
            return D4.call(a70, o, i228, "mdxTextExpression", "mdxTextExpressionMarker", "mdxTextExpressionChunk", t451, s153, x49, l97, n206, !0)(p81);
        }
    }
}
var F1 = /[$A-Z_a-z\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/, B4 = /[\d\u00B7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F]/;
function C6(A27) {
    return F1.test(String.fromCharCode(A27));
}
function D5(A28) {
    var u109 = String.fromCharCode(A28);
    return F1.test(u109) || B4.test(u109);
}
function r2(A29) {
    for(var u110 = -1; ++u110 < A29.length;)if (!(u110 ? D5 : C6)(A29.charCodeAt(u110))) return !1;
    return u110 > 0;
}
var _t1 = {
    tokenize: $t,
    partial: !0
};
function C7(r208, e559, x50, s154, o, h65, u111, S34, w31, V14, l98, p82, L16, N19, D24, W12, O25, at4, it3, et4, T20, _15, U17, q26, Q8, $34, R19, M17, B26, ut3, xt2, lt3) {
    let E20 = this, a71, F23, v32;
    return mt3;
    function mt3(t452) {
        return v32 = E20.now(), r208.enter(S34), r208.enter(w31), r208.consume(t452), r208.exit(w31), st2;
    }
    function st2(t453) {
        return p4(t453) || s3(t453) ? x50(t453) : (a71 = ot3, n207(t453));
    }
    function ot3(t454) {
        if (t454 === 47) return r208.enter(V14), r208.consume(t454), r208.exit(V14), a71 = ht3, n207;
        if (t454 === 62) return z18(t454);
        if (t454 !== null && C6(t454)) return r208.enter(p82), r208.enter(L16), r208.consume(t454), P26;
        i229(t454, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (t454 === 33 ? " (note: to create a comment in MDX, use `{/* text */}`)" : ""));
    }
    function ht3(t455) {
        if (t455 === 62) return z18(t455);
        if (t455 !== null && C6(t455)) return r208.enter(p82), r208.enter(L16), r208.consume(t455), P26;
        i229(t455, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (t455 === 42 || t455 === 47 ? " (note: JS comments in JSX tags are not supported in MDX)" : ""));
    }
    function P26(t456) {
        if (t456 === 45 || t456 !== null && D5(t456)) return r208.consume(t456), P26;
        if (t456 === 46 || t456 === 47 || t456 === 58 || t456 === 62 || t456 === 123 || a5(t456) || x6(t456)) return r208.exit(L16), a71 = bt3, n207(t456);
        i229(t456, "in name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (t456 === 64 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
    }
    function bt3(t457) {
        if (t457 === 46) return r208.enter(N19), r208.consume(t457), r208.exit(N19), a71 = G15, n207;
        if (t457 === 58) return r208.enter(W12), r208.consume(t457), r208.exit(W12), a71 = wt3, n207;
        if (t457 === 47 || t457 === 62 || t457 === 123 || t457 !== null && C6(t457)) return r208.exit(p82), b32(t457);
        i229(t457, "after name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag");
    }
    function G15(t458) {
        if (t458 !== null && C6(t458)) return r208.enter(D24), r208.consume(t458), H10;
        i229(t458, "before member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag");
    }
    function H10(t459) {
        if (t459 === 45 || t459 !== null && D5(t459)) return r208.consume(t459), H10;
        if (t459 === 46 || t459 === 47 || t459 === 62 || t459 === 123 || a5(t459) || x6(t459)) return r208.exit(D24), a71 = gt3, n207(t459);
        i229(t459, "in member name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (t459 === 64 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
    }
    function gt3(t460) {
        if (t460 === 46) return r208.enter(N19), r208.consume(t460), r208.exit(N19), a71 = G15, n207;
        if (t460 === 47 || t460 === 62 || t460 === 123 || t460 !== null && C6(t460)) return r208.exit(p82), b32(t460);
        i229(t460, "after member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag");
    }
    function wt3(t461) {
        if (t461 !== null && C6(t461)) return r208.enter(O25), r208.consume(t461), K14;
        i229(t461, "before local name", "a character that can start a name, such as a letter, `$`, or `_`" + (t461 === 43 || t461 !== null && t461 > 46 && t461 < 58 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
    }
    function K14(t462) {
        if (t462 === 45 || t462 !== null && D5(t462)) return r208.consume(t462), K14;
        if (t462 === 47 || t462 === 62 || t462 === 123 || a5(t462) || x6(t462)) return r208.exit(O25), a71 = Jt, n207(t462);
        i229(t462, "in local name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag");
    }
    function Jt(t463) {
        if (t463 === 47 || t463 === 62 || t463 === 123 || t463 !== null && C6(t463)) return r208.exit(p82), b32(t463);
        i229(t463, "after local name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag");
    }
    function b32(t464) {
        if (t464 === 47) return r208.enter(l98), r208.consume(t464), r208.exit(l98), a71 = At2, n207;
        if (t464 === 62) return z18(t464);
        if (t464 === 123) return D4.call(E20, r208, pt3, at4, it3, et4, s154, o, h65, !0, !1, u111, v32.column)(t464);
        if (t464 !== null && C6(t464)) return r208.enter(T20), r208.enter(_15), r208.enter(U17), r208.consume(t464), Y8;
        i229(t464, "before attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag");
    }
    function pt3(t465) {
        return a71 = b32, n207(t465);
    }
    function Y8(t466) {
        if (t466 === 45 || t466 !== null && D5(t466)) return r208.consume(t466), Y8;
        if (t466 === 47 || t466 === 58 || t466 === 61 || t466 === 62 || t466 === 123 || a5(t466) || x6(t466)) return r208.exit(U17), a71 = Tt3, n207(t466);
        i229(t466, "in attribute name", "an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag");
    }
    function Tt3(t467) {
        if (t467 === 58) return r208.enter(q26), r208.consume(t467), r208.exit(q26), a71 = Et2, n207;
        if (t467 === 61) return r208.exit(_15), r208.enter($34), r208.consume(t467), r208.exit($34), a71 = f61, n207;
        if (t467 === 47 || t467 === 62 || t467 === 123 || a5(t467) || x6(t467) || t467 !== null && C6(t467)) return r208.exit(_15), r208.exit(T20), a71 = b32, n207(t467);
        i229(t467, "after attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag");
    }
    function Et2(t468) {
        if (t468 !== null && C6(t468)) return r208.enter(Q8), r208.consume(t468), Z11;
        i229(t468, "before local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag");
    }
    function Z11(t469) {
        if (t469 === 45 || t469 !== null && D5(t469)) return r208.consume(t469), Z11;
        if (t469 === 47 || t469 === 61 || t469 === 62 || t469 === 123 || a5(t469) || x6(t469)) return r208.exit(Q8), r208.exit(_15), a71 = Ft4, n207(t469);
        i229(t469, "in local attribute name", "an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag");
    }
    function Ft4(t470) {
        if (t470 === 61) return r208.enter($34), r208.consume(t470), r208.exit($34), a71 = f61, n207;
        if (t470 === 47 || t470 === 62 || t470 === 123 || t470 !== null && C6(t470)) return r208.exit(T20), b32(t470);
        i229(t470, "after local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag");
    }
    function f61(t471) {
        if (t471 === 34 || t471 === 39) return r208.enter(R19), r208.enter(M17), r208.consume(t471), r208.exit(M17), F23 = t471, X16;
        if (t471 === 123) return D4.call(E20, r208, kt4, ut3, xt2, lt3, s154, o, h65, !1, !1, u111, v32.column)(t471);
        i229(t471, "before attribute value", "a character that can start an attribute value, such as `\"`, `'`, or `{`" + (t471 === 60 ? " (note: to use an element or fragment as a prop value in MDX, use `{<element />}`)" : ""));
    }
    function kt4(t472) {
        return r208.exit(T20), a71 = b32, n207(t472);
    }
    function X16(t473) {
        return t473 === null && i229(t473, "in attribute value", "a corresponding closing quote `" + String.fromCharCode(F23) + "`"), t473 === F23 ? (r208.enter(M17), r208.consume(t473), r208.exit(M17), r208.exit(R19), r208.exit(T20), F23 = void 0, a71 = b32, n207) : p4(t473) ? (a71 = X16, n207(t473)) : (r208.enter(B26), I31(t473));
    }
    function I31(t474) {
        return t474 === null || t474 === F23 || p4(t474) ? (r208.exit(B26), X16(t474)) : (r208.consume(t474), I31);
    }
    function At2(t475) {
        if (t475 === 62) return z18(t475);
        i229(t475, "after self-closing slash", "`>` to end the tag" + (t475 === 42 || t475 === 47 ? " (note: JS comments in JSX tags are not supported in MDX)" : ""));
    }
    function z18(t476) {
        return r208.enter(w31), r208.consume(t476), r208.exit(w31), r208.exit(S34), e559;
    }
    function n207(t477) {
        return p4(t477) ? u111 ? (r208.enter("lineEnding"), r208.consume(t477), r208.exit("lineEnding"), p5(r208, n207, "linePrefix", 4)) : r208.attempt(_t1, p5(r208, n207, "linePrefix", 4), St3)(t477) : s3(t477) || x6(t477) ? (r208.enter("esWhitespace"), y40(t477)) : a71(t477);
    }
    function y40(t478) {
        return p4(t478) || !(s3(t478) || x6(t478)) ? (r208.exit("esWhitespace"), n207(t478)) : (r208.consume(t478), y40);
    }
    function St3() {
        throw new s2("Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc", E20.now(), "micromark-extension-mdx-jsx:unexpected-eof");
    }
    function i229(t479, Vt3, Nt3) {
        throw new s2("Unexpected " + (t479 === null ? "end of file" : "character `" + (t479 === 96 ? "` ` `" : String.fromCharCode(t479)) + "` (" + Mt(t479) + ")") + " " + Vt3 + ", expected " + Nt3, E20.now(), "micromark-extension-mdx-jsx:unexpected-" + (t479 === null ? "eof" : "character"));
    }
}
function $t(r209, e560, x51) {
    let s155 = this;
    return o;
    function o(u112) {
        return r209.enter("lineEnding"), r209.consume(u112), r209.exit("lineEnding"), h66;
    }
    function h66(u113) {
        return s155.parser.lazy[s155.now().line] ? x51(u113) : e560(u113);
    }
}
function Mt(r210) {
    return "U+" + r210.toString(16).toUpperCase().padStart(4, "0");
}
function rt1(r211, e561, x52) {
    return {
        tokenize: s156
    };
    function s156(o, h67, u114) {
        return C7.call(this, o, h67, u114, r211, e561, x52, !0, "mdxJsxTextTag", "mdxJsxTextTagMarker", "mdxJsxTextTagClosingMarker", "mdxJsxTextTagSelfClosingMarker", "mdxJsxTextTagName", "mdxJsxTextTagNamePrimary", "mdxJsxTextTagNameMemberMarker", "mdxJsxTextTagNameMember", "mdxJsxTextTagNamePrefixMarker", "mdxJsxTextTagNameLocal", "mdxJsxTextTagExpressionAttribute", "mdxJsxTextTagExpressionAttributeMarker", "mdxJsxTextTagExpressionAttributeValue", "mdxJsxTextTagAttribute", "mdxJsxTextTagAttributeName", "mdxJsxTextTagAttributeNamePrimary", "mdxJsxTextTagAttributeNamePrefixMarker", "mdxJsxTextTagAttributeNameLocal", "mdxJsxTextTagAttributeInitializerMarker", "mdxJsxTextTagAttributeValueLiteral", "mdxJsxTextTagAttributeValueLiteralMarker", "mdxJsxTextTagAttributeValueLiteralValue", "mdxJsxTextTagAttributeValueExpression", "mdxJsxTextTagAttributeValueExpressionMarker", "mdxJsxTextTagAttributeValueExpressionValue");
    }
}
function nt1(r212, e562, x53) {
    return {
        tokenize: s157,
        concrete: !0
    };
    function s157(o, h68, u115) {
        let S35 = this;
        return w32;
        function w32(l99) {
            return C7.call(S35, o, p5(o, V15, "whitespace"), u115, r212, e562, x53, !1, "mdxJsxFlowTag", "mdxJsxFlowTagMarker", "mdxJsxFlowTagClosingMarker", "mdxJsxFlowTagSelfClosingMarker", "mdxJsxFlowTagName", "mdxJsxFlowTagNamePrimary", "mdxJsxFlowTagNameMemberMarker", "mdxJsxFlowTagNameMember", "mdxJsxFlowTagNamePrefixMarker", "mdxJsxFlowTagNameLocal", "mdxJsxFlowTagExpressionAttribute", "mdxJsxFlowTagExpressionAttributeMarker", "mdxJsxFlowTagExpressionAttributeValue", "mdxJsxFlowTagAttribute", "mdxJsxFlowTagAttributeName", "mdxJsxFlowTagAttributeNamePrimary", "mdxJsxFlowTagAttributeNamePrefixMarker", "mdxJsxFlowTagAttributeNameLocal", "mdxJsxFlowTagAttributeInitializerMarker", "mdxJsxFlowTagAttributeValueLiteral", "mdxJsxFlowTagAttributeValueLiteralMarker", "mdxJsxFlowTagAttributeValueLiteralValue", "mdxJsxFlowTagAttributeValueExpression", "mdxJsxFlowTagAttributeValueExpressionMarker", "mdxJsxFlowTagAttributeValueExpressionValue")(l99);
        }
        function V15(l100) {
            return l100 === 60 ? w32(l100) : l100 === null || p4(l100) ? h68(l100) : u115(l100);
        }
    }
}
function Lt1(r213 = {}) {
    let e563 = r213.acorn, x54;
    if (e563) {
        if (!e563.parse || !e563.parseExpressionAt) throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
        x54 = Object.assign({
            ecmaVersion: 2020,
            sourceType: "module"
        }, r213.acornOptions, {
            locations: !0
        });
    } else if (r213.acornOptions || r213.addResult) throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
    return {
        flow: {
            [60]: nt1(e563, x54, r213.addResult)
        },
        text: {
            [60]: rt1(e563, x54, r213.addResult)
        }
    };
}
var l3 = {
    disable: {
        null: [
            "autolink",
            "codeIndented",
            "htmlFlow",
            "htmlText"
        ]
    }
};
function a6(n208) {
    if (n208 === null || a5(n208) || x6(n208)) return 1;
    if (l2(n208)) return 2;
}
function c4(o, e564, r214) {
    let i230 = [], n209 = -1;
    for(; ++n209 < o.length;){
        let l101 = o[n209].resolveAll;
        l101 && !i230.includes(l101) && (e564 = l101(e564, r214), i230.push(l101));
    }
    return e564;
}
var r3 = {
    AEli: "\xC6",
    AElig: "\xC6",
    AM: "&",
    AMP: "&",
    Aacut: "\xC1",
    Aacute: "\xC1",
    Abreve: "\u0102",
    Acir: "\xC2",
    Acirc: "\xC2",
    Acy: "\u0410",
    Afr: "\u{1D504}",
    Agrav: "\xC0",
    Agrave: "\xC0",
    Alpha: "\u0391",
    Amacr: "\u0100",
    And: "\u2A53",
    Aogon: "\u0104",
    Aopf: "\u{1D538}",
    ApplyFunction: "\u2061",
    Arin: "\xC5",
    Aring: "\xC5",
    Ascr: "\u{1D49C}",
    Assign: "\u2254",
    Atild: "\xC3",
    Atilde: "\xC3",
    Aum: "\xC4",
    Auml: "\xC4",
    Backslash: "\u2216",
    Barv: "\u2AE7",
    Barwed: "\u2306",
    Bcy: "\u0411",
    Because: "\u2235",
    Bernoullis: "\u212C",
    Beta: "\u0392",
    Bfr: "\u{1D505}",
    Bopf: "\u{1D539}",
    Breve: "\u02D8",
    Bscr: "\u212C",
    Bumpeq: "\u224E",
    CHcy: "\u0427",
    COP: "\xA9",
    COPY: "\xA9",
    Cacute: "\u0106",
    Cap: "\u22D2",
    CapitalDifferentialD: "\u2145",
    Cayleys: "\u212D",
    Ccaron: "\u010C",
    Ccedi: "\xC7",
    Ccedil: "\xC7",
    Ccirc: "\u0108",
    Cconint: "\u2230",
    Cdot: "\u010A",
    Cedilla: "\xB8",
    CenterDot: "\xB7",
    Cfr: "\u212D",
    Chi: "\u03A7",
    CircleDot: "\u2299",
    CircleMinus: "\u2296",
    CirclePlus: "\u2295",
    CircleTimes: "\u2297",
    ClockwiseContourIntegral: "\u2232",
    CloseCurlyDoubleQuote: "\u201D",
    CloseCurlyQuote: "\u2019",
    Colon: "\u2237",
    Colone: "\u2A74",
    Congruent: "\u2261",
    Conint: "\u222F",
    ContourIntegral: "\u222E",
    Copf: "\u2102",
    Coproduct: "\u2210",
    CounterClockwiseContourIntegral: "\u2233",
    Cross: "\u2A2F",
    Cscr: "\u{1D49E}",
    Cup: "\u22D3",
    CupCap: "\u224D",
    DD: "\u2145",
    DDotrahd: "\u2911",
    DJcy: "\u0402",
    DScy: "\u0405",
    DZcy: "\u040F",
    Dagger: "\u2021",
    Darr: "\u21A1",
    Dashv: "\u2AE4",
    Dcaron: "\u010E",
    Dcy: "\u0414",
    Del: "\u2207",
    Delta: "\u0394",
    Dfr: "\u{1D507}",
    DiacriticalAcute: "\xB4",
    DiacriticalDot: "\u02D9",
    DiacriticalDoubleAcute: "\u02DD",
    DiacriticalGrave: "`",
    DiacriticalTilde: "\u02DC",
    Diamond: "\u22C4",
    DifferentialD: "\u2146",
    Dopf: "\u{1D53B}",
    Dot: "\xA8",
    DotDot: "\u20DC",
    DotEqual: "\u2250",
    DoubleContourIntegral: "\u222F",
    DoubleDot: "\xA8",
    DoubleDownArrow: "\u21D3",
    DoubleLeftArrow: "\u21D0",
    DoubleLeftRightArrow: "\u21D4",
    DoubleLeftTee: "\u2AE4",
    DoubleLongLeftArrow: "\u27F8",
    DoubleLongLeftRightArrow: "\u27FA",
    DoubleLongRightArrow: "\u27F9",
    DoubleRightArrow: "\u21D2",
    DoubleRightTee: "\u22A8",
    DoubleUpArrow: "\u21D1",
    DoubleUpDownArrow: "\u21D5",
    DoubleVerticalBar: "\u2225",
    DownArrow: "\u2193",
    DownArrowBar: "\u2913",
    DownArrowUpArrow: "\u21F5",
    DownBreve: "\u0311",
    DownLeftRightVector: "\u2950",
    DownLeftTeeVector: "\u295E",
    DownLeftVector: "\u21BD",
    DownLeftVectorBar: "\u2956",
    DownRightTeeVector: "\u295F",
    DownRightVector: "\u21C1",
    DownRightVectorBar: "\u2957",
    DownTee: "\u22A4",
    DownTeeArrow: "\u21A7",
    Downarrow: "\u21D3",
    Dscr: "\u{1D49F}",
    Dstrok: "\u0110",
    ENG: "\u014A",
    ET: "\xD0",
    ETH: "\xD0",
    Eacut: "\xC9",
    Eacute: "\xC9",
    Ecaron: "\u011A",
    Ecir: "\xCA",
    Ecirc: "\xCA",
    Ecy: "\u042D",
    Edot: "\u0116",
    Efr: "\u{1D508}",
    Egrav: "\xC8",
    Egrave: "\xC8",
    Element: "\u2208",
    Emacr: "\u0112",
    EmptySmallSquare: "\u25FB",
    EmptyVerySmallSquare: "\u25AB",
    Eogon: "\u0118",
    Eopf: "\u{1D53C}",
    Epsilon: "\u0395",
    Equal: "\u2A75",
    EqualTilde: "\u2242",
    Equilibrium: "\u21CC",
    Escr: "\u2130",
    Esim: "\u2A73",
    Eta: "\u0397",
    Eum: "\xCB",
    Euml: "\xCB",
    Exists: "\u2203",
    ExponentialE: "\u2147",
    Fcy: "\u0424",
    Ffr: "\u{1D509}",
    FilledSmallSquare: "\u25FC",
    FilledVerySmallSquare: "\u25AA",
    Fopf: "\u{1D53D}",
    ForAll: "\u2200",
    Fouriertrf: "\u2131",
    Fscr: "\u2131",
    GJcy: "\u0403",
    G: ">",
    GT: ">",
    Gamma: "\u0393",
    Gammad: "\u03DC",
    Gbreve: "\u011E",
    Gcedil: "\u0122",
    Gcirc: "\u011C",
    Gcy: "\u0413",
    Gdot: "\u0120",
    Gfr: "\u{1D50A}",
    Gg: "\u22D9",
    Gopf: "\u{1D53E}",
    GreaterEqual: "\u2265",
    GreaterEqualLess: "\u22DB",
    GreaterFullEqual: "\u2267",
    GreaterGreater: "\u2AA2",
    GreaterLess: "\u2277",
    GreaterSlantEqual: "\u2A7E",
    GreaterTilde: "\u2273",
    Gscr: "\u{1D4A2}",
    Gt: "\u226B",
    HARDcy: "\u042A",
    Hacek: "\u02C7",
    Hat: "^",
    Hcirc: "\u0124",
    Hfr: "\u210C",
    HilbertSpace: "\u210B",
    Hopf: "\u210D",
    HorizontalLine: "\u2500",
    Hscr: "\u210B",
    Hstrok: "\u0126",
    HumpDownHump: "\u224E",
    HumpEqual: "\u224F",
    IEcy: "\u0415",
    IJlig: "\u0132",
    IOcy: "\u0401",
    Iacut: "\xCD",
    Iacute: "\xCD",
    Icir: "\xCE",
    Icirc: "\xCE",
    Icy: "\u0418",
    Idot: "\u0130",
    Ifr: "\u2111",
    Igrav: "\xCC",
    Igrave: "\xCC",
    Im: "\u2111",
    Imacr: "\u012A",
    ImaginaryI: "\u2148",
    Implies: "\u21D2",
    Int: "\u222C",
    Integral: "\u222B",
    Intersection: "\u22C2",
    InvisibleComma: "\u2063",
    InvisibleTimes: "\u2062",
    Iogon: "\u012E",
    Iopf: "\u{1D540}",
    Iota: "\u0399",
    Iscr: "\u2110",
    Itilde: "\u0128",
    Iukcy: "\u0406",
    Ium: "\xCF",
    Iuml: "\xCF",
    Jcirc: "\u0134",
    Jcy: "\u0419",
    Jfr: "\u{1D50D}",
    Jopf: "\u{1D541}",
    Jscr: "\u{1D4A5}",
    Jsercy: "\u0408",
    Jukcy: "\u0404",
    KHcy: "\u0425",
    KJcy: "\u040C",
    Kappa: "\u039A",
    Kcedil: "\u0136",
    Kcy: "\u041A",
    Kfr: "\u{1D50E}",
    Kopf: "\u{1D542}",
    Kscr: "\u{1D4A6}",
    LJcy: "\u0409",
    L: "<",
    LT: "<",
    Lacute: "\u0139",
    Lambda: "\u039B",
    Lang: "\u27EA",
    Laplacetrf: "\u2112",
    Larr: "\u219E",
    Lcaron: "\u013D",
    Lcedil: "\u013B",
    Lcy: "\u041B",
    LeftAngleBracket: "\u27E8",
    LeftArrow: "\u2190",
    LeftArrowBar: "\u21E4",
    LeftArrowRightArrow: "\u21C6",
    LeftCeiling: "\u2308",
    LeftDoubleBracket: "\u27E6",
    LeftDownTeeVector: "\u2961",
    LeftDownVector: "\u21C3",
    LeftDownVectorBar: "\u2959",
    LeftFloor: "\u230A",
    LeftRightArrow: "\u2194",
    LeftRightVector: "\u294E",
    LeftTee: "\u22A3",
    LeftTeeArrow: "\u21A4",
    LeftTeeVector: "\u295A",
    LeftTriangle: "\u22B2",
    LeftTriangleBar: "\u29CF",
    LeftTriangleEqual: "\u22B4",
    LeftUpDownVector: "\u2951",
    LeftUpTeeVector: "\u2960",
    LeftUpVector: "\u21BF",
    LeftUpVectorBar: "\u2958",
    LeftVector: "\u21BC",
    LeftVectorBar: "\u2952",
    Leftarrow: "\u21D0",
    Leftrightarrow: "\u21D4",
    LessEqualGreater: "\u22DA",
    LessFullEqual: "\u2266",
    LessGreater: "\u2276",
    LessLess: "\u2AA1",
    LessSlantEqual: "\u2A7D",
    LessTilde: "\u2272",
    Lfr: "\u{1D50F}",
    Ll: "\u22D8",
    Lleftarrow: "\u21DA",
    Lmidot: "\u013F",
    LongLeftArrow: "\u27F5",
    LongLeftRightArrow: "\u27F7",
    LongRightArrow: "\u27F6",
    Longleftarrow: "\u27F8",
    Longleftrightarrow: "\u27FA",
    Longrightarrow: "\u27F9",
    Lopf: "\u{1D543}",
    LowerLeftArrow: "\u2199",
    LowerRightArrow: "\u2198",
    Lscr: "\u2112",
    Lsh: "\u21B0",
    Lstrok: "\u0141",
    Lt: "\u226A",
    Map: "\u2905",
    Mcy: "\u041C",
    MediumSpace: "\u205F",
    Mellintrf: "\u2133",
    Mfr: "\u{1D510}",
    MinusPlus: "\u2213",
    Mopf: "\u{1D544}",
    Mscr: "\u2133",
    Mu: "\u039C",
    NJcy: "\u040A",
    Nacute: "\u0143",
    Ncaron: "\u0147",
    Ncedil: "\u0145",
    Ncy: "\u041D",
    NegativeMediumSpace: "\u200B",
    NegativeThickSpace: "\u200B",
    NegativeThinSpace: "\u200B",
    NegativeVeryThinSpace: "\u200B",
    NestedGreaterGreater: "\u226B",
    NestedLessLess: "\u226A",
    NewLine: `
`,
    Nfr: "\u{1D511}",
    NoBreak: "\u2060",
    NonBreakingSpace: "\xA0",
    Nopf: "\u2115",
    Not: "\u2AEC",
    NotCongruent: "\u2262",
    NotCupCap: "\u226D",
    NotDoubleVerticalBar: "\u2226",
    NotElement: "\u2209",
    NotEqual: "\u2260",
    NotEqualTilde: "\u2242\u0338",
    NotExists: "\u2204",
    NotGreater: "\u226F",
    NotGreaterEqual: "\u2271",
    NotGreaterFullEqual: "\u2267\u0338",
    NotGreaterGreater: "\u226B\u0338",
    NotGreaterLess: "\u2279",
    NotGreaterSlantEqual: "\u2A7E\u0338",
    NotGreaterTilde: "\u2275",
    NotHumpDownHump: "\u224E\u0338",
    NotHumpEqual: "\u224F\u0338",
    NotLeftTriangle: "\u22EA",
    NotLeftTriangleBar: "\u29CF\u0338",
    NotLeftTriangleEqual: "\u22EC",
    NotLess: "\u226E",
    NotLessEqual: "\u2270",
    NotLessGreater: "\u2278",
    NotLessLess: "\u226A\u0338",
    NotLessSlantEqual: "\u2A7D\u0338",
    NotLessTilde: "\u2274",
    NotNestedGreaterGreater: "\u2AA2\u0338",
    NotNestedLessLess: "\u2AA1\u0338",
    NotPrecedes: "\u2280",
    NotPrecedesEqual: "\u2AAF\u0338",
    NotPrecedesSlantEqual: "\u22E0",
    NotReverseElement: "\u220C",
    NotRightTriangle: "\u22EB",
    NotRightTriangleBar: "\u29D0\u0338",
    NotRightTriangleEqual: "\u22ED",
    NotSquareSubset: "\u228F\u0338",
    NotSquareSubsetEqual: "\u22E2",
    NotSquareSuperset: "\u2290\u0338",
    NotSquareSupersetEqual: "\u22E3",
    NotSubset: "\u2282\u20D2",
    NotSubsetEqual: "\u2288",
    NotSucceeds: "\u2281",
    NotSucceedsEqual: "\u2AB0\u0338",
    NotSucceedsSlantEqual: "\u22E1",
    NotSucceedsTilde: "\u227F\u0338",
    NotSuperset: "\u2283\u20D2",
    NotSupersetEqual: "\u2289",
    NotTilde: "\u2241",
    NotTildeEqual: "\u2244",
    NotTildeFullEqual: "\u2247",
    NotTildeTilde: "\u2249",
    NotVerticalBar: "\u2224",
    Nscr: "\u{1D4A9}",
    Ntild: "\xD1",
    Ntilde: "\xD1",
    Nu: "\u039D",
    OElig: "\u0152",
    Oacut: "\xD3",
    Oacute: "\xD3",
    Ocir: "\xD4",
    Ocirc: "\xD4",
    Ocy: "\u041E",
    Odblac: "\u0150",
    Ofr: "\u{1D512}",
    Ograv: "\xD2",
    Ograve: "\xD2",
    Omacr: "\u014C",
    Omega: "\u03A9",
    Omicron: "\u039F",
    Oopf: "\u{1D546}",
    OpenCurlyDoubleQuote: "\u201C",
    OpenCurlyQuote: "\u2018",
    Or: "\u2A54",
    Oscr: "\u{1D4AA}",
    Oslas: "\xD8",
    Oslash: "\xD8",
    Otild: "\xD5",
    Otilde: "\xD5",
    Otimes: "\u2A37",
    Oum: "\xD6",
    Ouml: "\xD6",
    OverBar: "\u203E",
    OverBrace: "\u23DE",
    OverBracket: "\u23B4",
    OverParenthesis: "\u23DC",
    PartialD: "\u2202",
    Pcy: "\u041F",
    Pfr: "\u{1D513}",
    Phi: "\u03A6",
    Pi: "\u03A0",
    PlusMinus: "\xB1",
    Poincareplane: "\u210C",
    Popf: "\u2119",
    Pr: "\u2ABB",
    Precedes: "\u227A",
    PrecedesEqual: "\u2AAF",
    PrecedesSlantEqual: "\u227C",
    PrecedesTilde: "\u227E",
    Prime: "\u2033",
    Product: "\u220F",
    Proportion: "\u2237",
    Proportional: "\u221D",
    Pscr: "\u{1D4AB}",
    Psi: "\u03A8",
    QUO: '"',
    QUOT: '"',
    Qfr: "\u{1D514}",
    Qopf: "\u211A",
    Qscr: "\u{1D4AC}",
    RBarr: "\u2910",
    RE: "\xAE",
    REG: "\xAE",
    Racute: "\u0154",
    Rang: "\u27EB",
    Rarr: "\u21A0",
    Rarrtl: "\u2916",
    Rcaron: "\u0158",
    Rcedil: "\u0156",
    Rcy: "\u0420",
    Re: "\u211C",
    ReverseElement: "\u220B",
    ReverseEquilibrium: "\u21CB",
    ReverseUpEquilibrium: "\u296F",
    Rfr: "\u211C",
    Rho: "\u03A1",
    RightAngleBracket: "\u27E9",
    RightArrow: "\u2192",
    RightArrowBar: "\u21E5",
    RightArrowLeftArrow: "\u21C4",
    RightCeiling: "\u2309",
    RightDoubleBracket: "\u27E7",
    RightDownTeeVector: "\u295D",
    RightDownVector: "\u21C2",
    RightDownVectorBar: "\u2955",
    RightFloor: "\u230B",
    RightTee: "\u22A2",
    RightTeeArrow: "\u21A6",
    RightTeeVector: "\u295B",
    RightTriangle: "\u22B3",
    RightTriangleBar: "\u29D0",
    RightTriangleEqual: "\u22B5",
    RightUpDownVector: "\u294F",
    RightUpTeeVector: "\u295C",
    RightUpVector: "\u21BE",
    RightUpVectorBar: "\u2954",
    RightVector: "\u21C0",
    RightVectorBar: "\u2953",
    Rightarrow: "\u21D2",
    Ropf: "\u211D",
    RoundImplies: "\u2970",
    Rrightarrow: "\u21DB",
    Rscr: "\u211B",
    Rsh: "\u21B1",
    RuleDelayed: "\u29F4",
    SHCHcy: "\u0429",
    SHcy: "\u0428",
    SOFTcy: "\u042C",
    Sacute: "\u015A",
    Sc: "\u2ABC",
    Scaron: "\u0160",
    Scedil: "\u015E",
    Scirc: "\u015C",
    Scy: "\u0421",
    Sfr: "\u{1D516}",
    ShortDownArrow: "\u2193",
    ShortLeftArrow: "\u2190",
    ShortRightArrow: "\u2192",
    ShortUpArrow: "\u2191",
    Sigma: "\u03A3",
    SmallCircle: "\u2218",
    Sopf: "\u{1D54A}",
    Sqrt: "\u221A",
    Square: "\u25A1",
    SquareIntersection: "\u2293",
    SquareSubset: "\u228F",
    SquareSubsetEqual: "\u2291",
    SquareSuperset: "\u2290",
    SquareSupersetEqual: "\u2292",
    SquareUnion: "\u2294",
    Sscr: "\u{1D4AE}",
    Star: "\u22C6",
    Sub: "\u22D0",
    Subset: "\u22D0",
    SubsetEqual: "\u2286",
    Succeeds: "\u227B",
    SucceedsEqual: "\u2AB0",
    SucceedsSlantEqual: "\u227D",
    SucceedsTilde: "\u227F",
    SuchThat: "\u220B",
    Sum: "\u2211",
    Sup: "\u22D1",
    Superset: "\u2283",
    SupersetEqual: "\u2287",
    Supset: "\u22D1",
    THOR: "\xDE",
    THORN: "\xDE",
    TRADE: "\u2122",
    TSHcy: "\u040B",
    TScy: "\u0426",
    Tab: "	",
    Tau: "\u03A4",
    Tcaron: "\u0164",
    Tcedil: "\u0162",
    Tcy: "\u0422",
    Tfr: "\u{1D517}",
    Therefore: "\u2234",
    Theta: "\u0398",
    ThickSpace: "\u205F\u200A",
    ThinSpace: "\u2009",
    Tilde: "\u223C",
    TildeEqual: "\u2243",
    TildeFullEqual: "\u2245",
    TildeTilde: "\u2248",
    Topf: "\u{1D54B}",
    TripleDot: "\u20DB",
    Tscr: "\u{1D4AF}",
    Tstrok: "\u0166",
    Uacut: "\xDA",
    Uacute: "\xDA",
    Uarr: "\u219F",
    Uarrocir: "\u2949",
    Ubrcy: "\u040E",
    Ubreve: "\u016C",
    Ucir: "\xDB",
    Ucirc: "\xDB",
    Ucy: "\u0423",
    Udblac: "\u0170",
    Ufr: "\u{1D518}",
    Ugrav: "\xD9",
    Ugrave: "\xD9",
    Umacr: "\u016A",
    UnderBar: "_",
    UnderBrace: "\u23DF",
    UnderBracket: "\u23B5",
    UnderParenthesis: "\u23DD",
    Union: "\u22C3",
    UnionPlus: "\u228E",
    Uogon: "\u0172",
    Uopf: "\u{1D54C}",
    UpArrow: "\u2191",
    UpArrowBar: "\u2912",
    UpArrowDownArrow: "\u21C5",
    UpDownArrow: "\u2195",
    UpEquilibrium: "\u296E",
    UpTee: "\u22A5",
    UpTeeArrow: "\u21A5",
    Uparrow: "\u21D1",
    Updownarrow: "\u21D5",
    UpperLeftArrow: "\u2196",
    UpperRightArrow: "\u2197",
    Upsi: "\u03D2",
    Upsilon: "\u03A5",
    Uring: "\u016E",
    Uscr: "\u{1D4B0}",
    Utilde: "\u0168",
    Uum: "\xDC",
    Uuml: "\xDC",
    VDash: "\u22AB",
    Vbar: "\u2AEB",
    Vcy: "\u0412",
    Vdash: "\u22A9",
    Vdashl: "\u2AE6",
    Vee: "\u22C1",
    Verbar: "\u2016",
    Vert: "\u2016",
    VerticalBar: "\u2223",
    VerticalLine: "|",
    VerticalSeparator: "\u2758",
    VerticalTilde: "\u2240",
    VeryThinSpace: "\u200A",
    Vfr: "\u{1D519}",
    Vopf: "\u{1D54D}",
    Vscr: "\u{1D4B1}",
    Vvdash: "\u22AA",
    Wcirc: "\u0174",
    Wedge: "\u22C0",
    Wfr: "\u{1D51A}",
    Wopf: "\u{1D54E}",
    Wscr: "\u{1D4B2}",
    Xfr: "\u{1D51B}",
    Xi: "\u039E",
    Xopf: "\u{1D54F}",
    Xscr: "\u{1D4B3}",
    YAcy: "\u042F",
    YIcy: "\u0407",
    YUcy: "\u042E",
    Yacut: "\xDD",
    Yacute: "\xDD",
    Ycirc: "\u0176",
    Ycy: "\u042B",
    Yfr: "\u{1D51C}",
    Yopf: "\u{1D550}",
    Yscr: "\u{1D4B4}",
    Yuml: "\u0178",
    ZHcy: "\u0416",
    Zacute: "\u0179",
    Zcaron: "\u017D",
    Zcy: "\u0417",
    Zdot: "\u017B",
    ZeroWidthSpace: "\u200B",
    Zeta: "\u0396",
    Zfr: "\u2128",
    Zopf: "\u2124",
    Zscr: "\u{1D4B5}",
    aacut: "\xE1",
    aacute: "\xE1",
    abreve: "\u0103",
    ac: "\u223E",
    acE: "\u223E\u0333",
    acd: "\u223F",
    acir: "\xE2",
    acirc: "\xE2",
    acut: "\xB4",
    acute: "\xB4",
    acy: "\u0430",
    aeli: "\xE6",
    aelig: "\xE6",
    af: "\u2061",
    afr: "\u{1D51E}",
    agrav: "\xE0",
    agrave: "\xE0",
    alefsym: "\u2135",
    aleph: "\u2135",
    alpha: "\u03B1",
    amacr: "\u0101",
    amalg: "\u2A3F",
    am: "&",
    amp: "&",
    and: "\u2227",
    andand: "\u2A55",
    andd: "\u2A5C",
    andslope: "\u2A58",
    andv: "\u2A5A",
    ang: "\u2220",
    ange: "\u29A4",
    angle: "\u2220",
    angmsd: "\u2221",
    angmsdaa: "\u29A8",
    angmsdab: "\u29A9",
    angmsdac: "\u29AA",
    angmsdad: "\u29AB",
    angmsdae: "\u29AC",
    angmsdaf: "\u29AD",
    angmsdag: "\u29AE",
    angmsdah: "\u29AF",
    angrt: "\u221F",
    angrtvb: "\u22BE",
    angrtvbd: "\u299D",
    angsph: "\u2222",
    angst: "\xC5",
    angzarr: "\u237C",
    aogon: "\u0105",
    aopf: "\u{1D552}",
    ap: "\u2248",
    apE: "\u2A70",
    apacir: "\u2A6F",
    ape: "\u224A",
    apid: "\u224B",
    apos: "'",
    approx: "\u2248",
    approxeq: "\u224A",
    arin: "\xE5",
    aring: "\xE5",
    ascr: "\u{1D4B6}",
    ast: "*",
    asymp: "\u2248",
    asympeq: "\u224D",
    atild: "\xE3",
    atilde: "\xE3",
    aum: "\xE4",
    auml: "\xE4",
    awconint: "\u2233",
    awint: "\u2A11",
    bNot: "\u2AED",
    backcong: "\u224C",
    backepsilon: "\u03F6",
    backprime: "\u2035",
    backsim: "\u223D",
    backsimeq: "\u22CD",
    barvee: "\u22BD",
    barwed: "\u2305",
    barwedge: "\u2305",
    bbrk: "\u23B5",
    bbrktbrk: "\u23B6",
    bcong: "\u224C",
    bcy: "\u0431",
    bdquo: "\u201E",
    becaus: "\u2235",
    because: "\u2235",
    bemptyv: "\u29B0",
    bepsi: "\u03F6",
    bernou: "\u212C",
    beta: "\u03B2",
    beth: "\u2136",
    between: "\u226C",
    bfr: "\u{1D51F}",
    bigcap: "\u22C2",
    bigcirc: "\u25EF",
    bigcup: "\u22C3",
    bigodot: "\u2A00",
    bigoplus: "\u2A01",
    bigotimes: "\u2A02",
    bigsqcup: "\u2A06",
    bigstar: "\u2605",
    bigtriangledown: "\u25BD",
    bigtriangleup: "\u25B3",
    biguplus: "\u2A04",
    bigvee: "\u22C1",
    bigwedge: "\u22C0",
    bkarow: "\u290D",
    blacklozenge: "\u29EB",
    blacksquare: "\u25AA",
    blacktriangle: "\u25B4",
    blacktriangledown: "\u25BE",
    blacktriangleleft: "\u25C2",
    blacktriangleright: "\u25B8",
    blank: "\u2423",
    blk12: "\u2592",
    blk14: "\u2591",
    blk34: "\u2593",
    block: "\u2588",
    bne: "=\u20E5",
    bnequiv: "\u2261\u20E5",
    bnot: "\u2310",
    bopf: "\u{1D553}",
    bot: "\u22A5",
    bottom: "\u22A5",
    bowtie: "\u22C8",
    boxDL: "\u2557",
    boxDR: "\u2554",
    boxDl: "\u2556",
    boxDr: "\u2553",
    boxH: "\u2550",
    boxHD: "\u2566",
    boxHU: "\u2569",
    boxHd: "\u2564",
    boxHu: "\u2567",
    boxUL: "\u255D",
    boxUR: "\u255A",
    boxUl: "\u255C",
    boxUr: "\u2559",
    boxV: "\u2551",
    boxVH: "\u256C",
    boxVL: "\u2563",
    boxVR: "\u2560",
    boxVh: "\u256B",
    boxVl: "\u2562",
    boxVr: "\u255F",
    boxbox: "\u29C9",
    boxdL: "\u2555",
    boxdR: "\u2552",
    boxdl: "\u2510",
    boxdr: "\u250C",
    boxh: "\u2500",
    boxhD: "\u2565",
    boxhU: "\u2568",
    boxhd: "\u252C",
    boxhu: "\u2534",
    boxminus: "\u229F",
    boxplus: "\u229E",
    boxtimes: "\u22A0",
    boxuL: "\u255B",
    boxuR: "\u2558",
    boxul: "\u2518",
    boxur: "\u2514",
    boxv: "\u2502",
    boxvH: "\u256A",
    boxvL: "\u2561",
    boxvR: "\u255E",
    boxvh: "\u253C",
    boxvl: "\u2524",
    boxvr: "\u251C",
    bprime: "\u2035",
    breve: "\u02D8",
    brvba: "\xA6",
    brvbar: "\xA6",
    bscr: "\u{1D4B7}",
    bsemi: "\u204F",
    bsim: "\u223D",
    bsime: "\u22CD",
    bsol: "\\",
    bsolb: "\u29C5",
    bsolhsub: "\u27C8",
    bull: "\u2022",
    bullet: "\u2022",
    bump: "\u224E",
    bumpE: "\u2AAE",
    bumpe: "\u224F",
    bumpeq: "\u224F",
    cacute: "\u0107",
    cap: "\u2229",
    capand: "\u2A44",
    capbrcup: "\u2A49",
    capcap: "\u2A4B",
    capcup: "\u2A47",
    capdot: "\u2A40",
    caps: "\u2229\uFE00",
    caret: "\u2041",
    caron: "\u02C7",
    ccaps: "\u2A4D",
    ccaron: "\u010D",
    ccedi: "\xE7",
    ccedil: "\xE7",
    ccirc: "\u0109",
    ccups: "\u2A4C",
    ccupssm: "\u2A50",
    cdot: "\u010B",
    cedi: "\xB8",
    cedil: "\xB8",
    cemptyv: "\u29B2",
    cen: "\xA2",
    cent: "\xA2",
    centerdot: "\xB7",
    cfr: "\u{1D520}",
    chcy: "\u0447",
    check: "\u2713",
    checkmark: "\u2713",
    chi: "\u03C7",
    cir: "\u25CB",
    cirE: "\u29C3",
    circ: "\u02C6",
    circeq: "\u2257",
    circlearrowleft: "\u21BA",
    circlearrowright: "\u21BB",
    circledR: "\xAE",
    circledS: "\u24C8",
    circledast: "\u229B",
    circledcirc: "\u229A",
    circleddash: "\u229D",
    cire: "\u2257",
    cirfnint: "\u2A10",
    cirmid: "\u2AEF",
    cirscir: "\u29C2",
    clubs: "\u2663",
    clubsuit: "\u2663",
    colon: ":",
    colone: "\u2254",
    coloneq: "\u2254",
    comma: ",",
    commat: "@",
    comp: "\u2201",
    compfn: "\u2218",
    complement: "\u2201",
    complexes: "\u2102",
    cong: "\u2245",
    congdot: "\u2A6D",
    conint: "\u222E",
    copf: "\u{1D554}",
    coprod: "\u2210",
    cop: "\xA9",
    copy: "\xA9",
    copysr: "\u2117",
    crarr: "\u21B5",
    cross: "\u2717",
    cscr: "\u{1D4B8}",
    csub: "\u2ACF",
    csube: "\u2AD1",
    csup: "\u2AD0",
    csupe: "\u2AD2",
    ctdot: "\u22EF",
    cudarrl: "\u2938",
    cudarrr: "\u2935",
    cuepr: "\u22DE",
    cuesc: "\u22DF",
    cularr: "\u21B6",
    cularrp: "\u293D",
    cup: "\u222A",
    cupbrcap: "\u2A48",
    cupcap: "\u2A46",
    cupcup: "\u2A4A",
    cupdot: "\u228D",
    cupor: "\u2A45",
    cups: "\u222A\uFE00",
    curarr: "\u21B7",
    curarrm: "\u293C",
    curlyeqprec: "\u22DE",
    curlyeqsucc: "\u22DF",
    curlyvee: "\u22CE",
    curlywedge: "\u22CF",
    curre: "\xA4",
    curren: "\xA4",
    curvearrowleft: "\u21B6",
    curvearrowright: "\u21B7",
    cuvee: "\u22CE",
    cuwed: "\u22CF",
    cwconint: "\u2232",
    cwint: "\u2231",
    cylcty: "\u232D",
    dArr: "\u21D3",
    dHar: "\u2965",
    dagger: "\u2020",
    daleth: "\u2138",
    darr: "\u2193",
    dash: "\u2010",
    dashv: "\u22A3",
    dbkarow: "\u290F",
    dblac: "\u02DD",
    dcaron: "\u010F",
    dcy: "\u0434",
    dd: "\u2146",
    ddagger: "\u2021",
    ddarr: "\u21CA",
    ddotseq: "\u2A77",
    de: "\xB0",
    deg: "\xB0",
    delta: "\u03B4",
    demptyv: "\u29B1",
    dfisht: "\u297F",
    dfr: "\u{1D521}",
    dharl: "\u21C3",
    dharr: "\u21C2",
    diam: "\u22C4",
    diamond: "\u22C4",
    diamondsuit: "\u2666",
    diams: "\u2666",
    die: "\xA8",
    digamma: "\u03DD",
    disin: "\u22F2",
    div: "\xF7",
    divid: "\xF7",
    divide: "\xF7",
    divideontimes: "\u22C7",
    divonx: "\u22C7",
    djcy: "\u0452",
    dlcorn: "\u231E",
    dlcrop: "\u230D",
    dollar: "$",
    dopf: "\u{1D555}",
    dot: "\u02D9",
    doteq: "\u2250",
    doteqdot: "\u2251",
    dotminus: "\u2238",
    dotplus: "\u2214",
    dotsquare: "\u22A1",
    doublebarwedge: "\u2306",
    downarrow: "\u2193",
    downdownarrows: "\u21CA",
    downharpoonleft: "\u21C3",
    downharpoonright: "\u21C2",
    drbkarow: "\u2910",
    drcorn: "\u231F",
    drcrop: "\u230C",
    dscr: "\u{1D4B9}",
    dscy: "\u0455",
    dsol: "\u29F6",
    dstrok: "\u0111",
    dtdot: "\u22F1",
    dtri: "\u25BF",
    dtrif: "\u25BE",
    duarr: "\u21F5",
    duhar: "\u296F",
    dwangle: "\u29A6",
    dzcy: "\u045F",
    dzigrarr: "\u27FF",
    eDDot: "\u2A77",
    eDot: "\u2251",
    eacut: "\xE9",
    eacute: "\xE9",
    easter: "\u2A6E",
    ecaron: "\u011B",
    ecir: "\xEA",
    ecirc: "\xEA",
    ecolon: "\u2255",
    ecy: "\u044D",
    edot: "\u0117",
    ee: "\u2147",
    efDot: "\u2252",
    efr: "\u{1D522}",
    eg: "\u2A9A",
    egrav: "\xE8",
    egrave: "\xE8",
    egs: "\u2A96",
    egsdot: "\u2A98",
    el: "\u2A99",
    elinters: "\u23E7",
    ell: "\u2113",
    els: "\u2A95",
    elsdot: "\u2A97",
    emacr: "\u0113",
    empty: "\u2205",
    emptyset: "\u2205",
    emptyv: "\u2205",
    emsp13: "\u2004",
    emsp14: "\u2005",
    emsp: "\u2003",
    eng: "\u014B",
    ensp: "\u2002",
    eogon: "\u0119",
    eopf: "\u{1D556}",
    epar: "\u22D5",
    eparsl: "\u29E3",
    eplus: "\u2A71",
    epsi: "\u03B5",
    epsilon: "\u03B5",
    epsiv: "\u03F5",
    eqcirc: "\u2256",
    eqcolon: "\u2255",
    eqsim: "\u2242",
    eqslantgtr: "\u2A96",
    eqslantless: "\u2A95",
    equals: "=",
    equest: "\u225F",
    equiv: "\u2261",
    equivDD: "\u2A78",
    eqvparsl: "\u29E5",
    erDot: "\u2253",
    erarr: "\u2971",
    escr: "\u212F",
    esdot: "\u2250",
    esim: "\u2242",
    eta: "\u03B7",
    et: "\xF0",
    eth: "\xF0",
    eum: "\xEB",
    euml: "\xEB",
    euro: "\u20AC",
    excl: "!",
    exist: "\u2203",
    expectation: "\u2130",
    exponentiale: "\u2147",
    fallingdotseq: "\u2252",
    fcy: "\u0444",
    female: "\u2640",
    ffilig: "\uFB03",
    fflig: "\uFB00",
    ffllig: "\uFB04",
    ffr: "\u{1D523}",
    filig: "\uFB01",
    fjlig: "fj",
    flat: "\u266D",
    fllig: "\uFB02",
    fltns: "\u25B1",
    fnof: "\u0192",
    fopf: "\u{1D557}",
    forall: "\u2200",
    fork: "\u22D4",
    forkv: "\u2AD9",
    fpartint: "\u2A0D",
    frac1: "\xBC",
    frac12: "\xBD",
    frac13: "\u2153",
    frac14: "\xBC",
    frac15: "\u2155",
    frac16: "\u2159",
    frac18: "\u215B",
    frac23: "\u2154",
    frac25: "\u2156",
    frac3: "\xBE",
    frac34: "\xBE",
    frac35: "\u2157",
    frac38: "\u215C",
    frac45: "\u2158",
    frac56: "\u215A",
    frac58: "\u215D",
    frac78: "\u215E",
    frasl: "\u2044",
    frown: "\u2322",
    fscr: "\u{1D4BB}",
    gE: "\u2267",
    gEl: "\u2A8C",
    gacute: "\u01F5",
    gamma: "\u03B3",
    gammad: "\u03DD",
    gap: "\u2A86",
    gbreve: "\u011F",
    gcirc: "\u011D",
    gcy: "\u0433",
    gdot: "\u0121",
    ge: "\u2265",
    gel: "\u22DB",
    geq: "\u2265",
    geqq: "\u2267",
    geqslant: "\u2A7E",
    ges: "\u2A7E",
    gescc: "\u2AA9",
    gesdot: "\u2A80",
    gesdoto: "\u2A82",
    gesdotol: "\u2A84",
    gesl: "\u22DB\uFE00",
    gesles: "\u2A94",
    gfr: "\u{1D524}",
    gg: "\u226B",
    ggg: "\u22D9",
    gimel: "\u2137",
    gjcy: "\u0453",
    gl: "\u2277",
    glE: "\u2A92",
    gla: "\u2AA5",
    glj: "\u2AA4",
    gnE: "\u2269",
    gnap: "\u2A8A",
    gnapprox: "\u2A8A",
    gne: "\u2A88",
    gneq: "\u2A88",
    gneqq: "\u2269",
    gnsim: "\u22E7",
    gopf: "\u{1D558}",
    grave: "`",
    gscr: "\u210A",
    gsim: "\u2273",
    gsime: "\u2A8E",
    gsiml: "\u2A90",
    g: ">",
    gt: ">",
    gtcc: "\u2AA7",
    gtcir: "\u2A7A",
    gtdot: "\u22D7",
    gtlPar: "\u2995",
    gtquest: "\u2A7C",
    gtrapprox: "\u2A86",
    gtrarr: "\u2978",
    gtrdot: "\u22D7",
    gtreqless: "\u22DB",
    gtreqqless: "\u2A8C",
    gtrless: "\u2277",
    gtrsim: "\u2273",
    gvertneqq: "\u2269\uFE00",
    gvnE: "\u2269\uFE00",
    hArr: "\u21D4",
    hairsp: "\u200A",
    half: "\xBD",
    hamilt: "\u210B",
    hardcy: "\u044A",
    harr: "\u2194",
    harrcir: "\u2948",
    harrw: "\u21AD",
    hbar: "\u210F",
    hcirc: "\u0125",
    hearts: "\u2665",
    heartsuit: "\u2665",
    hellip: "\u2026",
    hercon: "\u22B9",
    hfr: "\u{1D525}",
    hksearow: "\u2925",
    hkswarow: "\u2926",
    hoarr: "\u21FF",
    homtht: "\u223B",
    hookleftarrow: "\u21A9",
    hookrightarrow: "\u21AA",
    hopf: "\u{1D559}",
    horbar: "\u2015",
    hscr: "\u{1D4BD}",
    hslash: "\u210F",
    hstrok: "\u0127",
    hybull: "\u2043",
    hyphen: "\u2010",
    iacut: "\xED",
    iacute: "\xED",
    ic: "\u2063",
    icir: "\xEE",
    icirc: "\xEE",
    icy: "\u0438",
    iecy: "\u0435",
    iexc: "\xA1",
    iexcl: "\xA1",
    iff: "\u21D4",
    ifr: "\u{1D526}",
    igrav: "\xEC",
    igrave: "\xEC",
    ii: "\u2148",
    iiiint: "\u2A0C",
    iiint: "\u222D",
    iinfin: "\u29DC",
    iiota: "\u2129",
    ijlig: "\u0133",
    imacr: "\u012B",
    image: "\u2111",
    imagline: "\u2110",
    imagpart: "\u2111",
    imath: "\u0131",
    imof: "\u22B7",
    imped: "\u01B5",
    in: "\u2208",
    incare: "\u2105",
    infin: "\u221E",
    infintie: "\u29DD",
    inodot: "\u0131",
    int: "\u222B",
    intcal: "\u22BA",
    integers: "\u2124",
    intercal: "\u22BA",
    intlarhk: "\u2A17",
    intprod: "\u2A3C",
    iocy: "\u0451",
    iogon: "\u012F",
    iopf: "\u{1D55A}",
    iota: "\u03B9",
    iprod: "\u2A3C",
    iques: "\xBF",
    iquest: "\xBF",
    iscr: "\u{1D4BE}",
    isin: "\u2208",
    isinE: "\u22F9",
    isindot: "\u22F5",
    isins: "\u22F4",
    isinsv: "\u22F3",
    isinv: "\u2208",
    it: "\u2062",
    itilde: "\u0129",
    iukcy: "\u0456",
    ium: "\xEF",
    iuml: "\xEF",
    jcirc: "\u0135",
    jcy: "\u0439",
    jfr: "\u{1D527}",
    jmath: "\u0237",
    jopf: "\u{1D55B}",
    jscr: "\u{1D4BF}",
    jsercy: "\u0458",
    jukcy: "\u0454",
    kappa: "\u03BA",
    kappav: "\u03F0",
    kcedil: "\u0137",
    kcy: "\u043A",
    kfr: "\u{1D528}",
    kgreen: "\u0138",
    khcy: "\u0445",
    kjcy: "\u045C",
    kopf: "\u{1D55C}",
    kscr: "\u{1D4C0}",
    lAarr: "\u21DA",
    lArr: "\u21D0",
    lAtail: "\u291B",
    lBarr: "\u290E",
    lE: "\u2266",
    lEg: "\u2A8B",
    lHar: "\u2962",
    lacute: "\u013A",
    laemptyv: "\u29B4",
    lagran: "\u2112",
    lambda: "\u03BB",
    lang: "\u27E8",
    langd: "\u2991",
    langle: "\u27E8",
    lap: "\u2A85",
    laqu: "\xAB",
    laquo: "\xAB",
    larr: "\u2190",
    larrb: "\u21E4",
    larrbfs: "\u291F",
    larrfs: "\u291D",
    larrhk: "\u21A9",
    larrlp: "\u21AB",
    larrpl: "\u2939",
    larrsim: "\u2973",
    larrtl: "\u21A2",
    lat: "\u2AAB",
    latail: "\u2919",
    late: "\u2AAD",
    lates: "\u2AAD\uFE00",
    lbarr: "\u290C",
    lbbrk: "\u2772",
    lbrace: "{",
    lbrack: "[",
    lbrke: "\u298B",
    lbrksld: "\u298F",
    lbrkslu: "\u298D",
    lcaron: "\u013E",
    lcedil: "\u013C",
    lceil: "\u2308",
    lcub: "{",
    lcy: "\u043B",
    ldca: "\u2936",
    ldquo: "\u201C",
    ldquor: "\u201E",
    ldrdhar: "\u2967",
    ldrushar: "\u294B",
    ldsh: "\u21B2",
    le: "\u2264",
    leftarrow: "\u2190",
    leftarrowtail: "\u21A2",
    leftharpoondown: "\u21BD",
    leftharpoonup: "\u21BC",
    leftleftarrows: "\u21C7",
    leftrightarrow: "\u2194",
    leftrightarrows: "\u21C6",
    leftrightharpoons: "\u21CB",
    leftrightsquigarrow: "\u21AD",
    leftthreetimes: "\u22CB",
    leg: "\u22DA",
    leq: "\u2264",
    leqq: "\u2266",
    leqslant: "\u2A7D",
    les: "\u2A7D",
    lescc: "\u2AA8",
    lesdot: "\u2A7F",
    lesdoto: "\u2A81",
    lesdotor: "\u2A83",
    lesg: "\u22DA\uFE00",
    lesges: "\u2A93",
    lessapprox: "\u2A85",
    lessdot: "\u22D6",
    lesseqgtr: "\u22DA",
    lesseqqgtr: "\u2A8B",
    lessgtr: "\u2276",
    lesssim: "\u2272",
    lfisht: "\u297C",
    lfloor: "\u230A",
    lfr: "\u{1D529}",
    lg: "\u2276",
    lgE: "\u2A91",
    lhard: "\u21BD",
    lharu: "\u21BC",
    lharul: "\u296A",
    lhblk: "\u2584",
    ljcy: "\u0459",
    ll: "\u226A",
    llarr: "\u21C7",
    llcorner: "\u231E",
    llhard: "\u296B",
    lltri: "\u25FA",
    lmidot: "\u0140",
    lmoust: "\u23B0",
    lmoustache: "\u23B0",
    lnE: "\u2268",
    lnap: "\u2A89",
    lnapprox: "\u2A89",
    lne: "\u2A87",
    lneq: "\u2A87",
    lneqq: "\u2268",
    lnsim: "\u22E6",
    loang: "\u27EC",
    loarr: "\u21FD",
    lobrk: "\u27E6",
    longleftarrow: "\u27F5",
    longleftrightarrow: "\u27F7",
    longmapsto: "\u27FC",
    longrightarrow: "\u27F6",
    looparrowleft: "\u21AB",
    looparrowright: "\u21AC",
    lopar: "\u2985",
    lopf: "\u{1D55D}",
    loplus: "\u2A2D",
    lotimes: "\u2A34",
    lowast: "\u2217",
    lowbar: "_",
    loz: "\u25CA",
    lozenge: "\u25CA",
    lozf: "\u29EB",
    lpar: "(",
    lparlt: "\u2993",
    lrarr: "\u21C6",
    lrcorner: "\u231F",
    lrhar: "\u21CB",
    lrhard: "\u296D",
    lrm: "\u200E",
    lrtri: "\u22BF",
    lsaquo: "\u2039",
    lscr: "\u{1D4C1}",
    lsh: "\u21B0",
    lsim: "\u2272",
    lsime: "\u2A8D",
    lsimg: "\u2A8F",
    lsqb: "[",
    lsquo: "\u2018",
    lsquor: "\u201A",
    lstrok: "\u0142",
    l: "<",
    lt: "<",
    ltcc: "\u2AA6",
    ltcir: "\u2A79",
    ltdot: "\u22D6",
    lthree: "\u22CB",
    ltimes: "\u22C9",
    ltlarr: "\u2976",
    ltquest: "\u2A7B",
    ltrPar: "\u2996",
    ltri: "\u25C3",
    ltrie: "\u22B4",
    ltrif: "\u25C2",
    lurdshar: "\u294A",
    luruhar: "\u2966",
    lvertneqq: "\u2268\uFE00",
    lvnE: "\u2268\uFE00",
    mDDot: "\u223A",
    mac: "\xAF",
    macr: "\xAF",
    male: "\u2642",
    malt: "\u2720",
    maltese: "\u2720",
    map: "\u21A6",
    mapsto: "\u21A6",
    mapstodown: "\u21A7",
    mapstoleft: "\u21A4",
    mapstoup: "\u21A5",
    marker: "\u25AE",
    mcomma: "\u2A29",
    mcy: "\u043C",
    mdash: "\u2014",
    measuredangle: "\u2221",
    mfr: "\u{1D52A}",
    mho: "\u2127",
    micr: "\xB5",
    micro: "\xB5",
    mid: "\u2223",
    midast: "*",
    midcir: "\u2AF0",
    middo: "\xB7",
    middot: "\xB7",
    minus: "\u2212",
    minusb: "\u229F",
    minusd: "\u2238",
    minusdu: "\u2A2A",
    mlcp: "\u2ADB",
    mldr: "\u2026",
    mnplus: "\u2213",
    models: "\u22A7",
    mopf: "\u{1D55E}",
    mp: "\u2213",
    mscr: "\u{1D4C2}",
    mstpos: "\u223E",
    mu: "\u03BC",
    multimap: "\u22B8",
    mumap: "\u22B8",
    nGg: "\u22D9\u0338",
    nGt: "\u226B\u20D2",
    nGtv: "\u226B\u0338",
    nLeftarrow: "\u21CD",
    nLeftrightarrow: "\u21CE",
    nLl: "\u22D8\u0338",
    nLt: "\u226A\u20D2",
    nLtv: "\u226A\u0338",
    nRightarrow: "\u21CF",
    nVDash: "\u22AF",
    nVdash: "\u22AE",
    nabla: "\u2207",
    nacute: "\u0144",
    nang: "\u2220\u20D2",
    nap: "\u2249",
    napE: "\u2A70\u0338",
    napid: "\u224B\u0338",
    napos: "\u0149",
    napprox: "\u2249",
    natur: "\u266E",
    natural: "\u266E",
    naturals: "\u2115",
    nbs: "\xA0",
    nbsp: "\xA0",
    nbump: "\u224E\u0338",
    nbumpe: "\u224F\u0338",
    ncap: "\u2A43",
    ncaron: "\u0148",
    ncedil: "\u0146",
    ncong: "\u2247",
    ncongdot: "\u2A6D\u0338",
    ncup: "\u2A42",
    ncy: "\u043D",
    ndash: "\u2013",
    ne: "\u2260",
    neArr: "\u21D7",
    nearhk: "\u2924",
    nearr: "\u2197",
    nearrow: "\u2197",
    nedot: "\u2250\u0338",
    nequiv: "\u2262",
    nesear: "\u2928",
    nesim: "\u2242\u0338",
    nexist: "\u2204",
    nexists: "\u2204",
    nfr: "\u{1D52B}",
    ngE: "\u2267\u0338",
    nge: "\u2271",
    ngeq: "\u2271",
    ngeqq: "\u2267\u0338",
    ngeqslant: "\u2A7E\u0338",
    nges: "\u2A7E\u0338",
    ngsim: "\u2275",
    ngt: "\u226F",
    ngtr: "\u226F",
    nhArr: "\u21CE",
    nharr: "\u21AE",
    nhpar: "\u2AF2",
    ni: "\u220B",
    nis: "\u22FC",
    nisd: "\u22FA",
    niv: "\u220B",
    njcy: "\u045A",
    nlArr: "\u21CD",
    nlE: "\u2266\u0338",
    nlarr: "\u219A",
    nldr: "\u2025",
    nle: "\u2270",
    nleftarrow: "\u219A",
    nleftrightarrow: "\u21AE",
    nleq: "\u2270",
    nleqq: "\u2266\u0338",
    nleqslant: "\u2A7D\u0338",
    nles: "\u2A7D\u0338",
    nless: "\u226E",
    nlsim: "\u2274",
    nlt: "\u226E",
    nltri: "\u22EA",
    nltrie: "\u22EC",
    nmid: "\u2224",
    nopf: "\u{1D55F}",
    no: "\xAC",
    not: "\xAC",
    notin: "\u2209",
    notinE: "\u22F9\u0338",
    notindot: "\u22F5\u0338",
    notinva: "\u2209",
    notinvb: "\u22F7",
    notinvc: "\u22F6",
    notni: "\u220C",
    notniva: "\u220C",
    notnivb: "\u22FE",
    notnivc: "\u22FD",
    npar: "\u2226",
    nparallel: "\u2226",
    nparsl: "\u2AFD\u20E5",
    npart: "\u2202\u0338",
    npolint: "\u2A14",
    npr: "\u2280",
    nprcue: "\u22E0",
    npre: "\u2AAF\u0338",
    nprec: "\u2280",
    npreceq: "\u2AAF\u0338",
    nrArr: "\u21CF",
    nrarr: "\u219B",
    nrarrc: "\u2933\u0338",
    nrarrw: "\u219D\u0338",
    nrightarrow: "\u219B",
    nrtri: "\u22EB",
    nrtrie: "\u22ED",
    nsc: "\u2281",
    nsccue: "\u22E1",
    nsce: "\u2AB0\u0338",
    nscr: "\u{1D4C3}",
    nshortmid: "\u2224",
    nshortparallel: "\u2226",
    nsim: "\u2241",
    nsime: "\u2244",
    nsimeq: "\u2244",
    nsmid: "\u2224",
    nspar: "\u2226",
    nsqsube: "\u22E2",
    nsqsupe: "\u22E3",
    nsub: "\u2284",
    nsubE: "\u2AC5\u0338",
    nsube: "\u2288",
    nsubset: "\u2282\u20D2",
    nsubseteq: "\u2288",
    nsubseteqq: "\u2AC5\u0338",
    nsucc: "\u2281",
    nsucceq: "\u2AB0\u0338",
    nsup: "\u2285",
    nsupE: "\u2AC6\u0338",
    nsupe: "\u2289",
    nsupset: "\u2283\u20D2",
    nsupseteq: "\u2289",
    nsupseteqq: "\u2AC6\u0338",
    ntgl: "\u2279",
    ntild: "\xF1",
    ntilde: "\xF1",
    ntlg: "\u2278",
    ntriangleleft: "\u22EA",
    ntrianglelefteq: "\u22EC",
    ntriangleright: "\u22EB",
    ntrianglerighteq: "\u22ED",
    nu: "\u03BD",
    num: "#",
    numero: "\u2116",
    numsp: "\u2007",
    nvDash: "\u22AD",
    nvHarr: "\u2904",
    nvap: "\u224D\u20D2",
    nvdash: "\u22AC",
    nvge: "\u2265\u20D2",
    nvgt: ">\u20D2",
    nvinfin: "\u29DE",
    nvlArr: "\u2902",
    nvle: "\u2264\u20D2",
    nvlt: "<\u20D2",
    nvltrie: "\u22B4\u20D2",
    nvrArr: "\u2903",
    nvrtrie: "\u22B5\u20D2",
    nvsim: "\u223C\u20D2",
    nwArr: "\u21D6",
    nwarhk: "\u2923",
    nwarr: "\u2196",
    nwarrow: "\u2196",
    nwnear: "\u2927",
    oS: "\u24C8",
    oacut: "\xF3",
    oacute: "\xF3",
    oast: "\u229B",
    ocir: "\xF4",
    ocirc: "\xF4",
    ocy: "\u043E",
    odash: "\u229D",
    odblac: "\u0151",
    odiv: "\u2A38",
    odot: "\u2299",
    odsold: "\u29BC",
    oelig: "\u0153",
    ofcir: "\u29BF",
    ofr: "\u{1D52C}",
    ogon: "\u02DB",
    ograv: "\xF2",
    ograve: "\xF2",
    ogt: "\u29C1",
    ohbar: "\u29B5",
    ohm: "\u03A9",
    oint: "\u222E",
    olarr: "\u21BA",
    olcir: "\u29BE",
    olcross: "\u29BB",
    oline: "\u203E",
    olt: "\u29C0",
    omacr: "\u014D",
    omega: "\u03C9",
    omicron: "\u03BF",
    omid: "\u29B6",
    ominus: "\u2296",
    oopf: "\u{1D560}",
    opar: "\u29B7",
    operp: "\u29B9",
    oplus: "\u2295",
    or: "\u2228",
    orarr: "\u21BB",
    ord: "\xBA",
    order: "\u2134",
    orderof: "\u2134",
    ordf: "\xAA",
    ordm: "\xBA",
    origof: "\u22B6",
    oror: "\u2A56",
    orslope: "\u2A57",
    orv: "\u2A5B",
    oscr: "\u2134",
    oslas: "\xF8",
    oslash: "\xF8",
    osol: "\u2298",
    otild: "\xF5",
    otilde: "\xF5",
    otimes: "\u2297",
    otimesas: "\u2A36",
    oum: "\xF6",
    ouml: "\xF6",
    ovbar: "\u233D",
    par: "\xB6",
    para: "\xB6",
    parallel: "\u2225",
    parsim: "\u2AF3",
    parsl: "\u2AFD",
    part: "\u2202",
    pcy: "\u043F",
    percnt: "%",
    period: ".",
    permil: "\u2030",
    perp: "\u22A5",
    pertenk: "\u2031",
    pfr: "\u{1D52D}",
    phi: "\u03C6",
    phiv: "\u03D5",
    phmmat: "\u2133",
    phone: "\u260E",
    pi: "\u03C0",
    pitchfork: "\u22D4",
    piv: "\u03D6",
    planck: "\u210F",
    planckh: "\u210E",
    plankv: "\u210F",
    plus: "+",
    plusacir: "\u2A23",
    plusb: "\u229E",
    pluscir: "\u2A22",
    plusdo: "\u2214",
    plusdu: "\u2A25",
    pluse: "\u2A72",
    plusm: "\xB1",
    plusmn: "\xB1",
    plussim: "\u2A26",
    plustwo: "\u2A27",
    pm: "\xB1",
    pointint: "\u2A15",
    popf: "\u{1D561}",
    poun: "\xA3",
    pound: "\xA3",
    pr: "\u227A",
    prE: "\u2AB3",
    prap: "\u2AB7",
    prcue: "\u227C",
    pre: "\u2AAF",
    prec: "\u227A",
    precapprox: "\u2AB7",
    preccurlyeq: "\u227C",
    preceq: "\u2AAF",
    precnapprox: "\u2AB9",
    precneqq: "\u2AB5",
    precnsim: "\u22E8",
    precsim: "\u227E",
    prime: "\u2032",
    primes: "\u2119",
    prnE: "\u2AB5",
    prnap: "\u2AB9",
    prnsim: "\u22E8",
    prod: "\u220F",
    profalar: "\u232E",
    profline: "\u2312",
    profsurf: "\u2313",
    prop: "\u221D",
    propto: "\u221D",
    prsim: "\u227E",
    prurel: "\u22B0",
    pscr: "\u{1D4C5}",
    psi: "\u03C8",
    puncsp: "\u2008",
    qfr: "\u{1D52E}",
    qint: "\u2A0C",
    qopf: "\u{1D562}",
    qprime: "\u2057",
    qscr: "\u{1D4C6}",
    quaternions: "\u210D",
    quatint: "\u2A16",
    quest: "?",
    questeq: "\u225F",
    quo: '"',
    quot: '"',
    rAarr: "\u21DB",
    rArr: "\u21D2",
    rAtail: "\u291C",
    rBarr: "\u290F",
    rHar: "\u2964",
    race: "\u223D\u0331",
    racute: "\u0155",
    radic: "\u221A",
    raemptyv: "\u29B3",
    rang: "\u27E9",
    rangd: "\u2992",
    range: "\u29A5",
    rangle: "\u27E9",
    raqu: "\xBB",
    raquo: "\xBB",
    rarr: "\u2192",
    rarrap: "\u2975",
    rarrb: "\u21E5",
    rarrbfs: "\u2920",
    rarrc: "\u2933",
    rarrfs: "\u291E",
    rarrhk: "\u21AA",
    rarrlp: "\u21AC",
    rarrpl: "\u2945",
    rarrsim: "\u2974",
    rarrtl: "\u21A3",
    rarrw: "\u219D",
    ratail: "\u291A",
    ratio: "\u2236",
    rationals: "\u211A",
    rbarr: "\u290D",
    rbbrk: "\u2773",
    rbrace: "}",
    rbrack: "]",
    rbrke: "\u298C",
    rbrksld: "\u298E",
    rbrkslu: "\u2990",
    rcaron: "\u0159",
    rcedil: "\u0157",
    rceil: "\u2309",
    rcub: "}",
    rcy: "\u0440",
    rdca: "\u2937",
    rdldhar: "\u2969",
    rdquo: "\u201D",
    rdquor: "\u201D",
    rdsh: "\u21B3",
    real: "\u211C",
    realine: "\u211B",
    realpart: "\u211C",
    reals: "\u211D",
    rect: "\u25AD",
    re: "\xAE",
    reg: "\xAE",
    rfisht: "\u297D",
    rfloor: "\u230B",
    rfr: "\u{1D52F}",
    rhard: "\u21C1",
    rharu: "\u21C0",
    rharul: "\u296C",
    rho: "\u03C1",
    rhov: "\u03F1",
    rightarrow: "\u2192",
    rightarrowtail: "\u21A3",
    rightharpoondown: "\u21C1",
    rightharpoonup: "\u21C0",
    rightleftarrows: "\u21C4",
    rightleftharpoons: "\u21CC",
    rightrightarrows: "\u21C9",
    rightsquigarrow: "\u219D",
    rightthreetimes: "\u22CC",
    ring: "\u02DA",
    risingdotseq: "\u2253",
    rlarr: "\u21C4",
    rlhar: "\u21CC",
    rlm: "\u200F",
    rmoust: "\u23B1",
    rmoustache: "\u23B1",
    rnmid: "\u2AEE",
    roang: "\u27ED",
    roarr: "\u21FE",
    robrk: "\u27E7",
    ropar: "\u2986",
    ropf: "\u{1D563}",
    roplus: "\u2A2E",
    rotimes: "\u2A35",
    rpar: ")",
    rpargt: "\u2994",
    rppolint: "\u2A12",
    rrarr: "\u21C9",
    rsaquo: "\u203A",
    rscr: "\u{1D4C7}",
    rsh: "\u21B1",
    rsqb: "]",
    rsquo: "\u2019",
    rsquor: "\u2019",
    rthree: "\u22CC",
    rtimes: "\u22CA",
    rtri: "\u25B9",
    rtrie: "\u22B5",
    rtrif: "\u25B8",
    rtriltri: "\u29CE",
    ruluhar: "\u2968",
    rx: "\u211E",
    sacute: "\u015B",
    sbquo: "\u201A",
    sc: "\u227B",
    scE: "\u2AB4",
    scap: "\u2AB8",
    scaron: "\u0161",
    sccue: "\u227D",
    sce: "\u2AB0",
    scedil: "\u015F",
    scirc: "\u015D",
    scnE: "\u2AB6",
    scnap: "\u2ABA",
    scnsim: "\u22E9",
    scpolint: "\u2A13",
    scsim: "\u227F",
    scy: "\u0441",
    sdot: "\u22C5",
    sdotb: "\u22A1",
    sdote: "\u2A66",
    seArr: "\u21D8",
    searhk: "\u2925",
    searr: "\u2198",
    searrow: "\u2198",
    sec: "\xA7",
    sect: "\xA7",
    semi: ";",
    seswar: "\u2929",
    setminus: "\u2216",
    setmn: "\u2216",
    sext: "\u2736",
    sfr: "\u{1D530}",
    sfrown: "\u2322",
    sharp: "\u266F",
    shchcy: "\u0449",
    shcy: "\u0448",
    shortmid: "\u2223",
    shortparallel: "\u2225",
    sh: "\xAD",
    shy: "\xAD",
    sigma: "\u03C3",
    sigmaf: "\u03C2",
    sigmav: "\u03C2",
    sim: "\u223C",
    simdot: "\u2A6A",
    sime: "\u2243",
    simeq: "\u2243",
    simg: "\u2A9E",
    simgE: "\u2AA0",
    siml: "\u2A9D",
    simlE: "\u2A9F",
    simne: "\u2246",
    simplus: "\u2A24",
    simrarr: "\u2972",
    slarr: "\u2190",
    smallsetminus: "\u2216",
    smashp: "\u2A33",
    smeparsl: "\u29E4",
    smid: "\u2223",
    smile: "\u2323",
    smt: "\u2AAA",
    smte: "\u2AAC",
    smtes: "\u2AAC\uFE00",
    softcy: "\u044C",
    sol: "/",
    solb: "\u29C4",
    solbar: "\u233F",
    sopf: "\u{1D564}",
    spades: "\u2660",
    spadesuit: "\u2660",
    spar: "\u2225",
    sqcap: "\u2293",
    sqcaps: "\u2293\uFE00",
    sqcup: "\u2294",
    sqcups: "\u2294\uFE00",
    sqsub: "\u228F",
    sqsube: "\u2291",
    sqsubset: "\u228F",
    sqsubseteq: "\u2291",
    sqsup: "\u2290",
    sqsupe: "\u2292",
    sqsupset: "\u2290",
    sqsupseteq: "\u2292",
    squ: "\u25A1",
    square: "\u25A1",
    squarf: "\u25AA",
    squf: "\u25AA",
    srarr: "\u2192",
    sscr: "\u{1D4C8}",
    ssetmn: "\u2216",
    ssmile: "\u2323",
    sstarf: "\u22C6",
    star: "\u2606",
    starf: "\u2605",
    straightepsilon: "\u03F5",
    straightphi: "\u03D5",
    strns: "\xAF",
    sub: "\u2282",
    subE: "\u2AC5",
    subdot: "\u2ABD",
    sube: "\u2286",
    subedot: "\u2AC3",
    submult: "\u2AC1",
    subnE: "\u2ACB",
    subne: "\u228A",
    subplus: "\u2ABF",
    subrarr: "\u2979",
    subset: "\u2282",
    subseteq: "\u2286",
    subseteqq: "\u2AC5",
    subsetneq: "\u228A",
    subsetneqq: "\u2ACB",
    subsim: "\u2AC7",
    subsub: "\u2AD5",
    subsup: "\u2AD3",
    succ: "\u227B",
    succapprox: "\u2AB8",
    succcurlyeq: "\u227D",
    succeq: "\u2AB0",
    succnapprox: "\u2ABA",
    succneqq: "\u2AB6",
    succnsim: "\u22E9",
    succsim: "\u227F",
    sum: "\u2211",
    sung: "\u266A",
    sup: "\u2283",
    sup1: "\xB9",
    sup2: "\xB2",
    sup3: "\xB3",
    supE: "\u2AC6",
    supdot: "\u2ABE",
    supdsub: "\u2AD8",
    supe: "\u2287",
    supedot: "\u2AC4",
    suphsol: "\u27C9",
    suphsub: "\u2AD7",
    suplarr: "\u297B",
    supmult: "\u2AC2",
    supnE: "\u2ACC",
    supne: "\u228B",
    supplus: "\u2AC0",
    supset: "\u2283",
    supseteq: "\u2287",
    supseteqq: "\u2AC6",
    supsetneq: "\u228B",
    supsetneqq: "\u2ACC",
    supsim: "\u2AC8",
    supsub: "\u2AD4",
    supsup: "\u2AD6",
    swArr: "\u21D9",
    swarhk: "\u2926",
    swarr: "\u2199",
    swarrow: "\u2199",
    swnwar: "\u292A",
    szli: "\xDF",
    szlig: "\xDF",
    target: "\u2316",
    tau: "\u03C4",
    tbrk: "\u23B4",
    tcaron: "\u0165",
    tcedil: "\u0163",
    tcy: "\u0442",
    tdot: "\u20DB",
    telrec: "\u2315",
    tfr: "\u{1D531}",
    there4: "\u2234",
    therefore: "\u2234",
    theta: "\u03B8",
    thetasym: "\u03D1",
    thetav: "\u03D1",
    thickapprox: "\u2248",
    thicksim: "\u223C",
    thinsp: "\u2009",
    thkap: "\u2248",
    thksim: "\u223C",
    thor: "\xFE",
    thorn: "\xFE",
    tilde: "\u02DC",
    time: "\xD7",
    times: "\xD7",
    timesb: "\u22A0",
    timesbar: "\u2A31",
    timesd: "\u2A30",
    tint: "\u222D",
    toea: "\u2928",
    top: "\u22A4",
    topbot: "\u2336",
    topcir: "\u2AF1",
    topf: "\u{1D565}",
    topfork: "\u2ADA",
    tosa: "\u2929",
    tprime: "\u2034",
    trade: "\u2122",
    triangle: "\u25B5",
    triangledown: "\u25BF",
    triangleleft: "\u25C3",
    trianglelefteq: "\u22B4",
    triangleq: "\u225C",
    triangleright: "\u25B9",
    trianglerighteq: "\u22B5",
    tridot: "\u25EC",
    trie: "\u225C",
    triminus: "\u2A3A",
    triplus: "\u2A39",
    trisb: "\u29CD",
    tritime: "\u2A3B",
    trpezium: "\u23E2",
    tscr: "\u{1D4C9}",
    tscy: "\u0446",
    tshcy: "\u045B",
    tstrok: "\u0167",
    twixt: "\u226C",
    twoheadleftarrow: "\u219E",
    twoheadrightarrow: "\u21A0",
    uArr: "\u21D1",
    uHar: "\u2963",
    uacut: "\xFA",
    uacute: "\xFA",
    uarr: "\u2191",
    ubrcy: "\u045E",
    ubreve: "\u016D",
    ucir: "\xFB",
    ucirc: "\xFB",
    ucy: "\u0443",
    udarr: "\u21C5",
    udblac: "\u0171",
    udhar: "\u296E",
    ufisht: "\u297E",
    ufr: "\u{1D532}",
    ugrav: "\xF9",
    ugrave: "\xF9",
    uharl: "\u21BF",
    uharr: "\u21BE",
    uhblk: "\u2580",
    ulcorn: "\u231C",
    ulcorner: "\u231C",
    ulcrop: "\u230F",
    ultri: "\u25F8",
    umacr: "\u016B",
    um: "\xA8",
    uml: "\xA8",
    uogon: "\u0173",
    uopf: "\u{1D566}",
    uparrow: "\u2191",
    updownarrow: "\u2195",
    upharpoonleft: "\u21BF",
    upharpoonright: "\u21BE",
    uplus: "\u228E",
    upsi: "\u03C5",
    upsih: "\u03D2",
    upsilon: "\u03C5",
    upuparrows: "\u21C8",
    urcorn: "\u231D",
    urcorner: "\u231D",
    urcrop: "\u230E",
    uring: "\u016F",
    urtri: "\u25F9",
    uscr: "\u{1D4CA}",
    utdot: "\u22F0",
    utilde: "\u0169",
    utri: "\u25B5",
    utrif: "\u25B4",
    uuarr: "\u21C8",
    uum: "\xFC",
    uuml: "\xFC",
    uwangle: "\u29A7",
    vArr: "\u21D5",
    vBar: "\u2AE8",
    vBarv: "\u2AE9",
    vDash: "\u22A8",
    vangrt: "\u299C",
    varepsilon: "\u03F5",
    varkappa: "\u03F0",
    varnothing: "\u2205",
    varphi: "\u03D5",
    varpi: "\u03D6",
    varpropto: "\u221D",
    varr: "\u2195",
    varrho: "\u03F1",
    varsigma: "\u03C2",
    varsubsetneq: "\u228A\uFE00",
    varsubsetneqq: "\u2ACB\uFE00",
    varsupsetneq: "\u228B\uFE00",
    varsupsetneqq: "\u2ACC\uFE00",
    vartheta: "\u03D1",
    vartriangleleft: "\u22B2",
    vartriangleright: "\u22B3",
    vcy: "\u0432",
    vdash: "\u22A2",
    vee: "\u2228",
    veebar: "\u22BB",
    veeeq: "\u225A",
    vellip: "\u22EE",
    verbar: "|",
    vert: "|",
    vfr: "\u{1D533}",
    vltri: "\u22B2",
    vnsub: "\u2282\u20D2",
    vnsup: "\u2283\u20D2",
    vopf: "\u{1D567}",
    vprop: "\u221D",
    vrtri: "\u22B3",
    vscr: "\u{1D4CB}",
    vsubnE: "\u2ACB\uFE00",
    vsubne: "\u228A\uFE00",
    vsupnE: "\u2ACC\uFE00",
    vsupne: "\u228B\uFE00",
    vzigzag: "\u299A",
    wcirc: "\u0175",
    wedbar: "\u2A5F",
    wedge: "\u2227",
    wedgeq: "\u2259",
    weierp: "\u2118",
    wfr: "\u{1D534}",
    wopf: "\u{1D568}",
    wp: "\u2118",
    wr: "\u2240",
    wreath: "\u2240",
    wscr: "\u{1D4CC}",
    xcap: "\u22C2",
    xcirc: "\u25EF",
    xcup: "\u22C3",
    xdtri: "\u25BD",
    xfr: "\u{1D535}",
    xhArr: "\u27FA",
    xharr: "\u27F7",
    xi: "\u03BE",
    xlArr: "\u27F8",
    xlarr: "\u27F5",
    xmap: "\u27FC",
    xnis: "\u22FB",
    xodot: "\u2A00",
    xopf: "\u{1D569}",
    xoplus: "\u2A01",
    xotime: "\u2A02",
    xrArr: "\u27F9",
    xrarr: "\u27F6",
    xscr: "\u{1D4CD}",
    xsqcup: "\u2A06",
    xuplus: "\u2A04",
    xutri: "\u25B3",
    xvee: "\u22C1",
    xwedge: "\u22C0",
    yacut: "\xFD",
    yacute: "\xFD",
    yacy: "\u044F",
    ycirc: "\u0177",
    ycy: "\u044B",
    ye: "\xA5",
    yen: "\xA5",
    yfr: "\u{1D536}",
    yicy: "\u0457",
    yopf: "\u{1D56A}",
    yscr: "\u{1D4CE}",
    yucy: "\u044E",
    yum: "\xFF",
    yuml: "\xFF",
    zacute: "\u017A",
    zcaron: "\u017E",
    zcy: "\u0437",
    zdot: "\u017C",
    zeetrf: "\u2128",
    zeta: "\u03B6",
    zfr: "\u{1D537}",
    zhcy: "\u0436",
    zigrarr: "\u21DD",
    zopf: "\u{1D56B}",
    zscr: "\u{1D4CF}",
    zwj: "\u200D",
    zwnj: "\u200C"
};
var t2 = {}.hasOwnProperty;
function n2(e565) {
    return t2.call(r3, e565) ? r3[e565] : !1;
}
function I5(l102) {
    let c50 = {}, e566 = -1, p83, r215, n210, o, f62, s158, u116;
    for(; ++e566 < l102.length;){
        for(; (e566 in c50);)e566 = c50[e566];
        if (p83 = l102[e566], e566 && p83[1].type === "chunkFlow" && l102[e566 - 1][1].type === "listItemPrefix" && (s158 = p83[1]._tokenizer.events, n210 = 0, n210 < s158.length && s158[n210][1].type === "lineEndingBlank" && (n210 += 2), n210 < s158.length && s158[n210][1].type === "content")) for(; ++n210 < s158.length && s158[n210][1].type !== "content";)s158[n210][1].type === "chunkText" && (s158[n210][1]._isInFirstContentOfListItem = !0, n210++);
        if (p83[0] === "enter") p83[1].contentType && (Object.assign(c50, _3(l102, e566)), e566 = c50[e566], u116 = !0);
        else if (p83[1]._container) {
            for(n210 = e566, r215 = void 0; (n210--) && (o = l102[n210], o[1].type === "lineEnding" || o[1].type === "lineEndingBlank");)o[0] === "enter" && (r215 && (l102[r215][1].type = "lineEndingBlank"), o[1].type = "lineEnding", r215 = n210);
            r215 && (p83[1].end = Object.assign({}, l102[r215][1].start), f62 = l102.slice(r215, e566), f62.unshift(p83), u2(l102, r215, e566 - r215 + 1, f62));
        }
    }
    return !u116;
}
function _3(l103, c51) {
    let e567 = l103[c51][1], p84 = l103[c51][2], r216 = c51 - 1, n211 = [], o = e567._tokenizer || p84.parser[e567.contentType](e567.start), f63 = o.events, s159 = [], u117 = {}, a72, m41, i231 = -1, t480 = e567, d48 = 0, k28 = 0, h69 = [
        k28
    ];
    for(; t480;){
        for(; l103[++r216][1] !== t480;);
        n211.push(r216), t480._tokenizer || (a72 = p84.sliceStream(t480), t480.next || a72.push(null), m41 && o.defineSkip(t480.start), t480._isInFirstContentOfListItem && (o._gfmTasklistFirstContentOfListItem = !0), o.write(a72), t480._isInFirstContentOfListItem && (o._gfmTasklistFirstContentOfListItem = void 0)), m41 = t480, t480 = t480.next;
    }
    for(t480 = e567; ++i231 < f63.length;)f63[i231][0] === "exit" && f63[i231 - 1][0] === "enter" && f63[i231][1].type === f63[i231 - 1][1].type && f63[i231][1].start.line !== f63[i231][1].end.line && (k28 = i231 + 1, h69.push(k28), t480._tokenizer = void 0, t480.previous = void 0, t480 = t480.next);
    for(o.events = [], t480 ? (t480._tokenizer = void 0, t480.previous = void 0) : h69.pop(), i231 = h69.length; i231--;){
        let y41 = f63.slice(h69[i231], h69[i231 + 1]), g48 = n211.pop();
        s159.unshift([
            g48,
            g48 + y41.length - 1
        ]), u2(l103, g48, 2, y41);
    }
    for(i231 = -1; ++i231 < s159.length;)u117[d48 + s159[i231][0]] = d48 + s159[i231][1], d48 += s159[i231][1] - s159[i231][0] - 1;
    return u117;
}
function D6(i232, E21, u118, t481, h70, m42, S36, x55, N20) {
    let b33 = N20 || Number.POSITIVE_INFINITY, g49 = 0;
    return w33;
    function w33(n212) {
        return n212 === 60 ? (i232.enter(t481), i232.enter(h70), i232.enter(m42), i232.consume(n212), i232.exit(m42), l104) : n212 === null || n212 === 41 || B3(n212) ? u118(n212) : (i232.enter(t481), i232.enter(S36), i232.enter(x55), i232.enter("chunkString", {
            contentType: "string"
        }), r217(n212));
    }
    function l104(n213) {
        return n213 === 62 ? (i232.enter(m42), i232.consume(n213), i232.exit(m42), i232.exit(h70), i232.exit(t481), E21) : (i232.enter(x55), i232.enter("chunkString", {
            contentType: "string"
        }), a73(n213));
    }
    function a73(n214) {
        return n214 === 62 ? (i232.exit("chunkString"), i232.exit(x55), l104(n214)) : n214 === null || n214 === 60 || p4(n214) ? u118(n214) : (i232.consume(n214), n214 === 92 ? L17 : a73);
    }
    function L17(n215) {
        return n215 === 60 || n215 === 62 || n215 === 92 ? (i232.consume(n215), a73) : a73(n215);
    }
    function r217(n216) {
        return n216 === 40 ? ++g49 > b33 ? u118(n216) : (i232.consume(n216), r217) : n216 === 41 ? g49-- ? (i232.consume(n216), r217) : (i232.exit("chunkString"), i232.exit(x55), i232.exit(S36), i232.exit(t481), E21(n216)) : n216 === null || a5(n216) ? g49 ? u118(n216) : (i232.exit("chunkString"), i232.exit(x55), i232.exit(S36), i232.exit(t481), E21(n216)) : B3(n216) ? u118(n216) : (i232.consume(n216), n216 === 92 ? O26 : r217);
    }
    function O26(n217) {
        return n217 === 40 || n217 === 41 || n217 === 92 ? (i232.consume(n217), r217) : r217(n217);
    }
}
function w5(r218, h71, E22, x56, t482, m43) {
    let S37 = this, i233 = 0, l105;
    return b34;
    function b34(n218) {
        return r218.enter(x56), r218.enter(t482), r218.consume(n218), r218.exit(t482), r218.enter(m43), a74;
    }
    function a74(n219) {
        return n219 === null || n219 === 91 || n219 === 93 && !l105 || n219 === 94 && !i233 && "_hiddenFootnoteSupport" in S37.parser.constructs || i233 > 999 ? E22(n219) : n219 === 93 ? (r218.exit(m43), r218.enter(t482), r218.consume(n219), r218.exit(t482), r218.exit(x56), h71) : p4(n219) ? (r218.enter("lineEnding"), r218.consume(n219), r218.exit("lineEnding"), a74) : (r218.enter("chunkString", {
            contentType: "string"
        }), u119(n219));
    }
    function u119(n220) {
        return n220 === null || n220 === 91 || n220 === 93 || p4(n220) || i233++ > 999 ? (r218.exit("chunkString"), a74(n220)) : (r218.consume(n220), l105 = l105 || !s3(n220), n220 === 92 ? o : u119);
    }
    function o(n221) {
        return n221 === 91 || n221 === 92 || n221 === 93 ? (r218.consume(n221), i233++, u119) : u119(n221);
    }
}
function w6(r219, E23, k29, a75, t483, m44) {
    let i234;
    return o;
    function o(n222) {
        return r219.enter(a75), r219.enter(t483), r219.consume(n222), r219.exit(t483), i234 = n222 === 40 ? 41 : n222, x57;
    }
    function x57(n223) {
        return n223 === i234 ? (r219.enter(t483), r219.consume(n223), r219.exit(t483), r219.exit(a75), E23) : (r219.enter(m44), l106(n223));
    }
    function l106(n224) {
        return n224 === i234 ? (r219.exit(m44), x57(i234)) : n224 === null ? k29(n224) : p4(n224) ? (r219.enter("lineEnding"), r219.consume(n224), r219.exit("lineEnding"), p5(r219, l106, "linePrefix")) : (r219.enter("chunkString", {
            contentType: "string"
        }), u120(n224));
    }
    function u120(n225) {
        return n225 === i234 || n225 === null || p4(n225) ? (r219.exit("chunkString"), l106(n225)) : (r219.consume(n225), n225 === 92 ? S38 : u120);
    }
    function S38(n226) {
        return n226 === i234 || n226 === 92 ? (r219.consume(n226), u120) : u120(n226);
    }
}
function f2(r220, e568) {
    let t484;
    return i235;
    function i235(n227) {
        return p4(n227) ? (r220.enter("lineEnding"), r220.consume(n227), r220.exit("lineEnding"), t484 = !0, i235) : s3(n227) ? p5(r220, i235, t484 ? "linePrefix" : "lineSuffix")(n227) : e568(n227);
    }
}
function r4(e569) {
    return e569.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
var e2 = [
    "address",
    "article",
    "aside",
    "base",
    "basefont",
    "blockquote",
    "body",
    "caption",
    "center",
    "col",
    "colgroup",
    "dd",
    "details",
    "dialog",
    "dir",
    "div",
    "dl",
    "dt",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "frame",
    "frameset",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "head",
    "header",
    "hr",
    "html",
    "iframe",
    "legend",
    "li",
    "link",
    "main",
    "menu",
    "menuitem",
    "nav",
    "noframes",
    "ol",
    "optgroup",
    "option",
    "p",
    "param",
    "section",
    "source",
    "summary",
    "table",
    "tbody",
    "td",
    "tfoot",
    "th",
    "thead",
    "title",
    "tr",
    "track",
    "ul"
], t3 = [
    "pre",
    "script",
    "style",
    "textarea"
];
var On = {
    name: "attention",
    tokenize: Bn,
    resolveAll: Pn
};
function Pn(n228, u121) {
    let r221 = -1, t485, l107, o, a76, m45, p85, x58, s160;
    for(; ++r221 < n228.length;)if (n228[r221][0] === "enter" && n228[r221][1].type === "attentionSequence" && n228[r221][1]._close) {
        for(t485 = r221; t485--;)if (n228[t485][0] === "exit" && n228[t485][1].type === "attentionSequence" && n228[t485][1]._open && u121.sliceSerialize(n228[t485][1]).charCodeAt(0) === u121.sliceSerialize(n228[r221][1]).charCodeAt(0)) {
            if ((n228[t485][1]._close || n228[r221][1]._open) && (n228[r221][1].end.offset - n228[r221][1].start.offset) % 3 && !((n228[t485][1].end.offset - n228[t485][1].start.offset + n228[r221][1].end.offset - n228[r221][1].start.offset) % 3)) continue;
            p85 = n228[t485][1].end.offset - n228[t485][1].start.offset > 1 && n228[r221][1].end.offset - n228[r221][1].start.offset > 1 ? 2 : 1;
            let S39 = Object.assign({}, n228[t485][1].end), g50 = Object.assign({}, n228[r221][1].start);
            mn(S39, -p85), mn(g50, p85), a76 = {
                type: p85 > 1 ? "strongSequence" : "emphasisSequence",
                start: S39,
                end: Object.assign({}, n228[t485][1].end)
            }, m45 = {
                type: p85 > 1 ? "strongSequence" : "emphasisSequence",
                start: Object.assign({}, n228[r221][1].start),
                end: g50
            }, o = {
                type: p85 > 1 ? "strongText" : "emphasisText",
                start: Object.assign({}, n228[t485][1].end),
                end: Object.assign({}, n228[r221][1].start)
            }, l107 = {
                type: p85 > 1 ? "strong" : "emphasis",
                start: Object.assign({}, a76.start),
                end: Object.assign({}, m45.end)
            }, n228[t485][1].end = Object.assign({}, a76.start), n228[r221][1].start = Object.assign({}, m45.end), x58 = [], n228[t485][1].end.offset - n228[t485][1].start.offset && (x58 = g3(x58, [
                [
                    "enter",
                    n228[t485][1],
                    u121
                ],
                [
                    "exit",
                    n228[t485][1],
                    u121
                ]
            ])), x58 = g3(x58, [
                [
                    "enter",
                    l107,
                    u121
                ],
                [
                    "enter",
                    a76,
                    u121
                ],
                [
                    "exit",
                    a76,
                    u121
                ],
                [
                    "enter",
                    o,
                    u121
                ]
            ]), x58 = g3(x58, c4(u121.parser.constructs.insideSpan.null, n228.slice(t485 + 1, r221), u121)), x58 = g3(x58, [
                [
                    "exit",
                    o,
                    u121
                ],
                [
                    "enter",
                    m45,
                    u121
                ],
                [
                    "exit",
                    m45,
                    u121
                ],
                [
                    "exit",
                    l107,
                    u121
                ]
            ]), n228[r221][1].end.offset - n228[r221][1].start.offset ? (s160 = 2, x58 = g3(x58, [
                [
                    "enter",
                    n228[r221][1],
                    u121
                ],
                [
                    "exit",
                    n228[r221][1],
                    u121
                ]
            ])) : s160 = 0, u2(n228, t485 - 1, r221 - t485 + 3, x58), r221 = t485 + x58.length - s160 - 2;
            break;
        }
    }
    for(r221 = -1; ++r221 < n228.length;)n228[r221][1].type === "attentionSequence" && (n228[r221][1].type = "data");
    return n228;
}
function Bn(n229, u122) {
    let r222 = this.parser.constructs.attentionMarkers.null, t486 = this.previous, l108 = a6(t486), o;
    return a77;
    function a77(p86) {
        return n229.enter("attentionSequence"), o = p86, m46(p86);
    }
    function m46(p87) {
        if (p87 === o) return n229.consume(p87), m46;
        let x59 = n229.exit("attentionSequence"), s161 = a6(p87), S40 = !s161 || s161 === 2 && l108 || r222.includes(p87), g51 = !l108 || l108 === 2 && s161 || r222.includes(t486);
        return x59._open = Boolean(o === 42 ? S40 : S40 && (l108 || !g51)), x59._close = Boolean(o === 42 ? g51 : g51 && (s161 || !S40)), u122(p87);
    }
}
function mn(n230, u123) {
    n230.column += u123, n230.offset += u123, n230._bufferIndex += u123;
}
var Rn = {
    name: "autolink",
    tokenize: Hn
};
function Hn(n231, u124, r223) {
    let t487 = 1;
    return l109;
    function l109(h72) {
        return n231.enter("autolink"), n231.enter("autolinkMarker"), n231.consume(h72), n231.exit("autolinkMarker"), n231.enter("autolinkProtocol"), o;
    }
    function o(h73) {
        return o2(h73) ? (n231.consume(h73), a78) : c3(h73) ? x60(h73) : r223(h73);
    }
    function a78(h74) {
        return h74 === 43 || h74 === 45 || h74 === 46 || C4(h74) ? m47(h74) : x60(h74);
    }
    function m47(h75) {
        return h75 === 58 ? (n231.consume(h75), p88) : (h75 === 43 || h75 === 45 || h75 === 46 || C4(h75)) && t487++ < 32 ? (n231.consume(h75), m47) : x60(h75);
    }
    function p88(h76) {
        return h76 === 62 ? (n231.exit("autolinkProtocol"), c52(h76)) : h76 === null || h76 === 32 || h76 === 60 || B3(h76) ? r223(h76) : (n231.consume(h76), p88);
    }
    function x60(h77) {
        return h77 === 64 ? (n231.consume(h77), t487 = 0, s162) : c3(h77) ? (n231.consume(h77), x60) : r223(h77);
    }
    function s162(h78) {
        return C4(h78) ? S41(h78) : r223(h78);
    }
    function S41(h79) {
        return h79 === 46 ? (n231.consume(h79), t487 = 0, s162) : h79 === 62 ? (n231.exit("autolinkProtocol").type = "autolinkEmail", c52(h79)) : g52(h79);
    }
    function g52(h80) {
        return (h80 === 45 || C4(h80)) && t487++ < 63 ? (n231.consume(h80), h80 === 45 ? g52 : S41) : r223(h80);
    }
    function c52(h81) {
        return n231.enter("autolinkMarker"), n231.consume(h81), n231.exit("autolinkMarker"), n231.exit("autolink"), u124;
    }
}
var R2 = {
    tokenize: _n,
    partial: !0
};
function _n(n232, u125, r224) {
    return p5(n232, t488, "linePrefix");
    function t488(l110) {
        return l110 === null || p4(l110) ? u125(l110) : r224(l110);
    }
}
var sn = {
    name: "blockQuote",
    tokenize: Wn,
    continuation: {
        tokenize: Un
    },
    exit: Gn
};
function Wn(n233, u126, r225) {
    let t489 = this;
    return l111;
    function l111(a79) {
        if (a79 === 62) {
            let m48 = t489.containerState;
            return m48.open || (n233.enter("blockQuote", {
                _container: !0
            }), m48.open = !0), n233.enter("blockQuotePrefix"), n233.enter("blockQuoteMarker"), n233.consume(a79), n233.exit("blockQuoteMarker"), o;
        }
        return r225(a79);
    }
    function o(a80) {
        return s3(a80) ? (n233.enter("blockQuotePrefixWhitespace"), n233.consume(a80), n233.exit("blockQuotePrefixWhitespace"), n233.exit("blockQuotePrefix"), u126) : (n233.exit("blockQuotePrefix"), u126(a80));
    }
}
function Un(n234, u127, r226) {
    return p5(n234, n234.attempt(sn, u127, r226), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
function Gn(n235) {
    n235.exit("blockQuote");
}
var Kn = {
    name: "characterEscape",
    tokenize: Xn
};
function Xn(n236, u128, r227) {
    return t490;
    function t490(o) {
        return n236.enter("characterEscape"), n236.enter("escapeMarker"), n236.consume(o), n236.exit("escapeMarker"), l112;
    }
    function l112(o) {
        return e1(o) ? (n236.enter("characterEscapeValue"), n236.consume(o), n236.exit("characterEscapeValue"), n236.exit("characterEscape"), u128) : r227(o);
    }
}
var vn = {
    name: "characterReference",
    tokenize: dn
};
function dn(n237, u129, r228) {
    let t491 = this, l113 = 0, o, a81;
    return m49;
    function m49(S42) {
        return n237.enter("characterReference"), n237.enter("characterReferenceMarker"), n237.consume(S42), n237.exit("characterReferenceMarker"), p89;
    }
    function p89(S43) {
        return S43 === 35 ? (n237.enter("characterReferenceMarkerNumeric"), n237.consume(S43), n237.exit("characterReferenceMarkerNumeric"), x61) : (n237.enter("characterReferenceValue"), o = 31, a81 = C4, s163(S43));
    }
    function x61(S44) {
        return S44 === 88 || S44 === 120 ? (n237.enter("characterReferenceMarkerHexadecimal"), n237.consume(S44), n237.exit("characterReferenceMarkerHexadecimal"), n237.enter("characterReferenceValue"), o = 6, a81 = D3, s163) : (n237.enter("characterReferenceValue"), o = 7, a81 = r1, s163(S44));
    }
    function s163(S45) {
        let g53;
        return S45 === 59 && l113 ? (g53 = n237.exit("characterReferenceValue"), a81 === C4 && !n2(t491.sliceSerialize(g53)) ? r228(S45) : (n237.enter("characterReferenceMarker"), n237.consume(S45), n237.exit("characterReferenceMarker"), n237.exit("characterReference"), u129)) : a81(S45) && (l113++) < o ? (n237.consume(S45), s163) : r228(S45);
    }
}
var tt1 = {
    name: "codeFenced",
    tokenize: rt2,
    concrete: !0
};
function rt2(n238, u130, r229) {
    let t492 = this, l114 = {
        tokenize: I32,
        partial: !0
    }, o = {
        tokenize: A30,
        partial: !0
    }, a82 = this.events[this.events.length - 1], m50 = a82 && a82[1].type === "linePrefix" ? a82[2].sliceSerialize(a82[1], !0).length : 0, p90 = 0, x62;
    return s164;
    function s164(k30) {
        return n238.enter("codeFenced"), n238.enter("codeFencedFence"), n238.enter("codeFencedFenceSequence"), x62 = k30, S46(k30);
    }
    function S46(k31) {
        return k31 === x62 ? (n238.consume(k31), p90++, S46) : (n238.exit("codeFencedFenceSequence"), p90 < 3 ? r229(k31) : p5(n238, g54, "whitespace")(k31));
    }
    function g54(k32) {
        return k32 === null || p4(k32) ? q27(k32) : (n238.enter("codeFencedFenceInfo"), n238.enter("chunkString", {
            contentType: "string"
        }), c53(k32));
    }
    function c53(k33) {
        return k33 === null || a5(k33) ? (n238.exit("chunkString"), n238.exit("codeFencedFenceInfo"), p5(n238, h82, "whitespace")(k33)) : k33 === 96 && k33 === x62 ? r229(k33) : (n238.consume(k33), c53);
    }
    function h82(k34) {
        return k34 === null || p4(k34) ? q27(k34) : (n238.enter("codeFencedFenceMeta"), n238.enter("chunkString", {
            contentType: "string"
        }), B27(k34));
    }
    function B27(k35) {
        return k35 === null || p4(k35) ? (n238.exit("chunkString"), n238.exit("codeFencedFenceMeta"), q27(k35)) : k35 === 96 && k35 === x62 ? r229(k35) : (n238.consume(k35), B27);
    }
    function q27(k36) {
        return n238.exit("codeFencedFence"), t492.interrupt ? u130(k36) : z19(k36);
    }
    function z19(k37) {
        return k37 === null ? T21(k37) : p4(k37) ? n238.attempt(o, n238.attempt(l114, T21, m50 ? p5(n238, z19, "linePrefix", m50 + 1) : z19), T21)(k37) : (n238.enter("codeFlowValue"), C(k37));
    }
    function C(k38) {
        return k38 === null || p4(k38) ? (n238.exit("codeFlowValue"), z19(k38)) : (n238.consume(k38), C);
    }
    function T21(k39) {
        return n238.exit("codeFenced"), u130(k39);
    }
    function A30(k40, D25, F24) {
        let y42 = this;
        return M18;
        function M18(w34) {
            return k40.enter("lineEnding"), k40.consume(w34), k40.exit("lineEnding"), b35;
        }
        function b35(w35) {
            return y42.parser.lazy[y42.now().line] ? F24(w35) : D25(w35);
        }
    }
    function I32(k41, D26, F25) {
        let y43 = 0;
        return p5(k41, M19, "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
        function M19(f64) {
            return k41.enter("codeFencedFence"), k41.enter("codeFencedFenceSequence"), b36(f64);
        }
        function b36(f65) {
            return f65 === x62 ? (k41.consume(f65), y43++, b36) : y43 < p90 ? F25(f65) : (k41.exit("codeFencedFenceSequence"), p5(k41, w36, "whitespace")(f65));
        }
        function w36(f66) {
            return f66 === null || p4(f66) ? (k41.exit("codeFencedFence"), D26(f66)) : F25(f66);
        }
    }
}
var et1 = {
    name: "codeIndented",
    tokenize: ut1
}, it1 = {
    tokenize: at1,
    partial: !0
};
function ut1(n239, u131, r230) {
    let t493 = this;
    return l115;
    function l115(x63) {
        return n239.enter("codeIndented"), p5(n239, o, "linePrefix", 4 + 1)(x63);
    }
    function o(x64) {
        let s165 = t493.events[t493.events.length - 1];
        return s165 && s165[1].type === "linePrefix" && s165[2].sliceSerialize(s165[1], !0).length >= 4 ? a83(x64) : r230(x64);
    }
    function a83(x65) {
        return x65 === null ? p91(x65) : p4(x65) ? n239.attempt(it1, a83, p91)(x65) : (n239.enter("codeFlowValue"), m51(x65));
    }
    function m51(x66) {
        return x66 === null || p4(x66) ? (n239.exit("codeFlowValue"), a83(x66)) : (n239.consume(x66), m51);
    }
    function p91(x67) {
        return n239.exit("codeIndented"), u131(x67);
    }
}
function at1(n240, u132, r231) {
    let t494 = this;
    return l116;
    function l116(a84) {
        return t494.parser.lazy[t494.now().line] ? r231(a84) : p4(a84) ? (n240.enter("lineEnding"), n240.consume(a84), n240.exit("lineEnding"), l116) : p5(n240, o, "linePrefix", 4 + 1)(a84);
    }
    function o(a85) {
        let m52 = t494.events[t494.events.length - 1];
        return m52 && m52[1].type === "linePrefix" && m52[2].sliceSerialize(m52[1], !0).length >= 4 ? u132(a85) : p4(a85) ? l116(a85) : r231(a85);
    }
}
var lt1 = {
    name: "codeText",
    tokenize: pt1,
    resolve: ot1,
    previous: mt1
};
function ot1(n241) {
    let u133 = n241.length - 4, r232 = 3, t495, l117;
    if ((n241[r232][1].type === "lineEnding" || n241[r232][1].type === "space") && (n241[u133][1].type === "lineEnding" || n241[u133][1].type === "space")) {
        for(t495 = r232; ++t495 < u133;)if (n241[t495][1].type === "codeTextData") {
            n241[r232][1].type = "codeTextPadding", n241[u133][1].type = "codeTextPadding", r232 += 2, u133 -= 2;
            break;
        }
    }
    for(t495 = r232 - 1, u133++; ++t495 <= u133;)l117 === void 0 ? t495 !== u133 && n241[t495][1].type !== "lineEnding" && (l117 = t495) : (t495 === u133 || n241[t495][1].type === "lineEnding") && (n241[l117][1].type = "codeTextData", t495 !== l117 + 2 && (n241[l117][1].end = n241[t495 - 1][1].end, n241.splice(l117 + 2, t495 - l117 - 2), u133 -= t495 - l117 - 2, t495 = l117 + 2), l117 = void 0);
    return n241;
}
function mt1(n242) {
    return n242 !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function pt1(n243, u134, r233) {
    let l118 = 0, o, a86;
    return m53;
    function m53(g55) {
        return n243.enter("codeText"), n243.enter("codeTextSequence"), p92(g55);
    }
    function p92(g56) {
        return g56 === 96 ? (n243.consume(g56), l118++, p92) : (n243.exit("codeTextSequence"), x68(g56));
    }
    function x68(g57) {
        return g57 === null ? r233(g57) : g57 === 96 ? (a86 = n243.enter("codeTextSequence"), o = 0, S47(g57)) : g57 === 32 ? (n243.enter("space"), n243.consume(g57), n243.exit("space"), x68) : p4(g57) ? (n243.enter("lineEnding"), n243.consume(g57), n243.exit("lineEnding"), x68) : (n243.enter("codeTextData"), s166(g57));
    }
    function s166(g58) {
        return g58 === null || g58 === 32 || g58 === 96 || p4(g58) ? (n243.exit("codeTextData"), x68(g58)) : (n243.consume(g58), s166);
    }
    function S47(g59) {
        return g59 === 96 ? (n243.consume(g59), o++, S47) : o === l118 ? (n243.exit("codeTextSequence"), n243.exit("codeText"), u134(g59)) : (a86.type = "codeTextData", s166(g59));
    }
}
var ht1 = {
    tokenize: ct1,
    resolve: gt1
}, kt1 = {
    tokenize: St1,
    partial: !0
};
function gt1(n244) {
    return I5(n244), n244;
}
function ct1(n245, u135) {
    let r234;
    return t496;
    function t496(m54) {
        return n245.enter("content"), r234 = n245.enter("chunkContent", {
            contentType: "content"
        }), l119(m54);
    }
    function l119(m55) {
        return m55 === null ? o(m55) : p4(m55) ? n245.check(kt1, a87, o)(m55) : (n245.consume(m55), l119);
    }
    function o(m56) {
        return n245.exit("chunkContent"), n245.exit("content"), u135(m56);
    }
    function a87(m57) {
        return n245.consume(m57), n245.exit("chunkContent"), r234.next = n245.enter("chunkContent", {
            contentType: "content",
            previous: r234
        }), r234 = r234.next, l119;
    }
}
function St1(n246, u136, r235) {
    let t497 = this;
    return l120;
    function l120(a88) {
        return n246.exit("chunkContent"), n246.enter("lineEnding"), n246.consume(a88), n246.exit("lineEnding"), p5(n246, o, "linePrefix");
    }
    function o(a89) {
        if (a89 === null || p4(a89)) return r235(a89);
        let m58 = t497.events[t497.events.length - 1];
        return !t497.parser.constructs.disable.null.includes("codeIndented") && m58 && m58[1].type === "linePrefix" && m58[2].sliceSerialize(m58[1], !0).length >= 4 ? u136(a89) : n246.interrupt(t497.parser.constructs.flow, r235, u136)(a89);
    }
}
var wt1 = {
    name: "definition",
    tokenize: Ct1
}, Lt2 = {
    tokenize: Tt2,
    partial: !0
};
function Ct1(n247, u137, r236) {
    let t498 = this, l121;
    return o;
    function o(p93) {
        return n247.enter("definition"), w5.call(t498, n247, a90, r236, "definitionLabel", "definitionLabelMarker", "definitionLabelString")(p93);
    }
    function a90(p94) {
        return l121 = r4(t498.sliceSerialize(t498.events[t498.events.length - 1][1]).slice(1, -1)), p94 === 58 ? (n247.enter("definitionMarker"), n247.consume(p94), n247.exit("definitionMarker"), f2(n247, D6(n247, n247.attempt(Lt2, p5(n247, m59, "whitespace"), p5(n247, m59, "whitespace")), r236, "definitionDestination", "definitionDestinationLiteral", "definitionDestinationLiteralMarker", "definitionDestinationRaw", "definitionDestinationString"))) : r236(p94);
    }
    function m59(p95) {
        return p95 === null || p4(p95) ? (n247.exit("definition"), t498.parser.defined.includes(l121) || t498.parser.defined.push(l121), u137(p95)) : r236(p95);
    }
}
function Tt2(n248, u138, r237) {
    return t499;
    function t499(a91) {
        return a5(a91) ? f2(n248, l122)(a91) : r237(a91);
    }
    function l122(a92) {
        return a92 === 34 || a92 === 39 || a92 === 40 ? w6(n248, p5(n248, o, "whitespace"), r237, "definitionTitle", "definitionTitleMarker", "definitionTitleString")(a92) : r237(a92);
    }
    function o(a93) {
        return a93 === null || p4(a93) ? u138(a93) : r237(a93);
    }
}
var It1 = {
    name: "hardBreakEscape",
    tokenize: Ft2
};
function Ft2(n249, u139, r238) {
    return t500;
    function t500(o) {
        return n249.enter("hardBreakEscape"), n249.enter("escapeMarker"), n249.consume(o), l123;
    }
    function l123(o) {
        return p4(o) ? (n249.exit("escapeMarker"), n249.exit("hardBreakEscape"), u139(o)) : r238(o);
    }
}
var qt = {
    name: "headingAtx",
    tokenize: Rt2,
    resolve: Dt
};
function Dt(n250, u140) {
    let r239 = n250.length - 2, t501 = 3, l124, o;
    return n250[t501][1].type === "whitespace" && (t501 += 2), r239 - 2 > t501 && n250[r239][1].type === "whitespace" && (r239 -= 2), n250[r239][1].type === "atxHeadingSequence" && (t501 === r239 - 1 || r239 - 4 > t501 && n250[r239 - 2][1].type === "whitespace") && (r239 -= t501 + 1 === r239 ? 2 : 4), r239 > t501 && (l124 = {
        type: "atxHeadingText",
        start: n250[t501][1].start,
        end: n250[r239][1].end
    }, o = {
        type: "chunkText",
        start: n250[t501][1].start,
        end: n250[r239][1].end,
        contentType: "text"
    }, u2(n250, t501, r239 - t501 + 1, [
        [
            "enter",
            l124,
            u140
        ],
        [
            "enter",
            o,
            u140
        ],
        [
            "exit",
            o,
            u140
        ],
        [
            "exit",
            l124,
            u140
        ]
    ])), n250;
}
function Rt2(n251, u141, r240) {
    let t502 = this, l125 = 0;
    return o;
    function o(s167) {
        return n251.enter("atxHeading"), n251.enter("atxHeadingSequence"), a94(s167);
    }
    function a94(s168) {
        return s168 === 35 && l125++ < 6 ? (n251.consume(s168), a94) : s168 === null || a5(s168) ? (n251.exit("atxHeadingSequence"), t502.interrupt ? u141(s168) : m60(s168)) : r240(s168);
    }
    function m60(s169) {
        return s169 === 35 ? (n251.enter("atxHeadingSequence"), p96(s169)) : s169 === null || p4(s169) ? (n251.exit("atxHeading"), u141(s169)) : s3(s169) ? p5(n251, m60, "whitespace")(s169) : (n251.enter("atxHeadingText"), x69(s169));
    }
    function p96(s170) {
        return s170 === 35 ? (n251.consume(s170), p96) : (n251.exit("atxHeadingSequence"), m60(s170));
    }
    function x69(s171) {
        return s171 === null || s171 === 35 || a5(s171) ? (n251.exit("atxHeadingText"), m60(s171)) : (n251.consume(s171), x69);
    }
}
var Vt1 = {
    name: "htmlFlow",
    tokenize: Qt,
    resolveTo: _t2,
    concrete: !0
}, jt = {
    tokenize: Nt1,
    partial: !0
};
function _t2(n252) {
    let u142 = n252.length;
    for(; (u142--) && !(n252[u142][0] === "enter" && n252[u142][1].type === "htmlFlow"););
    return u142 > 1 && n252[u142 - 2][1].type === "linePrefix" && (n252[u142][1].start = n252[u142 - 2][1].start, n252[u142 + 1][1].start = n252[u142 - 2][1].start, n252.splice(u142 - 2, 2)), n252;
}
function Qt(n253, u143, r241) {
    let t503 = this, l126, o, a95, m61, p97;
    return x70;
    function x70(e570) {
        return n253.enter("htmlFlow"), n253.enter("htmlFlowData"), n253.consume(e570), s172;
    }
    function s172(e571) {
        return e571 === 33 ? (n253.consume(e571), S48) : e571 === 47 ? (n253.consume(e571), h83) : e571 === 63 ? (n253.consume(e571), l126 = 3, t503.interrupt ? u143 : O27) : o2(e571) ? (n253.consume(e571), a95 = String.fromCharCode(e571), o = !0, B28) : r241(e571);
    }
    function S48(e572) {
        return e572 === 45 ? (n253.consume(e572), l126 = 2, g60) : e572 === 91 ? (n253.consume(e572), l126 = 5, a95 = "CDATA[", m61 = 0, c54) : o2(e572) ? (n253.consume(e572), l126 = 4, t503.interrupt ? u143 : O27) : r241(e572);
    }
    function g60(e573) {
        return e573 === 45 ? (n253.consume(e573), t503.interrupt ? u143 : O27) : r241(e573);
    }
    function c54(e574) {
        return e574 === a95.charCodeAt(m61++) ? (n253.consume(e574), m61 === a95.length ? t503.interrupt ? u143 : b37 : c54) : r241(e574);
    }
    function h83(e575) {
        return o2(e575) ? (n253.consume(e575), a95 = String.fromCharCode(e575), B28) : r241(e575);
    }
    function B28(e576) {
        return e576 === null || e576 === 47 || e576 === 62 || a5(e576) ? e576 !== 47 && o && t3.includes(a95.toLowerCase()) ? (l126 = 1, t503.interrupt ? u143(e576) : b37(e576)) : e2.includes(a95.toLowerCase()) ? (l126 = 6, e576 === 47 ? (n253.consume(e576), q28) : t503.interrupt ? u143(e576) : b37(e576)) : (l126 = 7, t503.interrupt && !t503.parser.lazy[t503.now().line] ? r241(e576) : o ? C(e576) : z20(e576)) : e576 === 45 || C4(e576) ? (n253.consume(e576), a95 += String.fromCharCode(e576), B28) : r241(e576);
    }
    function q28(e577) {
        return e577 === 62 ? (n253.consume(e577), t503.interrupt ? u143 : b37) : r241(e577);
    }
    function z20(e578) {
        return s3(e578) ? (n253.consume(e578), z20) : y44(e578);
    }
    function C(e579) {
        return e579 === 47 ? (n253.consume(e579), y44) : e579 === 58 || e579 === 95 || o2(e579) ? (n253.consume(e579), T22) : s3(e579) ? (n253.consume(e579), C) : y44(e579);
    }
    function T22(e580) {
        return e580 === 45 || e580 === 46 || e580 === 58 || e580 === 95 || C4(e580) ? (n253.consume(e580), T22) : A31(e580);
    }
    function A31(e581) {
        return e581 === 61 ? (n253.consume(e581), I33) : s3(e581) ? (n253.consume(e581), A31) : C(e581);
    }
    function I33(e582) {
        return e582 === null || e582 === 60 || e582 === 61 || e582 === 62 || e582 === 96 ? r241(e582) : e582 === 34 || e582 === 39 ? (n253.consume(e582), p97 = e582, k42) : s3(e582) ? (n253.consume(e582), I33) : (p97 = null, D27(e582));
    }
    function k42(e583) {
        return e583 === null || p4(e583) ? r241(e583) : e583 === p97 ? (n253.consume(e583), F26) : (n253.consume(e583), k42);
    }
    function D27(e584) {
        return e584 === null || e584 === 34 || e584 === 39 || e584 === 60 || e584 === 61 || e584 === 62 || e584 === 96 || a5(e584) ? A31(e584) : (n253.consume(e584), D27);
    }
    function F26(e585) {
        return e585 === 47 || e585 === 62 || s3(e585) ? C(e585) : r241(e585);
    }
    function y44(e586) {
        return e586 === 62 ? (n253.consume(e586), M20) : r241(e586);
    }
    function M20(e587) {
        return s3(e587) ? (n253.consume(e587), M20) : e587 === null || p4(e587) ? b37(e587) : r241(e587);
    }
    function b37(e588) {
        return e588 === 45 && l126 === 2 ? (n253.consume(e588), N21) : e588 === 60 && l126 === 1 ? (n253.consume(e588), nn2) : e588 === 62 && l126 === 4 ? (n253.consume(e588), E24) : e588 === 63 && l126 === 3 ? (n253.consume(e588), O27) : e588 === 93 && l126 === 5 ? (n253.consume(e588), L18) : p4(e588) && (l126 === 6 || l126 === 7) ? n253.check(jt, E24, w37)(e588) : e588 === null || p4(e588) ? w37(e588) : (n253.consume(e588), b37);
    }
    function w37(e589) {
        return n253.exit("htmlFlowData"), f67(e589);
    }
    function f67(e590) {
        return e590 === null ? i236(e590) : p4(e590) ? n253.attempt({
            tokenize: Q9,
            partial: !0
        }, f67, i236)(e590) : (n253.enter("htmlFlowData"), b37(e590));
    }
    function Q9(e591, Cn3, Tn2) {
        return An;
        function An(X17) {
            return e591.enter("lineEnding"), e591.consume(X17), e591.exit("lineEnding"), In2;
        }
        function In2(X18) {
            return t503.parser.lazy[t503.now().line] ? Tn2(X18) : Cn3(X18);
        }
    }
    function N21(e592) {
        return e592 === 45 ? (n253.consume(e592), O27) : b37(e592);
    }
    function nn2(e593) {
        return e593 === 47 ? (n253.consume(e593), a95 = "", W13) : b37(e593);
    }
    function W13(e594) {
        return e594 === 62 && t3.includes(a95.toLowerCase()) ? (n253.consume(e594), E24) : o2(e594) && a95.length < 8 ? (n253.consume(e594), a95 += String.fromCharCode(e594), W13) : b37(e594);
    }
    function L18(e595) {
        return e595 === 93 ? (n253.consume(e595), O27) : b37(e595);
    }
    function O27(e596) {
        return e596 === 62 ? (n253.consume(e596), E24) : e596 === 45 && l126 === 2 ? (n253.consume(e596), O27) : b37(e596);
    }
    function E24(e597) {
        return e597 === null || p4(e597) ? (n253.exit("htmlFlowData"), i236(e597)) : (n253.consume(e597), E24);
    }
    function i236(e598) {
        return n253.exit("htmlFlow"), u143(e598);
    }
}
function Nt1(n254, u144, r242) {
    return t504;
    function t504(l127) {
        return n254.exit("htmlFlowData"), n254.enter("lineEndingBlank"), n254.consume(l127), n254.exit("lineEndingBlank"), n254.attempt(R2, u144, r242);
    }
}
var Ut = {
    name: "htmlText",
    tokenize: Gt
};
function Gt(n255, u145, r243) {
    let t505 = this, l128, o, a96, m62;
    return p98;
    function p98(i237) {
        return n255.enter("htmlText"), n255.enter("htmlTextData"), n255.consume(i237), x71;
    }
    function x71(i238) {
        return i238 === 33 ? (n255.consume(i238), s173) : i238 === 47 ? (n255.consume(i238), D28) : i238 === 63 ? (n255.consume(i238), I34) : o2(i238) ? (n255.consume(i238), M21) : r243(i238);
    }
    function s173(i239) {
        return i239 === 45 ? (n255.consume(i239), S49) : i239 === 91 ? (n255.consume(i239), o = "CDATA[", a96 = 0, q29) : o2(i239) ? (n255.consume(i239), A32) : r243(i239);
    }
    function S49(i240) {
        return i240 === 45 ? (n255.consume(i240), g61) : r243(i240);
    }
    function g61(i241) {
        return i241 === null || i241 === 62 ? r243(i241) : i241 === 45 ? (n255.consume(i241), c55) : h84(i241);
    }
    function c55(i242) {
        return i242 === null || i242 === 62 ? r243(i242) : h84(i242);
    }
    function h84(i243) {
        return i243 === null ? r243(i243) : i243 === 45 ? (n255.consume(i243), B29) : p4(i243) ? (m62 = h84, L19(i243)) : (n255.consume(i243), h84);
    }
    function B29(i244) {
        return i244 === 45 ? (n255.consume(i244), E25) : h84(i244);
    }
    function q29(i245) {
        return i245 === o.charCodeAt(a96++) ? (n255.consume(i245), a96 === o.length ? z21 : q29) : r243(i245);
    }
    function z21(i246) {
        return i246 === null ? r243(i246) : i246 === 93 ? (n255.consume(i246), C) : p4(i246) ? (m62 = z21, L19(i246)) : (n255.consume(i246), z21);
    }
    function C(i247) {
        return i247 === 93 ? (n255.consume(i247), T23) : z21(i247);
    }
    function T23(i248) {
        return i248 === 62 ? E25(i248) : i248 === 93 ? (n255.consume(i248), T23) : z21(i248);
    }
    function A32(i249) {
        return i249 === null || i249 === 62 ? E25(i249) : p4(i249) ? (m62 = A32, L19(i249)) : (n255.consume(i249), A32);
    }
    function I34(i250) {
        return i250 === null ? r243(i250) : i250 === 63 ? (n255.consume(i250), k43) : p4(i250) ? (m62 = I34, L19(i250)) : (n255.consume(i250), I34);
    }
    function k43(i251) {
        return i251 === 62 ? E25(i251) : I34(i251);
    }
    function D28(i252) {
        return o2(i252) ? (n255.consume(i252), F27) : r243(i252);
    }
    function F27(i253) {
        return i253 === 45 || C4(i253) ? (n255.consume(i253), F27) : y45(i253);
    }
    function y45(i254) {
        return p4(i254) ? (m62 = y45, L19(i254)) : s3(i254) ? (n255.consume(i254), y45) : E25(i254);
    }
    function M21(i255) {
        return i255 === 45 || C4(i255) ? (n255.consume(i255), M21) : i255 === 47 || i255 === 62 || a5(i255) ? b38(i255) : r243(i255);
    }
    function b38(i256) {
        return i256 === 47 ? (n255.consume(i256), E25) : i256 === 58 || i256 === 95 || o2(i256) ? (n255.consume(i256), w38) : p4(i256) ? (m62 = b38, L19(i256)) : s3(i256) ? (n255.consume(i256), b38) : E25(i256);
    }
    function w38(i257) {
        return i257 === 45 || i257 === 46 || i257 === 58 || i257 === 95 || C4(i257) ? (n255.consume(i257), w38) : f68(i257);
    }
    function f68(i258) {
        return i258 === 61 ? (n255.consume(i258), Q10) : p4(i258) ? (m62 = f68, L19(i258)) : s3(i258) ? (n255.consume(i258), f68) : b38(i258);
    }
    function Q10(i259) {
        return i259 === null || i259 === 60 || i259 === 61 || i259 === 62 || i259 === 96 ? r243(i259) : i259 === 34 || i259 === 39 ? (n255.consume(i259), l128 = i259, N22) : p4(i259) ? (m62 = Q10, L19(i259)) : s3(i259) ? (n255.consume(i259), Q10) : (n255.consume(i259), l128 = void 0, W14);
    }
    function N22(i260) {
        return i260 === l128 ? (n255.consume(i260), nn3) : i260 === null ? r243(i260) : p4(i260) ? (m62 = N22, L19(i260)) : (n255.consume(i260), N22);
    }
    function nn3(i261) {
        return i261 === 62 || i261 === 47 || a5(i261) ? b38(i261) : r243(i261);
    }
    function W14(i262) {
        return i262 === null || i262 === 34 || i262 === 39 || i262 === 60 || i262 === 61 || i262 === 96 ? r243(i262) : i262 === 62 || a5(i262) ? b38(i262) : (n255.consume(i262), W14);
    }
    function L19(i263) {
        return n255.exit("htmlTextData"), n255.enter("lineEnding"), n255.consume(i263), n255.exit("lineEnding"), p5(n255, O28, "linePrefix", t505.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
    }
    function O28(i264) {
        return n255.enter("htmlTextData"), m62(i264);
    }
    function E25(i265) {
        return i265 === 62 ? (n255.consume(i265), n255.exit("htmlTextData"), n255.exit("htmlText"), u145) : r243(i265);
    }
}
var K2 = {
    name: "labelEnd",
    tokenize: er,
    resolveTo: rr,
    resolveAll: tr
}, vt1 = {
    tokenize: ir
}, dt1 = {
    tokenize: ur
}, nr = {
    tokenize: ar
};
function tr(n256) {
    let u146 = -1, r244;
    for(; ++u146 < n256.length;)r244 = n256[u146][1], (r244.type === "labelImage" || r244.type === "labelLink" || r244.type === "labelEnd") && (n256.splice(u146 + 1, r244.type === "labelImage" ? 4 : 2), r244.type = "data", u146++);
    return n256;
}
function rr(n257, u147) {
    let r245 = n257.length, t506 = 0, l129, o, a97, m63;
    for(; r245--;)if (l129 = n257[r245][1], o) {
        if (l129.type === "link" || l129.type === "labelLink" && l129._inactive) break;
        n257[r245][0] === "enter" && l129.type === "labelLink" && (l129._inactive = !0);
    } else if (a97) {
        if (n257[r245][0] === "enter" && (l129.type === "labelImage" || l129.type === "labelLink") && !l129._balanced && (o = r245, l129.type !== "labelLink")) {
            t506 = 2;
            break;
        }
    } else l129.type === "labelEnd" && (a97 = r245);
    let p99 = {
        type: n257[o][1].type === "labelLink" ? "link" : "image",
        start: Object.assign({}, n257[o][1].start),
        end: Object.assign({}, n257[n257.length - 1][1].end)
    }, x72 = {
        type: "label",
        start: Object.assign({}, n257[o][1].start),
        end: Object.assign({}, n257[a97][1].end)
    }, s174 = {
        type: "labelText",
        start: Object.assign({}, n257[o + t506 + 2][1].end),
        end: Object.assign({}, n257[a97 - 2][1].start)
    };
    return m63 = [
        [
            "enter",
            p99,
            u147
        ],
        [
            "enter",
            x72,
            u147
        ]
    ], m63 = g3(m63, n257.slice(o + 1, o + t506 + 3)), m63 = g3(m63, [
        [
            "enter",
            s174,
            u147
        ]
    ]), m63 = g3(m63, c4(u147.parser.constructs.insideSpan.null, n257.slice(o + t506 + 4, a97 - 3), u147)), m63 = g3(m63, [
        [
            "exit",
            s174,
            u147
        ],
        n257[a97 - 2],
        n257[a97 - 1],
        [
            "exit",
            x72,
            u147
        ]
    ]), m63 = g3(m63, n257.slice(a97 + 1)), m63 = g3(m63, [
        [
            "exit",
            p99,
            u147
        ]
    ]), u2(n257, o, n257.length, m63), n257;
}
function er(n258, u148, r246) {
    let t507 = this, l130 = t507.events.length, o, a98;
    for(; l130--;)if ((t507.events[l130][1].type === "labelImage" || t507.events[l130][1].type === "labelLink") && !t507.events[l130][1]._balanced) {
        o = t507.events[l130][1];
        break;
    }
    return m64;
    function m64(s175) {
        return o ? o._inactive ? x73(s175) : (a98 = t507.parser.defined.includes(r4(t507.sliceSerialize({
            start: o.end,
            end: t507.now()
        }))), n258.enter("labelEnd"), n258.enter("labelMarker"), n258.consume(s175), n258.exit("labelMarker"), n258.exit("labelEnd"), p100) : r246(s175);
    }
    function p100(s176) {
        return s176 === 40 ? n258.attempt(vt1, u148, a98 ? u148 : x73)(s176) : s176 === 91 ? n258.attempt(dt1, u148, a98 ? n258.attempt(nr, u148, x73) : x73)(s176) : a98 ? u148(s176) : x73(s176);
    }
    function x73(s177) {
        return o._balanced = !0, r246(s177);
    }
}
function ir(n259, u149, r247) {
    return t508;
    function t508(p101) {
        return n259.enter("resource"), n259.enter("resourceMarker"), n259.consume(p101), n259.exit("resourceMarker"), f2(n259, l131);
    }
    function l131(p102) {
        return p102 === 41 ? m65(p102) : D6(n259, o, r247, "resourceDestination", "resourceDestinationLiteral", "resourceDestinationLiteralMarker", "resourceDestinationRaw", "resourceDestinationString", 32)(p102);
    }
    function o(p103) {
        return a5(p103) ? f2(n259, a99)(p103) : m65(p103);
    }
    function a99(p104) {
        return p104 === 34 || p104 === 39 || p104 === 40 ? w6(n259, f2(n259, m65), r247, "resourceTitle", "resourceTitleMarker", "resourceTitleString")(p104) : m65(p104);
    }
    function m65(p105) {
        return p105 === 41 ? (n259.enter("resourceMarker"), n259.consume(p105), n259.exit("resourceMarker"), n259.exit("resource"), u149) : r247(p105);
    }
}
function ur(n260, u150, r248) {
    let t509 = this;
    return l132;
    function l132(a100) {
        return w5.call(t509, n260, o, r248, "reference", "referenceMarker", "referenceString")(a100);
    }
    function o(a101) {
        return t509.parser.defined.includes(r4(t509.sliceSerialize(t509.events[t509.events.length - 1][1]).slice(1, -1))) ? u150(a101) : r248(a101);
    }
}
function ar(n261, u151, r249) {
    return t510;
    function t510(o) {
        return n261.enter("reference"), n261.enter("referenceMarker"), n261.consume(o), n261.exit("referenceMarker"), l133;
    }
    function l133(o) {
        return o === 93 ? (n261.enter("referenceMarker"), n261.consume(o), n261.exit("referenceMarker"), n261.exit("reference"), u151) : r249(o);
    }
}
var lr = {
    name: "labelStartImage",
    tokenize: or,
    resolveAll: K2.resolveAll
};
function or(n262, u152, r250) {
    let t511 = this;
    return l134;
    function l134(m66) {
        return n262.enter("labelImage"), n262.enter("labelImageMarker"), n262.consume(m66), n262.exit("labelImageMarker"), o;
    }
    function o(m67) {
        return m67 === 91 ? (n262.enter("labelMarker"), n262.consume(m67), n262.exit("labelMarker"), n262.exit("labelImage"), a102) : r250(m67);
    }
    function a102(m68) {
        return m68 === 94 && "_hiddenFootnoteSupport" in t511.parser.constructs ? r250(m68) : u152(m68);
    }
}
var mr = {
    name: "labelStartLink",
    tokenize: pr,
    resolveAll: K2.resolveAll
};
function pr(n263, u153, r251) {
    let t512 = this;
    return l135;
    function l135(a103) {
        return n263.enter("labelLink"), n263.enter("labelMarker"), n263.consume(a103), n263.exit("labelMarker"), n263.exit("labelLink"), o;
    }
    function o(a104) {
        return a104 === 94 && "_hiddenFootnoteSupport" in t512.parser.constructs ? r251(a104) : u153(a104);
    }
}
var xr1 = {
    name: "lineEnding",
    tokenize: hr
};
function hr(n264, u154) {
    return r252;
    function r252(t513) {
        return n264.enter("lineEnding"), n264.consume(t513), n264.exit("lineEnding"), p5(n264, u154, "linePrefix");
    }
}
var an = {
    name: "thematicBreak",
    tokenize: Sr1
};
function Sr1(n265, u155, r253) {
    let t514 = 0, l136;
    return o;
    function o(p106) {
        return n265.enter("thematicBreak"), l136 = p106, a105(p106);
    }
    function a105(p107) {
        return p107 === l136 ? (n265.enter("thematicBreakSequence"), m69(p107)) : s3(p107) ? p5(n265, a105, "whitespace")(p107) : t514 < 3 || p107 !== null && !p4(p107) ? r253(p107) : (n265.exit("thematicBreak"), u155(p107));
    }
    function m69(p108) {
        return p108 === l136 ? (n265.consume(p108), t514++, m69) : (n265.exit("thematicBreakSequence"), a105(p108));
    }
}
var Ln = {
    name: "list",
    tokenize: zr,
    continuation: {
        tokenize: yr
    },
    exit: wr1
}, br = {
    tokenize: Lr,
    partial: !0
}, fr = {
    tokenize: Er1,
    partial: !0
};
function zr(n266, u156, r254) {
    let t515 = this, l137 = t515.events[t515.events.length - 1], o = l137 && l137[1].type === "linePrefix" ? l137[2].sliceSerialize(l137[1], !0).length : 0, a106 = 0;
    return m70;
    function m70(c56) {
        let h85 = t515.containerState.type || (c56 === 42 || c56 === 43 || c56 === 45 ? "listUnordered" : "listOrdered");
        if (h85 === "listUnordered" ? !t515.containerState.marker || c56 === t515.containerState.marker : r1(c56)) {
            if (t515.containerState.type || (t515.containerState.type = h85, n266.enter(h85, {
                _container: !0
            })), h85 === "listUnordered") return n266.enter("listItemPrefix"), c56 === 42 || c56 === 45 ? n266.check(an, r254, x74)(c56) : x74(c56);
            if (!t515.interrupt || c56 === 49) return n266.enter("listItemPrefix"), n266.enter("listItemValue"), p109(c56);
        }
        return r254(c56);
    }
    function p109(c57) {
        return r1(c57) && ++a106 < 10 ? (n266.consume(c57), p109) : (!t515.interrupt || a106 < 2) && (t515.containerState.marker ? c57 === t515.containerState.marker : c57 === 41 || c57 === 46) ? (n266.exit("listItemValue"), x74(c57)) : r254(c57);
    }
    function x74(c58) {
        return n266.enter("listItemMarker"), n266.consume(c58), n266.exit("listItemMarker"), t515.containerState.marker = t515.containerState.marker || c58, n266.check(R2, t515.interrupt ? r254 : s178, n266.attempt(br, g62, S50));
    }
    function s178(c59) {
        return t515.containerState.initialBlankLine = !0, o++, g62(c59);
    }
    function S50(c60) {
        return s3(c60) ? (n266.enter("listItemPrefixWhitespace"), n266.consume(c60), n266.exit("listItemPrefixWhitespace"), g62) : r254(c60);
    }
    function g62(c61) {
        return t515.containerState.size = o + t515.sliceSerialize(n266.exit("listItemPrefix"), !0).length, u156(c61);
    }
}
function yr(n267, u157, r255) {
    let t516 = this;
    return t516.containerState._closeFlow = void 0, n267.check(R2, l138, o);
    function l138(m71) {
        return t516.containerState.furtherBlankLines = t516.containerState.furtherBlankLines || t516.containerState.initialBlankLine, p5(n267, u157, "listItemIndent", t516.containerState.size + 1)(m71);
    }
    function o(m72) {
        return t516.containerState.furtherBlankLines || !s3(m72) ? (t516.containerState.furtherBlankLines = void 0, t516.containerState.initialBlankLine = void 0, a107(m72)) : (t516.containerState.furtherBlankLines = void 0, t516.containerState.initialBlankLine = void 0, n267.attempt(fr, u157, a107)(m72));
    }
    function a107(m73) {
        return t516.containerState._closeFlow = !0, t516.interrupt = void 0, p5(n267, n267.attempt(Ln, u157, r255), "linePrefix", t516.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(m73);
    }
}
function Er1(n268, u158, r256) {
    let t517 = this;
    return p5(n268, l139, "listItemIndent", t517.containerState.size + 1);
    function l139(o) {
        let a108 = t517.events[t517.events.length - 1];
        return a108 && a108[1].type === "listItemIndent" && a108[2].sliceSerialize(a108[1], !0).length === t517.containerState.size ? u158(o) : r256(o);
    }
}
function wr1(n269) {
    n269.exit(this.containerState.type);
}
function Lr(n270, u159, r257) {
    let t518 = this;
    return p5(n270, l140, "listItemPrefixWhitespace", t518.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4 + 1);
    function l140(o) {
        let a109 = t518.events[t518.events.length - 1];
        return !s3(o) && a109 && a109[1].type === "listItemPrefixWhitespace" ? u159(o) : r257(o);
    }
}
var Ar = {
    name: "setextUnderline",
    tokenize: Fr1,
    resolveTo: Ir
};
function Ir(n271, u160) {
    let r258 = n271.length, t519, l141, o;
    for(; r258--;)if (n271[r258][0] === "enter") {
        if (n271[r258][1].type === "content") {
            t519 = r258;
            break;
        }
        n271[r258][1].type === "paragraph" && (l141 = r258);
    } else n271[r258][1].type === "content" && n271.splice(r258, 1), !o && n271[r258][1].type === "definition" && (o = r258);
    let a110 = {
        type: "setextHeading",
        start: Object.assign({}, n271[l141][1].start),
        end: Object.assign({}, n271[n271.length - 1][1].end)
    };
    return n271[l141][1].type = "setextHeadingText", o ? (n271.splice(l141, 0, [
        "enter",
        a110,
        u160
    ]), n271.splice(o + 1, 0, [
        "exit",
        n271[t519][1],
        u160
    ]), n271[t519][1].end = Object.assign({}, n271[o][1].end)) : n271[t519][1] = a110, n271.push([
        "exit",
        a110,
        u160
    ]), n271;
}
function Fr1(n272, u161, r259) {
    let t520 = this, l142 = t520.events.length, o, a111;
    for(; l142--;)if (t520.events[l142][1].type !== "lineEnding" && t520.events[l142][1].type !== "linePrefix" && t520.events[l142][1].type !== "content") {
        a111 = t520.events[l142][1].type === "paragraph";
        break;
    }
    return m74;
    function m74(s179) {
        return !t520.parser.lazy[t520.now().line] && (t520.interrupt || a111) ? (n272.enter("setextHeadingLine"), n272.enter("setextHeadingLineSequence"), o = s179, p110(s179)) : r259(s179);
    }
    function p110(s180) {
        return s180 === o ? (n272.consume(s180), p110) : (n272.exit("setextHeadingLineSequence"), p5(n272, x75, "lineSuffix")(s180));
    }
    function x75(s181) {
        return s181 === null || p4(s181) ? (n272.exit("setextHeadingLine"), u161(s181)) : r259(s181);
    }
}
var I6 = {
    tokenize: T4,
    partial: !0
}, M1 = new Set([
    "ExportAllDeclaration",
    "ExportDefaultDeclaration",
    "ExportNamedDeclaration",
    "ImportDeclaration"
]);
function O1(e599) {
    let s182 = {
        tokenize: p111,
        concrete: !0
    };
    if (!e599 || !e599.acorn || !e599.acorn.parse) throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
    let m75 = e599.acorn, u162 = Object.assign({
        ecmaVersion: 2020,
        sourceType: "module"
    }, e599.acornOptions);
    return {
        flow: {
            [101]: s182,
            [105]: s182
        }
    };
    function p111(r260, D29, a112) {
        let o = this, l143 = o.parser.definedModuleSpecifiers || (o.parser.definedModuleSpecifiers = []), y46 = this.events.length + 1, E26 = 0, c62;
        return o.interrupt ? a112 : b39;
        function b39(n273) {
            return o.now().column > 1 ? a112(n273) : (c62 = n273 === 101 ? "export" : "import", r260.enter("mdxjsEsm"), r260.enter("mdxjsEsmData"), h86(n273));
        }
        function h86(n274) {
            return n274 === c62.charCodeAt(E26++) ? (r260.consume(n274), E26 === c62.length ? S51 : h86) : a112(n274);
        }
        function S51(n275) {
            return x6(n275) ? (r260.consume(n275), x76) : a112(n275);
        }
        function x76(n276) {
            return n276 === null ? w39(n276) : p4(n276) ? r260.check(I6, w39, v33)(n276) : (r260.consume(n276), x76);
        }
        function v33(n277) {
            return r260.exit("mdxjsEsmData"), d49(n277);
        }
        function d49(n278) {
            return p4(n278) ? (r260.enter("lineEnding"), r260.consume(n278), r260.exit("lineEnding"), d49) : (r260.enter("mdxjsEsmData"), x76(n278));
        }
        function w39(n279) {
            r260.exit("mdxjsEsmData");
            let f69 = -1, t521 = C5(o.events.slice(y46), {
                acorn: m75,
                acornOptions: u162,
                prefix: l143.length > 0 ? "var " + l143.join(",") + `
` : ""
            });
            if (n279 !== null && t521.swallow) return d49(n279);
            if (t521.error) throw new s2("Could not parse import/exports with acorn: " + String(t521.error), {
                line: t521.error.loc.line,
                column: t521.error.loc.column + 1,
                offset: t521.error.pos
            }, "micromark-extension-mdxjs-esm:acorn");
            for(l143.length > 0 && t521.estree.body.shift(); ++f69 < t521.estree.body.length;){
                let i266 = t521.estree.body[f69];
                if (!M1.has(i266.type)) throw new s2("Unexpected `" + i266.type + "` in code: only import/exports are supported", s4(i266), "micromark-extension-mdxjs-esm:non-esm");
                if (i266.type === "ImportDeclaration" && !o.interrupt) {
                    let g63 = -1;
                    for(; ++g63 < i266.specifiers.length;)l143.push(i266.specifiers[g63].local.name);
                }
            }
            return Object.assign(r260.exit("mdxjsEsm"), e599.addResult ? {
                estree: t521.estree
            } : void 0), D29(n279);
        }
    }
}
function T4(e600, s183, m76) {
    return u163;
    function u163(p112) {
        return e600.exit("mdxjsEsmData"), e600.enter("lineEndingBlank"), e600.consume(p112), e600.exit("lineEndingBlank"), e600.attempt(R2, s183, m76);
    }
}
function E3(r261) {
    let o = Object.assign({
        acorn: b4.extend(G2()),
        acornOptions: {
            ecmaVersion: 2020,
            sourceType: "module"
        },
        addResult: !0
    }, r261);
    return y4([
        O1(o),
        k5(o),
        Lt1(o),
        l3
    ]);
}
var d2 = {
    enter: {
        mdxFlowExpression: o3,
        mdxTextExpression: a7
    },
    exit: {
        mdxFlowExpression: x7,
        mdxFlowExpressionChunk: r5,
        mdxTextExpression: x7,
        mdxTextExpressionChunk: r5
    }
}, p6 = {
    handlers: {
        mdxFlowExpression: i2,
        mdxTextExpression: i2
    },
    unsafe: [
        {
            character: "{",
            inConstruct: [
                "phrasing"
            ]
        },
        {
            atBreak: !0,
            character: "{"
        }
    ]
};
function o3(e601) {
    this.enter({
        type: "mdxFlowExpression",
        value: ""
    }, e601), this.buffer();
}
function a7(e602) {
    this.enter({
        type: "mdxTextExpression",
        value: ""
    }, e602), this.buffer();
}
function x7(e603) {
    let s184 = this.resume(), t522 = e603.estree, n280 = this.exit(e603);
    n280.value = s184, t522 && (n280.data = {
        estree: t522
    });
}
function r5(e604) {
    this.config.enter.data.call(this, e604), this.config.exit.data.call(this, e604);
}
function i2(e605) {
    let s185 = e605.value || "";
    return "{" + s185 + "}";
}
function r6(i267, e606) {
    let t523 = String(i267);
    if (typeof e606 != "string") throw new TypeError("Expected character");
    let o = 0, n281 = t523.indexOf(e606);
    for(; n281 !== -1;)o++, n281 = t523.indexOf(e606, n281 + e606.length);
    return o;
}
var e3 = [
    "AElig",
    "AMP",
    "Aacute",
    "Acirc",
    "Agrave",
    "Aring",
    "Atilde",
    "Auml",
    "COPY",
    "Ccedil",
    "ETH",
    "Eacute",
    "Ecirc",
    "Egrave",
    "Euml",
    "GT",
    "Iacute",
    "Icirc",
    "Igrave",
    "Iuml",
    "LT",
    "Ntilde",
    "Oacute",
    "Ocirc",
    "Ograve",
    "Oslash",
    "Otilde",
    "Ouml",
    "QUOT",
    "REG",
    "THORN",
    "Uacute",
    "Ucirc",
    "Ugrave",
    "Uuml",
    "Yacute",
    "aacute",
    "acirc",
    "acute",
    "aelig",
    "agrave",
    "amp",
    "aring",
    "atilde",
    "auml",
    "brvbar",
    "ccedil",
    "cedil",
    "cent",
    "copy",
    "curren",
    "deg",
    "divide",
    "eacute",
    "ecirc",
    "egrave",
    "eth",
    "euml",
    "frac12",
    "frac14",
    "frac34",
    "gt",
    "iacute",
    "icirc",
    "iexcl",
    "igrave",
    "iquest",
    "iuml",
    "laquo",
    "lt",
    "macr",
    "micro",
    "middot",
    "nbsp",
    "not",
    "ntilde",
    "oacute",
    "ocirc",
    "ograve",
    "ordf",
    "ordm",
    "oslash",
    "otilde",
    "ouml",
    "para",
    "plusmn",
    "pound",
    "quot",
    "raquo",
    "reg",
    "sect",
    "shy",
    "sup1",
    "sup2",
    "sup3",
    "szlig",
    "thorn",
    "times",
    "uacute",
    "ucirc",
    "ugrave",
    "uml",
    "uuml",
    "yacute",
    "yen",
    "yuml"
];
var e4 = {
    0: "\uFFFD",
    128: "\u20AC",
    130: "\u201A",
    131: "\u0192",
    132: "\u201E",
    133: "\u2026",
    134: "\u2020",
    135: "\u2021",
    136: "\u02C6",
    137: "\u2030",
    138: "\u0160",
    139: "\u2039",
    140: "\u0152",
    142: "\u017D",
    145: "\u2018",
    146: "\u2019",
    147: "\u201C",
    148: "\u201D",
    149: "\u2022",
    150: "\u2013",
    151: "\u2014",
    152: "\u02DC",
    153: "\u2122",
    154: "\u0161",
    155: "\u203A",
    156: "\u0153",
    158: "\u017E",
    159: "\u0178"
};
function t4(o) {
    let n282 = typeof o == "string" ? o.charCodeAt(0) : o;
    return n282 >= 48 && n282 <= 57;
}
function n3(e607) {
    let o = typeof e607 == "string" ? e607.charCodeAt(0) : e607;
    return o >= 97 && o <= 102 || o >= 65 && o <= 70 || o >= 48 && o <= 57;
}
function n4(t524) {
    let o = typeof t524 == "string" ? t524.charCodeAt(0) : t524;
    return o >= 97 && o <= 122 || o >= 65 && o <= 90;
}
function p7(i268) {
    return n4(i268) || t4(i268);
}
var N2 = String.fromCharCode, B5 = [
    "",
    "Named character references must be terminated by a semicolon",
    "Numeric character references must be terminated by a semicolon",
    "Named character references cannot be empty",
    "Numeric character references cannot be empty",
    "Named character references must be known",
    "Numeric character references cannot be disallowed",
    "Numeric character references cannot be outside the permissible Unicode range"
];
function F2(t525, r262 = {}) {
    let k44 = typeof r262.additional == "string" ? r262.additional.charCodeAt(0) : r262.additional, R20 = [], o = 0, I35 = -1, h87 = "", d50, E27;
    r262.position && ("start" in r262.position || "indent" in r262.position ? (E27 = r262.position.indent, d50 = r262.position.start) : d50 = r262.position);
    let j36 = (d50 ? d50.line : 0) || 1, x77 = (d50 ? d50.column : 0) || 1, y47 = w40(), u164;
    for(o--; ++o <= t525.length;)if (u164 === 10 && (x77 = (E27 ? E27[I35] : 0) || 1), u164 = t525.charCodeAt(o), u164 === 38) {
        let f70 = t525.charCodeAt(o + 1);
        if (f70 === 9 || f70 === 10 || f70 === 12 || f70 === 32 || f70 === 38 || f70 === 60 || Number.isNaN(f70) || k44 && f70 === k44) {
            h87 += N2(u164), x77++;
            continue;
        }
        let l144 = o + 1, s186 = l144, n283 = l144, a113;
        if (f70 === 35) {
            n283 = ++s186;
            let e608 = t525.charCodeAt(n283);
            e608 === 88 || e608 === 120 ? (a113 = "hexadecimal", n283 = ++s186) : a113 = "decimal";
        } else a113 = "named";
        let p113 = "", g64 = "", i269 = "", S52 = a113 === "named" ? p7 : a113 === "decimal" ? t4 : n3;
        for(n283--; ++n283 <= t525.length;){
            let e609 = t525.charCodeAt(n283);
            if (!S52(e609)) break;
            i269 += N2(e609), a113 === "named" && e3.includes(i269) && (p113 = i269, g64 = n2(i269));
        }
        let C = t525.charCodeAt(n283) === 59;
        if (C) {
            n283++;
            let e610 = a113 === "named" ? n2(i269) : !1;
            e610 && (p113 = i269, g64 = e610);
        }
        let m77 = 1 + n283 - l144, b40 = "";
        if (!(!C && r262.nonTerminated === !1)) if (!i269) a113 !== "named" && c63(4, m77);
        else if (a113 === "named") {
            if (C && !g64) c63(5, 1);
            else if (p113 !== i269 && (n283 = s186 + p113.length, m77 = 1 + n283 - s186, C = !1), !C) {
                let e611 = p113 ? 1 : 3;
                if (r262.attribute) {
                    let A33 = t525.charCodeAt(n283);
                    A33 === 61 ? (c63(e611, m77), g64 = "") : p7(A33) ? g64 = "" : c63(e611, m77);
                } else c63(e611, m77);
            }
            b40 = g64;
        } else {
            C || c63(2, m77);
            let e612 = Number.parseInt(i269, a113 === "hexadecimal" ? 16 : 10);
            if (G3(e612)) c63(7, m77), b40 = N2(65533);
            else if (e612 in e4) c63(6, m77), b40 = e4[e612];
            else {
                let A34 = "";
                J3(e612) && c63(6, m77), e612 > 65535 && (e612 -= 65536, A34 += N2(e612 >>> (10 & 1023) | 55296), e612 = 56320 | e612 & 1023), b40 = A34 + N2(e612);
            }
        }
        if (b40) {
            q30(), y47 = w40(), o = n283 - 1, x77 += n283 - l144 + 1, R20.push(b40);
            let e613 = w40();
            e613.offset++, r262.reference && r262.reference.call(r262.referenceContext, b40, {
                start: y47,
                end: e613
            }, t525.slice(l144 - 1, n283)), y47 = e613;
        } else i269 = t525.slice(l144 - 1, n283), h87 += i269, x77 += i269.length, o = n283 - 1;
    } else u164 === 10 && (j36++, I35++, x77 = 0), Number.isNaN(u164) ? q30() : (h87 += N2(u164), x77++);
    return R20.join("");
    function w40() {
        return {
            line: j36,
            column: x77,
            offset: o + ((d50 ? d50.offset : 0) || 0)
        };
    }
    function c63(f71, l145) {
        let s187;
        r262.warning && (s187 = w40(), s187.column += l145, s187.offset += l145, r262.warning.call(r262.warningContext, B5[f71], s187, f71));
    }
    function q30() {
        h87 && (R20.push(h87), r262.text && r262.text.call(r262.textContext, h87, {
            start: y47,
            end: w40()
        }), h87 = "");
    }
}
function G3(t526) {
    return t526 >= 55296 && t526 <= 57343 || t526 > 1114111;
}
function J3(t527) {
    return t527 >= 1 && t527 <= 8 || t527 === 11 || t527 >= 13 && t527 <= 31 || t527 >= 127 && t527 <= 159 || t527 >= 64976 && t527 <= 65007 || (t527 & 65535) === 65535 || (t527 & 65535) === 65534;
}
var a8 = {
    nbsp: "\xA0",
    iexcl: "\xA1",
    cent: "\xA2",
    pound: "\xA3",
    curren: "\xA4",
    yen: "\xA5",
    brvbar: "\xA6",
    sect: "\xA7",
    uml: "\xA8",
    copy: "\xA9",
    ordf: "\xAA",
    laquo: "\xAB",
    not: "\xAC",
    shy: "\xAD",
    reg: "\xAE",
    macr: "\xAF",
    deg: "\xB0",
    plusmn: "\xB1",
    sup2: "\xB2",
    sup3: "\xB3",
    acute: "\xB4",
    micro: "\xB5",
    para: "\xB6",
    middot: "\xB7",
    cedil: "\xB8",
    sup1: "\xB9",
    ordm: "\xBA",
    raquo: "\xBB",
    frac14: "\xBC",
    frac12: "\xBD",
    frac34: "\xBE",
    iquest: "\xBF",
    Agrave: "\xC0",
    Aacute: "\xC1",
    Acirc: "\xC2",
    Atilde: "\xC3",
    Auml: "\xC4",
    Aring: "\xC5",
    AElig: "\xC6",
    Ccedil: "\xC7",
    Egrave: "\xC8",
    Eacute: "\xC9",
    Ecirc: "\xCA",
    Euml: "\xCB",
    Igrave: "\xCC",
    Iacute: "\xCD",
    Icirc: "\xCE",
    Iuml: "\xCF",
    ETH: "\xD0",
    Ntilde: "\xD1",
    Ograve: "\xD2",
    Oacute: "\xD3",
    Ocirc: "\xD4",
    Otilde: "\xD5",
    Ouml: "\xD6",
    times: "\xD7",
    Oslash: "\xD8",
    Ugrave: "\xD9",
    Uacute: "\xDA",
    Ucirc: "\xDB",
    Uuml: "\xDC",
    Yacute: "\xDD",
    THORN: "\xDE",
    szlig: "\xDF",
    agrave: "\xE0",
    aacute: "\xE1",
    acirc: "\xE2",
    atilde: "\xE3",
    auml: "\xE4",
    aring: "\xE5",
    aelig: "\xE6",
    ccedil: "\xE7",
    egrave: "\xE8",
    eacute: "\xE9",
    ecirc: "\xEA",
    euml: "\xEB",
    igrave: "\xEC",
    iacute: "\xED",
    icirc: "\xEE",
    iuml: "\xEF",
    eth: "\xF0",
    ntilde: "\xF1",
    ograve: "\xF2",
    oacute: "\xF3",
    ocirc: "\xF4",
    otilde: "\xF5",
    ouml: "\xF6",
    divide: "\xF7",
    oslash: "\xF8",
    ugrave: "\xF9",
    uacute: "\xFA",
    ucirc: "\xFB",
    uuml: "\xFC",
    yacute: "\xFD",
    thorn: "\xFE",
    yuml: "\xFF",
    fnof: "\u0192",
    Alpha: "\u0391",
    Beta: "\u0392",
    Gamma: "\u0393",
    Delta: "\u0394",
    Epsilon: "\u0395",
    Zeta: "\u0396",
    Eta: "\u0397",
    Theta: "\u0398",
    Iota: "\u0399",
    Kappa: "\u039A",
    Lambda: "\u039B",
    Mu: "\u039C",
    Nu: "\u039D",
    Xi: "\u039E",
    Omicron: "\u039F",
    Pi: "\u03A0",
    Rho: "\u03A1",
    Sigma: "\u03A3",
    Tau: "\u03A4",
    Upsilon: "\u03A5",
    Phi: "\u03A6",
    Chi: "\u03A7",
    Psi: "\u03A8",
    Omega: "\u03A9",
    alpha: "\u03B1",
    beta: "\u03B2",
    gamma: "\u03B3",
    delta: "\u03B4",
    epsilon: "\u03B5",
    zeta: "\u03B6",
    eta: "\u03B7",
    theta: "\u03B8",
    iota: "\u03B9",
    kappa: "\u03BA",
    lambda: "\u03BB",
    mu: "\u03BC",
    nu: "\u03BD",
    xi: "\u03BE",
    omicron: "\u03BF",
    pi: "\u03C0",
    rho: "\u03C1",
    sigmaf: "\u03C2",
    sigma: "\u03C3",
    tau: "\u03C4",
    upsilon: "\u03C5",
    phi: "\u03C6",
    chi: "\u03C7",
    psi: "\u03C8",
    omega: "\u03C9",
    thetasym: "\u03D1",
    upsih: "\u03D2",
    piv: "\u03D6",
    bull: "\u2022",
    hellip: "\u2026",
    prime: "\u2032",
    Prime: "\u2033",
    oline: "\u203E",
    frasl: "\u2044",
    weierp: "\u2118",
    image: "\u2111",
    real: "\u211C",
    trade: "\u2122",
    alefsym: "\u2135",
    larr: "\u2190",
    uarr: "\u2191",
    rarr: "\u2192",
    darr: "\u2193",
    harr: "\u2194",
    crarr: "\u21B5",
    lArr: "\u21D0",
    uArr: "\u21D1",
    rArr: "\u21D2",
    dArr: "\u21D3",
    hArr: "\u21D4",
    forall: "\u2200",
    part: "\u2202",
    exist: "\u2203",
    empty: "\u2205",
    nabla: "\u2207",
    isin: "\u2208",
    notin: "\u2209",
    ni: "\u220B",
    prod: "\u220F",
    sum: "\u2211",
    minus: "\u2212",
    lowast: "\u2217",
    radic: "\u221A",
    prop: "\u221D",
    infin: "\u221E",
    ang: "\u2220",
    and: "\u2227",
    or: "\u2228",
    cap: "\u2229",
    cup: "\u222A",
    int: "\u222B",
    there4: "\u2234",
    sim: "\u223C",
    cong: "\u2245",
    asymp: "\u2248",
    ne: "\u2260",
    equiv: "\u2261",
    le: "\u2264",
    ge: "\u2265",
    sub: "\u2282",
    sup: "\u2283",
    nsub: "\u2284",
    sube: "\u2286",
    supe: "\u2287",
    oplus: "\u2295",
    otimes: "\u2297",
    perp: "\u22A5",
    sdot: "\u22C5",
    lceil: "\u2308",
    rceil: "\u2309",
    lfloor: "\u230A",
    rfloor: "\u230B",
    lang: "\u2329",
    rang: "\u232A",
    loz: "\u25CA",
    spades: "\u2660",
    clubs: "\u2663",
    hearts: "\u2665",
    diams: "\u2666",
    quot: '"',
    amp: "&",
    lt: "<",
    gt: ">",
    OElig: "\u0152",
    oelig: "\u0153",
    Scaron: "\u0160",
    scaron: "\u0161",
    Yuml: "\u0178",
    circ: "\u02C6",
    tilde: "\u02DC",
    ensp: "\u2002",
    emsp: "\u2003",
    thinsp: "\u2009",
    zwnj: "\u200C",
    zwj: "\u200D",
    lrm: "\u200E",
    rlm: "\u200F",
    ndash: "\u2013",
    mdash: "\u2014",
    lsquo: "\u2018",
    rsquo: "\u2019",
    sbquo: "\u201A",
    ldquo: "\u201C",
    rdquo: "\u201D",
    bdquo: "\u201E",
    dagger: "\u2020",
    Dagger: "\u2021",
    permil: "\u2030",
    lsaquo: "\u2039",
    rsaquo: "\u203A",
    euro: "\u20AC"
};
function m4(r263, e614) {
    if (r263 = r263.replace(e614.subset ? C8(e614.subset) : /["&'<>`]/g, o), e614.subset || e614.escapeOnly) return r263;
    return r263.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, t528).replace(/[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g, o);
    function t528(n284, c64, a114) {
        return e614.format((n284.charCodeAt(0) - 55296) * 1024 + n284.charCodeAt(1) - 56320 + 65536, a114.charCodeAt(c64 + 2), e614);
    }
    function o(n285, c65, a115) {
        return e614.format(n285.charCodeAt(0), a115.charCodeAt(c65 + 1), e614);
    }
}
function C8(r264) {
    let e615 = [], t529 = -1;
    for(; ++t529 < r264.length;)e615.push(r264[t529].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
    return new RegExp("(?:" + e615.join("|") + ")", "g");
}
var h4 = {}.hasOwnProperty, s5 = {}, i3;
for(i3 in a8)h4.call(a8, i3) && (s5[a8[i3]] = i3);
function p8(r265) {
    return "&#x" + r265.toString(16).toUpperCase() + ";";
}
function k6(r266, e616) {
    return m4(r266, Object.assign({
        format: p8
    }, e616));
}
function p9(u165) {
    let n286 = u165 || {}, f72 = n286.now || {}, t530 = n286.lineShift || 0, i270 = f72.line || 1, r267 = f72.column || 1;
    return {
        move: d51,
        current: c66,
        shift: l146
    };
    function c66() {
        return {
            now: {
                line: i270,
                column: r267
            },
            lineShift: t530
        };
    }
    function l146(e617) {
        t530 += e617;
    }
    function d51(e618 = "") {
        let o = e618.split(/\r?\n|\r/g), s188 = o[o.length - 1];
        return i270 += o.length - 1, r267 = o.length === 1 ? r267 + s188.length : 1 + s188.length + t530, e618;
    }
}
function m5(u166, n287, f73) {
    let t531 = n287.indexStack, i271 = u166.children || [], r268 = p9(f73), c67 = [], l147 = -1;
    for(t531.push(-1); ++l147 < i271.length;){
        let e619 = i271[l147];
        t531[t531.length - 1] = l147, c67.push(r268.move(n287.handle(e619, u166, n287, {
            before: `
`,
            after: `
`,
            ...r268.current()
        }))), e619.type !== "list" && (n287.bulletLastUsed = void 0), l147 < i271.length - 1 && c67.push(r268.move(d52(e619, i271[l147 + 1])));
    }
    return t531.pop(), c67.join("");
    function d52(e620, o) {
        let s189 = n287.join.length;
        for(; s189--;){
            let h88 = n287.join[s189](e620, o, u166, n287);
            if (h88 === !0 || h88 === 1) break;
            if (typeof h88 == "number") return `
`.repeat(1 + h88);
            if (h88 === !1) return `

<!---->

`;
        }
        return `

`;
    }
}
function s6(g65) {
    let t532 = g65 || {}, c68 = t532.now || {}, l148 = t532.lineShift || 0, r269 = c68.line || 1, e621 = c68.column || 1;
    return {
        move: u167,
        current: h89,
        shift: o
    };
    function h89() {
        return {
            now: {
                line: r269,
                column: e621
            },
            lineShift: l148
        };
    }
    function o(f74) {
        l148 += f74;
    }
    function u167(f75 = "") {
        let i272 = f75.split(/\r?\n|\r/g), n288 = i272[i272.length - 1];
        return r269 += i272.length - 1, e621 = i272.length === 1 ? e621 + n288.length : 1 + n288.length + l148, f75;
    }
}
function p10(g66, t533, c69) {
    let l149 = t533.indexStack, r270 = g66.children || [], e622 = [], h90 = -1, o = c69.before;
    l149.push(-1);
    let u168 = s6(c69);
    for(; ++h90 < r270.length;){
        let f76 = r270[h90], i273;
        if (l149[l149.length - 1] = h90, h90 + 1 < r270.length) {
            let n289 = t533.handle.handlers[r270[h90 + 1].type];
            n289 && n289.peek && (n289 = n289.peek), i273 = n289 ? n289(r270[h90 + 1], g66, t533, {
                before: "",
                after: "",
                ...u168.current()
            }).charAt(0) : "";
        } else i273 = c69.after;
        e622.length > 0 && (o === "\r" || o === `
`) && f76.type === "html" && (e622[e622.length - 1] = e622[e622.length - 1].replace(/(\r?\n|\r)$/, " "), o = " ", u168 = s6(c69), u168.move(e622.join(""))), e622.push(u168.move(t533.handle(f76, g66, t533, {
            ...u168.current(),
            before: o,
            after: i273
        }))), o = e622[e622.length - 1].slice(-1);
    }
    return l149.pop(), e622.join("");
}
var r7 = /\r?\n|\r/g;
function h5(e623, l150) {
    let t534 = [], i274 = 0, s190 = 0, n290;
    for(; n290 = r7.exec(e623);)c70(e623.slice(i274, n290.index)), t534.push(n290[0]), i274 = n290.index + n290[0].length, s190++;
    return c70(e623.slice(i274)), t534.join("");
    function c70(o) {
        t534.push(l150(o, s190, !o));
    }
}
function g4(u169) {
    let l151 = u169 || {}, i275 = l151.now || {}, e624 = l151.lineShift || 0, c71 = i275.line || 1, o = i275.column || 1;
    return {
        move: f77,
        current: h91,
        shift: s191
    };
    function h91() {
        return {
            now: {
                line: c71,
                column: o
            },
            lineShift: e624
        };
    }
    function s191(n291) {
        e624 += n291;
    }
    function f77(n292 = "") {
        let t535 = n292.split(/\r?\n|\r/g), r271 = t535[t535.length - 1];
        return c71 += t535.length - 1, o = t535.length === 1 ? o + r271.length : 1 + r271.length + e624, n292;
    }
}
function j4() {
    return {
        canContainEols: [
            "mdxJsxTextElement"
        ],
        enter: {
            mdxJsxFlowTag: A35,
            mdxJsxFlowTagClosingMarker: J12,
            mdxJsxFlowTagAttribute: F28,
            mdxJsxFlowTagExpressionAttribute: l152,
            mdxJsxFlowTagAttributeValueLiteral: g67,
            mdxJsxFlowTagAttributeValueExpression: g67,
            mdxJsxFlowTagSelfClosingMarker: p114,
            mdxJsxTextTag: A35,
            mdxJsxTextTagClosingMarker: J12,
            mdxJsxTextTagAttribute: F28,
            mdxJsxTextTagExpressionAttribute: l152,
            mdxJsxTextTagAttributeValueLiteral: g67,
            mdxJsxTextTagAttributeValueExpression: g67,
            mdxJsxTextTagSelfClosingMarker: p114
        },
        exit: {
            mdxJsxFlowTagClosingMarker: u170,
            mdxJsxFlowTagNamePrimary: b41,
            mdxJsxFlowTagNameMember: M22,
            mdxJsxFlowTagNameLocal: a116,
            mdxJsxFlowTagExpressionAttribute: v34,
            mdxJsxFlowTagExpressionAttributeValue: x78,
            mdxJsxFlowTagAttributeNamePrimary: i276,
            mdxJsxFlowTagAttributeNameLocal: d53,
            mdxJsxFlowTagAttributeValueLiteral: V16,
            mdxJsxFlowTagAttributeValueLiteralValue: x78,
            mdxJsxFlowTagAttributeValueExpression: w41,
            mdxJsxFlowTagAttributeValueExpressionValue: x78,
            mdxJsxFlowTagSelfClosingMarker: c72,
            mdxJsxFlowTag: n293,
            mdxJsxTextTagClosingMarker: u170,
            mdxJsxTextTagNamePrimary: b41,
            mdxJsxTextTagNameMember: M22,
            mdxJsxTextTagNameLocal: a116,
            mdxJsxTextTagExpressionAttribute: v34,
            mdxJsxTextTagExpressionAttributeValue: x78,
            mdxJsxTextTagAttributeNamePrimary: i276,
            mdxJsxTextTagAttributeNameLocal: d53,
            mdxJsxTextTagAttributeValueLiteral: V16,
            mdxJsxTextTagAttributeValueLiteralValue: x78,
            mdxJsxTextTagAttributeValueExpression: w41,
            mdxJsxTextTagAttributeValueExpressionValue: x78,
            mdxJsxTextTagSelfClosingMarker: c72,
            mdxJsxTextTag: n293
        }
    };
    function g67() {
        this.buffer();
    }
    function x78(t536) {
        this.config.enter.data.call(this, t536), this.config.exit.data.call(this, t536);
    }
    function A35(t537) {
        let e625 = {
            name: null,
            attributes: [],
            start: t537.start,
            end: t537.end
        };
        this.getData("mdxJsxTagStack") || this.setData("mdxJsxTagStack", []), this.setData("mdxJsxTag", e625), this.buffer();
    }
    function J12(t538) {
        if (this.getData("mdxJsxTagStack").length === 0) throw new s2("Unexpected closing slash `/` in tag, expected an open tag first", {
            start: t538.start,
            end: t538.end
        }, "mdast-util-mdx-jsx:unexpected-closing-slash");
    }
    function E28(t539) {
        if (this.getData("mdxJsxTag").close) throw new s2("Unexpected attribute in closing tag, expected the end of the tag", {
            start: t539.start,
            end: t539.end
        }, "mdast-util-mdx-jsx:unexpected-attribute");
    }
    function p114(t540) {
        if (this.getData("mdxJsxTag").close) throw new s2("Unexpected self-closing slash `/` in closing tag, expected the end of the tag", {
            start: t540.start,
            end: t540.end
        }, "mdast-util-mdx-jsx:unexpected-self-closing-slash");
    }
    function u170() {
        let t541 = this.getData("mdxJsxTag");
        t541.close = !0;
    }
    function b41(t542) {
        let e626 = this.getData("mdxJsxTag");
        e626.name = this.sliceSerialize(t542);
    }
    function M22(t543) {
        let e627 = this.getData("mdxJsxTag");
        e627.name += "." + this.sliceSerialize(t543);
    }
    function a116(t544) {
        let e628 = this.getData("mdxJsxTag");
        e628.name += ":" + this.sliceSerialize(t544);
    }
    function F28(t545) {
        let e629 = this.getData("mdxJsxTag");
        E28.call(this, t545), e629.attributes.push({
            type: "mdxJsxAttribute",
            name: "",
            value: null
        });
    }
    function l152(t546) {
        let e630 = this.getData("mdxJsxTag");
        E28.call(this, t546), e630.attributes.push({
            type: "mdxJsxExpressionAttribute",
            value: ""
        }), this.buffer();
    }
    function v34(t547) {
        let e631 = this.getData("mdxJsxTag"), s192 = e631.attributes[e631.attributes.length - 1], r272 = t547.estree;
        s192.value = this.resume(), r272 && (s192.data = {
            estree: r272
        });
    }
    function i276(t548) {
        let e632 = this.getData("mdxJsxTag"), s193 = e632.attributes[e632.attributes.length - 1];
        s193.name = this.sliceSerialize(t548);
    }
    function d53(t549) {
        let e633 = this.getData("mdxJsxTag"), s194 = e633.attributes[e633.attributes.length - 1];
        s194.name += ":" + this.sliceSerialize(t549);
    }
    function V16() {
        let t550 = this.getData("mdxJsxTag");
        t550.attributes[t550.attributes.length - 1].value = F2(this.resume(), {
            nonTerminated: !1
        });
    }
    function w41(t551) {
        let e634 = this.getData("mdxJsxTag"), s195 = e634.attributes[e634.attributes.length - 1], r273 = {
            type: "mdxJsxAttributeValueExpression",
            value: this.resume()
        }, m78 = t551.estree;
        m78 && (r273.data = {
            estree: m78
        }), s195.value = r273;
    }
    function c72() {
        let t552 = this.getData("mdxJsxTag");
        t552.selfClosing = !0;
    }
    function n293(t553) {
        let e635 = this.getData("mdxJsxTag"), s196 = this.getData("mdxJsxTagStack"), r274 = s196[s196.length - 1];
        if (e635.close && r274.name !== e635.name) throw new s2("Unexpected closing tag `" + o(e635) + "`, expected corresponding closing tag for `" + o(r274) + "` (" + c1(r274) + ")", {
            start: t553.start,
            end: t553.end
        }, "mdast-util-mdx-jsx:end-tag-mismatch");
        this.resume(), e635.close ? s196.pop() : this.enter({
            type: t553.type === "mdxJsxTextTag" ? "mdxJsxTextElement" : "mdxJsxFlowElement",
            name: e635.name,
            attributes: e635.attributes,
            children: []
        }, t553, T24), e635.selfClosing || e635.close ? this.exit(t553, f78) : s196.push(e635);
    }
    function T24(t554, e636) {
        let s197 = this.getData("mdxJsxTag"), r275 = t554 ? " before the end of `" + t554.type + "`" : "", m79 = t554 ? {
            start: t554.start,
            end: t554.end
        } : void 0;
        throw new s2("Expected a closing tag for `" + o(s197) + "` (" + c1({
            start: e636.start,
            end: e636.end
        }) + ")" + r275, m79, "mdast-util-mdx-jsx:end-tag-mismatch");
    }
    function f78(t555, e637) {
        let s198 = this.getData("mdxJsxTag");
        throw new s2("Expected the closing tag `" + o(s198) + "` either after the end of `" + e637.type + "` (" + c1(e637.end) + ") or another opening tag after the start of `" + e637.type + "` (" + c1(e637.start) + ")", {
            start: t555.start,
            end: t555.end
        }, "mdast-util-mdx-jsx:end-tag-mismatch");
    }
    function o(t556) {
        return "<" + (t556.close ? "/" : "") + (t556.name || "") + ">";
    }
}
function P3(g68 = {}) {
    let { quote: x79 = '"' , quoteSmart: A36 , tightSelfClosing: J13 , printWidth: E29 = Number.POSITIVE_INFINITY  } = g68, p115 = x79 === '"' ? "'" : '"';
    if (x79 !== '"' && x79 !== "'") throw new Error("Cannot serialize attribute values with `" + x79 + "` for `options.quote`, expected `\"`, or `'`");
    return u171.peek = M23, {
        handlers: {
            mdxJsxFlowElement: u171,
            mdxJsxTextElement: u171
        },
        unsafe: [
            {
                character: "<",
                inConstruct: [
                    "phrasing"
                ]
            },
            {
                atBreak: !0,
                character: "<"
            }
        ],
        fences: !0,
        resourceLink: !0
    };
    function u171(a117, F, l153, v35) {
        let i277 = g4(v35), d54 = a117.name && (!a117.children || a117.children.length === 0), V17 = l153.enter(a117.type), w42 = -1, c73 = [], n294 = i277.move("<" + (a117.name || ""));
        if (a117.attributes && a117.attributes.length > 0) {
            if (!a117.name) throw new Error("Cannot serialize fragment w/ attributes");
            for(; ++w42 < a117.attributes.length;){
                let o = a117.attributes[w42], t557;
                if (o.type === "mdxJsxExpressionAttribute") t557 = "{" + (o.value || "") + "}";
                else {
                    if (!o.name) throw new Error("Cannot serialize attribute w/o name");
                    let e638 = o.value, s199 = o.name, r276 = "";
                    if (e638 != null) if (typeof e638 == "object") r276 = "{" + (e638.value || "") + "}";
                    else {
                        let m80 = A36 && r6(e638, x79) > r6(e638, p115) ? p115 : x79;
                        r276 = m80 + k6(e638, {
                            subset: [
                                m80
                            ]
                        }) + m80;
                    }
                    t557 = s199 + (r276 ? "=" : "") + r276;
                }
                c73.push(t557);
            }
        }
        let T25 = !1, f79 = c73.join(" ");
        return a117.type === "mdxJsxFlowElement" && (/\r?\n|\r/.test(f79) || i277.current().now.column + f79.length + (d54 ? J13 ? 2 : 3 : 1) > E29) && (T25 = !0), T25 ? n294 += i277.move(`
` + h5(c73.join(`
`), b42)) : f79 && (n294 += i277.move(" " + f79)), T25 && (n294 += i277.move(`
`)), d54 && (n294 += i277.move((J13 || T25 ? "" : " ") + "/")), n294 += i277.move(">"), a117.children && a117.children.length > 0 && (a117.type === "mdxJsxFlowElement" ? (i277.shift(2), n294 += i277.move(`
`), n294 += i277.move(h5(m5(a117, l153, i277.current()), b42)), n294 += i277.move(`
`)) : n294 += i277.move(p10(a117, l153, {
            ...i277.current(),
            before: "<",
            after: ">"
        }))), d54 || (n294 += i277.move("</" + (a117.name || "") + ">")), V17(), n294;
    }
    function b42(a118, F, l154) {
        return (l154 ? "" : "  ") + a118;
    }
    function M23() {
        return "<";
    }
}
var x8 = {
    enter: {
        mdxjsEsm: a9
    },
    exit: {
        mdxjsEsm: i4,
        mdxjsEsmData: m6
    }
}, o4 = {
    handlers: {
        mdxjsEsm: d3
    }
};
function a9(s200) {
    this.enter({
        type: "mdxjsEsm",
        value: ""
    }, s200), this.buffer();
}
function i4(s201) {
    let n295 = this.resume(), t558 = this.exit(s201), e639 = s201.estree;
    t558.value = n295, e639 && (t558.data = {
        estree: e639
    });
}
function m6(s202) {
    this.config.enter.data.call(this, s202), this.config.exit.data.call(this, s202);
}
function d3(s203) {
    return s203.value || "";
}
function i5() {
    return [
        d2,
        j4(),
        x8
    ];
}
function k7(o) {
    return {
        extensions: [
            p6,
            P3(o),
            o4
        ]
    };
}
function i6(r277 = {}) {
    let o = this.data();
    t559("micromarkExtensions", E3(r277)), t559("fromMarkdownExtensions", i5()), t559("toMarkdownExtensions", k7(r277));
    function t559(n296, a119) {
        (o[n296] ? o[n296] : o[n296] = []).push(a119);
    }
}
function l4(r278, t560) {
    var { includeImageAlt: i278 = !0  } = t560 || {};
    return a10(r278, i278);
}
function a10(r279, t561) {
    return r279 && typeof r279 == "object" && (r279.value || (t561 ? r279.alt : "") || "children" in r279 && u3(r279.children, t561) || Array.isArray(r279) && u3(r279, t561)) || "";
}
function u3(r280, t562) {
    for(var i279 = [], n297 = -1; ++n297 < r280.length;)i279[n297] = a10(r280[n297], t562);
    return i279.join("");
}
var kn = Object.defineProperty;
var wn = (t563, e640)=>{
    for(var r281 in e640)kn(t563, r281, {
        get: e640[r281],
        enumerable: !0
    });
};
var Z1 = {
    tokenize: Cn
};
function Cn(t564) {
    let e641 = t564.attempt(this.parser.constructs.contentInitial, n298, i280), r282;
    return e641;
    function n298(a120) {
        if (a120 === null) {
            t564.consume(a120);
            return;
        }
        return t564.enter("lineEnding"), t564.consume(a120), t564.exit("lineEnding"), p5(t564, e641, "linePrefix");
    }
    function i280(a121) {
        return t564.enter("paragraph"), o(a121);
    }
    function o(a122) {
        let p116 = t564.enter("chunkText", {
            contentType: "text",
            previous: r282
        });
        return r282 && (r282.next = p116), r282 = p116, l155(a122);
    }
    function l155(a123) {
        if (a123 === null) {
            t564.exit("chunkText"), t564.exit("paragraph"), t564.consume(a123);
            return;
        }
        return p4(a123) ? (t564.consume(a123), t564.exit("chunkText"), o) : (t564.consume(a123), l155);
    }
}
var tn = {
    tokenize: Sn1
}, nn = {
    tokenize: _n1
};
function Sn1(t565) {
    let e642 = this, r283 = [], n299 = 0, i281, o, l156;
    return a124;
    function a124(s204) {
        if (n299 < r283.length) {
            let h92 = r283[n299];
            return e642.containerState = h92[1], t565.attempt(h92[0].continuation, p117, d55)(s204);
        }
        return d55(s204);
    }
    function p117(s205) {
        if (n299++, e642.containerState._closeFlow) {
            e642.containerState._closeFlow = void 0, i281 && B30();
            let h93 = e642.events.length, g69 = h93, m81;
            for(; g69--;)if (e642.events[g69][0] === "exit" && e642.events[g69][1].type === "chunkFlow") {
                m81 = e642.events[g69][1].end;
                break;
            }
            _16(n299);
            let w43 = h93;
            for(; w43 < e642.events.length;)e642.events[w43][1].end = Object.assign({}, m81), w43++;
            return u2(e642.events, g69 + 1, 0, e642.events.slice(h93)), e642.events.length = w43, d55(s205);
        }
        return a124(s205);
    }
    function d55(s206) {
        if (n299 === r283.length) {
            if (!i281) return C(s206);
            if (i281.currentConstruct && i281.currentConstruct.concrete) return T26(s206);
            e642.interrupt = Boolean(i281.currentConstruct && !i281._gfmTableDynamicInterruptHack);
        }
        return e642.containerState = {}, t565.check(nn, u172, b43)(s206);
    }
    function u172(s207) {
        return i281 && B30(), _16(n299), C(s207);
    }
    function b43(s208) {
        return e642.parser.lazy[e642.now().line] = n299 !== r283.length, l156 = e642.now().offset, T26(s208);
    }
    function C(s209) {
        return e642.containerState = {}, t565.attempt(nn, z22, T26)(s209);
    }
    function z22(s210) {
        return n299++, r283.push([
            e642.currentConstruct,
            e642.containerState
        ]), C(s210);
    }
    function T26(s211) {
        if (s211 === null) {
            i281 && B30(), _16(0), t565.consume(s211);
            return;
        }
        return i281 = i281 || e642.parser.flow(e642.now()), t565.enter("chunkFlow", {
            contentType: "flow",
            previous: o,
            _tokenizer: i281
        }), F29(s211);
    }
    function F29(s212) {
        if (s212 === null) {
            S53(t565.exit("chunkFlow"), !0), _16(0), t565.consume(s212);
            return;
        }
        return p4(s212) ? (t565.consume(s212), S53(t565.exit("chunkFlow")), n299 = 0, e642.interrupt = void 0, a124) : (t565.consume(s212), F29);
    }
    function S53(s213, h94) {
        let g70 = e642.sliceStream(s213);
        if (h94 && g70.push(null), s213.previous = o, o && (o.next = s213), o = s213, i281.defineSkip(s213.start), i281.write(g70), e642.parser.lazy[s213.start.line]) {
            let m82 = i281.events.length;
            for(; m82--;)if (i281.events[m82][1].start.offset < l156 && (!i281.events[m82][1].end || i281.events[m82][1].end.offset > l156)) return;
            let w44 = e642.events.length, I36 = w44, A37, O29;
            for(; I36--;)if (e642.events[I36][0] === "exit" && e642.events[I36][1].type === "chunkFlow") {
                if (A37) {
                    O29 = e642.events[I36][1].end;
                    break;
                }
                A37 = !0;
            }
            for(_16(n299), m82 = w44; m82 < e642.events.length;)e642.events[m82][1].end = Object.assign({}, O29), m82++;
            u2(e642.events, I36 + 1, 0, e642.events.slice(w44)), e642.events.length = m82;
        }
    }
    function _16(s214) {
        let h95 = r283.length;
        for(; (h95--) > s214;){
            let g71 = r283[h95];
            e642.containerState = g71[1], g71[0].exit.call(e642, t565);
        }
        r283.length = s214;
    }
    function B30() {
        i281.write([
            null
        ]), o = void 0, i281 = void 0, e642.containerState._closeFlow = void 0;
    }
}
function _n1(t566, e643, r284) {
    return p5(t566, t566.attempt(this.parser.constructs.document, e643, r284), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
var en = {
    tokenize: Tn
};
function Tn(t567) {
    let e644 = this, r285 = t567.attempt(R2, n300, t567.attempt(this.parser.constructs.flowInitial, i282, p5(t567, t567.attempt(this.parser.constructs.flow, i282, t567.attempt(ht1, i282)), "linePrefix")));
    return r285;
    function n300(o) {
        if (o === null) {
            t567.consume(o);
            return;
        }
        return t567.enter("lineEndingBlank"), t567.consume(o), t567.exit("lineEndingBlank"), e644.currentConstruct = void 0, r285;
    }
    function i282(o) {
        if (o === null) {
            t567.consume(o);
            return;
        }
        return t567.enter("lineEnding"), t567.consume(o), t567.exit("lineEnding"), e644.currentConstruct = void 0, r285;
    }
}
var rn = {
    resolveAll: sn1()
}, on = ln("string"), un = ln("text");
function ln(t568) {
    return {
        tokenize: e645,
        resolveAll: sn1(t568 === "text" ? Fn : void 0)
    };
    function e645(r286) {
        let n301 = this, i283 = this.parser.constructs[t568], o = r286.attempt(i283, l157, a125);
        return l157;
        function l157(u173) {
            return d56(u173) ? o(u173) : a125(u173);
        }
        function a125(u174) {
            if (u174 === null) {
                r286.consume(u174);
                return;
            }
            return r286.enter("data"), r286.consume(u174), p118;
        }
        function p118(u175) {
            return d56(u175) ? (r286.exit("data"), o(u175)) : (r286.consume(u175), p118);
        }
        function d56(u176) {
            if (u176 === null) return !0;
            let b44 = i283[u176], C = -1;
            if (b44) for(; ++C < b44.length;){
                let z23 = b44[C];
                if (!z23.previous || z23.previous.call(n301, n301.previous)) return !0;
            }
            return !1;
        }
    }
}
function sn1(t569) {
    return e646;
    function e646(r287, n302) {
        let i284 = -1, o;
        for(; ++i284 <= r287.length;)o === void 0 ? r287[i284] && r287[i284][1].type === "data" && (o = i284, i284++) : (!r287[i284] || r287[i284][1].type !== "data") && (i284 !== o + 2 && (r287[o][1].end = r287[i284 - 1][1].end, r287.splice(o + 2, i284 - o - 2), i284 = o + 2), o = void 0);
        return t569 ? t569(r287, n302) : r287;
    }
}
function Fn(t570, e647) {
    let r288 = 0;
    for(; ++r288 <= t570.length;)if ((r288 === t570.length || t570[r288][1].type === "lineEnding") && t570[r288 - 1][1].type === "data") {
        let n303 = t570[r288 - 1][1], i285 = e647.sliceStream(n303), o = i285.length, l158 = -1, a126 = 0, p119;
        for(; o--;){
            let d57 = i285[o];
            if (typeof d57 == "string") {
                for(l158 = d57.length; d57.charCodeAt(l158 - 1) === 32;)a126++, l158--;
                if (l158) break;
                l158 = -1;
            } else if (d57 === -2) p119 = !0, a126++;
            else if (d57 !== -1) {
                o++;
                break;
            }
        }
        if (a126) {
            let d58 = {
                type: r288 === t570.length || p119 || a126 < 2 ? "lineSuffix" : "hardBreakTrailing",
                start: {
                    line: n303.end.line,
                    column: n303.end.column - a126,
                    offset: n303.end.offset - a126,
                    _index: n303.start._index + o,
                    _bufferIndex: o ? l158 : n303.start._bufferIndex + l158
                },
                end: Object.assign({}, n303.end)
            };
            n303.end = Object.assign({}, d58.start), n303.start.offset === n303.end.offset ? Object.assign(n303, d58) : (t570.splice(r288, 0, [
                "enter",
                d58,
                e647
            ], [
                "exit",
                d58,
                e647
            ]), r288 += 2);
        }
        r288++;
    }
    return t570;
}
function cn(t571, e648, r289) {
    let n304 = Object.assign(r289 ? Object.assign({}, r289) : {
        line: 1,
        column: 1,
        offset: 0
    }, {
        _index: 0,
        _bufferIndex: -1
    }), i286 = {}, o = [], l159 = [], a127 = [], d59 = {
        consume: h96,
        enter: g72,
        exit: m83,
        attempt: A38(w45),
        check: A38(I37),
        interrupt: A38(I37, {
            interrupt: !0
        })
    }, u177 = {
        previous: null,
        code: null,
        containerState: {},
        events: [],
        parser: t571,
        sliceStream: F30,
        sliceSerialize: T27,
        now: S54,
        defineSkip: _17,
        write: z24
    }, b45 = e648.tokenize.call(u177, d59);
    return e648.resolveAll && o.push(e648), u177;
    function z24(c74) {
        return l159 = g3(l159, c74), B31(), l159[l159.length - 1] !== null ? [] : (O30(e648, 0), u177.events = c4(o, u177.events, u177), u177.events);
    }
    function T27(c75, f80) {
        return Nn(F30(c75), f80);
    }
    function F30(c76) {
        return Pn1(l159, c76);
    }
    function S54() {
        return Object.assign({}, n304);
    }
    function _17(c77) {
        i286[c77.line] = c77.column, D30();
    }
    function B31() {
        let c78;
        for(; n304._index < l159.length;){
            let f81 = l159[n304._index];
            if (typeof f81 == "string") for(c78 = n304._index, n304._bufferIndex < 0 && (n304._bufferIndex = 0); n304._index === c78 && n304._bufferIndex < f81.length;)s215(f81.charCodeAt(n304._bufferIndex));
            else s215(f81);
        }
    }
    function s215(c79) {
        c79, b45 = b45(c79);
    }
    function h96(c80) {
        p4(c80) ? (n304.line++, n304.column = 1, n304.offset += c80 === -3 ? 2 : 1, D30()) : c80 !== -1 && (n304.column++, n304.offset++), n304._bufferIndex < 0 ? n304._index++ : (n304._bufferIndex++, n304._bufferIndex === l159[n304._index].length && (n304._bufferIndex = -1, n304._index++)), u177.previous = c80, !0;
    }
    function g72(c81, f82) {
        let v36 = f82 || {};
        return v36.type = c81, v36.start = S54(), u177.events.push([
            "enter",
            v36,
            u177
        ]), a127.push(v36), v36;
    }
    function m83(c) {
        let f83 = a127.pop();
        return f83.end = S54(), u177.events.push([
            "exit",
            f83,
            u177
        ]), f83;
    }
    function w45(c82, f84) {
        O30(c82, f84.from);
    }
    function I37(c, f85) {
        f85.restore();
    }
    function A38(c83, f86) {
        return v37;
        function v37(y48, M24, j37) {
            let R21, L20, W15, H11;
            return Array.isArray(y48) ? Q11(y48) : "tokenize" in y48 ? Q11([
                y48
            ]) : mn2(y48);
            function mn2(x80) {
                return U18;
                function U18(E30) {
                    let P27 = E30 !== null && x80[E30], N23 = E30 !== null && x80.null, gn = [
                        ...Array.isArray(P27) ? P27 : P27 ? [
                            P27
                        ] : [],
                        ...Array.isArray(N23) ? N23 : N23 ? [
                            N23
                        ] : []
                    ];
                    return Q11(gn)(E30);
                }
            }
            function Q11(x81) {
                return R21 = x81, L20 = 0, x81.length === 0 ? j37 : X19(x81[L20]);
            }
            function X19(x82) {
                return U19;
                function U19(E31) {
                    return H11 = xn(), W15 = x82, x82.partial || (u177.currentConstruct = x82), x82.name && u177.parser.constructs.disable.null.includes(x82.name) ? Y9(E31) : x82.tokenize.call(f86 ? Object.assign(Object.create(u177), f86) : u177, d59, hn, Y9)(E31);
                }
            }
            function hn(x) {
                return !0, c83(W15, H11), M24;
            }
            function Y9(x) {
                return !0, H11.restore(), ++L20 < R21.length ? X19(R21[L20]) : j37;
            }
        }
    }
    function O30(c84, f87) {
        c84.resolveAll && !o.includes(c84) && o.push(c84), c84.resolve && u2(u177.events, f87, u177.events.length - f87, c84.resolve(u177.events.slice(f87), u177)), c84.resolveTo && (u177.events = c84.resolveTo(u177.events, u177));
    }
    function xn() {
        let c85 = S54(), f88 = u177.previous, v38 = u177.currentConstruct, y49 = u177.events.length, M25 = Array.from(a127);
        return {
            restore: j38,
            from: y49
        };
        function j38() {
            n304 = c85, u177.previous = f88, u177.currentConstruct = v38, u177.events.length = y49, a127 = M25, D30();
        }
    }
    function D30() {
        n304.line in i286 && n304.column < 2 && (n304.column = i286[n304.line], n304.offset += i286[n304.line] - 1);
    }
}
function Pn1(t572, e649) {
    let r290 = e649.start._index, n305 = e649.start._bufferIndex, i287 = e649.end._index, o = e649.end._bufferIndex, l160;
    return r290 === i287 ? l160 = [
        t572[r290].slice(n305, o)
    ] : (l160 = t572.slice(r290, i287), n305 > -1 && (l160[0] = l160[0].slice(n305)), o > 0 && l160.push(t572[i287].slice(0, o))), l160;
}
function Nn(t573, e650) {
    let r291 = -1, n306 = [], i288;
    for(; ++r291 < t573.length;){
        let o = t573[r291], l161;
        if (typeof o == "string") l161 = o;
        else switch(o){
            case -5:
                {
                    l161 = "\r";
                    break;
                }
            case -4:
                {
                    l161 = `
`;
                    break;
                }
            case -3:
                {
                    l161 = `\r
`;
                    break;
                }
            case -2:
                {
                    l161 = e650 ? " " : "	";
                    break;
                }
            case -1:
                {
                    if (!e650 && i288) continue;
                    l161 = " ";
                    break;
                }
            default:
                l161 = String.fromCharCode(o);
        }
        i288 = o === -2, n306.push(l161);
    }
    return n306.join("");
}
var V2 = {};
wn(V2, {
    attentionMarkers: ()=>et2,
    contentInitial: ()=>Xn1,
    disable: ()=>rt3,
    document: ()=>Wn1,
    flow: ()=>Zn,
    flowInitial: ()=>Yn,
    insideSpan: ()=>tt2,
    string: ()=>$n,
    text: ()=>nt2
});
var Wn1 = {
    [42]: Ln,
    [43]: Ln,
    [45]: Ln,
    [48]: Ln,
    [49]: Ln,
    [50]: Ln,
    [51]: Ln,
    [52]: Ln,
    [53]: Ln,
    [54]: Ln,
    [55]: Ln,
    [56]: Ln,
    [57]: Ln,
    [62]: sn
}, Xn1 = {
    [91]: wt1
}, Yn = {
    [-2]: et1,
    [-1]: et1,
    [32]: et1
}, Zn = {
    [35]: qt,
    [42]: an,
    [45]: [
        Ar,
        an
    ],
    [60]: Vt1,
    [61]: Ar,
    [95]: an,
    [96]: tt1,
    [126]: tt1
}, $n = {
    [38]: vn,
    [92]: Kn
}, nt2 = {
    [-5]: xr1,
    [-4]: xr1,
    [-3]: xr1,
    [33]: lr,
    [38]: vn,
    [42]: On,
    [60]: [
        Rn,
        Ut
    ],
    [91]: mr,
    [92]: [
        It1,
        Kn
    ],
    [93]: K2,
    [95]: On,
    [96]: lt1
}, tt2 = {
    null: [
        On,
        rn
    ]
}, et2 = {
    null: [
        42,
        95
    ]
}, rt3 = {
    null: []
};
function Ft3(t574 = {}) {
    let e651 = y4([
        V2
    ].concat(t574.extensions || [])), r292 = {
        defined: [],
        lazy: {},
        constructs: e651,
        content: n307(Z1),
        document: n307(tn),
        flow: n307(en),
        string: n307(on),
        text: n307(un)
    };
    return r292;
    function n307(i289) {
        return o;
        function o(l162) {
            return cn(r292, i289, l162);
        }
    }
}
var d4 = /[\0\t\n\r]/g;
function x9() {
    let i290 = 1, c86 = "", u178 = !0, r293;
    return p120;
    function p120(n308, l163, a128) {
        let e652 = [], h97, o, t575, s216, f89;
        for(n308 = c86 + n308.toString(l163), t575 = 0, c86 = "", u178 && (n308.charCodeAt(0) === 65279 && t575++, u178 = void 0); t575 < n308.length;){
            if (d4.lastIndex = t575, h97 = d4.exec(n308), s216 = h97 && h97.index !== void 0 ? h97.index : n308.length, f89 = n308.charCodeAt(s216), !h97) {
                c86 = n308.slice(t575);
                break;
            }
            if (f89 === 10 && t575 === s216 && r293) e652.push(-3), r293 = void 0;
            else switch(r293 && (e652.push(-5), r293 = void 0), t575 < s216 && (e652.push(n308.slice(t575, s216)), i290 += s216 - t575), f89){
                case 0:
                    {
                        e652.push(65533), i290++;
                        break;
                    }
                case 9:
                    {
                        for(o = Math.ceil(i290 / 4) * 4, e652.push(-2); (i290++) < o;)e652.push(-1);
                        break;
                    }
                case 10:
                    {
                        e652.push(-4), i290 = 1;
                        break;
                    }
                default:
                    r293 = !0, i290 = 1;
            }
            t575 = s216 + 1;
        }
        return a128 && (r293 && e652.push(-5), c86 && e652.push(c86), e652.push(null)), e652;
    }
}
function e5(o) {
    for(; !I5(o););
    return o;
}
function t5(r294, n309) {
    let e653 = Number.parseInt(r294, n309);
    return e653 < 9 || e653 === 11 || e653 > 13 && e653 < 32 || e653 > 126 && e653 < 160 || e653 > 55295 && e653 < 57344 || e653 > 64975 && e653 < 65008 || (e653 & 65535) === 65535 || (e653 & 65535) === 65534 || e653 > 1114111 ? "\uFFFD" : String.fromCharCode(e653);
}
var n5 = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function m7(r295) {
    return r295.replace(n5, f3);
}
function f3(r296, c87, e654) {
    if (c87) return c87;
    if (e654.charCodeAt(0) === 35) {
        let t576 = e654.charCodeAt(1), d60 = t576 === 120 || t576 === 88;
        return t5(e654.slice(d60 ? 2 : 1), d60 ? 16 : 10);
    }
    return n2(e654) || r296;
}
var B6 = {}.hasOwnProperty, Pe2 = function(h98, s217, d61) {
    return typeof s217 != "string" && (d61 = s217, s217 = void 0), Me2(d61)(e5(Ft3(d61).document().write(x9()(h98, s217, !0))));
};
function Me2(h99 = {}) {
    let s218 = N3({
        transforms: [],
        canContainEols: [
            "emphasis",
            "fragment",
            "heading",
            "paragraph",
            "strong"
        ],
        enter: {
            autolink: a129(V18),
            autolinkProtocol: m84,
            autolinkEmail: m84,
            atxHeading: a129(O31),
            blockQuote: a129(xe6),
            characterEscape: m84,
            characterReference: m84,
            codeFenced: a129(D31),
            codeFencedFenceInfo: p121,
            codeFencedFenceMeta: p121,
            codeIndented: a129(D31, p121),
            codeText: a129(ye5, p121),
            codeTextData: m84,
            data: m84,
            codeFlowValue: m84,
            definition: a129(Se5),
            definitionDestinationString: p121,
            definitionLabelString: p121,
            definitionTitleString: p121,
            emphasis: a129(be4),
            hardBreakEscape: a129(P28),
            hardBreakTrailing: a129(P28),
            htmlFlow: a129(M26, p121),
            htmlFlowData: m84,
            htmlText: a129(M26, p121),
            htmlTextData: m84,
            image: a129(we4),
            label: p121,
            link: a129(V18),
            listItem: a129(Ie5),
            listItemValue: j39,
            listOrdered: a129(Q12, _18),
            listUnordered: a129(Q12),
            paragraph: a129(Te5),
            reference: fe7,
            referenceString: p121,
            resourceDestinationString: p121,
            resourceTitleString: p121,
            setextHeading: a129(O31),
            strong: a129(Ee4),
            thematicBreak: a129(Be4)
        },
        exit: {
            atxHeading: c88(),
            atxHeadingSequence: Z12,
            autolink: c88(),
            autolinkEmail: ke5,
            autolinkProtocol: me5,
            blockQuote: c88(),
            characterEscapeValue: k45,
            characterReferenceMarkerHexadecimal: z25,
            characterReferenceMarkerNumeric: z25,
            characterReferenceValue: ge6,
            codeFenced: c88(G16),
            codeFencedFence: $35,
            codeFencedFenceInfo: A39,
            codeFencedFenceMeta: W16,
            codeFlowValue: k45,
            codeIndented: c88(J14),
            codeText: c88(se6),
            codeTextData: k45,
            data: k45,
            definition: c88(),
            definitionDestinationString: Y10,
            definitionLabelString: K15,
            definitionTitleString: X20,
            emphasis: c88(),
            hardBreakEscape: c88(L21),
            hardBreakTrailing: c88(L21),
            htmlFlow: c88(ie7),
            htmlFlowData: k45,
            htmlText: c88(re8),
            htmlTextData: k45,
            image: c88(ce5),
            label: oe7,
            labelText: le5,
            lineEnding: ne9,
            link: c88(ae7),
            listItem: c88(),
            listOrdered: c88(),
            listUnordered: c88(),
            paragraph: c88(),
            referenceString: pe4,
            resourceDestinationString: de5,
            resourceTitleString: he6,
            resource: ue6,
            setextHeading: c88(te7),
            setextHeadingLineSequence: ee7,
            setextHeadingText: v39,
            strong: c88(),
            thematicBreak: c88()
        }
    }, h99.mdastExtensions || []), d62 = {};
    return y50;
    function y50(e655) {
        let t577 = {
            type: "root",
            children: []
        }, n310 = [
            t577
        ], i291 = [], g73 = [], w46 = {
            stack: n310,
            tokenStack: i291,
            config: s218,
            enter: R22,
            exit: H12,
            buffer: p121,
            resume: U20,
            setData: o,
            getData: f90
        }, r297 = -1;
        for(; ++r297 < e655.length;)if (e655[r297][1].type === "listOrdered" || e655[r297][1].type === "listUnordered") if (e655[r297][0] === "enter") g73.push(r297);
        else {
            let u179 = g73.pop();
            r297 = C(e655, u179, r297);
        }
        for(r297 = -1; ++r297 < e655.length;){
            let u180 = s218[e655[r297][0]];
            B6.call(u180, e655[r297][1].type) && u180[e655[r297][1].type].call(Object.assign({
                sliceSerialize: e655[r297][2].sliceSerialize
            }, w46), e655[r297][1]);
        }
        if (i291.length > 0) {
            let u181 = i291[i291.length - 1];
            (u181[1] || q4).call(w46, void 0, u181[0]);
        }
        for(t577.position = {
            start: S55(e655.length > 0 ? e655[0][1].start : {
                line: 1,
                column: 1,
                offset: 0
            }),
            end: S55(e655.length > 0 ? e655[e655.length - 2][1].end : {
                line: 1,
                column: 1,
                offset: 0
            })
        }, r297 = -1; ++r297 < s218.transforms.length;)t577 = s218.transforms[r297](t577) || t577;
        return t577;
    }
    function C(e656, t578, n311) {
        let i292 = t578 - 1, g74 = -1, w47 = !1, r298, u182, b46, I38;
        for(; ++i292 <= n311;){
            let l164 = e656[i292];
            if (l164[1].type === "listUnordered" || l164[1].type === "listOrdered" || l164[1].type === "blockQuote" ? (l164[0] === "enter" ? g74++ : g74--, I38 = void 0) : l164[1].type === "lineEndingBlank" ? l164[0] === "enter" && (r298 && !I38 && !g74 && !b46 && (b46 = i292), I38 = void 0) : l164[1].type === "linePrefix" || l164[1].type === "listItemValue" || l164[1].type === "listItemMarker" || l164[1].type === "listItemPrefix" || l164[1].type === "listItemPrefixWhitespace" || (I38 = void 0), !g74 && l164[0] === "enter" && l164[1].type === "listItemPrefix" || g74 === -1 && l164[0] === "exit" && (l164[1].type === "listUnordered" || l164[1].type === "listOrdered")) {
                if (r298) {
                    let E32 = i292;
                    for(u182 = void 0; E32--;){
                        let x83 = e656[E32];
                        if (x83[1].type === "lineEnding" || x83[1].type === "lineEndingBlank") {
                            if (x83[0] === "exit") continue;
                            u182 && (e656[u182][1].type = "lineEndingBlank", w47 = !0), x83[1].type = "lineEnding", u182 = E32;
                        } else if (!(x83[1].type === "linePrefix" || x83[1].type === "blockQuotePrefix" || x83[1].type === "blockQuotePrefixWhitespace" || x83[1].type === "blockQuoteMarker" || x83[1].type === "listItemIndent")) break;
                    }
                    b46 && (!u182 || b46 < u182) && (r298._spread = !0), r298.end = Object.assign({}, u182 ? e656[u182][1].start : l164[1].end), e656.splice(u182 || i292, 0, [
                        "exit",
                        r298,
                        l164[2]
                    ]), i292++, n311++;
                }
                l164[1].type === "listItemPrefix" && (r298 = {
                    type: "listItem",
                    _spread: !1,
                    start: Object.assign({}, l164[1].start)
                }, e656.splice(i292, 0, [
                    "enter",
                    r298,
                    l164[2]
                ]), i292++, n311++, b46 = void 0, I38 = !0);
            }
        }
        return e656[t578][1]._spread = w47, n311;
    }
    function o(e657, t579) {
        d62[e657] = t579;
    }
    function f90(e658) {
        return d62[e658];
    }
    function S55(e659) {
        return {
            line: e659.line,
            column: e659.column,
            offset: e659.offset
        };
    }
    function a129(e660, t580) {
        return n312;
        function n312(i293) {
            R22.call(this, e660(i293), i293), t580 && t580.call(this, i293);
        }
    }
    function p121() {
        this.stack.push({
            type: "fragment",
            children: []
        });
    }
    function R22(e661, t581, n313) {
        return this.stack[this.stack.length - 1].children.push(e661), this.stack.push(e661), this.tokenStack.push([
            t581,
            n313
        ]), e661.position = {
            start: S55(t581.start)
        }, e661;
    }
    function c88(e662) {
        return t582;
        function t582(n314) {
            e662 && e662.call(this, n314), H12.call(this, n314);
        }
    }
    function H12(e663, t583) {
        let n315 = this.stack.pop(), i294 = this.tokenStack.pop();
        if (i294) i294[0].type !== e663.type && (t583 ? t583.call(this, e663, i294[0]) : (i294[1] || q4).call(this, e663, i294[0]));
        else throw new Error("Cannot close `" + e663.type + "` (" + c1({
            start: e663.start,
            end: e663.end
        }) + "): it\u2019s not open");
        return n315.position.end = S55(e663.end), n315;
    }
    function U20() {
        return l4(this.stack.pop());
    }
    function _18() {
        o("expectingFirstListItemValue", !0);
    }
    function j39(e664) {
        if (f90("expectingFirstListItemValue")) {
            let t584 = this.stack[this.stack.length - 2];
            t584.start = Number.parseInt(this.sliceSerialize(e664), 10), o("expectingFirstListItemValue");
        }
    }
    function A39() {
        let e665 = this.resume(), t585 = this.stack[this.stack.length - 1];
        t585.lang = e665;
    }
    function W16() {
        let e666 = this.resume(), t586 = this.stack[this.stack.length - 1];
        t586.meta = e666;
    }
    function $35() {
        f90("flowCodeInside") || (this.buffer(), o("flowCodeInside", !0));
    }
    function G16() {
        let e667 = this.resume(), t587 = this.stack[this.stack.length - 1];
        t587.value = e667.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), o("flowCodeInside");
    }
    function J14() {
        let e668 = this.resume(), t588 = this.stack[this.stack.length - 1];
        t588.value = e668.replace(/(\r?\n|\r)$/g, "");
    }
    function K15(e669) {
        let t589 = this.resume(), n316 = this.stack[this.stack.length - 1];
        n316.label = t589, n316.identifier = r4(this.sliceSerialize(e669)).toLowerCase();
    }
    function X20() {
        let e670 = this.resume(), t590 = this.stack[this.stack.length - 1];
        t590.title = e670;
    }
    function Y10() {
        let e671 = this.resume(), t591 = this.stack[this.stack.length - 1];
        t591.url = e671;
    }
    function Z12(e672) {
        let t592 = this.stack[this.stack.length - 1];
        if (!t592.depth) {
            let n317 = this.sliceSerialize(e672).length;
            t592.depth = n317;
        }
    }
    function v39() {
        o("setextHeadingSlurpLineEnding", !0);
    }
    function ee7(e673) {
        let t593 = this.stack[this.stack.length - 1];
        t593.depth = this.sliceSerialize(e673).charCodeAt(0) === 61 ? 1 : 2;
    }
    function te7() {
        o("setextHeadingSlurpLineEnding");
    }
    function m84(e674) {
        let t594 = this.stack[this.stack.length - 1], n318 = t594.children[t594.children.length - 1];
        (!n318 || n318.type !== "text") && (n318 = Fe5(), n318.position = {
            start: S55(e674.start)
        }, t594.children.push(n318)), this.stack.push(n318);
    }
    function k45(e675) {
        let t595 = this.stack.pop();
        t595.value += this.sliceSerialize(e675), t595.position.end = S55(e675.end);
    }
    function ne9(e676) {
        let t596 = this.stack[this.stack.length - 1];
        if (f90("atHardBreak")) {
            let n319 = t596.children[t596.children.length - 1];
            n319.position.end = S55(e676.end), o("atHardBreak");
            return;
        }
        !f90("setextHeadingSlurpLineEnding") && s218.canContainEols.includes(t596.type) && (m84.call(this, e676), k45.call(this, e676));
    }
    function L21() {
        o("atHardBreak", !0);
    }
    function ie7() {
        let e677 = this.resume(), t597 = this.stack[this.stack.length - 1];
        t597.value = e677;
    }
    function re8() {
        let e678 = this.resume(), t598 = this.stack[this.stack.length - 1];
        t598.value = e678;
    }
    function se6() {
        let e679 = this.resume(), t599 = this.stack[this.stack.length - 1];
        t599.value = e679;
    }
    function ae7() {
        let e680 = this.stack[this.stack.length - 1];
        f90("inReference") ? (e680.type += "Reference", e680.referenceType = f90("referenceType") || "shortcut", delete e680.url, delete e680.title) : (delete e680.identifier, delete e680.label), o("referenceType");
    }
    function ce5() {
        let e681 = this.stack[this.stack.length - 1];
        f90("inReference") ? (e681.type += "Reference", e681.referenceType = f90("referenceType") || "shortcut", delete e681.url, delete e681.title) : (delete e681.identifier, delete e681.label), o("referenceType");
    }
    function le5(e682) {
        let t600 = this.stack[this.stack.length - 2], n320 = this.sliceSerialize(e682);
        t600.label = m7(n320), t600.identifier = r4(n320).toLowerCase();
    }
    function oe7() {
        let e683 = this.stack[this.stack.length - 1], t601 = this.resume(), n321 = this.stack[this.stack.length - 1];
        o("inReference", !0), n321.type === "link" ? n321.children = e683.children : n321.alt = t601;
    }
    function de5() {
        let e684 = this.resume(), t602 = this.stack[this.stack.length - 1];
        t602.url = e684;
    }
    function he6() {
        let e685 = this.resume(), t603 = this.stack[this.stack.length - 1];
        t603.title = e685;
    }
    function ue6() {
        o("inReference");
    }
    function fe7() {
        o("referenceType", "collapsed");
    }
    function pe4(e686) {
        let t604 = this.resume(), n322 = this.stack[this.stack.length - 1];
        n322.label = t604, n322.identifier = r4(this.sliceSerialize(e686)).toLowerCase(), o("referenceType", "full");
    }
    function z25(e687) {
        o("characterReferenceType", e687.type);
    }
    function ge6(e688) {
        let t605 = this.sliceSerialize(e688), n323 = f90("characterReferenceType"), i295;
        n323 ? (i295 = t5(t605, n323 === "characterReferenceMarkerNumeric" ? 10 : 16), o("characterReferenceType")) : i295 = n2(t605);
        let g75 = this.stack.pop();
        g75.value += i295, g75.position.end = S55(e688.end);
    }
    function me5(e689) {
        k45.call(this, e689);
        let t606 = this.stack[this.stack.length - 1];
        t606.url = this.sliceSerialize(e689);
    }
    function ke5(e690) {
        k45.call(this, e690);
        let t607 = this.stack[this.stack.length - 1];
        t607.url = "mailto:" + this.sliceSerialize(e690);
    }
    function xe6() {
        return {
            type: "blockquote",
            children: []
        };
    }
    function D31() {
        return {
            type: "code",
            lang: null,
            meta: null,
            value: ""
        };
    }
    function ye5() {
        return {
            type: "inlineCode",
            value: ""
        };
    }
    function Se5() {
        return {
            type: "definition",
            identifier: "",
            label: null,
            title: null,
            url: ""
        };
    }
    function be4() {
        return {
            type: "emphasis",
            children: []
        };
    }
    function O31() {
        return {
            type: "heading",
            depth: void 0,
            children: []
        };
    }
    function P28() {
        return {
            type: "break"
        };
    }
    function M26() {
        return {
            type: "html",
            value: ""
        };
    }
    function we4() {
        return {
            type: "image",
            title: null,
            url: "",
            alt: null
        };
    }
    function V18() {
        return {
            type: "link",
            title: null,
            url: "",
            children: []
        };
    }
    function Q12(e691) {
        return {
            type: "list",
            ordered: e691.type === "listOrdered",
            start: null,
            spread: e691._spread,
            children: []
        };
    }
    function Ie5(e692) {
        return {
            type: "listItem",
            spread: e692._spread,
            checked: null,
            children: []
        };
    }
    function Te5() {
        return {
            type: "paragraph",
            children: []
        };
    }
    function Ee4() {
        return {
            type: "strong",
            children: []
        };
    }
    function Fe5() {
        return {
            type: "text",
            value: ""
        };
    }
    function Be4() {
        return {
            type: "thematicBreak"
        };
    }
}
function N3(h100, s219) {
    let d63 = -1;
    for(; ++d63 < s219.length;){
        let y51 = s219[d63];
        Array.isArray(y51) ? N3(h100, y51) : Ve2(h100, y51);
    }
    return h100;
}
function Ve2(h101, s220) {
    let d64;
    for(d64 in s220)if (B6.call(s220, d64)) {
        let y52 = d64 === "canContainEols" || d64 === "transforms", o = (B6.call(h101, d64) ? h101[d64] : void 0) || (h101[d64] = y52 ? [] : {}), f91 = s220[d64];
        f91 && (y52 ? h101[d64] = [
            ...o,
            ...f91
        ] : Object.assign(o, f91));
    }
}
function q4(h102, s221) {
    throw h102 ? new Error("Cannot close `" + h102.type + "` (" + c1({
        start: h102.start,
        end: h102.end
    }) + "): a different token (`" + s221.type + "`, " + c1({
        start: s221.start,
        end: s221.end
    }) + ") is open") : new Error("Cannot close document, a token (`" + s221.type + "`, " + c1({
        start: s221.start,
        end: s221.end
    }) + ") is still open");
}
function s7(t608) {
    Object.assign(this, {
        Parser: (r299)=>{
            let a130 = this.data("settings");
            return Pe2(r299, Object.assign({}, a130, t608, {
                extensions: this.data("micromarkExtensions") || [],
                mdastExtensions: this.data("fromMarkdownExtensions") || []
            }));
        }
    });
}
var d5 = s7;
var t6 = function(e693, r300, n324) {
    var i296 = {
        type: String(e693)
    };
    return n324 == null && (typeof r300 == "string" || Array.isArray(r300)) ? n324 = r300 : Object.assign(i296, r300), Array.isArray(n324) ? i296.children = n324 : n324 != null && (i296.value = String(n324)), i296;
};
var f4 = function(n325) {
    if (n325 == null) return p11;
    if (typeof n325 == "string") return a11(n325);
    if (typeof n325 == "object") return Array.isArray(n325) ? l5(n325) : y5(n325);
    if (typeof n325 == "function") return i7(n325);
    throw new Error("Expected function, string, or object as test");
};
function l5(n326) {
    let r301 = [], t609 = -1;
    for(; ++t609 < n326.length;)r301[t609] = f4(n326[t609]);
    return i7(e694);
    function e694(...o) {
        let u183 = -1;
        for(; ++u183 < r301.length;)if (r301[u183].call(this, ...o)) return !0;
        return !1;
    }
}
function y5(n327) {
    return i7(r302);
    function r302(t610) {
        let e695;
        for(e695 in n327)if (t610[e695] !== n327[e695]) return !1;
        return !0;
    }
}
function a11(n328) {
    return i7(r303);
    function r303(t611) {
        return t611 && t611.type === n328;
    }
}
function i7(n329) {
    return r304;
    function r304(...t612) {
        return Boolean(n329.call(this, ...t612));
    }
}
function p11() {
    return !0;
}
var N4 = !0, I7 = "skip", g5 = !1, A5 = function(n330, f92, c89, u184) {
    typeof f92 == "function" && typeof c89 != "function" && (u184 = c89, c89 = f92, f92 = null);
    let h103 = f4(f92), y53 = u184 ? -1 : 1;
    m85(n330, null, [])();
    function m85(t613, b47, l165) {
        let r305 = typeof t613 == "object" && t613 !== null ? t613 : {}, p122;
        return typeof r305.type == "string" && (p122 = typeof r305.tagName == "string" ? r305.tagName : typeof r305.name == "string" ? r305.name : void 0, Object.defineProperty(s222, "name", {
            value: "node (" + (r305.type + (p122 ? "<" + p122 + ">" : "")) + ")"
        })), s222;
        function s222() {
            let i297 = [], o, e696, a131;
            if ((!f92 || h103(t613, b47, l165[l165.length - 1] || null)) && (i297 = P4(c89(t613, l165)), i297[0] === g5)) return i297;
            if (t613.children && i297[0] !== I7) for(e696 = (u184 ? t613.children.length : -1) + y53, a131 = l165.concat(t613); e696 > -1 && e696 < t613.children.length;){
                if (o = m85(t613.children[e696], e696, a131)(), o[0] === g5) return o;
                e696 = typeof o[1] == "number" ? o[1] : e696 + y53;
            }
            return i297;
        }
    }
};
function P4(n331) {
    return Array.isArray(n331) ? n331 : typeof n331 == "number" ? [
        N4,
        n331
    ] : [
        n331
    ];
}
var a12 = function(u185, n332, o, c90) {
    typeof n332 == "function" && typeof o != "function" && (c90 = o, o = n332, n332 = null), A5(u185, n332, i298, c90);
    function i298(l166, t614) {
        let f93 = t614[t614.length - 1];
        return o(l166, f93 ? f93.children.indexOf(l166) : null, f93);
    }
};
var p12 = i8("start"), u4 = i8("end");
function e6(t615) {
    return {
        start: p12(t615),
        end: u4(t615)
    };
}
function i8(t616) {
    return r306;
    function r306(o) {
        var n333 = o && o.position && o.position[t616] || {};
        return {
            line: n333.line || null,
            column: n333.column || null,
            offset: n333.offset > -1 ? n333.offset : null
        };
    }
}
function t7(i299) {
    return !i299 || !i299.position || !i299.position.start || !i299.position.start.line || !i299.position.start.column || !i299.position.end || !i299.position.end.line || !i299.position.end.column;
}
var x10 = !0, N5 = "skip", s8 = !1, j5 = function(t617, f94, u186, a132) {
    typeof f94 == "function" && typeof u186 != "function" && (a132 = u186, u186 = f94, f94 = null);
    var h104 = f4(f94), p123 = a132 ? -1 : 1;
    y54(t617, null, [])();
    function y54(r307, b48, c91) {
        var e697 = typeof r307 == "object" && r307 !== null ? r307 : {}, l167;
        return typeof e697.type == "string" && (l167 = typeof e697.tagName == "string" ? e697.tagName : typeof e697.name == "string" ? e697.name : void 0, Object.defineProperty(m86, "name", {
            value: "node (" + (e697.type + (l167 ? "<" + l167 + ">" : "")) + ")"
        })), m86;
        function m86() {
            var i300 = [], o, n334, g76;
            if ((!f94 || h104(r307, b48, c91[c91.length - 1] || null)) && (i300 = I8(u186(r307, c91)), i300[0] === s8)) return i300;
            if (r307.children && i300[0] !== N5) for(n334 = (a132 ? r307.children.length : -1) + p123, g76 = c91.concat(r307); n334 > -1 && n334 < r307.children.length;){
                if (o = y54(r307.children[n334], n334, g76)(), o[0] === s8) return o;
                n334 = typeof o[1] == "number" ? o[1] : n334 + p123;
            }
            return i300;
        }
    }
};
function I8(t618) {
    return Array.isArray(t618) ? t618 : typeof t618 == "number" ? [
        x10,
        t618
    ] : [
        t618
    ];
}
var I9 = function(i301, n335, f95, l168) {
    typeof n335 == "function" && typeof f95 != "function" && (l168 = f95, f95 = n335, n335 = null), j5(i301, n335, t619, l168);
    function t619(u187, c92) {
        var o = c92[c92.length - 1];
        return f95(u187, o ? o.children.indexOf(u187) : null, o);
    }
};
var o5 = {}.hasOwnProperty;
function u5(t620) {
    let i302 = Object.create(null);
    if (!t620 || !t620.type) throw new Error("mdast-util-definitions expected node");
    return I9(t620, "definition", c93), f96;
    function c93(e698) {
        let n336 = r8(e698.identifier);
        n336 && !o5.call(i302, n336) && (i302[n336] = e698);
    }
    function f96(e699) {
        let n337 = r8(e699);
        return n337 && o5.call(i302, n337) ? i302[n337] : null;
    }
}
function r8(t621) {
    return String(t621 || "").toUpperCase();
}
var c5 = {
    '"': "quot",
    "&": "amp",
    "<": "lt",
    ">": "gt"
};
function n6(e700) {
    return e700.replace(/["&<>]/g, r308);
    function r308(t622) {
        return "&" + c5[t622] + ";";
    }
}
function a13(i303, s223) {
    let e701 = n6(h6(i303 || ""));
    if (!s223) return e701;
    let r309 = e701.indexOf(":"), o = e701.indexOf("?"), t623 = e701.indexOf("#"), n338 = e701.indexOf("/");
    return r309 < 0 || n338 > -1 && r309 > n338 || o > -1 && r309 > o || t623 > -1 && r309 > t623 || s223.test(e701.slice(0, r309)) ? e701 : "";
}
function h6(i304) {
    let s224 = [], e702 = -1, r310 = 0, o = 0;
    for(; ++e702 < i304.length;){
        let t624 = i304.charCodeAt(e702), n339 = "";
        if (t624 === 37 && C4(i304.charCodeAt(e702 + 1)) && C4(i304.charCodeAt(e702 + 2))) o = 2;
        else if (t624 < 128) /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(t624)) || (n339 = String.fromCharCode(t624));
        else if (t624 > 55295 && t624 < 57344) {
            let c94 = i304.charCodeAt(e702 + 1);
            t624 < 56320 && c94 > 56319 && c94 < 57344 ? (n339 = String.fromCharCode(t624, c94), o = 1) : n339 = "\uFFFD";
        } else n339 = String.fromCharCode(t624);
        n339 && (s224.push(i304.slice(r310, e702), encodeURIComponent(n339)), r310 = e702 + o + 1, n339 = ""), o && (e702 += o, o = 0);
    }
    return s224.join("") + i304.slice(r310);
}
var l6 = Object.create;
var h7 = Object.defineProperty;
var D7 = Object.getOwnPropertyDescriptor;
var $3 = Object.getOwnPropertyNames;
var x11 = Object.getPrototypeOf, v5 = Object.prototype.hasOwnProperty;
var A6 = (o)=>h7(o, "__esModule", {
        value: !0
    });
var B7 = (o, t625)=>()=>(t625 || o((t625 = {
            exports: {}
        }).exports, t625), t625.exports);
var U2 = (o, t626, n340, e703)=>{
    if (t626 && typeof t626 == "object" || typeof t626 == "function") for (let r311 of $3(t626))!v5.call(o, r311) && (n340 || r311 !== "default") && h7(o, r311, {
        get: ()=>t626[r311],
        enumerable: !(e703 = D7(t626, r311)) || e703.enumerable
    });
    return o;
}, s9 = (o, t627)=>U2(A6(h7(o != null ? l6(x11(o)) : {}, "default", !t627 && o && o.__esModule ? {
        get: ()=>o.default,
        enumerable: !0
    } : {
        value: o,
        enumerable: !0
    })), o);
var C9 = B7((_, m87)=>{
    "use strict";
    var d65 = {};
    function y55(o) {
        var t628, n341, e704 = d65[o];
        if (e704) return e704;
        for(e704 = d65[o] = [], t628 = 0; t628 < 128; t628++)n341 = String.fromCharCode(t628), /^[0-9a-z]$/i.test(n341) ? e704.push(n341) : e704.push("%" + ("0" + t628.toString(16).toUpperCase()).slice(-2));
        for(t628 = 0; t628 < o.length; t628++)e704[o.charCodeAt(t628)] = o[t628];
        return e704;
    }
    function i305(o, t629, n342) {
        var e705, r312, f97, c95, u188, a133 = "";
        for(typeof t629 != "string" && (n342 = t629, t629 = i305.defaultChars), typeof n342 > "u" && (n342 = !0), u188 = y55(t629), e705 = 0, r312 = o.length; e705 < r312; e705++){
            if (f97 = o.charCodeAt(e705), n342 && f97 === 37 && e705 + 2 < r312 && /^[0-9a-f]{2}$/i.test(o.slice(e705 + 1, e705 + 3))) {
                a133 += o.slice(e705, e705 + 3), e705 += 2;
                continue;
            }
            if (f97 < 128) {
                a133 += u188[f97];
                continue;
            }
            if (f97 >= 55296 && f97 <= 57343) {
                if (f97 >= 55296 && f97 <= 56319 && e705 + 1 < r312 && (c95 = o.charCodeAt(e705 + 1), c95 >= 56320 && c95 <= 57343)) {
                    a133 += encodeURIComponent(o[e705] + o[e705 + 1]), e705++;
                    continue;
                }
                a133 += "%EF%BF%BD";
                continue;
            }
            a133 += encodeURIComponent(o[e705]);
        }
        return a133;
    }
    i305.defaultChars = ";/?:@&=+$,-_.!~*'()#";
    i305.componentChars = "-_.!~*'()";
    m87.exports = i305;
});
var F3 = s9(C9()), p13 = s9(C9()), { defaultChars: z2 , componentChars: b6  } = p13, { default: I10 , ...R3 } = p13, j6 = (F3.default ?? I10) ?? R3;
var h8 = {}.hasOwnProperty;
function Q1(e706, t630) {
    let r313 = t630.data || {};
    return "value" in t630 && !(h8.call(r313, "hName") || h8.call(r313, "hProperties") || h8.call(r313, "hChildren")) ? e706.augment(t630, t6("text", t630.value)) : e706(t630, "div", f5(e706, t630));
}
function d6(e707, t631, r314) {
    let o = t631 && t631.type, n343;
    if (!o) throw new Error("Expected node, got `" + t631 + "`");
    return h8.call(e707.handlers, o) ? n343 = e707.handlers[o] : e707.passThrough && e707.passThrough.includes(o) ? n343 = V3 : n343 = e707.unknownHandler, (typeof n343 == "function" ? n343 : Q1)(e707, t631, r314);
}
function V3(e708, t632) {
    return "children" in t632 ? {
        ...t632,
        children: f5(e708, t632)
    } : t632;
}
function f5(e709, t633) {
    let r315 = [];
    if ("children" in t633) {
        let o = t633.children, n344 = -1;
        for(; ++n344 < o.length;){
            let i306 = d6(e709, o[n344], t633);
            if (i306) {
                if (n344 && o[n344 - 1].type === "break" && (!Array.isArray(i306) && i306.type === "text" && (i306.value = i306.value.replace(/^\s+/, "")), !Array.isArray(i306) && i306.type === "element")) {
                    let l169 = i306.children[0];
                    l169 && l169.type === "text" && (l169.value = l169.value.replace(/^\s+/, ""));
                }
                Array.isArray(i306) ? r315.push(...i306) : r315.push(i306);
            }
        }
    }
    return r315;
}
function m8(e710, t634) {
    let r316 = [], o = -1;
    for(t634 && r316.push(t6("text", `
`)); ++o < e710.length;)o && r316.push(t6("text", `
`)), r316.push(e710[o]);
    return t634 && e710.length > 0 && r316.push(t6("text", `
`)), r316;
}
function N6(e711) {
    let t635 = -1, r317 = [];
    for(; ++t635 < e711.footnoteOrder.length;){
        let o = e711.footnoteById[e711.footnoteOrder[t635].toUpperCase()];
        if (!o) continue;
        let n345 = f5(e711, o), i307 = String(o.identifier), l170 = a13(i307.toLowerCase()), p124 = 0, s225 = [];
        for(; ++p124 <= e711.footnoteCounts[i307];){
            let c96 = {
                type: "element",
                tagName: "a",
                properties: {
                    href: "#" + e711.clobberPrefix + "fnref-" + l170 + (p124 > 1 ? "-" + p124 : ""),
                    dataFootnoteBackref: !0,
                    className: [
                        "data-footnote-backref"
                    ],
                    ariaLabel: e711.footnoteBackLabel
                },
                children: [
                    {
                        type: "text",
                        value: "\u21A9"
                    }
                ]
            };
            p124 > 1 && c96.children.push({
                type: "element",
                tagName: "sup",
                children: [
                    {
                        type: "text",
                        value: String(p124)
                    }
                ]
            }), s225.length > 0 && s225.push({
                type: "text",
                value: " "
            }), s225.push(c96);
        }
        let a134 = n345[n345.length - 1];
        if (a134 && a134.type === "element" && a134.tagName === "p") {
            let c97 = a134.children[a134.children.length - 1];
            c97 && c97.type === "text" ? c97.value += " " : a134.children.push({
                type: "text",
                value: " "
            }), a134.children.push(...s225);
        } else n345.push(...s225);
        let u189 = {
            type: "element",
            tagName: "li",
            properties: {
                id: e711.clobberPrefix + "fn-" + l170
            },
            children: m8(n345, !0)
        };
        o.position && (u189.position = o.position), r317.push(u189);
    }
    return r317.length === 0 ? null : {
        type: "element",
        tagName: "section",
        properties: {
            dataFootnotes: !0,
            className: [
                "footnotes"
            ]
        },
        children: [
            {
                type: "element",
                tagName: "h2",
                properties: {
                    id: "footnote-label",
                    className: [
                        "sr-only"
                    ]
                },
                children: [
                    t6("text", e711.footnoteLabel)
                ]
            },
            {
                type: "text",
                value: `
`
            },
            {
                type: "element",
                tagName: "ol",
                properties: {},
                children: m8(r317, !0)
            },
            {
                type: "text",
                value: `
`
            }
        ]
    };
}
function B8(e712, t636) {
    return e712(t636, "blockquote", m8(f5(e712, t636), !0));
}
function C10(e713, t637) {
    return [
        e713(t637, "br"),
        t6("text", `
`)
    ];
}
function I11(e714, t638) {
    let r318 = t638.value ? t638.value + `
` : "", o = t638.lang && t638.lang.match(/^[^ \t]+(?=[ \t]|$)/), n346 = {};
    o && (n346.className = [
        "language-" + o
    ]);
    let i308 = e714(t638, "code", n346, [
        t6("text", r318)
    ]);
    return t638.meta && (i308.data = {
        meta: t638.meta
    }), e714(t638.position, "pre", [
        i308
    ]);
}
function P5(e715, t639) {
    return e715(t639, "del", f5(e715, t639));
}
function A7(e716, t640) {
    return e716(t640, "em", f5(e716, t640));
}
function x12(e717, t641) {
    let r319 = String(t641.identifier), o = a13(r319.toLowerCase()), n347 = e717.footnoteOrder.indexOf(r319), i309;
    n347 === -1 ? (e717.footnoteOrder.push(r319), e717.footnoteCounts[r319] = 1, i309 = e717.footnoteOrder.length) : (e717.footnoteCounts[r319]++, i309 = n347 + 1);
    let l171 = e717.footnoteCounts[r319];
    return e717(t641, "sup", [
        e717(t641.position, "a", {
            href: "#" + e717.clobberPrefix + "fn-" + o,
            id: e717.clobberPrefix + "fnref-" + o + (l171 > 1 ? "-" + l171 : ""),
            dataFootnoteRef: !0,
            ariaDescribedBy: "footnote-label"
        }, [
            t6("text", String(i309))
        ])
    ]);
}
function R4(e718, t642) {
    let r320 = e718.footnoteById, o = 1;
    for(; (o in r320);)o++;
    let n348 = String(o);
    return r320[n348] = {
        type: "footnoteDefinition",
        identifier: n348,
        children: [
            {
                type: "paragraph",
                children: t642.children
            }
        ],
        position: t642.position
    }, x12(e718, {
        type: "footnoteReference",
        identifier: n348,
        position: t642.position
    });
}
function L2(e719, t643) {
    return e719(t643, "h" + t643.depth, f5(e719, t643));
}
function O2(e720, t644) {
    return e720.dangerous ? e720.augment(t644, t6("raw", t644.value)) : null;
}
function g6(e721, t645) {
    let r321 = t645.referenceType, o = "]";
    if (r321 === "collapsed" ? o += "[]" : r321 === "full" && (o += "[" + (t645.label || t645.identifier) + "]"), t645.type === "imageReference") return t6("text", "![" + t645.alt + o);
    let n349 = f5(e721, t645), i310 = n349[0];
    i310 && i310.type === "text" ? i310.value = "[" + i310.value : n349.unshift(t6("text", "["));
    let l172 = n349[n349.length - 1];
    return l172 && l172.type === "text" ? l172.value += o : n349.push(t6("text", o)), n349;
}
function S5(e722, t646) {
    let r322 = e722.definition(t646.identifier);
    if (!r322) return g6(e722, t646);
    let o = {
        src: j6(r322.url || ""),
        alt: t646.alt
    };
    return r322.title !== null && r322.title !== void 0 && (o.title = r322.title), e722(t646, "img", o);
}
function H2(e723, t647) {
    let r323 = {
        src: j6(t647.url),
        alt: t647.alt
    };
    return t647.title !== null && t647.title !== void 0 && (r323.title = t647.title), e723(t647, "img", r323);
}
function z3(e724, t648) {
    return e724(t648, "code", [
        t6("text", t648.value.replace(/\r?\n|\r/g, " "))
    ]);
}
function T5(e725, t649) {
    let r324 = e725.definition(t649.identifier);
    if (!r324) return g6(e725, t649);
    let o = {
        href: j6(r324.url || "")
    };
    return r324.title !== null && r324.title !== void 0 && (o.title = r324.title), e725(t649, "a", o, f5(e725, t649));
}
function D8(e726, t650) {
    let r325 = {
        href: j6(t650.url)
    };
    return t650.title !== null && t650.title !== void 0 && (r325.title = t650.title), e726(t650, "a", r325, f5(e726, t650));
}
function E4(e727, t651, r326) {
    let o = f5(e727, t651), n350 = r326 ? at2(r326) : F4(t651), i311 = {}, l173 = [];
    if (typeof t651.checked == "boolean") {
        let a135;
        o[0] && o[0].type === "element" && o[0].tagName === "p" ? a135 = o[0] : (a135 = e727(null, "p", []), o.unshift(a135)), a135.children.length > 0 && a135.children.unshift(t6("text", " ")), a135.children.unshift(e727(null, "input", {
            type: "checkbox",
            checked: t651.checked,
            disabled: !0
        })), i311.className = [
            "task-list-item"
        ];
    }
    let p125 = -1;
    for(; ++p125 < o.length;){
        let a136 = o[p125];
        (n350 || p125 !== 0 || a136.type !== "element" || a136.tagName !== "p") && l173.push(t6("text", `
`)), a136.type === "element" && a136.tagName === "p" && !n350 ? l173.push(...a136.children) : l173.push(a136);
    }
    let s226 = o[o.length - 1];
    return s226 && (n350 || !("tagName" in s226) || s226.tagName !== "p") && l173.push(t6("text", `
`)), e727(t651, "li", i311, l173);
}
function at2(e728) {
    let t652 = e728.spread, r327 = e728.children, o = -1;
    for(; !t652 && ++o < r327.length;)t652 = F4(r327[o]);
    return Boolean(t652);
}
function F4(e729) {
    let t653 = e729.spread;
    return t653 ?? e729.children.length > 1;
}
function U3(e730, t654) {
    let r328 = {}, o = t654.ordered ? "ol" : "ul", n351 = f5(e730, t654), i312 = -1;
    for(typeof t654.start == "number" && t654.start !== 1 && (r328.start = t654.start); ++i312 < n351.length;){
        let l174 = n351[i312];
        if (l174.type === "element" && l174.tagName === "li" && l174.properties && Array.isArray(l174.properties.className) && l174.properties.className.includes("task-list-item")) {
            r328.className = [
                "contains-task-list"
            ];
            break;
        }
    }
    return e730(t654, o, r328, m8(n351, !0));
}
function q5(e731, t655) {
    return e731(t655, "p", f5(e731, t655));
}
function $4(e732, t656) {
    return e732.augment(t656, t6("root", m8(f5(e732, t656))));
}
function j7(e733, t657) {
    return e733(t657, "strong", f5(e733, t657));
}
function G4(e734, t658) {
    let r329 = t658.children, o = -1, n352 = t658.align || [], i313 = [];
    for(; ++o < r329.length;){
        let l175 = r329[o].children, p126 = o === 0 ? "th" : "td", s227 = [], a137 = -1, u190 = t658.align ? n352.length : l175.length;
        for(; ++a137 < u190;){
            let c98 = l175[a137];
            s227.push(e734(c98, p126, {
                align: n352[a137]
            }, c98 ? f5(e734, c98) : []));
        }
        i313[o] = e734(r329[o], "tr", m8(s227, !0));
    }
    return e734(t658, "table", m8([
        e734(i313[0].position, "thead", m8([
            i313[0]
        ], !0))
    ].concat(i313[1] ? e734({
        start: p12(i313[1]),
        end: u4(i313[i313.length - 1])
    }, "tbody", m8(i313.slice(1), !0)) : []), !0));
}
function J4(e735, t659) {
    return e735.augment(t659, t6("text", String(t659.value).replace(/[ \t]*(\r?\n|\r)[ \t]*/g, "$1")));
}
function K3(e736, t660) {
    return e736(t660, "hr");
}
var b7 = {
    blockquote: B8,
    break: C10,
    code: I11,
    delete: P5,
    emphasis: A7,
    footnoteReference: x12,
    footnote: R4,
    heading: L2,
    html: O2,
    imageReference: S5,
    image: H2,
    inlineCode: z3,
    linkReference: T5,
    link: D8,
    listItem: E4,
    list: U3,
    paragraph: q5,
    root: $4,
    strong: j7,
    table: G4,
    text: J4,
    thematicBreak: K3,
    toml: y6,
    yaml: y6,
    definition: y6,
    footnoteDefinition: y6
};
function y6() {
    return null;
}
var yt1 = {}.hasOwnProperty;
function bt1(e737, t661) {
    let r330 = t661 || {}, o = r330.allowDangerousHtml || !1, n353 = {};
    return l176.dangerous = o, l176.clobberPrefix = r330.clobberPrefix === void 0 || r330.clobberPrefix === null ? "user-content-" : r330.clobberPrefix, l176.footnoteLabel = r330.footnoteLabel || "Footnotes", l176.footnoteBackLabel = r330.footnoteBackLabel || "Back to content", l176.definition = u5(e737), l176.footnoteById = n353, l176.footnoteOrder = [], l176.footnoteCounts = {}, l176.augment = i314, l176.handlers = {
        ...b7,
        ...r330.handlers
    }, l176.unknownHandler = r330.unknownHandler, l176.passThrough = r330.passThrough, a12(e737, "footnoteDefinition", (p127)=>{
        let s228 = String(p127.identifier).toUpperCase();
        yt1.call(n353, s228) || (n353[s228] = p127);
    }), l176;
    function i314(p128, s229) {
        if (p128 && "data" in p128 && p128.data) {
            let a138 = p128.data;
            a138.hName && (s229.type !== "element" && (s229 = {
                type: "element",
                tagName: "",
                properties: {},
                children: []
            }), s229.tagName = a138.hName), s229.type === "element" && a138.hProperties && (s229.properties = {
                ...s229.properties,
                ...a138.hProperties
            }), "children" in s229 && s229.children && a138.hChildren && (s229.children = a138.hChildren);
        }
        if (p128) {
            let a139 = "type" in p128 ? p128 : {
                position: p128
            };
            t7(a139) || (s229.position = {
                start: p12(a139),
                end: u4(a139)
            });
        }
        return s229;
    }
    function l176(p129, s230, a140, u191) {
        return Array.isArray(a140) && (u191 = a140, a140 = {}), i314(p129, {
            type: "element",
            tagName: s230,
            properties: a140 || {},
            children: u191 || []
        });
    }
}
function kt2(e738, t662) {
    let r331 = bt1(e738, t662), o = d6(r331, e738, null), n354 = N6(r331);
    return n354 && o.children.push(t6("text", `
`), n354), Array.isArray(o) ? {
        type: "root",
        children: o
    } : o;
}
var l7 = function(r332, e739) {
    return r332 && "run" in r332 ? a14(r332, e739) : c6(r332 || e739);
}, m9 = l7;
function a14(r333, e740) {
    return (t663, f98, n355)=>{
        r333.run(kt2(t663, e740), f98, (o)=>{
            n355(o);
        });
    };
}
function c6(r334) {
    return (e741)=>kt2(e741, r334);
}
var c7 = class {
    constructor(){
        this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
            skip: ()=>this.should_skip = !0,
            remove: ()=>this.should_remove = !0,
            replace: (e742)=>this.replacement = e742
        };
    }
    replace(e743, s231, l177, h105) {
        e743 && (l177 !== null ? e743[s231][l177] = h105 : e743[s231] = h105);
    }
    remove(e744, s232, l178) {
        e744 && (l178 !== null ? e744[s232].splice(l178, 1) : delete e744[s232]);
    }
};
var a15 = class extends c7 {
    constructor(e745, s233){
        super();
        this.enter = e745, this.leave = s233;
    }
    visit(e746, s234, l179, h106) {
        if (e746) {
            if (this.enter) {
                let r335 = this.should_skip, t664 = this.should_remove, i315 = this.replacement;
                this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.enter.call(this.context, e746, s234, l179, h106), this.replacement && (e746 = this.replacement, this.replace(s234, l179, h106, e746)), this.should_remove && this.remove(s234, l179, h106);
                let u192 = this.should_skip, n356 = this.should_remove;
                if (this.should_skip = r335, this.should_remove = t664, this.replacement = i315, u192) return e746;
                if (n356) return null;
            }
            for(let r336 in e746){
                let t665 = e746[r336];
                if (typeof t665 == "object") if (Array.isArray(t665)) for(let i316 = 0; i316 < t665.length; i316 += 1)t665[i316] !== null && typeof t665[i316].type == "string" && (this.visit(t665[i316], e746, r336, i316) || i316--);
                else t665 !== null && typeof t665.type == "string" && this.visit(t665, e746, r336, null);
            }
            if (this.leave) {
                let r337 = this.replacement, t666 = this.should_remove;
                this.replacement = null, this.should_remove = !1, this.leave.call(this.context, e746, s234, l179, h106), this.replacement && (e746 = this.replacement, this.replace(s234, l179, h106, e746)), this.should_remove && this.remove(s234, l179, h106);
                let i317 = this.should_remove;
                if (this.replacement = r337, this.should_remove = t666, i317) return null;
            }
        }
        return e746;
    }
};
(class extends c7 {
    constructor(e747, s235){
        super();
        this.enter = e747, this.leave = s235;
    }
    async visit(e748, s236, l180, h107) {
        if (e748) {
            if (this.enter) {
                let r338 = this.should_skip, t667 = this.should_remove, i318 = this.replacement;
                this.should_skip = !1, this.should_remove = !1, this.replacement = null, await this.enter.call(this.context, e748, s236, l180, h107), this.replacement && (e748 = this.replacement, this.replace(s236, l180, h107, e748)), this.should_remove && this.remove(s236, l180, h107);
                let u193 = this.should_skip, n357 = this.should_remove;
                if (this.should_skip = r338, this.should_remove = t667, this.replacement = i318, u193) return e748;
                if (n357) return null;
            }
            for(let r339 in e748){
                let t668 = e748[r339];
                if (typeof t668 == "object") if (Array.isArray(t668)) for(let i319 = 0; i319 < t668.length; i319 += 1)t668[i319] !== null && typeof t668[i319].type == "string" && (await this.visit(t668[i319], e748, r339, i319) || i319--);
                else t668 !== null && typeof t668.type == "string" && await this.visit(t668, e748, r339, null);
            }
            if (this.leave) {
                let r340 = this.replacement, t669 = this.should_remove;
                this.replacement = null, this.should_remove = !1, await this.leave.call(this.context, e748, s236, l180, h107), this.replacement && (e748 = this.replacement, this.replace(s236, l180, h107, e748)), this.should_remove && this.remove(s236, l180, h107);
                let i320 = this.should_remove;
                if (this.replacement = r340, this.should_remove = t669, i320) return null;
            }
        }
        return e748;
    }
});
function w7(o, { enter: e749 , leave: s237  }) {
    return new a15(e749, s237).visit(o, null);
}
var S6 = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\s+(\S+)/g;
function _4(e750, t670 = {}) {
    var r341 = t670.runtime === "automatic", i321 = {}, a141 = {};
    return w7(e750, {
        enter: k46,
        leave: F31
    }), e750;
    function k46(s238) {
        var l181, p130, n358;
        if (s238.type === "Program") {
            for(l181 = s238.comments || [], p130 = -1; ++p130 < l181.length;)for(S6.lastIndex = 0; n358 = S6.exec(l181[p130].value);)i321[n358[1]] = n358[2];
            if (i321.jsxRuntime) if (i321.jsxRuntime === "automatic") {
                if (r341 = !0, i321.jsx) throw new Error("Unexpected `@jsx` pragma w/ automatic runtime");
                if (i321.jsxFrag) throw new Error("Unexpected `@jsxFrag` pragma w/ automatic runtime");
            } else if (i321.jsxRuntime === "classic") {
                if (r341 = !1, i321.jsxImportSource) throw new Error("Unexpected `@jsxImportSource` w/ classic runtime");
            } else throw new Error("Unexpected `jsxRuntime` `" + i321.jsxRuntime + "`, expected `automatic` or `classic`");
        }
    }
    function F31(s239) {
        var l182 = [], p131 = [], n359 = [], u194 = [], c99 = -1, o, m88, y56, d66, v40, w48, E33, g77, f99, x84, I39;
        if (s239.type === "Program" && (f99 = [], a141.fragment && f99.push({
            type: "ImportSpecifier",
            imported: {
                type: "Identifier",
                name: "Fragment"
            },
            local: {
                type: "Identifier",
                name: "_Fragment"
            }
        }), a141.jsx && f99.push({
            type: "ImportSpecifier",
            imported: {
                type: "Identifier",
                name: "jsx"
            },
            local: {
                type: "Identifier",
                name: "_jsx"
            }
        }), a141.jsxs && f99.push({
            type: "ImportSpecifier",
            imported: {
                type: "Identifier",
                name: "jsxs"
            },
            local: {
                type: "Identifier",
                name: "_jsxs"
            }
        }), f99.length > 0 && s239.body.unshift({
            type: "ImportDeclaration",
            specifiers: f99,
            source: {
                type: "Literal",
                value: (i321.jsxImportSource || t670.importSource || "react") + "/jsx-runtime"
            }
        })), !(s239.type !== "JSXElement" && s239.type !== "JSXFragment")) {
            for(; ++c99 < s239.children.length;)o = s239.children[c99], o.type === "JSXExpressionContainer" ? o.expression.type !== "JSXEmptyExpression" && p131.push(o.expression) : o.type === "JSXText" ? (I39 = o.value.replace(/\t/g, " ").replace(/ *(\r?\n|\r) */g, `
`).replace(/\n+/g, `
`).replace(/\n+$/, "").replace(/\n/g, " "), I39 && p131.push(h9(o, {
                type: "Literal",
                value: I39
            }))) : p131.push(o);
            if (s239.type === "JSXElement") for(m88 = j8(s239.openingElement.name), m88.type === "Identifier" && /^[a-z]/.test(m88.name) && (m88 = h9(m88, {
                type: "Literal",
                value: m88.name
            })), d66 = s239.openingElement.attributes, c99 = -1; ++c99 < d66.length;)if (v40 = d66[c99], v40.type === "JSXSpreadAttribute") u194.length > 0 && (n359.push({
                type: "ObjectExpression",
                properties: u194
            }), u194 = []), n359.push(v40.argument), w48 = !0;
            else if (x84 = X1(v40), r341 && x84.key.type === "Identifier" && x84.key.name === "key") {
                if (w48) throw new Error("Expected `key` to come before any spread expressions");
                E33 = x84.value;
            } else u194.push(x84);
            else r341 ? (a141.fragment = !0, m88 = {
                type: "Identifier",
                name: "_Fragment"
            }) : m88 = b8(i321.jsxFrag || t670.pragmaFrag || "React.Fragment");
            r341 && p131.length > 0 ? u194.push({
                type: "Property",
                key: {
                    type: "Identifier",
                    name: "children"
                },
                value: p131.length > 1 ? {
                    type: "ArrayExpression",
                    elements: p131
                } : p131[0],
                kind: "init",
                method: !1,
                shorthand: !1,
                computed: !1
            }) : l182 = p131, u194.length > 0 && n359.push({
                type: "ObjectExpression",
                properties: u194
            }), n359.length > 1 ? (n359[0].type !== "ObjectExpression" && n359.unshift({
                type: "ObjectExpression",
                properties: []
            }), y56 = {
                type: "CallExpression",
                callee: b8("Object.assign"),
                arguments: n359,
                optional: !1
            }) : n359.length > 0 && (y56 = n359[0]), r341 ? (p131.length > 1 ? (a141.jsxs = !0, g77 = {
                type: "Identifier",
                name: "_jsxs"
            }) : (a141.jsx = !0, g77 = {
                type: "Identifier",
                name: "_jsx"
            }), l182.push(y56 || {
                type: "ObjectExpression",
                properties: []
            }), E33 && l182.push(E33)) : ((y56 || l182.length > 0) && l182.unshift(y56 || {
                type: "Literal",
                value: null
            }), g77 = b8(i321.jsx || t670.pragma || "React.createElement")), l182.unshift(m88), this.replace(h9(s239, {
                type: "CallExpression",
                callee: g77,
                arguments: l182,
                optional: !1
            }));
        }
    }
}
function X1(e751) {
    var t671;
    return e751.value ? e751.value.type === "JSXExpressionContainer" ? t671 = e751.value.expression : (t671 = e751.value, delete t671.raw) : t671 = {
        type: "Literal",
        value: !0
    }, h9(e751, {
        type: "Property",
        key: j8(e751.name),
        value: t671,
        kind: "init",
        method: !1,
        shorthand: !1,
        computed: !1
    });
}
function j8(e752) {
    var t672, r342;
    return e752.type === "JSXMemberExpression" ? (r342 = j8(e752.property), t672 = {
        type: "MemberExpression",
        object: j8(e752.object),
        property: r342,
        computed: r342.type === "Literal",
        optional: !1
    }) : e752.type === "JSXNamespacedName" ? t672 = {
        type: "Literal",
        value: e752.namespace.name + ":" + e752.name.name
    } : t672 = r2(e752.name) ? {
        type: "Identifier",
        name: e752.name
    } : {
        type: "Literal",
        value: e752.name
    }, h9(e752, t672);
}
function b8(e753) {
    for(var t673 = e753.split("."), r343 = -1, i322, a142; ++r343 < t673.length;)a142 = r2(t673[r343]) ? {
        type: "Identifier",
        name: t673[r343]
    } : {
        type: "Literal",
        value: t673[r343]
    }, i322 = r343 ? {
        type: "MemberExpression",
        object: i322,
        property: a142,
        computed: r343 && a142.type === "Literal",
        optional: !1
    } : a142;
    return i322;
}
function h9(e754, t674) {
    for(var r344 = [
        "start",
        "end",
        "loc",
        "range",
        "comments"
    ], i323 = -1, a143; ++i323 < r344.length;)a143 = r344[i323], a143 in e754 && (t674[a143] = e754[a143]);
    return t674;
}
const codes = {};
function hideStackFrames(fn) {
    const hidden = "__node_internal_" + fn.name;
    Object.defineProperty(fn, "name", {
        value: hidden
    });
    return fn;
}
const _toString = Object.prototype.toString;
const _isObjectLike = (value)=>value !== null && typeof value === "object";
const _isFunctionLike = (value)=>value !== null && typeof value === "function";
function isAnyArrayBuffer(value) {
    return _isObjectLike(value) && (_toString.call(value) === "[object ArrayBuffer]" || _toString.call(value) === "[object SharedArrayBuffer]");
}
function isArgumentsObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Arguments]";
}
function isArrayBuffer(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object ArrayBuffer]";
}
function isAsyncFunction(value) {
    return _isFunctionLike(value) && _toString.call(value) === "[object AsyncFunction]";
}
function isBooleanObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Boolean]";
}
function isBoxedPrimitive(value) {
    return isBooleanObject(value) || isStringObject(value) || isNumberObject(value) || isSymbolObject(value) || isBigIntObject(value);
}
function isDataView(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object DataView]";
}
function isDate(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Date]";
}
function isGeneratorFunction(value) {
    return _isFunctionLike(value) && _toString.call(value) === "[object GeneratorFunction]";
}
function isGeneratorObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Generator]";
}
function isMap(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Map]";
}
function isMapIterator(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Map Iterator]";
}
function isModuleNamespaceObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Module]";
}
function isNativeError(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Error]";
}
function isNumberObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Number]";
}
function isBigIntObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object BigInt]";
}
function isPromise(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Promise]";
}
function isRegExp(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object RegExp]";
}
function isSet(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Set]";
}
function isSetIterator(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Set Iterator]";
}
function isSharedArrayBuffer(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object SharedArrayBuffer]";
}
function isStringObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object String]";
}
function isSymbolObject(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object Symbol]";
}
function isWeakMap(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object WeakMap]";
}
function isWeakSet(value) {
    return _isObjectLike(value) && _toString.call(value) === "[object WeakSet]";
}
const __default = {
    isAsyncFunction,
    isGeneratorFunction,
    isAnyArrayBuffer,
    isArrayBuffer,
    isArgumentsObject,
    isBoxedPrimitive,
    isDataView,
    isMap,
    isMapIterator,
    isModuleNamespaceObject,
    isNativeError,
    isPromise,
    isSet,
    isSetIterator,
    isWeakMap,
    isWeakSet,
    isRegExp,
    isDate,
    isStringObject,
    isNumberObject,
    isBooleanObject,
    isBigIntObject
};
const mod1 = {
    isAnyArrayBuffer: isAnyArrayBuffer,
    isArgumentsObject: isArgumentsObject,
    isArrayBuffer: isArrayBuffer,
    isAsyncFunction: isAsyncFunction,
    isBooleanObject: isBooleanObject,
    isBoxedPrimitive: isBoxedPrimitive,
    isDataView: isDataView,
    isDate: isDate,
    isGeneratorFunction: isGeneratorFunction,
    isGeneratorObject: isGeneratorObject,
    isMap: isMap,
    isMapIterator: isMapIterator,
    isModuleNamespaceObject: isModuleNamespaceObject,
    isNativeError: isNativeError,
    isNumberObject: isNumberObject,
    isBigIntObject: isBigIntObject,
    isPromise: isPromise,
    isRegExp: isRegExp,
    isSet: isSet,
    isSetIterator: isSetIterator,
    isSharedArrayBuffer: isSharedArrayBuffer,
    isStringObject: isStringObject,
    isSymbolObject: isSymbolObject,
    isWeakMap: isWeakMap,
    isWeakSet: isWeakSet,
    default: __default
};
const _toString1 = Object.prototype.toString;
const _isObjectLike1 = (value)=>value !== null && typeof value === "object";
function isArrayBufferView(value) {
    return ArrayBuffer.isView(value);
}
function isFloat32Array(value) {
    return _isObjectLike1(value) && _toString1.call(value) === "[object Float32Array]";
}
function isFloat64Array(value) {
    return _isObjectLike1(value) && _toString1.call(value) === "[object Float64Array]";
}
function isTypedArray(value) {
    const reTypedTag = /^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\]$/;
    return _isObjectLike1(value) && reTypedTag.test(_toString1.call(value));
}
function isUint8Array(value) {
    return _isObjectLike1(value) && _toString1.call(value) === "[object Uint8Array]";
}
const { isDate: isDate1 , isArgumentsObject: isArgumentsObject1 , isBigIntObject: isBigIntObject1 , isBooleanObject: isBooleanObject1 , isNumberObject: isNumberObject1 , isStringObject: isStringObject1 , isSymbolObject: isSymbolObject1 , isNativeError: isNativeError1 , isRegExp: isRegExp1 , isAsyncFunction: isAsyncFunction1 , isGeneratorFunction: isGeneratorFunction1 , isGeneratorObject: isGeneratorObject1 , isPromise: isPromise1 , isMap: isMap1 , isSet: isSet1 , isMapIterator: isMapIterator1 , isSetIterator: isSetIterator1 , isWeakMap: isWeakMap1 , isWeakSet: isWeakSet1 , isArrayBuffer: isArrayBuffer1 , isDataView: isDataView1 , isSharedArrayBuffer: isSharedArrayBuffer1 , isModuleNamespaceObject: isModuleNamespaceObject1 , isAnyArrayBuffer: isAnyArrayBuffer1 , isBoxedPrimitive: isBoxedPrimitive1  } = mod1;
function isInt32(value) {
    return value === (value | 0);
}
function isUint32(value) {
    return value === value >>> 0;
}
const validateBuffer = hideStackFrames((buffer, name = "buffer")=>{
    if (!isArrayBufferView(buffer)) {
        throw new codes.ERR_INVALID_ARG_TYPE(name, [
            "Buffer",
            "TypedArray",
            "DataView"
        ], buffer);
    }
});
hideStackFrames((value, name, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER)=>{
    if (typeof value !== "number") {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
    }
    if (!Number.isInteger(value)) {
        throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
    }
    if (value < min || value > max) {
        throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    }
});
const validateObject = hideStackFrames((value, name, options)=>{
    const useDefaultOptions = options == null;
    const allowArray = useDefaultOptions ? false : options.allowArray;
    const allowFunction = useDefaultOptions ? false : options.allowFunction;
    const nullable = useDefaultOptions ? false : options.nullable;
    if (!nullable && value === null || !allowArray && Array.isArray(value) || typeof value !== "object" && (!allowFunction || typeof value !== "function")) {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "Object", value);
    }
});
hideStackFrames((value, name, min = -2147483648, max = 2147483647)=>{
    if (!isInt32(value)) {
        if (typeof value !== "number") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
        if (!Number.isInteger(value)) {
            throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
        }
        throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    }
    if (value < min || value > max) {
        throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    }
});
hideStackFrames((value, name, positive)=>{
    if (!isUint32(value)) {
        if (typeof value !== "number") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
        if (!Number.isInteger(value)) {
            throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
        }
        const min = positive ? 1 : 0;
        throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && < 4294967296`, value);
    }
    if (positive && value === 0) {
        throw new codes.ERR_OUT_OF_RANGE(name, ">= 1 && < 4294967296", value);
    }
});
function validateString(value, name) {
    if (typeof value !== "string") {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "string", value);
    }
}
hideStackFrames((value, name, oneOf)=>{
    if (!Array.prototype.includes.call(oneOf, value)) {
        const allowed = Array.prototype.join.call(Array.prototype.map.call(oneOf, (v41)=>typeof v41 === "string" ? `'${v41}'` : String(v41)), ", ");
        const reason = "must be one of: " + allowed;
        throw new codes.ERR_INVALID_ARG_VALUE(name, value, reason);
    }
});
hideStackFrames((callback)=>{
    if (typeof callback !== "function") {
        throw new codes.ERR_INVALID_CALLBACK(callback);
    }
});
hideStackFrames((signal, name)=>{
    if (signal !== undefined && (signal === null || typeof signal !== "object" || !("aborted" in signal))) {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "AbortSignal", signal);
    }
});
const validateFunction = hideStackFrames((value, name)=>{
    if (typeof value !== "function") {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "Function", value);
    }
});
hideStackFrames((value, name, minLength = 0)=>{
    if (!Array.isArray(value)) {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "Array", value);
    }
    if (value.length < minLength) {
        const reason = `must be longer than ${minLength}`;
        throw new codes.ERR_INVALID_ARG_VALUE(name, value, reason);
    }
});
function normalizeEncoding(enc) {
    if (enc == null || enc === "utf8" || enc === "utf-8") return "utf8";
    return slowCases(enc);
}
function slowCases(enc) {
    switch(enc.length){
        case 4:
            if (enc === "UTF8") return "utf8";
            if (enc === "ucs2" || enc === "UCS2") return "utf16le";
            enc = `${enc}`.toLowerCase();
            if (enc === "utf8") return "utf8";
            if (enc === "ucs2") return "utf16le";
            break;
        case 3:
            if (enc === "hex" || enc === "HEX" || `${enc}`.toLowerCase() === "hex") {
                return "hex";
            }
            break;
        case 5:
            if (enc === "ascii") return "ascii";
            if (enc === "ucs-2") return "utf16le";
            if (enc === "UTF-8") return "utf8";
            if (enc === "ASCII") return "ascii";
            if (enc === "UCS-2") return "utf16le";
            enc = `${enc}`.toLowerCase();
            if (enc === "utf-8") return "utf8";
            if (enc === "ascii") return "ascii";
            if (enc === "ucs-2") return "utf16le";
            break;
        case 6:
            if (enc === "base64") return "base64";
            if (enc === "latin1" || enc === "binary") return "latin1";
            if (enc === "BASE64") return "base64";
            if (enc === "LATIN1" || enc === "BINARY") return "latin1";
            enc = `${enc}`.toLowerCase();
            if (enc === "base64") return "base64";
            if (enc === "latin1" || enc === "binary") return "latin1";
            break;
        case 7:
            if (enc === "utf16le" || enc === "UTF16LE" || `${enc}`.toLowerCase() === "utf16le") {
                return "utf16le";
            }
            break;
        case 8:
            if (enc === "utf-16le" || enc === "UTF-16LE" || `${enc}`.toLowerCase() === "utf-16le") {
                return "utf16le";
            }
            break;
        case 9:
            if (enc === "base64url" || enc === "BASE64URL" || `${enc}`.toLowerCase() === "base64url") {
                return "base64url";
            }
            break;
        default:
            if (enc === "") return "utf8";
    }
}
new Set();
const kCustomPromisifiedSymbol = Symbol.for("nodejs.util.promisify.custom");
const kCustomPromisifyArgsSymbol = Symbol.for("nodejs.util.promisify.customArgs");
function promisify(original) {
    validateFunction(original, "original");
    if (original[kCustomPromisifiedSymbol]) {
        const fn = original[kCustomPromisifiedSymbol];
        validateFunction(fn, "util.promisify.custom");
        return Object.defineProperty(fn, kCustomPromisifiedSymbol, {
            value: fn,
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    const argumentNames = original[kCustomPromisifyArgsSymbol];
    function fn(...args) {
        return new Promise((resolve3, reject)=>{
            args.push((err, ...values)=>{
                if (err) {
                    return reject(err);
                }
                if (argumentNames !== undefined && values.length > 1) {
                    const obj = {};
                    for(let i324 = 0; i324 < argumentNames.length; i324++){
                        obj[argumentNames[i324]] = values[i324];
                    }
                    resolve3(obj);
                } else {
                    resolve3(values[0]);
                }
            });
            Reflect.apply(original, this, args);
        });
    }
    Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
        value: fn,
        enumerable: false,
        writable: false,
        configurable: true
    });
    return Object.defineProperties(fn, Object.getOwnPropertyDescriptors(original));
}
promisify.custom = kCustomPromisifiedSymbol;
let core;
if (Deno?.core) {
    core = Deno.core;
} else {
    core = {
        setNextTickCallback: undefined,
        evalContext (_code, _filename) {
            throw new Error("Deno.core.evalContext is not supported in this environment");
        },
        encode (chunk) {
            return new TextEncoder().encode(chunk);
        }
    };
}
const kSize = 2048;
const kMask = 2048 - 1;
class FixedCircularBuffer {
    bottom;
    top;
    list;
    next;
    constructor(){
        this.bottom = 0;
        this.top = 0;
        this.list = new Array(kSize);
        this.next = null;
    }
    isEmpty() {
        return this.top === this.bottom;
    }
    isFull() {
        return (this.top + 1 & kMask) === this.bottom;
    }
    push(data) {
        this.list[this.top] = data;
        this.top = this.top + 1 & kMask;
    }
    shift() {
        const nextItem = this.list[this.bottom];
        if (nextItem === undefined) {
            return null;
        }
        this.list[this.bottom] = undefined;
        this.bottom = this.bottom + 1 & kMask;
        return nextItem;
    }
}
class FixedQueue {
    head;
    tail;
    constructor(){
        this.head = this.tail = new FixedCircularBuffer();
    }
    isEmpty() {
        return this.head.isEmpty();
    }
    push(data) {
        if (this.head.isFull()) {
            this.head = this.head.next = new FixedCircularBuffer();
        }
        this.head.push(data);
    }
    shift() {
        const tail = this.tail;
        const next = tail.shift();
        if (tail.isEmpty() && tail.next !== null) {
            this.tail = tail.next;
        }
        return next;
    }
}
const queue = new FixedQueue();
if (typeof core.setNextTickCallback !== "undefined") {
    function runNextTicks() {
        if (!core.hasTickScheduled()) {
            core.runMicrotasks();
        }
        if (!core.hasTickScheduled()) {
            return true;
        }
        processTicksAndRejections();
        return true;
    }
    function processTicksAndRejections() {
        let tock;
        do {
            while(tock = queue.shift()){
                try {
                    const callback = tock.callback;
                    if (tock.args === undefined) {
                        callback();
                    } else {
                        const args = tock.args;
                        switch(args.length){
                            case 1:
                                callback(args[0]);
                                break;
                            case 2:
                                callback(args[0], args[1]);
                                break;
                            case 3:
                                callback(args[0], args[1], args[2]);
                                break;
                            case 4:
                                callback(args[0], args[1], args[2], args[3]);
                                break;
                            default:
                                callback(...args);
                        }
                    }
                } finally{}
            }
            core.runMicrotasks();
        }while (!queue.isEmpty())
        core.setHasTickScheduled(false);
    }
    core.setNextTickCallback(processTicksAndRejections);
    core.setMacrotaskCallback(runNextTicks);
} else {}
var State;
(function(State1) {
    State1[State1["PASSTHROUGH"] = 0] = "PASSTHROUGH";
    State1[State1["PERCENT"] = 1] = "PERCENT";
    State1[State1["POSITIONAL"] = 2] = "POSITIONAL";
    State1[State1["PRECISION"] = 3] = "PRECISION";
    State1[State1["WIDTH"] = 4] = "WIDTH";
})(State || (State = {}));
var WorP;
(function(WorP1) {
    WorP1[WorP1["WIDTH"] = 0] = "WIDTH";
    WorP1[WorP1["PRECISION"] = 1] = "PRECISION";
})(WorP || (WorP = {}));
var F5;
(function(F32) {
    F32[F32["sign"] = 1] = "sign";
    F32[F32["mantissa"] = 2] = "mantissa";
    F32[F32["fractional"] = 3] = "fractional";
    F32[F32["esign"] = 4] = "esign";
    F32[F32["exponent"] = 5] = "exponent";
})(F5 || (F5 = {}));
const { Deno: Deno1  } = globalThis;
typeof Deno1?.noColor === "boolean" ? Deno1.noColor : true;
new RegExp([
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))", 
].join("|"), "g");
var DiffType;
(function(DiffType1) {
    DiffType1["removed"] = "removed";
    DiffType1["common"] = "common";
    DiffType1["added"] = "added";
})(DiffType || (DiffType = {}));
class AssertionError extends Error {
    name = "AssertionError";
    constructor(message){
        super(message);
    }
}
function unreachable() {
    throw new AssertionError("unreachable");
}
class DenoStdInternalError extends Error {
    constructor(message){
        super(message);
        this.name = "DenoStdInternalError";
    }
}
function assert(expr, msg = "") {
    if (!expr) {
        throw new DenoStdInternalError(msg);
    }
}
function indexOf(source, pattern, fromIndex = 0) {
    if (fromIndex >= source.length) {
        return -1;
    }
    if (fromIndex < 0) {
        fromIndex = Math.max(0, source.length + fromIndex);
    }
    const s240 = pattern[0];
    for(let i325 = fromIndex; i325 < source.length; i325++){
        if (source[i325] !== s240) continue;
        const pin = i325;
        let matched = 1;
        let j40 = i325;
        while(matched < pattern.length){
            j40++;
            if (source[j40] !== pattern[j40 - pin]) {
                break;
            }
            matched++;
        }
        if (matched === pattern.length) {
            return pin;
        }
    }
    return -1;
}
function copy(src, dst, off = 0) {
    off = Math.max(0, Math.min(off, dst.byteLength));
    const dstBytesAvailable = dst.byteLength - off;
    if (src.byteLength > dstBytesAvailable) {
        src = src.subarray(0, dstBytesAvailable);
    }
    dst.set(src, off);
    return src.byteLength;
}
const DEFAULT_BUF_SIZE = 4096;
const MIN_BUF_SIZE = 16;
const CR = "\r".charCodeAt(0);
const LF = "\n".charCodeAt(0);
class BufferFullError extends Error {
    name;
    constructor(partial){
        super("Buffer full");
        this.partial = partial;
        this.name = "BufferFullError";
    }
    partial;
}
class PartialReadError extends Error {
    name = "PartialReadError";
    partial;
    constructor(){
        super("Encountered UnexpectedEof, data only partially read");
    }
}
class BufReader {
    #buf;
    #rd;
    #r = 0;
    #w = 0;
    #eof = false;
    static create(r345, size = 4096) {
        return r345 instanceof BufReader ? r345 : new BufReader(r345, size);
    }
    constructor(rd1, size = 4096){
        if (size < 16) {
            size = MIN_BUF_SIZE;
        }
        this.#reset(new Uint8Array(size), rd1);
    }
    size() {
        return this.#buf.byteLength;
    }
    buffered() {
        return this.#w - this.#r;
    }
    #fill = async ()=>{
        if (this.#r > 0) {
            this.#buf.copyWithin(0, this.#r, this.#w);
            this.#w -= this.#r;
            this.#r = 0;
        }
        if (this.#w >= this.#buf.byteLength) {
            throw Error("bufio: tried to fill full buffer");
        }
        for(let i326 = 100; i326 > 0; i326--){
            const rr3 = await this.#rd.read(this.#buf.subarray(this.#w));
            if (rr3 === null) {
                this.#eof = true;
                return;
            }
            assert(rr3 >= 0, "negative read");
            this.#w += rr3;
            if (rr3 > 0) {
                return;
            }
        }
        throw new Error(`No progress after ${100} read() calls`);
    };
    reset(r346) {
        this.#reset(this.#buf, r346);
    }
    #reset = (buf, rd2)=>{
        this.#buf = buf;
        this.#rd = rd2;
        this.#eof = false;
    };
    async read(p132) {
        let rr4 = p132.byteLength;
        if (p132.byteLength === 0) return rr4;
        if (this.#r === this.#w) {
            if (p132.byteLength >= this.#buf.byteLength) {
                const rr5 = await this.#rd.read(p132);
                const nread = rr5 ?? 0;
                assert(nread >= 0, "negative read");
                return rr5;
            }
            this.#r = 0;
            this.#w = 0;
            rr4 = await this.#rd.read(this.#buf);
            if (rr4 === 0 || rr4 === null) return rr4;
            assert(rr4 >= 0, "negative read");
            this.#w += rr4;
        }
        const copied = copy(this.#buf.subarray(this.#r, this.#w), p132, 0);
        this.#r += copied;
        return copied;
    }
    async readFull(p133) {
        let bytesRead = 0;
        while(bytesRead < p133.length){
            try {
                const rr6 = await this.read(p133.subarray(bytesRead));
                if (rr6 === null) {
                    if (bytesRead === 0) {
                        return null;
                    } else {
                        throw new PartialReadError();
                    }
                }
                bytesRead += rr6;
            } catch (err) {
                if (err instanceof PartialReadError) {
                    err.partial = p133.subarray(0, bytesRead);
                } else if (err instanceof Error) {
                    const e755 = new PartialReadError();
                    e755.partial = p133.subarray(0, bytesRead);
                    e755.stack = err.stack;
                    e755.message = err.message;
                    e755.cause = err.cause;
                    throw err;
                }
                throw err;
            }
        }
        return p133;
    }
    async readByte() {
        while(this.#r === this.#w){
            if (this.#eof) return null;
            await this.#fill();
        }
        const c100 = this.#buf[this.#r];
        this.#r++;
        return c100;
    }
    async readString(delim) {
        if (delim.length !== 1) {
            throw new Error("Delimiter should be a single character");
        }
        const buffer = await this.readSlice(delim.charCodeAt(0));
        if (buffer === null) return null;
        return new TextDecoder().decode(buffer);
    }
    async readLine() {
        let line = null;
        try {
            line = await this.readSlice(LF);
        } catch (err) {
            if (err instanceof Deno.errors.BadResource) {
                throw err;
            }
            let partial;
            if (err instanceof PartialReadError) {
                partial = err.partial;
                assert(partial instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
            }
            if (!(err instanceof BufferFullError)) {
                throw err;
            }
            partial = err.partial;
            if (!this.#eof && partial && partial.byteLength > 0 && partial[partial.byteLength - 1] === CR) {
                assert(this.#r > 0, "bufio: tried to rewind past start of buffer");
                this.#r--;
                partial = partial.subarray(0, partial.byteLength - 1);
            }
            if (partial) {
                return {
                    line: partial,
                    more: !this.#eof
                };
            }
        }
        if (line === null) {
            return null;
        }
        if (line.byteLength === 0) {
            return {
                line,
                more: false
            };
        }
        if (line[line.byteLength - 1] == LF) {
            let drop = 1;
            if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {
                drop = 2;
            }
            line = line.subarray(0, line.byteLength - drop);
        }
        return {
            line,
            more: false
        };
    }
    async readSlice(delim) {
        let s241 = 0;
        let slice;
        while(true){
            let i327 = this.#buf.subarray(this.#r + s241, this.#w).indexOf(delim);
            if (i327 >= 0) {
                i327 += s241;
                slice = this.#buf.subarray(this.#r, this.#r + i327 + 1);
                this.#r += i327 + 1;
                break;
            }
            if (this.#eof) {
                if (this.#r === this.#w) {
                    return null;
                }
                slice = this.#buf.subarray(this.#r, this.#w);
                this.#r = this.#w;
                break;
            }
            if (this.buffered() >= this.#buf.byteLength) {
                this.#r = this.#w;
                const oldbuf = this.#buf;
                const newbuf = this.#buf.slice(0);
                this.#buf = newbuf;
                throw new BufferFullError(oldbuf);
            }
            s241 = this.#w - this.#r;
            try {
                await this.#fill();
            } catch (err) {
                if (err instanceof PartialReadError) {
                    err.partial = slice;
                } else if (err instanceof Error) {
                    const e756 = new PartialReadError();
                    e756.partial = slice;
                    e756.stack = err.stack;
                    e756.message = err.message;
                    e756.cause = err.cause;
                    throw err;
                }
                throw err;
            }
        }
        return slice;
    }
    async peek(n610) {
        if (n610 < 0) {
            throw Error("negative count");
        }
        let avail = this.#w - this.#r;
        while(avail < n610 && avail < this.#buf.byteLength && !this.#eof){
            try {
                await this.#fill();
            } catch (err) {
                if (err instanceof PartialReadError) {
                    err.partial = this.#buf.subarray(this.#r, this.#w);
                } else if (err instanceof Error) {
                    const e757 = new PartialReadError();
                    e757.partial = this.#buf.subarray(this.#r, this.#w);
                    e757.stack = err.stack;
                    e757.message = err.message;
                    e757.cause = err.cause;
                    throw err;
                }
                throw err;
            }
            avail = this.#w - this.#r;
        }
        if (avail === 0 && this.#eof) {
            return null;
        } else if (avail < n610 && this.#eof) {
            return this.#buf.subarray(this.#r, this.#r + avail);
        } else if (avail < n610) {
            throw new BufferFullError(this.#buf.subarray(this.#r, this.#w));
        }
        return this.#buf.subarray(this.#r, this.#r + n610);
    }
}
class AbstractBufBase {
    buf;
    usedBufferBytes = 0;
    err = null;
    constructor(buf){
        this.buf = buf;
    }
    size() {
        return this.buf.byteLength;
    }
    available() {
        return this.buf.byteLength - this.usedBufferBytes;
    }
    buffered() {
        return this.usedBufferBytes;
    }
}
class BufWriter extends AbstractBufBase {
    #writer;
    static create(writer, size = 4096) {
        return writer instanceof BufWriter ? writer : new BufWriter(writer, size);
    }
    constructor(writer, size = 4096){
        if (size <= 0) {
            size = DEFAULT_BUF_SIZE;
        }
        const buf = new Uint8Array(size);
        super(buf);
        this.#writer = writer;
    }
    reset(w49) {
        this.err = null;
        this.usedBufferBytes = 0;
        this.#writer = w49;
    }
    async flush() {
        if (this.err !== null) throw this.err;
        if (this.usedBufferBytes === 0) return;
        try {
            const p134 = this.buf.subarray(0, this.usedBufferBytes);
            let nwritten = 0;
            while(nwritten < p134.length){
                nwritten += await this.#writer.write(p134.subarray(nwritten));
            }
        } catch (e758) {
            if (e758 instanceof Error) {
                this.err = e758;
            }
            throw e758;
        }
        this.buf = new Uint8Array(this.buf.length);
        this.usedBufferBytes = 0;
    }
    async write(data) {
        if (this.err !== null) throw this.err;
        if (data.length === 0) return 0;
        let totalBytesWritten = 0;
        let numBytesWritten = 0;
        while(data.byteLength > this.available()){
            if (this.buffered() === 0) {
                try {
                    numBytesWritten = await this.#writer.write(data);
                } catch (e759) {
                    if (e759 instanceof Error) {
                        this.err = e759;
                    }
                    throw e759;
                }
            } else {
                numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
                this.usedBufferBytes += numBytesWritten;
                await this.flush();
            }
            totalBytesWritten += numBytesWritten;
            data = data.subarray(numBytesWritten);
        }
        numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
        this.usedBufferBytes += numBytesWritten;
        totalBytesWritten += numBytesWritten;
        return totalBytesWritten;
    }
}
class BufWriterSync extends AbstractBufBase {
    #writer;
    static create(writer, size = 4096) {
        return writer instanceof BufWriterSync ? writer : new BufWriterSync(writer, size);
    }
    constructor(writer, size = 4096){
        if (size <= 0) {
            size = DEFAULT_BUF_SIZE;
        }
        const buf = new Uint8Array(size);
        super(buf);
        this.#writer = writer;
    }
    reset(w50) {
        this.err = null;
        this.usedBufferBytes = 0;
        this.#writer = w50;
    }
    flush() {
        if (this.err !== null) throw this.err;
        if (this.usedBufferBytes === 0) return;
        try {
            const p135 = this.buf.subarray(0, this.usedBufferBytes);
            let nwritten = 0;
            while(nwritten < p135.length){
                nwritten += this.#writer.writeSync(p135.subarray(nwritten));
            }
        } catch (e760) {
            if (e760 instanceof Error) {
                this.err = e760;
            }
            throw e760;
        }
        this.buf = new Uint8Array(this.buf.length);
        this.usedBufferBytes = 0;
    }
    writeSync(data) {
        if (this.err !== null) throw this.err;
        if (data.length === 0) return 0;
        let totalBytesWritten = 0;
        let numBytesWritten = 0;
        while(data.byteLength > this.available()){
            if (this.buffered() === 0) {
                try {
                    numBytesWritten = this.#writer.writeSync(data);
                } catch (e761) {
                    if (e761 instanceof Error) {
                        this.err = e761;
                    }
                    throw e761;
                }
            } else {
                numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
                this.usedBufferBytes += numBytesWritten;
                this.flush();
            }
            totalBytesWritten += numBytesWritten;
            data = data.subarray(numBytesWritten);
        }
        numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
        this.usedBufferBytes += numBytesWritten;
        totalBytesWritten += numBytesWritten;
        return totalBytesWritten;
    }
}
TextDecoder;
TextEncoder;
const isNumericLookup = {};
function isArrayIndex(value) {
    switch(typeof value){
        case "number":
            return value >= 0 && (value | 0) === value;
        case "string":
            {
                const result = isNumericLookup[value];
                if (result !== void 0) {
                    return result;
                }
                const length = value.length;
                if (length === 0) {
                    return isNumericLookup[value] = false;
                }
                let ch = 0;
                let i328 = 0;
                for(; i328 < length; ++i328){
                    ch = value.charCodeAt(i328);
                    if (i328 === 0 && ch === 0x30 && length > 1 || ch < 0x30 || ch > 0x39) {
                        return isNumericLookup[value] = false;
                    }
                }
                return isNumericLookup[value] = true;
            }
        default:
            return false;
    }
}
function getOwnNonIndexProperties(obj, filter) {
    let allProperties = [
        ...Object.getOwnPropertyNames(obj),
        ...Object.getOwnPropertySymbols(obj), 
    ];
    if (Array.isArray(obj)) {
        allProperties = allProperties.filter((k47)=>!isArrayIndex(k47));
    }
    if (filter === 0) {
        return allProperties;
    }
    const result = [];
    for (const key of allProperties){
        const desc = Object.getOwnPropertyDescriptor(obj, key);
        if (desc === undefined) {
            continue;
        }
        if (filter & 1 && !desc.writable) {
            continue;
        }
        if (filter & 2 && !desc.enumerable) {
            continue;
        }
        if (filter & 4 && !desc.configurable) {
            continue;
        }
        if (filter & 8 && typeof key === "string") {
            continue;
        }
        if (filter & 16 && typeof key === "symbol") {
            continue;
        }
        result.push(key);
    }
    return result;
}
const kObjectType = 0;
const kArrayExtrasType = 2;
const kRejected = 2;
const meta = [
    '\\x00',
    '\\x01',
    '\\x02',
    '\\x03',
    '\\x04',
    '\\x05',
    '\\x06',
    '\\x07',
    '\\b',
    '\\t',
    '\\n',
    '\\x0B',
    '\\f',
    '\\r',
    '\\x0E',
    '\\x0F',
    '\\x10',
    '\\x11',
    '\\x12',
    '\\x13',
    '\\x14',
    '\\x15',
    '\\x16',
    '\\x17',
    '\\x18',
    '\\x19',
    '\\x1A',
    '\\x1B',
    '\\x1C',
    '\\x1D',
    '\\x1E',
    '\\x1F',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    "\\'",
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '\\\\',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '',
    '\\x7F',
    '\\x80',
    '\\x81',
    '\\x82',
    '\\x83',
    '\\x84',
    '\\x85',
    '\\x86',
    '\\x87',
    '\\x88',
    '\\x89',
    '\\x8A',
    '\\x8B',
    '\\x8C',
    '\\x8D',
    '\\x8E',
    '\\x8F',
    '\\x90',
    '\\x91',
    '\\x92',
    '\\x93',
    '\\x94',
    '\\x95',
    '\\x96',
    '\\x97',
    '\\x98',
    '\\x99',
    '\\x9A',
    '\\x9B',
    '\\x9C',
    '\\x9D',
    '\\x9E',
    '\\x9F'
];
const isUndetectableObject = (v42)=>typeof v42 === "undefined" && v42 !== undefined;
const strEscapeSequencesRegExp = /[\x00-\x1f\x27\x5c\x7f-\x9f]/;
const strEscapeSequencesReplacer = /[\x00-\x1f\x27\x5c\x7f-\x9f]/g;
const strEscapeSequencesRegExpSingle = /[\x00-\x1f\x5c\x7f-\x9f]/;
const strEscapeSequencesReplacerSingle = /[\x00-\x1f\x5c\x7f-\x9f]/g;
const keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;
const numberRegExp = /^(0|[1-9][0-9]*)$/;
const nodeModulesRegExp = /[/\\]node_modules[/\\](.+?)(?=[/\\])/g;
const classRegExp = /^(\s+[^(]*?)\s*{/;
const stripCommentsRegExp = /(\/\/.*?\n)|(\/\*(.|\n)*?\*\/)/g;
const inspectDefaultOptions = {
    showHidden: false,
    depth: 2,
    colors: false,
    customInspect: true,
    showProxy: false,
    maxArrayLength: 100,
    maxStringLength: 10000,
    breakLength: 80,
    compact: 3,
    sorted: false,
    getters: false
};
function getUserOptions(ctx, isCrossContext) {
    const ret = {
        stylize: ctx.stylize,
        showHidden: ctx.showHidden,
        depth: ctx.depth,
        colors: ctx.colors,
        customInspect: ctx.customInspect,
        showProxy: ctx.showProxy,
        maxArrayLength: ctx.maxArrayLength,
        maxStringLength: ctx.maxStringLength,
        breakLength: ctx.breakLength,
        compact: ctx.compact,
        sorted: ctx.sorted,
        getters: ctx.getters,
        ...ctx.userOptions
    };
    if (isCrossContext) {
        Object.setPrototypeOf(ret, null);
        for (const key of Object.keys(ret)){
            if ((typeof ret[key] === "object" || typeof ret[key] === "function") && ret[key] !== null) {
                delete ret[key];
            }
        }
        ret.stylize = Object.setPrototypeOf((value, flavour)=>{
            let stylized;
            try {
                stylized = `${ctx.stylize(value, flavour)}`;
            } catch  {}
            if (typeof stylized !== "string") return value;
            return stylized;
        }, null);
    }
    return ret;
}
function inspect(value, opts) {
    const ctx = {
        budget: {},
        indentationLvl: 0,
        seen: [],
        currentDepth: 0,
        stylize: stylizeNoColor,
        showHidden: inspectDefaultOptions.showHidden,
        depth: inspectDefaultOptions.depth,
        colors: inspectDefaultOptions.colors,
        customInspect: inspectDefaultOptions.customInspect,
        showProxy: inspectDefaultOptions.showProxy,
        maxArrayLength: inspectDefaultOptions.maxArrayLength,
        maxStringLength: inspectDefaultOptions.maxStringLength,
        breakLength: inspectDefaultOptions.breakLength,
        compact: inspectDefaultOptions.compact,
        sorted: inspectDefaultOptions.sorted,
        getters: inspectDefaultOptions.getters
    };
    if (arguments.length > 1) {
        if (arguments.length > 2) {
            if (arguments[2] !== undefined) {
                ctx.depth = arguments[2];
            }
            if (arguments.length > 3 && arguments[3] !== undefined) {
                ctx.colors = arguments[3];
            }
        }
        if (typeof opts === "boolean") {
            ctx.showHidden = opts;
        } else if (opts) {
            const optKeys = Object.keys(opts);
            for(let i329 = 0; i329 < optKeys.length; ++i329){
                const key = optKeys[i329];
                if (inspectDefaultOptions.hasOwnProperty(key) || key === "stylize") {
                    ctx[key] = opts[key];
                } else if (ctx.userOptions === undefined) {
                    ctx.userOptions = opts;
                }
            }
        }
    }
    if (ctx.colors) ctx.stylize = stylizeWithColor;
    if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;
    if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;
    return formatValue(ctx, value, 0);
}
const customInspectSymbol = Symbol.for("nodejs.util.inspect.custom");
inspect.custom = customInspectSymbol;
Object.defineProperty(inspect, "defaultOptions", {
    get () {
        return inspectDefaultOptions;
    },
    set (options) {
        validateObject(options, "options");
        return Object.assign(inspectDefaultOptions, options);
    }
});
const defaultFG = 39;
const defaultBG = 49;
inspect.colors = Object.assign(Object.create(null), {
    reset: [
        0,
        0
    ],
    bold: [
        1,
        22
    ],
    dim: [
        2,
        22
    ],
    italic: [
        3,
        23
    ],
    underline: [
        4,
        24
    ],
    blink: [
        5,
        25
    ],
    inverse: [
        7,
        27
    ],
    hidden: [
        8,
        28
    ],
    strikethrough: [
        9,
        29
    ],
    doubleunderline: [
        21,
        24
    ],
    black: [
        30,
        defaultFG
    ],
    red: [
        31,
        defaultFG
    ],
    green: [
        32,
        defaultFG
    ],
    yellow: [
        33,
        defaultFG
    ],
    blue: [
        34,
        defaultFG
    ],
    magenta: [
        35,
        defaultFG
    ],
    cyan: [
        36,
        defaultFG
    ],
    white: [
        37,
        defaultFG
    ],
    bgBlack: [
        40,
        defaultBG
    ],
    bgRed: [
        41,
        defaultBG
    ],
    bgGreen: [
        42,
        defaultBG
    ],
    bgYellow: [
        43,
        defaultBG
    ],
    bgBlue: [
        44,
        defaultBG
    ],
    bgMagenta: [
        45,
        defaultBG
    ],
    bgCyan: [
        46,
        defaultBG
    ],
    bgWhite: [
        47,
        defaultBG
    ],
    framed: [
        51,
        54
    ],
    overlined: [
        53,
        55
    ],
    gray: [
        90,
        defaultFG
    ],
    redBright: [
        91,
        defaultFG
    ],
    greenBright: [
        92,
        defaultFG
    ],
    yellowBright: [
        93,
        defaultFG
    ],
    blueBright: [
        94,
        defaultFG
    ],
    magentaBright: [
        95,
        defaultFG
    ],
    cyanBright: [
        96,
        defaultFG
    ],
    whiteBright: [
        97,
        defaultFG
    ],
    bgGray: [
        100,
        defaultBG
    ],
    bgRedBright: [
        101,
        defaultBG
    ],
    bgGreenBright: [
        102,
        defaultBG
    ],
    bgYellowBright: [
        103,
        defaultBG
    ],
    bgBlueBright: [
        104,
        defaultBG
    ],
    bgMagentaBright: [
        105,
        defaultBG
    ],
    bgCyanBright: [
        106,
        defaultBG
    ],
    bgWhiteBright: [
        107,
        defaultBG
    ]
});
function defineColorAlias(target, alias) {
    Object.defineProperty(inspect.colors, alias, {
        get () {
            return this[target];
        },
        set (value) {
            this[target] = value;
        },
        configurable: true,
        enumerable: false
    });
}
defineColorAlias("gray", "grey");
defineColorAlias("gray", "blackBright");
defineColorAlias("bgGray", "bgGrey");
defineColorAlias("bgGray", "bgBlackBright");
defineColorAlias("dim", "faint");
defineColorAlias("strikethrough", "crossedout");
defineColorAlias("strikethrough", "strikeThrough");
defineColorAlias("strikethrough", "crossedOut");
defineColorAlias("hidden", "conceal");
defineColorAlias("inverse", "swapColors");
defineColorAlias("inverse", "swapcolors");
defineColorAlias("doubleunderline", "doubleUnderline");
inspect.styles = Object.assign(Object.create(null), {
    special: "cyan",
    number: "yellow",
    bigint: "yellow",
    boolean: "yellow",
    undefined: "grey",
    null: "bold",
    string: "green",
    symbol: "green",
    date: "magenta",
    regexp: "red",
    module: "underline"
});
function addQuotes(str, quotes) {
    if (quotes === -1) {
        return `"${str}"`;
    }
    if (quotes === -2) {
        return `\`${str}\``;
    }
    return `'${str}'`;
}
const escapeFn = (str)=>meta[str.charCodeAt(0)];
function strEscape(str) {
    let escapeTest = strEscapeSequencesRegExp;
    let escapeReplace = strEscapeSequencesReplacer;
    let singleQuote = 39;
    if (str.includes("'")) {
        if (!str.includes('"')) {
            singleQuote = -1;
        } else if (!str.includes("`") && !str.includes("${")) {
            singleQuote = -2;
        }
        if (singleQuote !== 39) {
            escapeTest = strEscapeSequencesRegExpSingle;
            escapeReplace = strEscapeSequencesReplacerSingle;
        }
    }
    if (str.length < 5000 && !escapeTest.test(str)) {
        return addQuotes(str, singleQuote);
    }
    if (str.length > 100) {
        str = str.replace(escapeReplace, escapeFn);
        return addQuotes(str, singleQuote);
    }
    let result = "";
    let last = 0;
    const lastIndex = str.length;
    for(let i330 = 0; i330 < lastIndex; i330++){
        const point = str.charCodeAt(i330);
        if (point === singleQuote || point === 92 || point < 32 || point > 126 && point < 160) {
            if (last === i330) {
                result += meta[point];
            } else {
                result += `${str.slice(last, i330)}${meta[point]}`;
            }
            last = i330 + 1;
        }
    }
    if (last !== lastIndex) {
        result += str.slice(last);
    }
    return addQuotes(result, singleQuote);
}
function stylizeWithColor(str, styleType) {
    const style = inspect.styles[styleType];
    if (style !== undefined) {
        const color = inspect.colors[style];
        if (color !== undefined) {
            return `\u001b[${color[0]}m${str}\u001b[${color[1]}m`;
        }
    }
    return str;
}
function stylizeNoColor(str) {
    return str;
}
function formatValue(ctx, value, recurseTimes, typedArray) {
    if (typeof value !== "object" && typeof value !== "function" && !isUndetectableObject(value)) {
        return formatPrimitive(ctx.stylize, value, ctx);
    }
    if (value === null) {
        return ctx.stylize("null", "null");
    }
    const context = value;
    const proxy = undefined;
    if (ctx.customInspect) {
        const maybeCustom = value[customInspectSymbol];
        if (typeof maybeCustom === "function" && maybeCustom !== inspect && !(value.constructor && value.constructor.prototype === value)) {
            const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;
            const isCrossContext = proxy !== undefined || !(context instanceof Object);
            const ret = maybeCustom.call(context, depth, getUserOptions(ctx, isCrossContext));
            if (ret !== context) {
                if (typeof ret !== "string") {
                    return formatValue(ctx, ret, recurseTimes);
                }
                return ret.replace(/\n/g, `\n${" ".repeat(ctx.indentationLvl)}`);
            }
        }
    }
    if (ctx.seen.includes(value)) {
        let index = 1;
        if (ctx.circular === undefined) {
            ctx.circular = new Map();
            ctx.circular.set(value, index);
        } else {
            index = ctx.circular.get(value);
            if (index === undefined) {
                index = ctx.circular.size + 1;
                ctx.circular.set(value, index);
            }
        }
        return ctx.stylize(`[Circular *${index}]`, "special");
    }
    return formatRaw(ctx, value, recurseTimes, typedArray);
}
function formatRaw(ctx, value, recurseTimes, typedArray) {
    let keys;
    let protoProps;
    if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {
        protoProps = [];
    }
    const constructor = getConstructorName(value, ctx, recurseTimes, protoProps);
    if (protoProps !== undefined && protoProps.length === 0) {
        protoProps = undefined;
    }
    let tag = value[Symbol.toStringTag];
    if (typeof tag !== "string") {
        tag = "";
    }
    let base1 = "";
    let formatter = getEmptyFormatArray;
    let braces;
    let noIterator = true;
    let i331 = 0;
    const filter = ctx.showHidden ? 0 : 2;
    let extrasType = 0;
    if (value[Symbol.iterator] || constructor === null) {
        noIterator = false;
        if (Array.isArray(value)) {
            const prefix = constructor !== "Array" || tag !== "" ? getPrefix(constructor, tag, "Array", `(${value.length})`) : "";
            keys = getOwnNonIndexProperties(value, filter);
            braces = [
                `${prefix}[`,
                "]"
            ];
            if (value.length === 0 && keys.length === 0 && protoProps === undefined) {
                return `${braces[0]}]`;
            }
            extrasType = kArrayExtrasType;
            formatter = formatArray;
        } else if (isSet1(value)) {
            const size = value.size;
            const prefix = getPrefix(constructor, tag, "Set", `(${size})`);
            keys = getKeys(value, ctx.showHidden);
            formatter = constructor !== null ? formatSet.bind(null, value) : formatSet.bind(null, value.values());
            if (size === 0 && keys.length === 0 && protoProps === undefined) {
                return `${prefix}{}`;
            }
            braces = [
                `${prefix}{`,
                "}"
            ];
        } else if (isMap1(value)) {
            const size = value.size;
            const prefix = getPrefix(constructor, tag, "Map", `(${size})`);
            keys = getKeys(value, ctx.showHidden);
            formatter = constructor !== null ? formatMap.bind(null, value) : formatMap.bind(null, value.entries());
            if (size === 0 && keys.length === 0 && protoProps === undefined) {
                return `${prefix}{}`;
            }
            braces = [
                `${prefix}{`,
                "}"
            ];
        } else if (isTypedArray(value)) {
            keys = getOwnNonIndexProperties(value, filter);
            const bound = value;
            const fallback = "";
            const size = value.length;
            const prefix = getPrefix(constructor, tag, fallback, `(${size})`);
            braces = [
                `${prefix}[`,
                "]"
            ];
            if (value.length === 0 && keys.length === 0 && !ctx.showHidden) {
                return `${braces[0]}]`;
            }
            formatter = formatTypedArray.bind(null, bound, size);
            extrasType = kArrayExtrasType;
        } else if (isMapIterator1(value)) {
            keys = getKeys(value, ctx.showHidden);
            braces = getIteratorBraces("Map", tag);
            formatter = formatIterator.bind(null, braces);
        } else if (isSetIterator1(value)) {
            keys = getKeys(value, ctx.showHidden);
            braces = getIteratorBraces("Set", tag);
            formatter = formatIterator.bind(null, braces);
        } else {
            noIterator = true;
        }
    }
    if (noIterator) {
        keys = getKeys(value, ctx.showHidden);
        braces = [
            "{",
            "}"
        ];
        if (constructor === "Object") {
            if (isArgumentsObject1(value)) {
                braces[0] = "[Arguments] {";
            } else if (tag !== "") {
                braces[0] = `${getPrefix(constructor, tag, "Object")}{`;
            }
            if (keys.length === 0 && protoProps === undefined) {
                return `${braces[0]}}`;
            }
        } else if (typeof value === "function") {
            base1 = getFunctionBase(value, constructor, tag);
            if (keys.length === 0 && protoProps === undefined) {
                return ctx.stylize(base1, "special");
            }
        } else if (isRegExp1(value)) {
            base1 = RegExp(constructor !== null ? value : new RegExp(value)).toString();
            const prefix = getPrefix(constructor, tag, "RegExp");
            if (prefix !== "RegExp ") {
                base1 = `${prefix}${base1}`;
            }
            if (keys.length === 0 && protoProps === undefined || recurseTimes > ctx.depth && ctx.depth !== null) {
                return ctx.stylize(base1, "regexp");
            }
        } else if (isDate1(value)) {
            base1 = Number.isNaN(value.getTime()) ? value.toString() : value.toISOString();
            const prefix = getPrefix(constructor, tag, "Date");
            if (prefix !== "Date ") {
                base1 = `${prefix}${base1}`;
            }
            if (keys.length === 0 && protoProps === undefined) {
                return ctx.stylize(base1, "date");
            }
        } else if (value instanceof Error) {
            base1 = formatError(value, constructor, tag, ctx, keys);
            if (keys.length === 0 && protoProps === undefined) {
                return base1;
            }
        } else if (isAnyArrayBuffer1(value)) {
            const arrayType = isArrayBuffer1(value) ? "ArrayBuffer" : "SharedArrayBuffer";
            const prefix = getPrefix(constructor, tag, arrayType);
            if (typedArray === undefined) {
                formatter = formatArrayBuffer;
            } else if (keys.length === 0 && protoProps === undefined) {
                return prefix + `{ byteLength: ${formatNumber(ctx.stylize, value.byteLength)} }`;
            }
            braces[0] = `${prefix}{`;
            Array.prototype.unshift(keys, "byteLength");
        } else if (isDataView1(value)) {
            braces[0] = `${getPrefix(constructor, tag, "DataView")}{`;
            Array.prototype.unshift(keys, "byteLength", "byteOffset", "buffer");
        } else if (isPromise1(value)) {
            braces[0] = `${getPrefix(constructor, tag, "Promise")}{`;
            formatter = formatPromise;
        } else if (isWeakSet1(value)) {
            braces[0] = `${getPrefix(constructor, tag, "WeakSet")}{`;
            formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;
        } else if (isWeakMap1(value)) {
            braces[0] = `${getPrefix(constructor, tag, "WeakMap")}{`;
            formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;
        } else if (isModuleNamespaceObject1(value)) {
            braces[0] = `${getPrefix(constructor, tag, "Module")}{`;
            formatter = formatNamespaceObject.bind(null, keys);
        } else if (isBoxedPrimitive1(value)) {
            base1 = getBoxedBase(value, ctx, keys, constructor, tag);
            if (keys.length === 0 && protoProps === undefined) {
                return base1;
            }
        } else {
            if (keys.length === 0 && protoProps === undefined) {
                return `${getCtxStyle(value, constructor, tag)}{}`;
            }
            braces[0] = `${getCtxStyle(value, constructor, tag)}{`;
        }
    }
    if (recurseTimes > ctx.depth && ctx.depth !== null) {
        let constructorName = getCtxStyle(value, constructor, tag).slice(0, -1);
        if (constructor !== null) {
            constructorName = `[${constructorName}]`;
        }
        return ctx.stylize(constructorName, "special");
    }
    recurseTimes += 1;
    ctx.seen.push(value);
    ctx.currentDepth = recurseTimes;
    let output;
    const indentationLvl = ctx.indentationLvl;
    try {
        output = formatter(ctx, value, recurseTimes);
        for(i331 = 0; i331 < keys.length; i331++){
            output.push(formatProperty(ctx, value, recurseTimes, keys[i331], extrasType));
        }
        if (protoProps !== undefined) {
            output.push(...protoProps);
        }
    } catch (err) {
        const constructorName = getCtxStyle(value, constructor, tag).slice(0, -1);
        return handleMaxCallStackSize(ctx, err, constructorName, indentationLvl);
    }
    if (ctx.circular !== undefined) {
        const index = ctx.circular.get(value);
        if (index !== undefined) {
            const reference = ctx.stylize(`<ref *${index}>`, "special");
            if (ctx.compact !== true) {
                base1 = base1 === "" ? reference : `${reference} ${base1}`;
            } else {
                braces[0] = `${reference} ${braces[0]}`;
            }
        }
    }
    ctx.seen.pop();
    if (ctx.sorted) {
        const comparator = ctx.sorted === true ? undefined : ctx.sorted;
        if (extrasType === 0) {
            output = output.sort(comparator);
        } else if (keys.length > 1) {
            const sorted = output.slice(output.length - keys.length).sort(comparator);
            output.splice(output.length - keys.length, keys.length, ...sorted);
        }
    }
    const res = reduceToSingleString(ctx, output, base1, braces, extrasType, recurseTimes, value);
    const budget = ctx.budget[ctx.indentationLvl] || 0;
    const newLength = budget + res.length;
    ctx.budget[ctx.indentationLvl] = newLength;
    if (newLength > 2 ** 27) {
        ctx.depth = -1;
    }
    return res;
}
const builtInObjects = new Set(Object.getOwnPropertyNames(globalThis).filter((e762)=>/^[A-Z][a-zA-Z0-9]+$/.test(e762)));
function addPrototypeProperties(ctx, main, obj, recurseTimes, output) {
    let depth = 0;
    let keys;
    let keySet;
    do {
        if (depth !== 0 || main === obj) {
            obj = Object.getPrototypeOf(obj);
            if (obj === null) {
                return;
            }
            const descriptor = Object.getOwnPropertyDescriptor(obj, "constructor");
            if (descriptor !== undefined && typeof descriptor.value === "function" && builtInObjects.has(descriptor.value.name)) {
                return;
            }
        }
        if (depth === 0) {
            keySet = new Set();
        } else {
            Array.prototype.forEach(keys, (key)=>keySet.add(key));
        }
        keys = Reflect.ownKeys(obj);
        Array.prototype.push(ctx.seen, main);
        for (const key1 of keys){
            if (key1 === "constructor" || main.hasOwnProperty(key1) || depth !== 0 && keySet.has(key1)) {
                continue;
            }
            const desc = Object.getOwnPropertyDescriptor(obj, key1);
            if (typeof desc.value === "function") {
                continue;
            }
            const value = formatProperty(ctx, obj, recurseTimes, key1, 0, desc, main);
            if (ctx.colors) {
                Array.prototype.push(output, `\u001b[2m${value}\u001b[22m`);
            } else {
                Array.prototype.push(output, value);
            }
        }
        Array.prototype.pop(ctx.seen);
    }while (++depth !== 3)
}
function getConstructorName(obj, ctx, recurseTimes, protoProps) {
    let firstProto;
    const tmp = obj;
    while(obj || isUndetectableObject(obj)){
        const descriptor = Object.getOwnPropertyDescriptor(obj, "constructor");
        if (descriptor !== undefined && typeof descriptor.value === "function" && descriptor.value.name !== "" && isInstanceof(tmp, descriptor.value)) {
            if (protoProps !== undefined && (firstProto !== obj || !builtInObjects.has(descriptor.value.name))) {
                addPrototypeProperties(ctx, tmp, firstProto || tmp, recurseTimes, protoProps);
            }
            return descriptor.value.name;
        }
        obj = Object.getPrototypeOf(obj);
        if (firstProto === undefined) {
            firstProto = obj;
        }
    }
    if (firstProto === null) {
        return null;
    }
    const res = undefined;
    if (recurseTimes > ctx.depth && ctx.depth !== null) {
        return `${res} <Complex prototype>`;
    }
    const protoConstr = getConstructorName(firstProto, ctx, recurseTimes + 1, protoProps);
    if (protoConstr === null) {
        return `${res} <${inspect(firstProto, {
            ...ctx,
            customInspect: false,
            depth: -1
        })}>`;
    }
    return `${res} <${protoConstr}>`;
}
function formatPrimitive(fn, value, ctx) {
    if (typeof value === "string") {
        let trailer = "";
        if (value.length > ctx.maxStringLength) {
            const remaining = value.length - ctx.maxStringLength;
            value = value.slice(0, ctx.maxStringLength);
            trailer = `... ${remaining} more character${remaining > 1 ? "s" : ""}`;
        }
        if (ctx.compact !== true && value.length > 16 && value.length > ctx.breakLength - ctx.indentationLvl - 4) {
            return value.split(/(?<=\n)/).map((line)=>fn(strEscape(line), "string")).join(` +\n${" ".repeat(ctx.indentationLvl + 2)}`) + trailer;
        }
        return fn(strEscape(value), "string") + trailer;
    }
    if (typeof value === "number") {
        return formatNumber(fn, value);
    }
    if (typeof value === "bigint") {
        return formatBigInt(fn, value);
    }
    if (typeof value === "boolean") {
        return fn(`${value}`, "boolean");
    }
    if (typeof value === "undefined") {
        return fn("undefined", "undefined");
    }
    return fn(value.toString(), "symbol");
}
function getEmptyFormatArray() {
    return [];
}
function isInstanceof(object, proto) {
    try {
        return object instanceof proto;
    } catch  {
        return false;
    }
}
function getPrefix(constructor, tag, fallback, size = "") {
    if (constructor === null) {
        if (tag !== "" && fallback !== tag) {
            return `[${fallback}${size}: null prototype] [${tag}] `;
        }
        return `[${fallback}${size}: null prototype] `;
    }
    if (tag !== "" && constructor !== tag) {
        return `${constructor}${size} [${tag}] `;
    }
    return `${constructor}${size} `;
}
function formatArray(ctx, value, recurseTimes) {
    const valLen = value.length;
    const len = Math.min(Math.max(0, ctx.maxArrayLength), valLen);
    const remaining = valLen - len;
    const output = [];
    for(let i332 = 0; i332 < len; i332++){
        if (!value.hasOwnProperty(i332)) {
            return formatSpecialArray(ctx, value, recurseTimes, len, output, i332);
        }
        output.push(formatProperty(ctx, value, recurseTimes, i332, 1));
    }
    if (remaining > 0) {
        output.push(`... ${remaining} more item${remaining > 1 ? "s" : ""}`);
    }
    return output;
}
function getCtxStyle(_value, constructor, tag) {
    let fallback = "";
    if (constructor === null) {
        if (fallback === tag) {
            fallback = "Object";
        }
    }
    return getPrefix(constructor, tag, fallback);
}
function getKeys(value, showHidden) {
    let keys;
    const symbols = Object.getOwnPropertySymbols(value);
    if (showHidden) {
        keys = Object.getOwnPropertyNames(value);
        if (symbols.length !== 0) {
            Array.prototype.push.apply(keys, symbols);
        }
    } else {
        try {
            keys = Object.keys(value);
        } catch (_err) {
            keys = Object.getOwnPropertyNames(value);
        }
        if (symbols.length !== 0) {}
    }
    return keys;
}
function formatSet(value, ctx, _ignored, recurseTimes) {
    const output = [];
    ctx.indentationLvl += 2;
    for (const v43 of value){
        Array.prototype.push(output, formatValue(ctx, v43, recurseTimes));
    }
    ctx.indentationLvl -= 2;
    return output;
}
function formatMap(value, ctx, _gnored, recurseTimes) {
    const output = [];
    ctx.indentationLvl += 2;
    for (const { 0: k48 , 1: v44  } of value){
        output.push(`${formatValue(ctx, k48, recurseTimes)} => ${formatValue(ctx, v44, recurseTimes)}`);
    }
    ctx.indentationLvl -= 2;
    return output;
}
function formatTypedArray(value, length, ctx, _ignored, recurseTimes) {
    const maxLength = Math.min(Math.max(0, ctx.maxArrayLength), length);
    const remaining = value.length - maxLength;
    const output = new Array(maxLength);
    const elementFormatter = value.length > 0 && typeof value[0] === "number" ? formatNumber : formatBigInt;
    for(let i333 = 0; i333 < maxLength; ++i333){
        output[i333] = elementFormatter(ctx.stylize, value[i333]);
    }
    if (remaining > 0) {
        output[maxLength] = `... ${remaining} more item${remaining > 1 ? "s" : ""}`;
    }
    if (ctx.showHidden) {
        ctx.indentationLvl += 2;
        for (const key of [
            "BYTES_PER_ELEMENT",
            "length",
            "byteLength",
            "byteOffset",
            "buffer", 
        ]){
            const str = formatValue(ctx, value[key], recurseTimes, true);
            Array.prototype.push(output, `[${key}]: ${str}`);
        }
        ctx.indentationLvl -= 2;
    }
    return output;
}
function getIteratorBraces(type, tag) {
    if (tag !== `${type} Iterator`) {
        if (tag !== "") {
            tag += "] [";
        }
        tag += `${type} Iterator`;
    }
    return [
        `[${tag}] {`,
        "}"
    ];
}
function formatIterator(braces, ctx, value, recurseTimes) {
    const { 0: entries , 1: isKeyValue  } = value;
    if (isKeyValue) {
        braces[0] = braces[0].replace(/ Iterator] {$/, " Entries] {");
        return formatMapIterInner(ctx, recurseTimes, entries, 2);
    }
    return formatSetIterInner(ctx, recurseTimes, entries, 1);
}
function getFunctionBase(value, constructor, tag) {
    const stringified = Function.prototype.toString(value);
    if (stringified.slice(0, 5) === "class" && stringified.endsWith("}")) {
        const slice = stringified.slice(5, -1);
        const bracketIndex = slice.indexOf("{");
        if (bracketIndex !== -1 && (!slice.slice(0, bracketIndex).includes("(") || classRegExp.test(slice.replace(stripCommentsRegExp)))) {
            return getClassBase(value, constructor, tag);
        }
    }
    let type = "Function";
    if (isGeneratorFunction1(value)) {
        type = `Generator${type}`;
    }
    if (isAsyncFunction1(value)) {
        type = `Async${type}`;
    }
    let base2 = `[${type}`;
    if (constructor === null) {
        base2 += " (null prototype)";
    }
    if (value.name === "") {
        base2 += " (anonymous)";
    } else {
        base2 += `: ${value.name}`;
    }
    base2 += "]";
    if (constructor !== type && constructor !== null) {
        base2 += ` ${constructor}`;
    }
    if (tag !== "" && constructor !== tag) {
        base2 += ` [${tag}]`;
    }
    return base2;
}
function formatError(err, constructor, tag, ctx, keys) {
    const name = err.name != null ? String(err.name) : "Error";
    let len = name.length;
    let stack = err.stack ? String(err.stack) : err.toString();
    if (!ctx.showHidden && keys.length !== 0) {
        for (const name of [
            "name",
            "message",
            "stack"
        ]){
            const index = keys.indexOf(name);
            if (index !== -1 && stack.includes(err[name])) {
                keys.splice(index, 1);
            }
        }
    }
    if (constructor === null || name.endsWith("Error") && stack.startsWith(name) && (stack.length === len || stack[len] === ":" || stack[len] === "\n")) {
        let fallback = "Error";
        if (constructor === null) {
            const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\]()-]+)(?::|\n {4}at)/) || stack.match(/^([a-z_A-Z0-9-]*Error)$/);
            fallback = start && start[1] || "";
            len = fallback.length;
            fallback = fallback || "Error";
        }
        const prefix = getPrefix(constructor, tag, fallback).slice(0, -1);
        if (name !== prefix) {
            if (prefix.includes(name)) {
                if (len === 0) {
                    stack = `${prefix}: ${stack}`;
                } else {
                    stack = `${prefix}${stack.slice(len)}`;
                }
            } else {
                stack = `${prefix} [${name}]${stack.slice(len)}`;
            }
        }
    }
    let pos = err.message && stack.indexOf(err.message) || -1;
    if (pos !== -1) {
        pos += err.message.length;
    }
    const stackStart = stack.indexOf("\n    at", pos);
    if (stackStart === -1) {
        stack = `[${stack}]`;
    } else if (ctx.colors) {
        let newStack = stack.slice(0, stackStart);
        const lines = stack.slice(stackStart + 1).split("\n");
        for (const line of lines){
            let nodeModule;
            newStack += "\n";
            let pos = 0;
            while(nodeModule = nodeModulesRegExp.exec(line)){
                newStack += line.slice(pos, nodeModule.index + 14);
                newStack += ctx.stylize(nodeModule[1], "module");
                pos = nodeModule.index + nodeModule[0].length;
            }
            newStack += pos === 0 ? line : line.slice(pos);
        }
        stack = newStack;
    }
    if (ctx.indentationLvl !== 0) {
        const indentation = " ".repeat(ctx.indentationLvl);
        stack = stack.replace(/\n/g, `\n${indentation}`);
    }
    return stack;
}
let hexSlice;
function formatArrayBuffer(ctx, value) {
    let buffer;
    try {
        buffer = new Uint8Array(value);
    } catch  {
        return [
            ctx.stylize("(detached)", "special")
        ];
    }
    let str = hexSlice(buffer, 0, Math.min(ctx.maxArrayLength, buffer.length)).replace(/(.{2})/g, "$1 ").trim();
    const remaining = buffer.length - ctx.maxArrayLength;
    if (remaining > 0) {
        str += ` ... ${remaining} more byte${remaining > 1 ? "s" : ""}`;
    }
    return [
        `${ctx.stylize("[Uint8Contents]", "special")}: <${str}>`
    ];
}
function formatNumber(fn, value) {
    return fn(Object.is(value, -0) ? "-0" : `${value}`, "number");
}
function formatPromise(ctx, value, recurseTimes) {
    let output;
    const { 0: state1 , 1: result  } = value;
    if (state1 === 0) {
        output = [
            ctx.stylize("<pending>", "special")
        ];
    } else {
        ctx.indentationLvl += 2;
        const str = formatValue(ctx, result, recurseTimes);
        ctx.indentationLvl -= 2;
        output = [
            state1 === kRejected ? `${ctx.stylize("<rejected>", "special")} ${str}` : str, 
        ];
    }
    return output;
}
function formatWeakCollection(ctx) {
    return [
        ctx.stylize("<items unknown>", "special")
    ];
}
function formatWeakSet(ctx, value, recurseTimes) {
    const entries = value;
    return formatSetIterInner(ctx, recurseTimes, entries, 0);
}
function formatWeakMap(ctx, value, recurseTimes) {
    const entries = value;
    return formatMapIterInner(ctx, recurseTimes, entries, 0);
}
function formatProperty(ctx, value, recurseTimes, key, type, desc, original = value) {
    let name, str;
    let extra = " ";
    desc = desc || Object.getOwnPropertyDescriptor(value, key) || {
        value: value[key],
        enumerable: true
    };
    if (desc.value !== undefined) {
        const diff = ctx.compact !== true || type !== 0 ? 2 : 3;
        ctx.indentationLvl += diff;
        str = formatValue(ctx, desc.value, recurseTimes);
        if (diff === 3 && ctx.breakLength < getStringWidth(str, ctx.colors)) {
            extra = `\n${" ".repeat(ctx.indentationLvl)}`;
        }
        ctx.indentationLvl -= diff;
    } else if (desc.get !== undefined) {
        const label = desc.set !== undefined ? "Getter/Setter" : "Getter";
        const s242 = ctx.stylize;
        const sp = "special";
        if (ctx.getters && (ctx.getters === true || ctx.getters === "get" && desc.set === undefined || ctx.getters === "set" && desc.set !== undefined)) {
            try {
                const tmp = desc.get.call(original);
                ctx.indentationLvl += 2;
                if (tmp === null) {
                    str = `${s242(`[${label}:`, sp)} ${s242("null", "null")}${s242("]", sp)}`;
                } else if (typeof tmp === "object") {
                    str = `${s242(`[${label}]`, sp)} ${formatValue(ctx, tmp, recurseTimes)}`;
                } else {
                    const primitive = formatPrimitive(s242, tmp, ctx);
                    str = `${s242(`[${label}:`, sp)} ${primitive}${s242("]", sp)}`;
                }
                ctx.indentationLvl -= 2;
            } catch (err) {
                const message = `<Inspection threw (${err.message})>`;
                str = `${s242(`[${label}:`, sp)} ${message}${s242("]", sp)}`;
            }
        } else {
            str = ctx.stylize(`[${label}]`, sp);
        }
    } else if (desc.set !== undefined) {
        str = ctx.stylize("[Setter]", "special");
    } else {
        str = ctx.stylize("undefined", "undefined");
    }
    if (type === 1) {
        return str;
    }
    if (typeof key === "symbol") {
        const tmp = key.toString().replace(strEscapeSequencesReplacer, escapeFn);
        name = `[${ctx.stylize(tmp, "symbol")}]`;
    } else if (key === "__proto__") {
        name = "['__proto__']";
    } else if (desc.enumerable === false) {
        const tmp = key.replace(strEscapeSequencesReplacer, escapeFn);
        name = `[${tmp}]`;
    } else if (keyStrRegExp.test(key)) {
        name = ctx.stylize(key, "name");
    } else {
        name = ctx.stylize(strEscape(key), "string");
    }
    return `${name}:${extra}${str}`;
}
function handleMaxCallStackSize(_ctx, _err, _constructorName, _indentationLvl) {}
const colorRegExp = /\u001b\[\d\d?m/g;
function removeColors(str) {
    return str.replace(colorRegExp, "");
}
function isBelowBreakLength(ctx, output, start, base3) {
    let totalLength = output.length + start;
    if (totalLength + output.length > ctx.breakLength) {
        return false;
    }
    for(let i334 = 0; i334 < output.length; i334++){
        if (ctx.colors) {
            totalLength += removeColors(output[i334]).length;
        } else {
            totalLength += output[i334].length;
        }
        if (totalLength > ctx.breakLength) {
            return false;
        }
    }
    return base3 === "" || !base3.includes("\n");
}
function formatBigInt(fn, value) {
    return fn(`${value}n`, "bigint");
}
function formatNamespaceObject(keys, ctx, value, recurseTimes) {
    const output = new Array(keys.length);
    for(let i335 = 0; i335 < keys.length; i335++){
        try {
            output[i335] = formatProperty(ctx, value, recurseTimes, keys[i335], kObjectType);
        } catch (_err) {
            const tmp = {
                [keys[i335]]: ""
            };
            output[i335] = formatProperty(ctx, tmp, recurseTimes, keys[i335], kObjectType);
            const pos = output[i335].lastIndexOf(" ");
            output[i335] = output[i335].slice(0, pos + 1) + ctx.stylize("<uninitialized>", "special");
        }
    }
    keys.length = 0;
    return output;
}
function formatSpecialArray(ctx, value, recurseTimes, maxLength, output, i336) {
    const keys = Object.keys(value);
    let index = i336;
    for(; i336 < keys.length && output.length < maxLength; i336++){
        const key = keys[i336];
        const tmp = +key;
        if (tmp > 2 ** 32 - 2) {
            break;
        }
        if (`${index}` !== key) {
            if (!numberRegExp.test(key)) {
                break;
            }
            const emptyItems = tmp - index;
            const ending = emptyItems > 1 ? "s" : "";
            const message = `<${emptyItems} empty item${ending}>`;
            output.push(ctx.stylize(message, "undefined"));
            index = tmp;
            if (output.length === maxLength) {
                break;
            }
        }
        output.push(formatProperty(ctx, value, recurseTimes, key, 1));
        index++;
    }
    const remaining = value.length - index;
    if (output.length !== maxLength) {
        if (remaining > 0) {
            const ending = remaining > 1 ? "s" : "";
            const message = `<${remaining} empty item${ending}>`;
            output.push(ctx.stylize(message, "undefined"));
        }
    } else if (remaining > 0) {
        output.push(`... ${remaining} more item${remaining > 1 ? "s" : ""}`);
    }
    return output;
}
function getBoxedBase(value, ctx, keys, constructor, tag) {
    let type;
    if (isNumberObject1(value)) {
        type = "Number";
    } else if (isStringObject1(value)) {
        type = "String";
        keys.splice(0, value.length);
    } else if (isBooleanObject1(value)) {
        type = "Boolean";
    } else if (isBigIntObject1(value)) {
        type = "BigInt";
    } else {
        type = "Symbol";
    }
    let base4 = `[${type}`;
    if (type !== constructor) {
        if (constructor === null) {
            base4 += " (null prototype)";
        } else {
            base4 += ` (${constructor})`;
        }
    }
    base4 += `: ${formatPrimitive(stylizeNoColor, value.valueOf(), ctx)}]`;
    if (tag !== "" && tag !== constructor) {
        base4 += ` [${tag}]`;
    }
    if (keys.length !== 0 || ctx.stylize === stylizeNoColor) {
        return base4;
    }
    return ctx.stylize(base4, type.toLowerCase());
}
function getClassBase(value, constructor, tag) {
    const hasName = value.hasOwnProperty("name");
    const name = hasName && value.name || "(anonymous)";
    let base5 = `class ${name}`;
    if (constructor !== "Function" && constructor !== null) {
        base5 += ` [${constructor}]`;
    }
    if (tag !== "" && constructor !== tag) {
        base5 += ` [${tag}]`;
    }
    if (constructor !== null) {
        const superName = Object.getPrototypeOf(value).name;
        if (superName) {
            base5 += ` extends ${superName}`;
        }
    } else {
        base5 += " extends [null prototype]";
    }
    return `[${base5}]`;
}
function reduceToSingleString(ctx, output, base6, braces, extrasType, recurseTimes, value) {
    if (ctx.compact !== true) {
        if (typeof ctx.compact === "number" && ctx.compact >= 1) {
            const entries = output.length;
            if (extrasType === 2 && entries > 6) {
                output = groupArrayElements(ctx, output, value);
            }
            if (ctx.currentDepth - recurseTimes < ctx.compact && entries === output.length) {
                const start = output.length + ctx.indentationLvl + braces[0].length + base6.length + 10;
                if (isBelowBreakLength(ctx, output, start, base6)) {
                    return `${base6 ? `${base6} ` : ""}${braces[0]} ${join(output, ", ")}` + ` ${braces[1]}`;
                }
            }
        }
        const indentation = `\n${" ".repeat(ctx.indentationLvl)}`;
        return `${base6 ? `${base6} ` : ""}${braces[0]}${indentation}  ` + `${join(output, `,${indentation}  `)}${indentation}${braces[1]}`;
    }
    if (isBelowBreakLength(ctx, output, 0, base6)) {
        return `${braces[0]}${base6 ? ` ${base6}` : ""} ${join(output, ", ")} ` + braces[1];
    }
    const indentation = " ".repeat(ctx.indentationLvl);
    const ln2 = base6 === "" && braces[0].length === 1 ? " " : `${base6 ? ` ${base6}` : ""}\n${indentation}  `;
    return `${braces[0]}${ln2}${join(output, `,\n${indentation}  `)} ${braces[1]}`;
}
function join(output, separator) {
    let str = "";
    if (output.length !== 0) {
        const lastIndex = output.length - 1;
        for(let i337 = 0; i337 < lastIndex; i337++){
            str += output[i337];
            str += separator;
        }
        str += output[lastIndex];
    }
    return str;
}
function groupArrayElements(ctx, output, value) {
    let totalLength = 0;
    let maxLength = 0;
    let i338 = 0;
    let outputLength = output.length;
    if (ctx.maxArrayLength < output.length) {
        outputLength--;
    }
    const separatorSpace = 2;
    const dataLen = new Array(outputLength);
    for(; i338 < outputLength; i338++){
        const len = getStringWidth(output[i338], ctx.colors);
        dataLen[i338] = len;
        totalLength += len + separatorSpace;
        if (maxLength < len) {
            maxLength = len;
        }
    }
    const actualMax = maxLength + 2;
    if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength && (totalLength / actualMax > 5 || maxLength <= 6)) {
        const averageBias = Math.sqrt(actualMax - totalLength / output.length);
        const biasedMax = Math.max(actualMax - 3 - averageBias, 1);
        const columns = Math.min(Math.round(Math.sqrt(2.5 * biasedMax * outputLength) / biasedMax), Math.floor((ctx.breakLength - ctx.indentationLvl) / actualMax), ctx.compact * 4, 15);
        if (columns <= 1) {
            return output;
        }
        const tmp = [];
        const maxLineLength = [];
        for(let i339 = 0; i339 < columns; i339++){
            let lineMaxLength = 0;
            for(let j41 = i339; j41 < output.length; j41 += columns){
                if (dataLen[j41] > lineMaxLength) {
                    lineMaxLength = dataLen[j41];
                }
            }
            lineMaxLength += separatorSpace;
            maxLineLength[i339] = lineMaxLength;
        }
        let order = String.prototype.padStart;
        if (value !== undefined) {
            for(let i340 = 0; i340 < output.length; i340++){
                if (typeof value[i340] !== "number" && typeof value[i340] !== "bigint") {
                    order = String.prototype.padEnd;
                    break;
                }
            }
        }
        for(let i1100 = 0; i1100 < outputLength; i1100 += columns){
            const max = Math.min(i1100 + columns, outputLength);
            let str = "";
            let j42 = i1100;
            for(; j42 < max - 1; j42++){
                const padding = maxLineLength[j42 - i1100] + output[j42].length - dataLen[j42];
                str += `${output[j42]}, `.padStart(padding, " ");
            }
            if (order === String.prototype.padStart) {
                const padding = maxLineLength[j42 - i1100] + output[j42].length - dataLen[j42] - 2;
                str += output[j42].padStart(padding, " ");
            } else {
                str += output[j42];
            }
            Array.prototype.push(tmp, str);
        }
        if (ctx.maxArrayLength < output.length) {
            Array.prototype.push(tmp, output[outputLength]);
        }
        output = tmp;
    }
    return output;
}
function formatMapIterInner(ctx, recurseTimes, entries, state2) {
    const maxArrayLength = Math.max(ctx.maxArrayLength, 0);
    const len = entries.length / 2;
    const remaining = len - maxArrayLength;
    const maxLength = Math.min(maxArrayLength, len);
    let output = new Array(maxLength);
    let i341 = 0;
    ctx.indentationLvl += 2;
    if (state2 === 0) {
        for(; i341 < maxLength; i341++){
            const pos = i341 * 2;
            output[i341] = `${formatValue(ctx, entries[pos], recurseTimes)} => ${formatValue(ctx, entries[pos + 1], recurseTimes)}`;
        }
        if (!ctx.sorted) {
            output = output.sort();
        }
    } else {
        for(; i341 < maxLength; i341++){
            const pos = i341 * 2;
            const res = [
                formatValue(ctx, entries[pos], recurseTimes),
                formatValue(ctx, entries[pos + 1], recurseTimes), 
            ];
            output[i341] = reduceToSingleString(ctx, res, "", [
                "[",
                "]"
            ], kArrayExtrasType, recurseTimes);
        }
    }
    ctx.indentationLvl -= 2;
    if (remaining > 0) {
        output.push(`... ${remaining} more item${remaining > 1 ? "s" : ""}`);
    }
    return output;
}
function formatSetIterInner(ctx, recurseTimes, entries, state3) {
    const maxArrayLength = Math.max(ctx.maxArrayLength, 0);
    const maxLength = Math.min(maxArrayLength, entries.length);
    const output = new Array(maxLength);
    ctx.indentationLvl += 2;
    for(let i342 = 0; i342 < maxLength; i342++){
        output[i342] = formatValue(ctx, entries[i342], recurseTimes);
    }
    ctx.indentationLvl -= 2;
    if (state3 === 0 && !ctx.sorted) {
        output.sort();
    }
    const remaining = entries.length - maxLength;
    if (remaining > 0) {
        Array.prototype.push(output, `... ${remaining} more item${remaining > 1 ? "s" : ""}`);
    }
    return output;
}
const ansiPattern = "[\\u001B\\u009B][[\\]()#;?]*" + "(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*" + "|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)" + "|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))";
const ansi = new RegExp(ansiPattern, "g");
function getStringWidth(str, removeControlChars = true) {
    let width = 0;
    if (removeControlChars) {
        str = stripVTControlCharacters(str);
    }
    str = str.normalize("NFC");
    for (const __char of str[Symbol.iterator]()){
        const code = __char.codePointAt(0);
        if (isFullWidthCodePoint(code)) {
            width += 2;
        } else if (!isZeroWidthCodePoint(code)) {
            width++;
        }
    }
    return width;
}
const isFullWidthCodePoint = (code)=>{
    return code >= 0x1100 && (code <= 0x115f || code === 0x2329 || code === 0x232a || code >= 0x2e80 && code <= 0x3247 && code !== 0x303f || code >= 0x3250 && code <= 0x4dbf || code >= 0x4e00 && code <= 0xa4c6 || code >= 0xa960 && code <= 0xa97c || code >= 0xac00 && code <= 0xd7a3 || code >= 0xf900 && code <= 0xfaff || code >= 0xfe10 && code <= 0xfe19 || code >= 0xfe30 && code <= 0xfe6b || code >= 0xff01 && code <= 0xff60 || code >= 0xffe0 && code <= 0xffe6 || code >= 0x1b000 && code <= 0x1b001 || code >= 0x1f200 && code <= 0x1f251 || code >= 0x1f300 && code <= 0x1f64f || code >= 0x20000 && code <= 0x3fffd);
};
const isZeroWidthCodePoint = (code)=>{
    return code <= 0x1F || code >= 0x7F && code <= 0x9F || code >= 0x300 && code <= 0x36F || code >= 0x200B && code <= 0x200F || code >= 0x20D0 && code <= 0x20FF || code >= 0xFE00 && code <= 0xFE0F || code >= 0xFE20 && code <= 0xFE2F || code >= 0xE0100 && code <= 0xE01EF;
};
function stripVTControlCharacters(str) {
    validateString(str, "str");
    return str.replace(ansi, "");
}
let debugImpls;
function initializeDebugEnv(debugEnv) {
    debugImpls = Object.create(null);
    if (debugEnv) {
        debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replaceAll("*", ".*").replaceAll(",", "$|^");
        new RegExp(`^${debugEnv}$`, "i");
    } else {}
}
let state = "";
if (Deno.permissions) {
    state = (await Deno.permissions.query({
        name: "env",
        variable: "NODE_DEBUG"
    })).state;
}
if (state === "granted") {
    initializeDebugEnv(Deno.env.get("NODE_DEBUG") ?? "");
} else {
    initializeDebugEnv("");
}
const osType = (()=>{
    const { Deno  } = globalThis;
    if (typeof Deno?.build?.os === "string") {
        return Deno.build.os;
    }
    const { navigator  } = globalThis;
    if (navigator?.appVersion?.includes?.("Win") ?? false) {
        return "windows";
    }
    return "linux";
})();
const isWindows = osType === "windows";
const os = {
    UV_UDP_REUSEADDR: 4,
    dlopen: {
        RTLD_LAZY: 1,
        RTLD_NOW: 2,
        RTLD_GLOBAL: 8,
        RTLD_LOCAL: 4
    },
    errno: {
        E2BIG: 7,
        EACCES: 13,
        EADDRINUSE: 48,
        EADDRNOTAVAIL: 49,
        EAFNOSUPPORT: 47,
        EAGAIN: 35,
        EALREADY: 37,
        EBADF: 9,
        EBADMSG: 94,
        EBUSY: 16,
        ECANCELED: 89,
        ECHILD: 10,
        ECONNABORTED: 53,
        ECONNREFUSED: 61,
        ECONNRESET: 54,
        EDEADLK: 11,
        EDESTADDRREQ: 39,
        EDOM: 33,
        EDQUOT: 69,
        EEXIST: 17,
        EFAULT: 14,
        EFBIG: 27,
        EHOSTUNREACH: 65,
        EIDRM: 90,
        EILSEQ: 92,
        EINPROGRESS: 36,
        EINTR: 4,
        EINVAL: 22,
        EIO: 5,
        EISCONN: 56,
        EISDIR: 21,
        ELOOP: 62,
        EMFILE: 24,
        EMLINK: 31,
        EMSGSIZE: 40,
        EMULTIHOP: 95,
        ENAMETOOLONG: 63,
        ENETDOWN: 50,
        ENETRESET: 52,
        ENETUNREACH: 51,
        ENFILE: 23,
        ENOBUFS: 55,
        ENODATA: 96,
        ENODEV: 19,
        ENOENT: 2,
        ENOEXEC: 8,
        ENOLCK: 77,
        ENOLINK: 97,
        ENOMEM: 12,
        ENOMSG: 91,
        ENOPROTOOPT: 42,
        ENOSPC: 28,
        ENOSR: 98,
        ENOSTR: 99,
        ENOSYS: 78,
        ENOTCONN: 57,
        ENOTDIR: 20,
        ENOTEMPTY: 66,
        ENOTSOCK: 38,
        ENOTSUP: 45,
        ENOTTY: 25,
        ENXIO: 6,
        EOPNOTSUPP: 102,
        EOVERFLOW: 84,
        EPERM: 1,
        EPIPE: 32,
        EPROTO: 100,
        EPROTONOSUPPORT: 43,
        EPROTOTYPE: 41,
        ERANGE: 34,
        EROFS: 30,
        ESPIPE: 29,
        ESRCH: 3,
        ESTALE: 70,
        ETIME: 101,
        ETIMEDOUT: 60,
        ETXTBSY: 26,
        EWOULDBLOCK: 35,
        EXDEV: 18
    },
    signals: {
        SIGHUP: 1,
        SIGINT: 2,
        SIGQUIT: 3,
        SIGILL: 4,
        SIGTRAP: 5,
        SIGABRT: 6,
        SIGIOT: 6,
        SIGBUS: 10,
        SIGFPE: 8,
        SIGKILL: 9,
        SIGUSR1: 30,
        SIGSEGV: 11,
        SIGUSR2: 31,
        SIGPIPE: 13,
        SIGALRM: 14,
        SIGTERM: 15,
        SIGCHLD: 20,
        SIGCONT: 19,
        SIGSTOP: 17,
        SIGTSTP: 18,
        SIGTTIN: 21,
        SIGTTOU: 22,
        SIGURG: 16,
        SIGXCPU: 24,
        SIGXFSZ: 25,
        SIGVTALRM: 26,
        SIGPROF: 27,
        SIGWINCH: 28,
        SIGIO: 23,
        SIGINFO: 29,
        SIGSYS: 12
    },
    priority: {
        PRIORITY_LOW: 19,
        PRIORITY_BELOW_NORMAL: 10,
        PRIORITY_NORMAL: 0,
        PRIORITY_ABOVE_NORMAL: -7,
        PRIORITY_HIGH: -14,
        PRIORITY_HIGHEST: -20
    }
};
os.errno.EEXIST;
os.errno.ENOENT;
const codeToErrorWindows = [
    [
        -4093,
        [
            "E2BIG",
            "argument list too long"
        ]
    ],
    [
        -4092,
        [
            "EACCES",
            "permission denied"
        ]
    ],
    [
        -4091,
        [
            "EADDRINUSE",
            "address already in use"
        ]
    ],
    [
        -4090,
        [
            "EADDRNOTAVAIL",
            "address not available"
        ]
    ],
    [
        -4089,
        [
            "EAFNOSUPPORT",
            "address family not supported"
        ]
    ],
    [
        -4088,
        [
            "EAGAIN",
            "resource temporarily unavailable"
        ]
    ],
    [
        -3000,
        [
            "EAI_ADDRFAMILY",
            "address family not supported"
        ]
    ],
    [
        -3001,
        [
            "EAI_AGAIN",
            "temporary failure"
        ]
    ],
    [
        -3002,
        [
            "EAI_BADFLAGS",
            "bad ai_flags value"
        ]
    ],
    [
        -3013,
        [
            "EAI_BADHINTS",
            "invalid value for hints"
        ]
    ],
    [
        -3003,
        [
            "EAI_CANCELED",
            "request canceled"
        ]
    ],
    [
        -3004,
        [
            "EAI_FAIL",
            "permanent failure"
        ]
    ],
    [
        -3005,
        [
            "EAI_FAMILY",
            "ai_family not supported"
        ]
    ],
    [
        -3006,
        [
            "EAI_MEMORY",
            "out of memory"
        ]
    ],
    [
        -3007,
        [
            "EAI_NODATA",
            "no address"
        ]
    ],
    [
        -3008,
        [
            "EAI_NONAME",
            "unknown node or service"
        ]
    ],
    [
        -3009,
        [
            "EAI_OVERFLOW",
            "argument buffer overflow"
        ]
    ],
    [
        -3014,
        [
            "EAI_PROTOCOL",
            "resolved protocol is unknown"
        ]
    ],
    [
        -3010,
        [
            "EAI_SERVICE",
            "service not available for socket type"
        ]
    ],
    [
        -3011,
        [
            "EAI_SOCKTYPE",
            "socket type not supported"
        ]
    ],
    [
        -4084,
        [
            "EALREADY",
            "connection already in progress"
        ]
    ],
    [
        -4083,
        [
            "EBADF",
            "bad file descriptor"
        ]
    ],
    [
        -4082,
        [
            "EBUSY",
            "resource busy or locked"
        ]
    ],
    [
        -4081,
        [
            "ECANCELED",
            "operation canceled"
        ]
    ],
    [
        -4080,
        [
            "ECHARSET",
            "invalid Unicode character"
        ]
    ],
    [
        -4079,
        [
            "ECONNABORTED",
            "software caused connection abort"
        ]
    ],
    [
        -4078,
        [
            "ECONNREFUSED",
            "connection refused"
        ]
    ],
    [
        -4077,
        [
            "ECONNRESET",
            "connection reset by peer"
        ]
    ],
    [
        -4076,
        [
            "EDESTADDRREQ",
            "destination address required"
        ]
    ],
    [
        -4075,
        [
            "EEXIST",
            "file already exists"
        ]
    ],
    [
        -4074,
        [
            "EFAULT",
            "bad address in system call argument"
        ]
    ],
    [
        -4036,
        [
            "EFBIG",
            "file too large"
        ]
    ],
    [
        -4073,
        [
            "EHOSTUNREACH",
            "host is unreachable"
        ]
    ],
    [
        -4072,
        [
            "EINTR",
            "interrupted system call"
        ]
    ],
    [
        -4071,
        [
            "EINVAL",
            "invalid argument"
        ]
    ],
    [
        -4070,
        [
            "EIO",
            "i/o error"
        ]
    ],
    [
        -4069,
        [
            "EISCONN",
            "socket is already connected"
        ]
    ],
    [
        -4068,
        [
            "EISDIR",
            "illegal operation on a directory"
        ]
    ],
    [
        -4067,
        [
            "ELOOP",
            "too many symbolic links encountered"
        ]
    ],
    [
        -4066,
        [
            "EMFILE",
            "too many open files"
        ]
    ],
    [
        -4065,
        [
            "EMSGSIZE",
            "message too long"
        ]
    ],
    [
        -4064,
        [
            "ENAMETOOLONG",
            "name too long"
        ]
    ],
    [
        -4063,
        [
            "ENETDOWN",
            "network is down"
        ]
    ],
    [
        -4062,
        [
            "ENETUNREACH",
            "network is unreachable"
        ]
    ],
    [
        -4061,
        [
            "ENFILE",
            "file table overflow"
        ]
    ],
    [
        -4060,
        [
            "ENOBUFS",
            "no buffer space available"
        ]
    ],
    [
        -4059,
        [
            "ENODEV",
            "no such device"
        ]
    ],
    [
        -4058,
        [
            "ENOENT",
            "no such file or directory"
        ]
    ],
    [
        -4057,
        [
            "ENOMEM",
            "not enough memory"
        ]
    ],
    [
        -4056,
        [
            "ENONET",
            "machine is not on the network"
        ]
    ],
    [
        -4035,
        [
            "ENOPROTOOPT",
            "protocol not available"
        ]
    ],
    [
        -4055,
        [
            "ENOSPC",
            "no space left on device"
        ]
    ],
    [
        -4054,
        [
            "ENOSYS",
            "function not implemented"
        ]
    ],
    [
        -4053,
        [
            "ENOTCONN",
            "socket is not connected"
        ]
    ],
    [
        -4052,
        [
            "ENOTDIR",
            "not a directory"
        ]
    ],
    [
        -4051,
        [
            "ENOTEMPTY",
            "directory not empty"
        ]
    ],
    [
        -4050,
        [
            "ENOTSOCK",
            "socket operation on non-socket"
        ]
    ],
    [
        -4049,
        [
            "ENOTSUP",
            "operation not supported on socket"
        ]
    ],
    [
        -4048,
        [
            "EPERM",
            "operation not permitted"
        ]
    ],
    [
        -4047,
        [
            "EPIPE",
            "broken pipe"
        ]
    ],
    [
        -4046,
        [
            "EPROTO",
            "protocol error"
        ]
    ],
    [
        -4045,
        [
            "EPROTONOSUPPORT",
            "protocol not supported"
        ]
    ],
    [
        -4044,
        [
            "EPROTOTYPE",
            "protocol wrong type for socket"
        ]
    ],
    [
        -4034,
        [
            "ERANGE",
            "result too large"
        ]
    ],
    [
        -4043,
        [
            "EROFS",
            "read-only file system"
        ]
    ],
    [
        -4042,
        [
            "ESHUTDOWN",
            "cannot send after transport endpoint shutdown"
        ]
    ],
    [
        -4041,
        [
            "ESPIPE",
            "invalid seek"
        ]
    ],
    [
        -4040,
        [
            "ESRCH",
            "no such process"
        ]
    ],
    [
        -4039,
        [
            "ETIMEDOUT",
            "connection timed out"
        ]
    ],
    [
        -4038,
        [
            "ETXTBSY",
            "text file is busy"
        ]
    ],
    [
        -4037,
        [
            "EXDEV",
            "cross-device link not permitted"
        ]
    ],
    [
        -4094,
        [
            "UNKNOWN",
            "unknown error"
        ]
    ],
    [
        -4095,
        [
            "EOF",
            "end of file"
        ]
    ],
    [
        -4033,
        [
            "ENXIO",
            "no such device or address"
        ]
    ],
    [
        -4032,
        [
            "EMLINK",
            "too many links"
        ]
    ],
    [
        -4031,
        [
            "EHOSTDOWN",
            "host is down"
        ]
    ],
    [
        -4030,
        [
            "EREMOTEIO",
            "remote I/O error"
        ]
    ],
    [
        -4029,
        [
            "ENOTTY",
            "inappropriate ioctl for device"
        ]
    ],
    [
        -4028,
        [
            "EFTYPE",
            "inappropriate file type or format"
        ]
    ],
    [
        -4027,
        [
            "EILSEQ",
            "illegal byte sequence"
        ]
    ], 
];
const errorToCodeWindows = codeToErrorWindows.map(([status, [error1]])=>[
        error1,
        status
    ]);
const codeToErrorDarwin = [
    [
        -7,
        [
            "E2BIG",
            "argument list too long"
        ]
    ],
    [
        -13,
        [
            "EACCES",
            "permission denied"
        ]
    ],
    [
        -48,
        [
            "EADDRINUSE",
            "address already in use"
        ]
    ],
    [
        -49,
        [
            "EADDRNOTAVAIL",
            "address not available"
        ]
    ],
    [
        -47,
        [
            "EAFNOSUPPORT",
            "address family not supported"
        ]
    ],
    [
        -35,
        [
            "EAGAIN",
            "resource temporarily unavailable"
        ]
    ],
    [
        -3000,
        [
            "EAI_ADDRFAMILY",
            "address family not supported"
        ]
    ],
    [
        -3001,
        [
            "EAI_AGAIN",
            "temporary failure"
        ]
    ],
    [
        -3002,
        [
            "EAI_BADFLAGS",
            "bad ai_flags value"
        ]
    ],
    [
        -3013,
        [
            "EAI_BADHINTS",
            "invalid value for hints"
        ]
    ],
    [
        -3003,
        [
            "EAI_CANCELED",
            "request canceled"
        ]
    ],
    [
        -3004,
        [
            "EAI_FAIL",
            "permanent failure"
        ]
    ],
    [
        -3005,
        [
            "EAI_FAMILY",
            "ai_family not supported"
        ]
    ],
    [
        -3006,
        [
            "EAI_MEMORY",
            "out of memory"
        ]
    ],
    [
        -3007,
        [
            "EAI_NODATA",
            "no address"
        ]
    ],
    [
        -3008,
        [
            "EAI_NONAME",
            "unknown node or service"
        ]
    ],
    [
        -3009,
        [
            "EAI_OVERFLOW",
            "argument buffer overflow"
        ]
    ],
    [
        -3014,
        [
            "EAI_PROTOCOL",
            "resolved protocol is unknown"
        ]
    ],
    [
        -3010,
        [
            "EAI_SERVICE",
            "service not available for socket type"
        ]
    ],
    [
        -3011,
        [
            "EAI_SOCKTYPE",
            "socket type not supported"
        ]
    ],
    [
        -37,
        [
            "EALREADY",
            "connection already in progress"
        ]
    ],
    [
        -9,
        [
            "EBADF",
            "bad file descriptor"
        ]
    ],
    [
        -16,
        [
            "EBUSY",
            "resource busy or locked"
        ]
    ],
    [
        -89,
        [
            "ECANCELED",
            "operation canceled"
        ]
    ],
    [
        -4080,
        [
            "ECHARSET",
            "invalid Unicode character"
        ]
    ],
    [
        -53,
        [
            "ECONNABORTED",
            "software caused connection abort"
        ]
    ],
    [
        -61,
        [
            "ECONNREFUSED",
            "connection refused"
        ]
    ],
    [
        -54,
        [
            "ECONNRESET",
            "connection reset by peer"
        ]
    ],
    [
        -39,
        [
            "EDESTADDRREQ",
            "destination address required"
        ]
    ],
    [
        -17,
        [
            "EEXIST",
            "file already exists"
        ]
    ],
    [
        -14,
        [
            "EFAULT",
            "bad address in system call argument"
        ]
    ],
    [
        -27,
        [
            "EFBIG",
            "file too large"
        ]
    ],
    [
        -65,
        [
            "EHOSTUNREACH",
            "host is unreachable"
        ]
    ],
    [
        -4,
        [
            "EINTR",
            "interrupted system call"
        ]
    ],
    [
        -22,
        [
            "EINVAL",
            "invalid argument"
        ]
    ],
    [
        -5,
        [
            "EIO",
            "i/o error"
        ]
    ],
    [
        -56,
        [
            "EISCONN",
            "socket is already connected"
        ]
    ],
    [
        -21,
        [
            "EISDIR",
            "illegal operation on a directory"
        ]
    ],
    [
        -62,
        [
            "ELOOP",
            "too many symbolic links encountered"
        ]
    ],
    [
        -24,
        [
            "EMFILE",
            "too many open files"
        ]
    ],
    [
        -40,
        [
            "EMSGSIZE",
            "message too long"
        ]
    ],
    [
        -63,
        [
            "ENAMETOOLONG",
            "name too long"
        ]
    ],
    [
        -50,
        [
            "ENETDOWN",
            "network is down"
        ]
    ],
    [
        -51,
        [
            "ENETUNREACH",
            "network is unreachable"
        ]
    ],
    [
        -23,
        [
            "ENFILE",
            "file table overflow"
        ]
    ],
    [
        -55,
        [
            "ENOBUFS",
            "no buffer space available"
        ]
    ],
    [
        -19,
        [
            "ENODEV",
            "no such device"
        ]
    ],
    [
        -2,
        [
            "ENOENT",
            "no such file or directory"
        ]
    ],
    [
        -12,
        [
            "ENOMEM",
            "not enough memory"
        ]
    ],
    [
        -4056,
        [
            "ENONET",
            "machine is not on the network"
        ]
    ],
    [
        -42,
        [
            "ENOPROTOOPT",
            "protocol not available"
        ]
    ],
    [
        -28,
        [
            "ENOSPC",
            "no space left on device"
        ]
    ],
    [
        -78,
        [
            "ENOSYS",
            "function not implemented"
        ]
    ],
    [
        -57,
        [
            "ENOTCONN",
            "socket is not connected"
        ]
    ],
    [
        -20,
        [
            "ENOTDIR",
            "not a directory"
        ]
    ],
    [
        -66,
        [
            "ENOTEMPTY",
            "directory not empty"
        ]
    ],
    [
        -38,
        [
            "ENOTSOCK",
            "socket operation on non-socket"
        ]
    ],
    [
        -45,
        [
            "ENOTSUP",
            "operation not supported on socket"
        ]
    ],
    [
        -1,
        [
            "EPERM",
            "operation not permitted"
        ]
    ],
    [
        -32,
        [
            "EPIPE",
            "broken pipe"
        ]
    ],
    [
        -100,
        [
            "EPROTO",
            "protocol error"
        ]
    ],
    [
        -43,
        [
            "EPROTONOSUPPORT",
            "protocol not supported"
        ]
    ],
    [
        -41,
        [
            "EPROTOTYPE",
            "protocol wrong type for socket"
        ]
    ],
    [
        -34,
        [
            "ERANGE",
            "result too large"
        ]
    ],
    [
        -30,
        [
            "EROFS",
            "read-only file system"
        ]
    ],
    [
        -58,
        [
            "ESHUTDOWN",
            "cannot send after transport endpoint shutdown"
        ]
    ],
    [
        -29,
        [
            "ESPIPE",
            "invalid seek"
        ]
    ],
    [
        -3,
        [
            "ESRCH",
            "no such process"
        ]
    ],
    [
        -60,
        [
            "ETIMEDOUT",
            "connection timed out"
        ]
    ],
    [
        -26,
        [
            "ETXTBSY",
            "text file is busy"
        ]
    ],
    [
        -18,
        [
            "EXDEV",
            "cross-device link not permitted"
        ]
    ],
    [
        -4094,
        [
            "UNKNOWN",
            "unknown error"
        ]
    ],
    [
        -4095,
        [
            "EOF",
            "end of file"
        ]
    ],
    [
        -6,
        [
            "ENXIO",
            "no such device or address"
        ]
    ],
    [
        -31,
        [
            "EMLINK",
            "too many links"
        ]
    ],
    [
        -64,
        [
            "EHOSTDOWN",
            "host is down"
        ]
    ],
    [
        -4030,
        [
            "EREMOTEIO",
            "remote I/O error"
        ]
    ],
    [
        -25,
        [
            "ENOTTY",
            "inappropriate ioctl for device"
        ]
    ],
    [
        -79,
        [
            "EFTYPE",
            "inappropriate file type or format"
        ]
    ],
    [
        -92,
        [
            "EILSEQ",
            "illegal byte sequence"
        ]
    ], 
];
const errorToCodeDarwin = codeToErrorDarwin.map(([status, [code]])=>[
        code,
        status
    ]);
const codeToErrorLinux = [
    [
        -7,
        [
            "E2BIG",
            "argument list too long"
        ]
    ],
    [
        -13,
        [
            "EACCES",
            "permission denied"
        ]
    ],
    [
        -98,
        [
            "EADDRINUSE",
            "address already in use"
        ]
    ],
    [
        -99,
        [
            "EADDRNOTAVAIL",
            "address not available"
        ]
    ],
    [
        -97,
        [
            "EAFNOSUPPORT",
            "address family not supported"
        ]
    ],
    [
        -11,
        [
            "EAGAIN",
            "resource temporarily unavailable"
        ]
    ],
    [
        -3000,
        [
            "EAI_ADDRFAMILY",
            "address family not supported"
        ]
    ],
    [
        -3001,
        [
            "EAI_AGAIN",
            "temporary failure"
        ]
    ],
    [
        -3002,
        [
            "EAI_BADFLAGS",
            "bad ai_flags value"
        ]
    ],
    [
        -3013,
        [
            "EAI_BADHINTS",
            "invalid value for hints"
        ]
    ],
    [
        -3003,
        [
            "EAI_CANCELED",
            "request canceled"
        ]
    ],
    [
        -3004,
        [
            "EAI_FAIL",
            "permanent failure"
        ]
    ],
    [
        -3005,
        [
            "EAI_FAMILY",
            "ai_family not supported"
        ]
    ],
    [
        -3006,
        [
            "EAI_MEMORY",
            "out of memory"
        ]
    ],
    [
        -3007,
        [
            "EAI_NODATA",
            "no address"
        ]
    ],
    [
        -3008,
        [
            "EAI_NONAME",
            "unknown node or service"
        ]
    ],
    [
        -3009,
        [
            "EAI_OVERFLOW",
            "argument buffer overflow"
        ]
    ],
    [
        -3014,
        [
            "EAI_PROTOCOL",
            "resolved protocol is unknown"
        ]
    ],
    [
        -3010,
        [
            "EAI_SERVICE",
            "service not available for socket type"
        ]
    ],
    [
        -3011,
        [
            "EAI_SOCKTYPE",
            "socket type not supported"
        ]
    ],
    [
        -114,
        [
            "EALREADY",
            "connection already in progress"
        ]
    ],
    [
        -9,
        [
            "EBADF",
            "bad file descriptor"
        ]
    ],
    [
        -16,
        [
            "EBUSY",
            "resource busy or locked"
        ]
    ],
    [
        -125,
        [
            "ECANCELED",
            "operation canceled"
        ]
    ],
    [
        -4080,
        [
            "ECHARSET",
            "invalid Unicode character"
        ]
    ],
    [
        -103,
        [
            "ECONNABORTED",
            "software caused connection abort"
        ]
    ],
    [
        -111,
        [
            "ECONNREFUSED",
            "connection refused"
        ]
    ],
    [
        -104,
        [
            "ECONNRESET",
            "connection reset by peer"
        ]
    ],
    [
        -89,
        [
            "EDESTADDRREQ",
            "destination address required"
        ]
    ],
    [
        -17,
        [
            "EEXIST",
            "file already exists"
        ]
    ],
    [
        -14,
        [
            "EFAULT",
            "bad address in system call argument"
        ]
    ],
    [
        -27,
        [
            "EFBIG",
            "file too large"
        ]
    ],
    [
        -113,
        [
            "EHOSTUNREACH",
            "host is unreachable"
        ]
    ],
    [
        -4,
        [
            "EINTR",
            "interrupted system call"
        ]
    ],
    [
        -22,
        [
            "EINVAL",
            "invalid argument"
        ]
    ],
    [
        -5,
        [
            "EIO",
            "i/o error"
        ]
    ],
    [
        -106,
        [
            "EISCONN",
            "socket is already connected"
        ]
    ],
    [
        -21,
        [
            "EISDIR",
            "illegal operation on a directory"
        ]
    ],
    [
        -40,
        [
            "ELOOP",
            "too many symbolic links encountered"
        ]
    ],
    [
        -24,
        [
            "EMFILE",
            "too many open files"
        ]
    ],
    [
        -90,
        [
            "EMSGSIZE",
            "message too long"
        ]
    ],
    [
        -36,
        [
            "ENAMETOOLONG",
            "name too long"
        ]
    ],
    [
        -100,
        [
            "ENETDOWN",
            "network is down"
        ]
    ],
    [
        -101,
        [
            "ENETUNREACH",
            "network is unreachable"
        ]
    ],
    [
        -23,
        [
            "ENFILE",
            "file table overflow"
        ]
    ],
    [
        -105,
        [
            "ENOBUFS",
            "no buffer space available"
        ]
    ],
    [
        -19,
        [
            "ENODEV",
            "no such device"
        ]
    ],
    [
        -2,
        [
            "ENOENT",
            "no such file or directory"
        ]
    ],
    [
        -12,
        [
            "ENOMEM",
            "not enough memory"
        ]
    ],
    [
        -64,
        [
            "ENONET",
            "machine is not on the network"
        ]
    ],
    [
        -92,
        [
            "ENOPROTOOPT",
            "protocol not available"
        ]
    ],
    [
        -28,
        [
            "ENOSPC",
            "no space left on device"
        ]
    ],
    [
        -38,
        [
            "ENOSYS",
            "function not implemented"
        ]
    ],
    [
        -107,
        [
            "ENOTCONN",
            "socket is not connected"
        ]
    ],
    [
        -20,
        [
            "ENOTDIR",
            "not a directory"
        ]
    ],
    [
        -39,
        [
            "ENOTEMPTY",
            "directory not empty"
        ]
    ],
    [
        -88,
        [
            "ENOTSOCK",
            "socket operation on non-socket"
        ]
    ],
    [
        -95,
        [
            "ENOTSUP",
            "operation not supported on socket"
        ]
    ],
    [
        -1,
        [
            "EPERM",
            "operation not permitted"
        ]
    ],
    [
        -32,
        [
            "EPIPE",
            "broken pipe"
        ]
    ],
    [
        -71,
        [
            "EPROTO",
            "protocol error"
        ]
    ],
    [
        -93,
        [
            "EPROTONOSUPPORT",
            "protocol not supported"
        ]
    ],
    [
        -91,
        [
            "EPROTOTYPE",
            "protocol wrong type for socket"
        ]
    ],
    [
        -34,
        [
            "ERANGE",
            "result too large"
        ]
    ],
    [
        -30,
        [
            "EROFS",
            "read-only file system"
        ]
    ],
    [
        -108,
        [
            "ESHUTDOWN",
            "cannot send after transport endpoint shutdown"
        ]
    ],
    [
        -29,
        [
            "ESPIPE",
            "invalid seek"
        ]
    ],
    [
        -3,
        [
            "ESRCH",
            "no such process"
        ]
    ],
    [
        -110,
        [
            "ETIMEDOUT",
            "connection timed out"
        ]
    ],
    [
        -26,
        [
            "ETXTBSY",
            "text file is busy"
        ]
    ],
    [
        -18,
        [
            "EXDEV",
            "cross-device link not permitted"
        ]
    ],
    [
        -4094,
        [
            "UNKNOWN",
            "unknown error"
        ]
    ],
    [
        -4095,
        [
            "EOF",
            "end of file"
        ]
    ],
    [
        -6,
        [
            "ENXIO",
            "no such device or address"
        ]
    ],
    [
        -31,
        [
            "EMLINK",
            "too many links"
        ]
    ],
    [
        -112,
        [
            "EHOSTDOWN",
            "host is down"
        ]
    ],
    [
        -121,
        [
            "EREMOTEIO",
            "remote I/O error"
        ]
    ],
    [
        -25,
        [
            "ENOTTY",
            "inappropriate ioctl for device"
        ]
    ],
    [
        -4028,
        [
            "EFTYPE",
            "inappropriate file type or format"
        ]
    ],
    [
        -84,
        [
            "EILSEQ",
            "illegal byte sequence"
        ]
    ], 
];
const errorToCodeLinux = codeToErrorLinux.map(([status, [code]])=>[
        code,
        status
    ]);
const errorMap = new Map(osType === "windows" ? codeToErrorWindows : osType === "darwin" ? codeToErrorDarwin : osType === "linux" ? codeToErrorLinux : unreachable());
const codeMap = new Map(osType === "windows" ? errorToCodeWindows : osType === "darwin" ? errorToCodeDarwin : osType === "linux" ? errorToCodeLinux : unreachable());
var Encodings;
(function(Encodings1) {
    Encodings1[Encodings1["ASCII"] = 0] = "ASCII";
    Encodings1[Encodings1["UTF8"] = 1] = "UTF8";
    Encodings1[Encodings1["BASE64"] = 2] = "BASE64";
    Encodings1[Encodings1["UCS2"] = 3] = "UCS2";
    Encodings1[Encodings1["BINARY"] = 4] = "BINARY";
    Encodings1[Encodings1["HEX"] = 5] = "HEX";
    Encodings1[Encodings1["BUFFER"] = 6] = "BUFFER";
    Encodings1[Encodings1["BASE64URL"] = 7] = "BASE64URL";
    Encodings1[Encodings1["LATIN1"] = 4] = "LATIN1";
})(Encodings || (Encodings = {}));
const encodings = [];
encodings[Encodings.ASCII] = "ascii";
encodings[Encodings.BASE64] = "base64";
encodings[Encodings.BASE64URL] = "base64url";
encodings[Encodings.BUFFER] = "buffer";
encodings[Encodings.HEX] = "hex";
encodings[Encodings.LATIN1] = "latin1";
encodings[Encodings.UCS2] = "utf16le";
encodings[Encodings.UTF8] = "utf8";
function numberToBytes(n360) {
    if (n360 === 0) return new Uint8Array([
        0
    ]);
    const bytes = [];
    bytes.unshift(n360 & 255);
    while(n360 >= 256){
        n360 = n360 >>> 8;
        bytes.unshift(n360 & 255);
    }
    return new Uint8Array(bytes);
}
function findLastIndex(targetBuffer, buffer, offset) {
    offset = offset > targetBuffer.length ? targetBuffer.length : offset;
    const searchableBuffer = targetBuffer.slice(0, offset + buffer.length);
    const searchableBufferLastIndex = searchableBuffer.length - 1;
    const bufferLastIndex = buffer.length - 1;
    let lastMatchIndex = -1;
    let matches = 0;
    let index = -1;
    for(let x85 = 0; x85 <= searchableBufferLastIndex; x85++){
        if (searchableBuffer[searchableBufferLastIndex - x85] === buffer[bufferLastIndex - matches]) {
            if (lastMatchIndex === -1) {
                lastMatchIndex = x85;
            }
            matches++;
        } else {
            matches = 0;
            if (lastMatchIndex !== -1) {
                x85 = lastMatchIndex + 1;
                lastMatchIndex = -1;
            }
            continue;
        }
        if (matches === buffer.length) {
            index = x85;
            break;
        }
    }
    if (index === -1) return index;
    return searchableBufferLastIndex - index;
}
function indexOfBuffer(targetBuffer, buffer, byteOffset, encoding, forwardDirection) {
    if (!Encodings[encoding] === undefined) {
        throw new Error(`Unknown encoding code ${encoding}`);
    }
    if (!forwardDirection) {
        if (byteOffset < 0) {
            byteOffset = targetBuffer.length + byteOffset;
        }
        if (buffer.length === 0) {
            return byteOffset <= targetBuffer.length ? byteOffset : targetBuffer.length;
        }
        return findLastIndex(targetBuffer, buffer, byteOffset);
    }
    if (buffer.length === 0) {
        return byteOffset <= targetBuffer.length ? byteOffset : targetBuffer.length;
    }
    return indexOf(targetBuffer, buffer, byteOffset);
}
function indexOfNumber(targetBuffer, number, byteOffset, forwardDirection) {
    const bytes = numberToBytes(number);
    if (bytes.length > 1) {
        throw new Error("Multi byte number search is not supported");
    }
    return indexOfBuffer(targetBuffer, numberToBytes(number), byteOffset, Encodings.UTF8, forwardDirection);
}
const base64abc = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "/", 
];
function encode(data) {
    const uint8 = typeof data === "string" ? new TextEncoder().encode(data) : data instanceof Uint8Array ? data : new Uint8Array(data);
    let result = "", i343;
    const l183 = uint8.length;
    for(i343 = 2; i343 < l183; i343 += 3){
        result += base64abc[uint8[i343 - 2] >> 2];
        result += base64abc[(uint8[i343 - 2] & 0x03) << 4 | uint8[i343 - 1] >> 4];
        result += base64abc[(uint8[i343 - 1] & 0x0f) << 2 | uint8[i343] >> 6];
        result += base64abc[uint8[i343] & 0x3f];
    }
    if (i343 === l183 + 1) {
        result += base64abc[uint8[i343 - 2] >> 2];
        result += base64abc[(uint8[i343 - 2] & 0x03) << 4];
        result += "==";
    }
    if (i343 === l183) {
        result += base64abc[uint8[i343 - 2] >> 2];
        result += base64abc[(uint8[i343 - 2] & 0x03) << 4 | uint8[i343 - 1] >> 4];
        result += base64abc[(uint8[i343 - 1] & 0x0f) << 2];
        result += "=";
    }
    return result;
}
function decode(b64) {
    const binString = atob(b64);
    const size = binString.length;
    const bytes = new Uint8Array(size);
    for(let i344 = 0; i344 < size; i344++){
        bytes[i344] = binString.charCodeAt(i344);
    }
    return bytes;
}
function addPaddingToBase64url(base64url) {
    if (base64url.length % 4 === 2) return base64url + "==";
    if (base64url.length % 4 === 3) return base64url + "=";
    if (base64url.length % 4 === 1) {
        throw new TypeError("Illegal base64url string!");
    }
    return base64url;
}
function convertBase64urlToBase64(b64url) {
    if (!/^[-_A-Z0-9]*?={0,2}$/i.test(b64url)) {
        throw new TypeError("Failed to decode base64url: invalid character");
    }
    return addPaddingToBase64url(b64url).replace(/\-/g, "+").replace(/_/g, "/");
}
function convertBase64ToBase64url(b64) {
    return b64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
}
function encode1(data) {
    return convertBase64ToBase64url(encode(data));
}
function decode1(b64url) {
    return decode(convertBase64urlToBase64(b64url));
}
function asciiToBytes(str) {
    const byteArray = [];
    for(let i345 = 0; i345 < str.length; ++i345){
        byteArray.push(str.charCodeAt(i345) & 255);
    }
    return new Uint8Array(byteArray);
}
function base64ToBytes(str) {
    return decode(str);
}
function base64UrlToBytes(str) {
    return decode1(str);
}
function hexToBytes(str) {
    const byteArray = new Uint8Array(Math.floor((str || "").length / 2));
    let i346;
    for(i346 = 0; i346 < byteArray.length; i346++){
        const a144 = Number.parseInt(str[i346 * 2], 16);
        const b49 = Number.parseInt(str[i346 * 2 + 1], 16);
        if (Number.isNaN(a144) && Number.isNaN(b49)) {
            break;
        }
        byteArray[i346] = a144 << 4 | b49;
    }
    return new Uint8Array(i346 === byteArray.length ? byteArray : byteArray.slice(0, i346));
}
function utf16leToBytes(str, units) {
    let c101, hi, lo;
    const byteArray = [];
    for(let i347 = 0; i347 < str.length; ++i347){
        if ((units -= 2) < 0) {
            break;
        }
        c101 = str.charCodeAt(i347);
        hi = c101 >> 8;
        lo = c101 % 256;
        byteArray.push(lo);
        byteArray.push(hi);
    }
    return new Uint8Array(byteArray);
}
function bytesToAscii(bytes) {
    let ret = "";
    for(let i348 = 0; i348 < bytes.length; ++i348){
        ret += String.fromCharCode(bytes[i348] & 127);
    }
    return ret;
}
function bytesToUtf16le(bytes) {
    let res = "";
    for(let i349 = 0; i349 < bytes.length - 1; i349 += 2){
        res += String.fromCharCode(bytes[i349] + bytes[i349 + 1] * 256);
    }
    return res;
}
const utf8Encoder = new TextEncoder();
const float32Array = new Float32Array(1);
const uInt8Float32Array = new Uint8Array(float32Array.buffer);
const float64Array = new Float64Array(1);
const uInt8Float64Array = new Uint8Array(float64Array.buffer);
float32Array[0] = -1;
const bigEndian = uInt8Float32Array[3] === 0;
function readUInt48LE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 5];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 6);
    }
    return first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24 + (buf[++offset] + last * 2 ** 8) * 2 ** 32;
}
function readUInt40LE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 4];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 5);
    }
    return first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24 + last * 2 ** 32;
}
function readUInt24LE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 2];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 3);
    }
    return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;
}
function readUInt48BE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 5];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 6);
    }
    return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
}
function readUInt40BE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 4];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 5);
    }
    return first * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
}
function readUInt24BE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 2];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 3);
    }
    return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
}
function readUInt16BE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 1];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 2);
    }
    return first * 2 ** 8 + last;
}
function readUInt32BE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 3];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 4);
    }
    return first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
}
function readDoubleBackwards(buffer, offset = 0) {
    validateNumber(offset, "offset");
    const first = buffer[offset];
    const last = buffer[offset + 7];
    if (first === undefined || last === undefined) {
        boundsError(offset, buffer.length - 8);
    }
    uInt8Float64Array[7] = first;
    uInt8Float64Array[6] = buffer[++offset];
    uInt8Float64Array[5] = buffer[++offset];
    uInt8Float64Array[4] = buffer[++offset];
    uInt8Float64Array[3] = buffer[++offset];
    uInt8Float64Array[2] = buffer[++offset];
    uInt8Float64Array[1] = buffer[++offset];
    uInt8Float64Array[0] = last;
    return float64Array[0];
}
function readDoubleForwards(buffer, offset = 0) {
    validateNumber(offset, "offset");
    const first = buffer[offset];
    const last = buffer[offset + 7];
    if (first === undefined || last === undefined) {
        boundsError(offset, buffer.length - 8);
    }
    uInt8Float64Array[0] = first;
    uInt8Float64Array[1] = buffer[++offset];
    uInt8Float64Array[2] = buffer[++offset];
    uInt8Float64Array[3] = buffer[++offset];
    uInt8Float64Array[4] = buffer[++offset];
    uInt8Float64Array[5] = buffer[++offset];
    uInt8Float64Array[6] = buffer[++offset];
    uInt8Float64Array[7] = last;
    return float64Array[0];
}
function writeDoubleForwards(buffer, val, offset = 0) {
    val = +val;
    checkBounds(buffer, offset, 7);
    float64Array[0] = val;
    buffer[offset++] = uInt8Float64Array[0];
    buffer[offset++] = uInt8Float64Array[1];
    buffer[offset++] = uInt8Float64Array[2];
    buffer[offset++] = uInt8Float64Array[3];
    buffer[offset++] = uInt8Float64Array[4];
    buffer[offset++] = uInt8Float64Array[5];
    buffer[offset++] = uInt8Float64Array[6];
    buffer[offset++] = uInt8Float64Array[7];
    return offset;
}
function writeDoubleBackwards(buffer, val, offset = 0) {
    val = +val;
    checkBounds(buffer, offset, 7);
    float64Array[0] = val;
    buffer[offset++] = uInt8Float64Array[7];
    buffer[offset++] = uInt8Float64Array[6];
    buffer[offset++] = uInt8Float64Array[5];
    buffer[offset++] = uInt8Float64Array[4];
    buffer[offset++] = uInt8Float64Array[3];
    buffer[offset++] = uInt8Float64Array[2];
    buffer[offset++] = uInt8Float64Array[1];
    buffer[offset++] = uInt8Float64Array[0];
    return offset;
}
function readFloatBackwards(buffer, offset = 0) {
    validateNumber(offset, "offset");
    const first = buffer[offset];
    const last = buffer[offset + 3];
    if (first === undefined || last === undefined) {
        boundsError(offset, buffer.length - 4);
    }
    uInt8Float32Array[3] = first;
    uInt8Float32Array[2] = buffer[++offset];
    uInt8Float32Array[1] = buffer[++offset];
    uInt8Float32Array[0] = last;
    return float32Array[0];
}
function readFloatForwards(buffer, offset = 0) {
    validateNumber(offset, "offset");
    const first = buffer[offset];
    const last = buffer[offset + 3];
    if (first === undefined || last === undefined) {
        boundsError(offset, buffer.length - 4);
    }
    uInt8Float32Array[0] = first;
    uInt8Float32Array[1] = buffer[++offset];
    uInt8Float32Array[2] = buffer[++offset];
    uInt8Float32Array[3] = last;
    return float32Array[0];
}
function writeFloatForwards(buffer, val, offset = 0) {
    val = +val;
    checkBounds(buffer, offset, 3);
    float32Array[0] = val;
    buffer[offset++] = uInt8Float32Array[0];
    buffer[offset++] = uInt8Float32Array[1];
    buffer[offset++] = uInt8Float32Array[2];
    buffer[offset++] = uInt8Float32Array[3];
    return offset;
}
function writeFloatBackwards(buffer, val, offset = 0) {
    val = +val;
    checkBounds(buffer, offset, 3);
    float32Array[0] = val;
    buffer[offset++] = uInt8Float32Array[3];
    buffer[offset++] = uInt8Float32Array[2];
    buffer[offset++] = uInt8Float32Array[1];
    buffer[offset++] = uInt8Float32Array[0];
    return offset;
}
function readInt24LE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 2];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 3);
    }
    const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;
    return val | (val & 2 ** 23) * 0x1fe;
}
function readInt40LE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 4];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 5);
    }
    return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 + first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24;
}
function readInt48LE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 5];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 6);
    }
    const val = buf[offset + 4] + last * 2 ** 8;
    return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 + first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24;
}
function readInt24BE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 2];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 3);
    }
    const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
    return val | (val & 2 ** 23) * 0x1fe;
}
function readInt48BE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 5];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 6);
    }
    const val = buf[++offset] + first * 2 ** 8;
    return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
}
function readInt40BE(buf, offset = 0) {
    validateNumber(offset, "offset");
    const first = buf[offset];
    const last = buf[offset + 4];
    if (first === undefined || last === undefined) {
        boundsError(offset, buf.length - 5);
    }
    return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
}
function byteLengthUtf8(str) {
    return utf8Encoder.encode(str).length;
}
function base64ByteLength(str, bytes) {
    if (str.charCodeAt(bytes - 1) === 0x3D) {
        bytes--;
    }
    if (bytes > 1 && str.charCodeAt(bytes - 1) === 0x3D) {
        bytes--;
    }
    return bytes * 3 >>> 2;
}
const encodingsMap = Object.create(null);
for(let i9 = 0; i9 < encodings.length; ++i9){
    encodingsMap[encodings[i9]] = i9;
}
const encodingOps = {
    ascii: {
        byteLength: (string)=>string.length,
        encoding: "ascii",
        encodingVal: encodingsMap.ascii,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, asciiToBytes(val), byteOffset, encodingsMap.ascii, dir),
        slice: (buf, start, end)=>buf.asciiSlice(start, end),
        write: (buf, string, offset, len)=>buf.asciiWrite(string, offset, len)
    },
    base64: {
        byteLength: (string)=>base64ByteLength(string, string.length),
        encoding: "base64",
        encodingVal: encodingsMap.base64,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, base64ToBytes(val), byteOffset, encodingsMap.base64, dir),
        slice: (buf, start, end)=>buf.base64Slice(start, end),
        write: (buf, string, offset, len)=>buf.base64Write(string, offset, len)
    },
    base64url: {
        byteLength: (string)=>base64ByteLength(string, string.length),
        encoding: "base64url",
        encodingVal: encodingsMap.base64url,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, base64UrlToBytes(val), byteOffset, encodingsMap.base64url, dir),
        slice: (buf, start, end)=>buf.base64urlSlice(start, end),
        write: (buf, string, offset, len)=>buf.base64urlWrite(string, offset, len)
    },
    hex: {
        byteLength: (string)=>string.length >>> 1,
        encoding: "hex",
        encodingVal: encodingsMap.hex,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, hexToBytes(val), byteOffset, encodingsMap.hex, dir),
        slice: (buf, start, end)=>buf.hexSlice(start, end),
        write: (buf, string, offset, len)=>buf.hexWrite(string, offset, len)
    },
    latin1: {
        byteLength: (string)=>string.length,
        encoding: "latin1",
        encodingVal: encodingsMap.latin1,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, asciiToBytes(val), byteOffset, encodingsMap.latin1, dir),
        slice: (buf, start, end)=>buf.latin1Slice(start, end),
        write: (buf, string, offset, len)=>buf.latin1Write(string, offset, len)
    },
    ucs2: {
        byteLength: (string)=>string.length * 2,
        encoding: "ucs2",
        encodingVal: encodingsMap.utf16le,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, utf16leToBytes(val), byteOffset, encodingsMap.utf16le, dir),
        slice: (buf, start, end)=>buf.ucs2Slice(start, end),
        write: (buf, string, offset, len)=>buf.ucs2Write(string, offset, len)
    },
    utf8: {
        byteLength: byteLengthUtf8,
        encoding: "utf8",
        encodingVal: encodingsMap.utf8,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, utf8Encoder.encode(val), byteOffset, encodingsMap.utf8, dir),
        slice: (buf, start, end)=>buf.utf8Slice(start, end),
        write: (buf, string, offset, len)=>buf.utf8Write(string, offset, len)
    },
    utf16le: {
        byteLength: (string)=>string.length * 2,
        encoding: "utf16le",
        encodingVal: encodingsMap.utf16le,
        indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, utf16leToBytes(val), byteOffset, encodingsMap.utf16le, dir),
        slice: (buf, start, end)=>buf.ucs2Slice(start, end),
        write: (buf, string, offset, len)=>buf.ucs2Write(string, offset, len)
    }
};
function getEncodingOps(encoding) {
    encoding = String(encoding).toLowerCase();
    switch(encoding.length){
        case 4:
            if (encoding === "utf8") return encodingOps.utf8;
            if (encoding === "ucs2") return encodingOps.ucs2;
            break;
        case 5:
            if (encoding === "utf-8") return encodingOps.utf8;
            if (encoding === "ascii") return encodingOps.ascii;
            if (encoding === "ucs-2") return encodingOps.ucs2;
            break;
        case 7:
            if (encoding === "utf16le") {
                return encodingOps.utf16le;
            }
            break;
        case 8:
            if (encoding === "utf-16le") {
                return encodingOps.utf16le;
            }
            break;
        case 6:
            if (encoding === "latin1" || encoding === "binary") {
                return encodingOps.latin1;
            }
            if (encoding === "base64") return encodingOps.base64;
        case 3:
            if (encoding === "hex") {
                return encodingOps.hex;
            }
            break;
        case 9:
            if (encoding === "base64url") {
                return encodingOps.base64url;
            }
            break;
    }
}
function _copyActual(source, target, targetStart, sourceStart, sourceEnd) {
    if (sourceEnd - sourceStart > target.length - targetStart) {
        sourceEnd = sourceStart + target.length - targetStart;
    }
    let nb = sourceEnd - sourceStart;
    const sourceLen = source.length - sourceStart;
    if (nb > sourceLen) {
        nb = sourceLen;
    }
    if (sourceStart !== 0 || sourceEnd < source.length) {
        source = new Uint8Array(source.buffer, source.byteOffset + sourceStart, nb);
    }
    target.set(source, targetStart);
    return nb;
}
function boundsError(value, length, type) {
    if (Math.floor(value) !== value) {
        validateNumber(value, type);
        throw new codes.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
    }
    if (length < 0) {
        throw new codes.ERR_BUFFER_OUT_OF_BOUNDS();
    }
    throw new codes.ERR_OUT_OF_RANGE(type || "offset", `>= ${type ? 1 : 0} and <= ${length}`, value);
}
function validateNumber(value, name) {
    if (typeof value !== "number") {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
    }
}
function checkBounds(buf, offset, byteLength1) {
    validateNumber(offset, "offset");
    if (buf[offset] === undefined || buf[offset + byteLength1] === undefined) {
        boundsError(offset, buf.length - (byteLength1 + 1));
    }
}
function checkInt(value, min, max, buf, offset, byteLength2) {
    if (value > max || value < min) {
        const n361 = typeof min === "bigint" ? "n" : "";
        let range;
        if (byteLength2 > 3) {
            if (min === 0 || min === 0n) {
                range = `>= 0${n361} and < 2${n361} ** ${(byteLength2 + 1) * 8}${n361}`;
            } else {
                range = `>= -(2${n361} ** ${(byteLength2 + 1) * 8 - 1}${n361}) and ` + `< 2${n361} ** ${(byteLength2 + 1) * 8 - 1}${n361}`;
            }
        } else {
            range = `>= ${min}${n361} and <= ${max}${n361}`;
        }
        throw new codes.ERR_OUT_OF_RANGE("value", range, value);
    }
    checkBounds(buf, offset, byteLength2);
}
function toInteger(n362, defaultVal) {
    n362 = +n362;
    if (!Number.isNaN(n362) && n362 >= Number.MIN_SAFE_INTEGER && n362 <= Number.MAX_SAFE_INTEGER) {
        return n362 % 1 === 0 ? n362 : Math.floor(n362);
    }
    return defaultVal;
}
function writeU_Int8(buf, value, offset, min, max) {
    value = +value;
    validateNumber(offset, "offset");
    if (value > max || value < min) {
        throw new codes.ERR_OUT_OF_RANGE("value", `>= ${min} and <= ${max}`, value);
    }
    if (buf[offset] === undefined) {
        boundsError(offset, buf.length - 1);
    }
    buf[offset] = value;
    return offset + 1;
}
function writeU_Int16BE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 1);
    buf[offset++] = value >>> 8;
    buf[offset++] = value;
    return offset;
}
function _writeUInt32LE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 3);
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    return offset;
}
function writeU_Int16LE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 1);
    buf[offset++] = value;
    buf[offset++] = value >>> 8;
    return offset;
}
function _writeUInt32BE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 3);
    buf[offset + 3] = value;
    value = value >>> 8;
    buf[offset + 2] = value;
    value = value >>> 8;
    buf[offset + 1] = value;
    value = value >>> 8;
    buf[offset] = value;
    return offset + 4;
}
function writeU_Int48BE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 5);
    const newVal = Math.floor(value * 2 ** -32);
    buf[offset++] = newVal >>> 8;
    buf[offset++] = newVal;
    buf[offset + 3] = value;
    value = value >>> 8;
    buf[offset + 2] = value;
    value = value >>> 8;
    buf[offset + 1] = value;
    value = value >>> 8;
    buf[offset] = value;
    return offset + 4;
}
function writeU_Int40BE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 4);
    buf[offset++] = Math.floor(value * 2 ** -32);
    buf[offset + 3] = value;
    value = value >>> 8;
    buf[offset + 2] = value;
    value = value >>> 8;
    buf[offset + 1] = value;
    value = value >>> 8;
    buf[offset] = value;
    return offset + 4;
}
function writeU_Int32BE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 3);
    buf[offset + 3] = value;
    value = value >>> 8;
    buf[offset + 2] = value;
    value = value >>> 8;
    buf[offset + 1] = value;
    value = value >>> 8;
    buf[offset] = value;
    return offset + 4;
}
function writeU_Int24BE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 2);
    buf[offset + 2] = value;
    value = value >>> 8;
    buf[offset + 1] = value;
    value = value >>> 8;
    buf[offset] = value;
    return offset + 3;
}
function validateOffset(value, name, min = 0, max = Number.MAX_SAFE_INTEGER) {
    if (typeof value !== "number") {
        throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
    }
    if (!Number.isInteger(value)) {
        throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
    }
    if (value < min || value > max) {
        throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
    }
}
function writeU_Int48LE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 5);
    const newVal = Math.floor(value * 2 ** -32);
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    buf[offset++] = newVal;
    buf[offset++] = newVal >>> 8;
    return offset;
}
function writeU_Int40LE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 4);
    const newVal = value;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    buf[offset++] = Math.floor(newVal * 2 ** -32);
    return offset;
}
function writeU_Int32LE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 3);
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    return offset;
}
function writeU_Int24LE(buf, value, offset, min, max) {
    value = +value;
    checkInt(value, min, max, buf, offset, 2);
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    value = value >>> 8;
    buf[offset++] = value;
    return offset;
}
const kMaxLength = 2147483647;
const customInspectSymbol1 = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
const INSPECT_MAX_BYTES = 50;
Object.defineProperty(Buffer.prototype, "parent", {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) {
            return void 0;
        }
        return this.buffer;
    }
});
Object.defineProperty(Buffer.prototype, "offset", {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) {
            return void 0;
        }
        return this.byteOffset;
    }
});
function createBuffer(length) {
    if (length > 2147483647) {
        throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }
    const buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === "number") {
        if (typeof encodingOrOffset === "string") {
            throw new codes.ERR_INVALID_ARG_TYPE("string", "string", arg);
        }
        return _allocUnsafe(arg);
    }
    return _from(arg, encodingOrOffset, length);
}
Buffer.poolSize = 8192;
function _from(value, encodingOrOffset, length) {
    if (typeof value === "string") {
        return fromString(value, encodingOrOffset);
    }
    if (typeof value === "object" && value !== null) {
        if (isAnyArrayBuffer1(value)) {
            return fromArrayBuffer(value, encodingOrOffset, length);
        }
        const valueOf = value.valueOf && value.valueOf();
        if (valueOf != null && valueOf !== value && (typeof valueOf === "string" || typeof valueOf === "object")) {
            return _from(valueOf, encodingOrOffset, length);
        }
        const b50 = fromObject(value);
        if (b50) {
            return b50;
        }
        if (typeof value[Symbol.toPrimitive] === "function") {
            const primitive = value[Symbol.toPrimitive]("string");
            if (typeof primitive === "string") {
                return fromString(primitive, encodingOrOffset);
            }
        }
    }
    throw new codes.ERR_INVALID_ARG_TYPE("first argument", [
        "string",
        "Buffer",
        "ArrayBuffer",
        "Array",
        "Array-like Object"
    ], value);
}
Buffer.from = function from(value, encodingOrOffset, length) {
    return _from(value, encodingOrOffset, length);
};
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(Buffer, Uint8Array);
function assertSize(size) {
    validateNumber(size, "size");
    if (!(size >= 0 && size <= 2147483647)) {
        throw new codes.ERR_INVALID_ARG_VALUE.RangeError("size", size);
    }
}
function _alloc(size, fill, encoding) {
    assertSize(size);
    const buffer = createBuffer(size);
    if (fill !== undefined) {
        return buffer.fill(fill, encoding);
    }
    return buffer;
}
Buffer.alloc = function alloc(size, fill, encoding) {
    return _alloc(size, fill, encoding);
};
function _allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
}
Buffer.allocUnsafe = function allocUnsafe(size) {
    return _allocUnsafe(size);
};
Buffer.allocUnsafeSlow = function allocUnsafeSlow(size) {
    return _allocUnsafe(size);
};
function fromString(string, encoding) {
    if (typeof encoding !== "string" || encoding === "") {
        encoding = "utf8";
    }
    if (!Buffer.isEncoding(encoding)) {
        throw new TypeError("Unknown encoding: " + encoding);
    }
    const length = byteLength(string, encoding) | 0;
    let buf = createBuffer(length);
    const actual = buf.write(string, encoding);
    if (actual !== length) {
        buf = buf.slice(0, actual);
    }
    return buf;
}
function fromArrayLike(array) {
    const length = array.length < 0 ? 0 : checked(array.length) | 0;
    const buf = createBuffer(length);
    for(let i350 = 0; i350 < length; i350 += 1){
        buf[i350] = array[i350] & 255;
    }
    return buf;
}
function fromObject(obj) {
    if (obj.length !== undefined || isAnyArrayBuffer1(obj.buffer)) {
        if (typeof obj.length !== "number") {
            return createBuffer(0);
        }
        return fromArrayLike(obj);
    }
    if (obj.type === "Buffer" && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
    }
}
function checked(length) {
    if (length >= 2147483647) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + 2147483647..toString(16) + " bytes");
    }
    return length | 0;
}
function SlowBuffer(length) {
    assertSize(length);
    return Buffer.alloc(+length);
}
Object.setPrototypeOf(SlowBuffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(SlowBuffer, Uint8Array);
Buffer.isBuffer = function isBuffer(b51) {
    return b51 != null && b51._isBuffer === true && b51 !== Buffer.prototype;
};
Buffer.compare = function compare(a145, b52) {
    if (isInstance(a145, Uint8Array)) {
        a145 = Buffer.from(a145, a145.offset, a145.byteLength);
    }
    if (isInstance(b52, Uint8Array)) {
        b52 = Buffer.from(b52, b52.offset, b52.byteLength);
    }
    if (!Buffer.isBuffer(a145) || !Buffer.isBuffer(b52)) {
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }
    if (a145 === b52) {
        return 0;
    }
    let x86 = a145.length;
    let y57 = b52.length;
    for(let i351 = 0, len = Math.min(x86, y57); i351 < len; ++i351){
        if (a145[i351] !== b52[i351]) {
            x86 = a145[i351];
            y57 = b52[i351];
            break;
        }
    }
    if (x86 < y57) {
        return -1;
    }
    if (y57 < x86) {
        return 1;
    }
    return 0;
};
Buffer.isEncoding = function isEncoding(encoding) {
    return typeof encoding === "string" && encoding.length !== 0 && normalizeEncoding(encoding) !== undefined;
};
Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
        throw new codes.ERR_INVALID_ARG_TYPE("list", "Array", list);
    }
    if (list.length === 0) {
        return Buffer.alloc(0);
    }
    if (length === undefined) {
        length = 0;
        for(let i352 = 0; i352 < list.length; i352++){
            if (list[i352].length) {
                length += list[i352].length;
            }
        }
    } else {
        validateOffset(length, "length");
    }
    const buffer = Buffer.allocUnsafe(length);
    let pos = 0;
    for(let i353 = 0; i353 < list.length; i353++){
        const buf = list[i353];
        if (!isUint8Array(buf)) {
            throw new codes.ERR_INVALID_ARG_TYPE(`list[${i353}]`, [
                "Buffer",
                "Uint8Array"
            ], list[i353]);
        }
        pos += _copyActual(buf, buffer, pos, 0, buf.length);
    }
    if (pos < length) {
        buffer.fill(0, pos, length);
    }
    return buffer;
};
function byteLength(string, encoding) {
    if (typeof string !== "string") {
        if (isArrayBufferView(string) || isAnyArrayBuffer1(string)) {
            return string.byteLength;
        }
        throw new codes.ERR_INVALID_ARG_TYPE("string", [
            "string",
            "Buffer",
            "ArrayBuffer"
        ], string);
    }
    const len = string.length;
    const mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) {
        return 0;
    }
    if (!encoding) {
        return mustMatch ? -1 : byteLengthUtf8(string);
    }
    const ops = getEncodingOps(encoding);
    if (ops === undefined) {
        return mustMatch ? -1 : byteLengthUtf8(string);
    }
    return ops.byteLength(string);
}
Buffer.byteLength = byteLength;
Buffer.prototype._isBuffer = true;
function swap(b53, n363, m89) {
    const i354 = b53[n363];
    b53[n363] = b53[m89];
    b53[m89] = i354;
}
Buffer.prototype.swap16 = function swap16() {
    const len = this.length;
    if (len % 2 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 16-bits");
    }
    for(let i355 = 0; i355 < len; i355 += 2){
        swap(this, i355, i355 + 1);
    }
    return this;
};
Buffer.prototype.swap32 = function swap32() {
    const len = this.length;
    if (len % 4 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 32-bits");
    }
    for(let i356 = 0; i356 < len; i356 += 4){
        swap(this, i356, i356 + 3);
        swap(this, i356 + 1, i356 + 2);
    }
    return this;
};
Buffer.prototype.swap64 = function swap64() {
    const len = this.length;
    if (len % 8 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 64-bits");
    }
    for(let i357 = 0; i357 < len; i357 += 8){
        swap(this, i357, i357 + 7);
        swap(this, i357 + 1, i357 + 6);
        swap(this, i357 + 2, i357 + 5);
        swap(this, i357 + 3, i357 + 4);
    }
    return this;
};
Buffer.prototype.toString = function toString(encoding, start, end) {
    if (arguments.length === 0) {
        return this.utf8Slice(0, this.length);
    }
    const len = this.length;
    if (start <= 0) {
        start = 0;
    } else if (start >= len) {
        return "";
    } else {
        start |= 0;
    }
    if (end === undefined || end > len) {
        end = len;
    } else {
        end |= 0;
    }
    if (end <= start) {
        return "";
    }
    if (encoding === undefined) {
        return this.utf8Slice(start, end);
    }
    const ops = getEncodingOps(encoding);
    if (ops === undefined) {
        throw new codes.ERR_UNKNOWN_ENCODING(encoding);
    }
    return ops.slice(this, start, end);
};
Buffer.prototype.toLocaleString = Buffer.prototype.toString;
Buffer.prototype.equals = function equals(b54) {
    if (!isUint8Array(b54)) {
        throw new codes.ERR_INVALID_ARG_TYPE("otherBuffer", [
            "Buffer",
            "Uint8Array"
        ], b54);
    }
    if (this === b54) {
        return true;
    }
    return Buffer.compare(this, b54) === 0;
};
Buffer.prototype.inspect = function inspect() {
    let str = "";
    const max = INSPECT_MAX_BYTES;
    str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
    if (this.length > max) {
        str += " ... ";
    }
    return "<Buffer " + str + ">";
};
if (customInspectSymbol1) {
    Buffer.prototype[customInspectSymbol1] = Buffer.prototype.inspect;
}
Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
        target = Buffer.from(target, target.offset, target.byteLength);
    }
    if (!Buffer.isBuffer(target)) {
        throw new codes.ERR_INVALID_ARG_TYPE("target", [
            "Buffer",
            "Uint8Array"
        ], target);
    }
    if (start === undefined) {
        start = 0;
    } else {
        validateOffset(start, "targetStart", 0, kMaxLength);
    }
    if (end === undefined) {
        end = target.length;
    } else {
        validateOffset(end, "targetEnd", 0, target.length);
    }
    if (thisStart === undefined) {
        thisStart = 0;
    } else {
        validateOffset(start, "sourceStart", 0, kMaxLength);
    }
    if (thisEnd === undefined) {
        thisEnd = this.length;
    } else {
        validateOffset(end, "sourceEnd", 0, this.length);
    }
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new codes.ERR_OUT_OF_RANGE("out of range index", "range");
    }
    if (thisStart >= thisEnd && start >= end) {
        return 0;
    }
    if (thisStart >= thisEnd) {
        return -1;
    }
    if (start >= end) {
        return 1;
    }
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) {
        return 0;
    }
    let x87 = thisEnd - thisStart;
    let y58 = end - start;
    const len = Math.min(x87, y58);
    const thisCopy = this.slice(thisStart, thisEnd);
    const targetCopy = target.slice(start, end);
    for(let i358 = 0; i358 < len; ++i358){
        if (thisCopy[i358] !== targetCopy[i358]) {
            x87 = thisCopy[i358];
            y58 = targetCopy[i358];
            break;
        }
    }
    if (x87 < y58) {
        return -1;
    }
    if (y58 < x87) {
        return 1;
    }
    return 0;
};
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    validateBuffer(buffer);
    if (typeof byteOffset === "string") {
        encoding = byteOffset;
        byteOffset = undefined;
    } else if (byteOffset > 0x7fffffff) {
        byteOffset = 0x7fffffff;
    } else if (byteOffset < -0x80000000) {
        byteOffset = -0x80000000;
    }
    byteOffset = +byteOffset;
    if (Number.isNaN(byteOffset)) {
        byteOffset = dir ? 0 : buffer.length || buffer.byteLength;
    }
    dir = !!dir;
    if (typeof val === "number") {
        return indexOfNumber(buffer, val >>> 0, byteOffset, dir);
    }
    let ops;
    if (encoding === undefined) {
        ops = encodingOps.utf8;
    } else {
        ops = getEncodingOps(encoding);
    }
    if (typeof val === "string") {
        if (ops === undefined) {
            throw new codes.ERR_UNKNOWN_ENCODING(encoding);
        }
        return ops.indexOf(buffer, val, byteOffset, dir);
    }
    if (isUint8Array(val)) {
        const encodingVal = ops === undefined ? encodingsMap.utf8 : ops.encodingVal;
        return indexOfBuffer(buffer, val, byteOffset, encodingVal, dir);
    }
    throw new codes.ERR_INVALID_ARG_TYPE("value", [
        "number",
        "string",
        "Buffer",
        "Uint8Array"
    ], val);
}
Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
};
Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
Buffer.prototype.asciiSlice = function asciiSlice(offset, length) {
    if (offset === 0 && length === this.length) {
        return bytesToAscii(this);
    } else {
        return bytesToAscii(this.slice(offset, length));
    }
};
Buffer.prototype.asciiWrite = function asciiWrite(string, offset, length) {
    return blitBuffer(asciiToBytes(string), this, offset, length);
};
Buffer.prototype.base64Slice = function base64Slice(offset, length) {
    if (offset === 0 && length === this.length) {
        return encode(this);
    } else {
        return encode(this.slice(offset, length));
    }
};
Buffer.prototype.base64Write = function base64Write(string, offset, length) {
    return blitBuffer(base64ToBytes(string), this, offset, length);
};
Buffer.prototype.base64urlSlice = function base64urlSlice(offset, length) {
    if (offset === 0 && length === this.length) {
        return encode1(this);
    } else {
        return encode1(this.slice(offset, length));
    }
};
Buffer.prototype.base64urlWrite = function base64urlWrite(string, offset, length) {
    return blitBuffer(base64UrlToBytes(string), this, offset, length);
};
Buffer.prototype.hexWrite = function hexWrite(string, offset, length) {
    return blitBuffer(hexToBytes(string, this.length - offset), this, offset, length);
};
Buffer.prototype.hexSlice = function hexSlice(string, offset, length) {
    return _hexSlice(this, string, offset, length);
};
Buffer.prototype.latin1Slice = function latin1Slice(string, offset, length) {
    return _latin1Slice(this, string, offset, length);
};
Buffer.prototype.latin1Write = function latin1Write(string, offset, length) {
    return blitBuffer(asciiToBytes(string), this, offset, length);
};
Buffer.prototype.ucs2Slice = function ucs2Slice(offset, length) {
    if (offset === 0 && length === this.length) {
        return bytesToUtf16le(this);
    } else {
        return bytesToUtf16le(this.slice(offset, length));
    }
};
Buffer.prototype.ucs2Write = function ucs2Write(string, offset, length) {
    return blitBuffer(utf16leToBytes(string, this.length - offset), this, offset, length);
};
Buffer.prototype.utf8Slice = function utf8Slice(string, offset, length) {
    return _utf8Slice(this, string, offset, length);
};
Buffer.prototype.utf8Write = function utf8Write(string, offset, length) {
    return blitBuffer(utf8ToBytes(string, this.length - offset), this, offset, length);
};
Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
        return this.utf8Write(string, 0, this.length);
    }
    if (length === undefined && typeof offset === "string") {
        encoding = offset;
        length = this.length;
        offset = 0;
    } else {
        validateOffset(offset, "offset", 0, this.length);
        const remaining = this.length - offset;
        if (length === undefined) {
            length = remaining;
        } else if (typeof length === "string") {
            encoding = length;
            length = remaining;
        } else {
            validateOffset(length, "length", 0, this.length);
            if (length > remaining) {
                length = remaining;
            }
        }
    }
    if (!encoding) {
        return this.utf8Write(string, offset, length);
    }
    const ops = getEncodingOps(encoding);
    if (ops === undefined) {
        throw new codes.ERR_UNKNOWN_ENCODING(encoding);
    }
    return ops.write(this, string, offset, length);
};
Buffer.prototype.toJSON = function toJSON() {
    return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
    };
};
function fromArrayBuffer(obj, byteOffset, length) {
    if (byteOffset === undefined) {
        byteOffset = 0;
    } else {
        byteOffset = +byteOffset;
        if (Number.isNaN(byteOffset)) {
            byteOffset = 0;
        }
    }
    const maxLength = obj.byteLength - byteOffset;
    if (maxLength < 0) {
        throw new codes.ERR_BUFFER_OUT_OF_BOUNDS("offset");
    }
    if (length === undefined) {
        length = maxLength;
    } else {
        length = +length;
        if (length > 0) {
            if (length > maxLength) {
                throw new codes.ERR_BUFFER_OUT_OF_BOUNDS("length");
            }
        } else {
            length = 0;
        }
    }
    const buffer = new Uint8Array(obj, byteOffset, length);
    Object.setPrototypeOf(buffer, Buffer.prototype);
    return buffer;
}
function _utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    const res = [];
    let i359 = start;
    while(i359 < end){
        const firstByte = buf[i359];
        let codePoint = null;
        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i359 + bytesPerSequence <= end) {
            let secondByte, thirdByte, fourthByte, tempCodePoint;
            switch(bytesPerSequence){
                case 1:
                    if (firstByte < 128) {
                        codePoint = firstByte;
                    }
                    break;
                case 2:
                    secondByte = buf[i359 + 1];
                    if ((secondByte & 192) === 128) {
                        tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                        if (tempCodePoint > 127) {
                            codePoint = tempCodePoint;
                        }
                    }
                    break;
                case 3:
                    secondByte = buf[i359 + 1];
                    thirdByte = buf[i359 + 2];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                        if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                            codePoint = tempCodePoint;
                        }
                    }
                    break;
                case 4:
                    secondByte = buf[i359 + 1];
                    thirdByte = buf[i359 + 2];
                    fourthByte = buf[i359 + 3];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                        if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                            codePoint = tempCodePoint;
                        }
                    }
            }
        }
        if (codePoint === null) {
            codePoint = 65533;
            bytesPerSequence = 1;
        } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i359 += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
}
const MAX_ARGUMENTS_LENGTH = 4096;
function decodeCodePointsArray(codePoints) {
    const len = codePoints.length;
    if (len <= 4096) {
        return String.fromCharCode.apply(String, codePoints);
    }
    let res = "";
    let i360 = 0;
    while(i360 < len){
        res += String.fromCharCode.apply(String, codePoints.slice(i360, i360 += MAX_ARGUMENTS_LENGTH));
    }
    return res;
}
function _latin1Slice(buf, start, end) {
    let ret = "";
    end = Math.min(buf.length, end);
    for(let i361 = start; i361 < end; ++i361){
        ret += String.fromCharCode(buf[i361]);
    }
    return ret;
}
function _hexSlice(buf, start, end) {
    const len = buf.length;
    if (!start || start < 0) {
        start = 0;
    }
    if (!end || end < 0 || end > len) {
        end = len;
    }
    let out = "";
    for(let i362 = start; i362 < end; ++i362){
        out += hexSliceLookupTable[buf[i362]];
    }
    return out;
}
Buffer.prototype.slice = function slice(start, end) {
    const len = this.length;
    start = ~~start;
    end = end === void 0 ? len : ~~end;
    if (start < 0) {
        start += len;
        if (start < 0) {
            start = 0;
        }
    } else if (start > len) {
        start = len;
    }
    if (end < 0) {
        end += len;
        if (end < 0) {
            end = 0;
        }
    } else if (end > len) {
        end = len;
    }
    if (end < start) {
        end = start;
    }
    const newBuf = this.subarray(start, end);
    Object.setPrototypeOf(newBuf, Buffer.prototype);
    return newBuf;
};
Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength1) {
    if (offset === undefined) {
        throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
    }
    if (byteLength1 === 6) {
        return readUInt48LE(this, offset);
    }
    if (byteLength1 === 5) {
        return readUInt40LE(this, offset);
    }
    if (byteLength1 === 3) {
        return readUInt24LE(this, offset);
    }
    if (byteLength1 === 4) {
        return this.readUInt32LE(offset);
    }
    if (byteLength1 === 2) {
        return this.readUInt16LE(offset);
    }
    if (byteLength1 === 1) {
        return this.readUInt8(offset);
    }
    boundsError(byteLength1, 6, "byteLength");
};
Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength2) {
    if (offset === undefined) {
        throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
    }
    if (byteLength2 === 6) {
        return readUInt48BE(this, offset);
    }
    if (byteLength2 === 5) {
        return readUInt40BE(this, offset);
    }
    if (byteLength2 === 3) {
        return readUInt24BE(this, offset);
    }
    if (byteLength2 === 4) {
        return this.readUInt32BE(offset);
    }
    if (byteLength2 === 2) {
        return this.readUInt16BE(offset);
    }
    if (byteLength2 === 1) {
        return this.readUInt8(offset);
    }
    boundsError(byteLength2, 6, "byteLength");
};
Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset = 0) {
    validateNumber(offset, "offset");
    const val = this[offset];
    if (val === undefined) {
        boundsError(offset, this.length - 1);
    }
    return val;
};
Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = readUInt16BE;
Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 1];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 2);
    }
    return first + last * 2 ** 8;
};
Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 3];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 4);
    }
    return first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
};
Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = readUInt32BE;
Buffer.prototype.readBigUint64LE = Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
    }
    const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
    const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
    return BigInt(lo) + (BigInt(hi) << BigInt(32));
});
Buffer.prototype.readBigUint64BE = Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
    }
    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
    return (BigInt(hi) << BigInt(32)) + BigInt(lo);
});
Buffer.prototype.readIntLE = function readIntLE(offset, byteLength3) {
    if (offset === undefined) {
        throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
    }
    if (byteLength3 === 6) {
        return readInt48LE(this, offset);
    }
    if (byteLength3 === 5) {
        return readInt40LE(this, offset);
    }
    if (byteLength3 === 3) {
        return readInt24LE(this, offset);
    }
    if (byteLength3 === 4) {
        return this.readInt32LE(offset);
    }
    if (byteLength3 === 2) {
        return this.readInt16LE(offset);
    }
    if (byteLength3 === 1) {
        return this.readInt8(offset);
    }
    boundsError(byteLength3, 6, "byteLength");
};
Buffer.prototype.readIntBE = function readIntBE(offset, byteLength4) {
    if (offset === undefined) {
        throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
    }
    if (byteLength4 === 6) {
        return readInt48BE(this, offset);
    }
    if (byteLength4 === 5) {
        return readInt40BE(this, offset);
    }
    if (byteLength4 === 3) {
        return readInt24BE(this, offset);
    }
    if (byteLength4 === 4) {
        return this.readInt32BE(offset);
    }
    if (byteLength4 === 2) {
        return this.readInt16BE(offset);
    }
    if (byteLength4 === 1) {
        return this.readInt8(offset);
    }
    boundsError(byteLength4, 6, "byteLength");
};
Buffer.prototype.readInt8 = function readInt8(offset = 0) {
    validateNumber(offset, "offset");
    const val = this[offset];
    if (val === undefined) {
        boundsError(offset, this.length - 1);
    }
    return val | (val & 2 ** 7) * 0x1fffffe;
};
Buffer.prototype.readInt16LE = function readInt16LE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 1];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 2);
    }
    const val = first + last * 2 ** 8;
    return val | (val & 2 ** 15) * 0x1fffe;
};
Buffer.prototype.readInt16BE = function readInt16BE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 1];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 2);
    }
    const val = first * 2 ** 8 + last;
    return val | (val & 2 ** 15) * 0x1fffe;
};
Buffer.prototype.readInt32LE = function readInt32LE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 3];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 4);
    }
    return first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + (last << 24);
};
Buffer.prototype.readInt32BE = function readInt32BE(offset = 0) {
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 3];
    if (first === undefined || last === undefined) {
        boundsError(offset, this.length - 4);
    }
    return (first << 24) + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
};
Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
    }
    const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
});
Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
    }
    const val = (first << 24) + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
});
Buffer.prototype.readFloatLE = function readFloatLE(offset) {
    return bigEndian ? readFloatBackwards(this, offset) : readFloatForwards(this, offset);
};
Buffer.prototype.readFloatBE = function readFloatBE(offset) {
    return bigEndian ? readFloatForwards(this, offset) : readFloatBackwards(this, offset);
};
Buffer.prototype.readDoubleLE = function readDoubleLE(offset) {
    return bigEndian ? readDoubleBackwards(this, offset) : readDoubleForwards(this, offset);
};
Buffer.prototype.readDoubleBE = function readDoubleBE(offset) {
    return bigEndian ? readDoubleForwards(this, offset) : readDoubleBackwards(this, offset);
};
Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength5) {
    if (byteLength5 === 6) {
        return writeU_Int48LE(this, value, offset, 0, 0xffffffffffff);
    }
    if (byteLength5 === 5) {
        return writeU_Int40LE(this, value, offset, 0, 0xffffffffff);
    }
    if (byteLength5 === 3) {
        return writeU_Int24LE(this, value, offset, 0, 0xffffff);
    }
    if (byteLength5 === 4) {
        return writeU_Int32LE(this, value, offset, 0, 0xffffffff);
    }
    if (byteLength5 === 2) {
        return writeU_Int16LE(this, value, offset, 0, 0xffff);
    }
    if (byteLength5 === 1) {
        return writeU_Int8(this, value, offset, 0, 0xff);
    }
    boundsError(byteLength5, 6, "byteLength");
};
Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength6) {
    if (byteLength6 === 6) {
        return writeU_Int48BE(this, value, offset, 0, 0xffffffffffff);
    }
    if (byteLength6 === 5) {
        return writeU_Int40BE(this, value, offset, 0, 0xffffffffff);
    }
    if (byteLength6 === 3) {
        return writeU_Int24BE(this, value, offset, 0, 0xffffff);
    }
    if (byteLength6 === 4) {
        return writeU_Int32BE(this, value, offset, 0, 0xffffffff);
    }
    if (byteLength6 === 2) {
        return writeU_Int16BE(this, value, offset, 0, 0xffff);
    }
    if (byteLength6 === 1) {
        return writeU_Int8(this, value, offset, 0, 0xff);
    }
    boundsError(byteLength6, 6, "byteLength");
};
Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset = 0) {
    return writeU_Int8(this, value, offset, 0, 0xff);
};
Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset = 0) {
    return writeU_Int16LE(this, value, offset, 0, 0xffff);
};
Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset = 0) {
    return writeU_Int16BE(this, value, offset, 0, 0xffff);
};
Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset = 0) {
    return _writeUInt32LE(this, value, offset, 0, 0xffffffff);
};
Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset = 0) {
    return _writeUInt32BE(this, value, offset, 0, 0xffffffff);
};
function wrtBigUInt64LE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(4294967295));
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    let hi = Number(value >> BigInt(32) & BigInt(4294967295));
    buf[offset++] = hi;
    hi = hi >> 8;
    buf[offset++] = hi;
    hi = hi >> 8;
    buf[offset++] = hi;
    hi = hi >> 8;
    buf[offset++] = hi;
    return offset;
}
function wrtBigUInt64BE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(4294967295));
    buf[offset + 7] = lo;
    lo = lo >> 8;
    buf[offset + 6] = lo;
    lo = lo >> 8;
    buf[offset + 5] = lo;
    lo = lo >> 8;
    buf[offset + 4] = lo;
    let hi = Number(value >> BigInt(32) & BigInt(4294967295));
    buf[offset + 3] = hi;
    hi = hi >> 8;
    buf[offset + 2] = hi;
    hi = hi >> 8;
    buf[offset + 1] = hi;
    hi = hi >> 8;
    buf[offset] = hi;
    return offset + 8;
}
Buffer.prototype.writeBigUint64LE = Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
});
Buffer.prototype.writeBigUint64BE = Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
});
Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength7) {
    if (byteLength7 === 6) {
        return writeU_Int48LE(this, value, offset, -0x800000000000, 0x7fffffffffff);
    }
    if (byteLength7 === 5) {
        return writeU_Int40LE(this, value, offset, -0x8000000000, 0x7fffffffff);
    }
    if (byteLength7 === 3) {
        return writeU_Int24LE(this, value, offset, -0x800000, 0x7fffff);
    }
    if (byteLength7 === 4) {
        return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);
    }
    if (byteLength7 === 2) {
        return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);
    }
    if (byteLength7 === 1) {
        return writeU_Int8(this, value, offset, -0x80, 0x7f);
    }
    boundsError(byteLength7, 6, "byteLength");
};
Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength8) {
    if (byteLength8 === 6) {
        return writeU_Int48BE(this, value, offset, -0x800000000000, 0x7fffffffffff);
    }
    if (byteLength8 === 5) {
        return writeU_Int40BE(this, value, offset, -0x8000000000, 0x7fffffffff);
    }
    if (byteLength8 === 3) {
        return writeU_Int24BE(this, value, offset, -0x800000, 0x7fffff);
    }
    if (byteLength8 === 4) {
        return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);
    }
    if (byteLength8 === 2) {
        return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);
    }
    if (byteLength8 === 1) {
        return writeU_Int8(this, value, offset, -0x80, 0x7f);
    }
    boundsError(byteLength8, 6, "byteLength");
};
Buffer.prototype.writeInt8 = function writeInt8(value, offset = 0) {
    return writeU_Int8(this, value, offset, -0x80, 0x7f);
};
Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset = 0) {
    return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);
};
Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset = 0) {
    return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);
};
Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset = 0) {
    return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);
};
Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset = 0) {
    return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);
};
Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
});
Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
});
Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset) {
    return bigEndian ? writeFloatBackwards(this, value, offset) : writeFloatForwards(this, value, offset);
};
Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset) {
    return bigEndian ? writeFloatForwards(this, value, offset) : writeFloatBackwards(this, value, offset);
};
Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset) {
    return bigEndian ? writeDoubleBackwards(this, value, offset) : writeDoubleForwards(this, value, offset);
};
Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset) {
    return bigEndian ? writeDoubleForwards(this, value, offset) : writeDoubleBackwards(this, value, offset);
};
Buffer.prototype.copy = function copy(target, targetStart, sourceStart, sourceEnd) {
    if (!isUint8Array(this)) {
        throw new codes.ERR_INVALID_ARG_TYPE("source", [
            "Buffer",
            "Uint8Array"
        ], this);
    }
    if (!isUint8Array(target)) {
        throw new codes.ERR_INVALID_ARG_TYPE("target", [
            "Buffer",
            "Uint8Array"
        ], target);
    }
    if (targetStart === undefined) {
        targetStart = 0;
    } else {
        targetStart = toInteger(targetStart, 0);
        if (targetStart < 0) {
            throw new codes.ERR_OUT_OF_RANGE("targetStart", ">= 0", targetStart);
        }
    }
    if (sourceStart === undefined) {
        sourceStart = 0;
    } else {
        sourceStart = toInteger(sourceStart, 0);
        if (sourceStart < 0) {
            throw new codes.ERR_OUT_OF_RANGE("sourceStart", ">= 0", sourceStart);
        }
    }
    if (sourceEnd === undefined) {
        sourceEnd = this.length;
    } else {
        sourceEnd = toInteger(sourceEnd, 0);
        if (sourceEnd < 0) {
            throw new codes.ERR_OUT_OF_RANGE("sourceEnd", ">= 0", sourceEnd);
        }
    }
    if (targetStart >= target.length) {
        return 0;
    }
    if (sourceEnd > 0 && sourceEnd < sourceStart) {
        sourceEnd = sourceStart;
    }
    if (sourceEnd === sourceStart) {
        return 0;
    }
    if (target.length === 0 || this.length === 0) {
        return 0;
    }
    if (sourceEnd > this.length) {
        sourceEnd = this.length;
    }
    if (target.length - targetStart < sourceEnd - sourceStart) {
        sourceEnd = target.length - targetStart + sourceStart;
    }
    const len = sourceEnd - sourceStart;
    if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
        this.copyWithin(targetStart, sourceStart, sourceEnd);
    } else {
        Uint8Array.prototype.set.call(target, this.subarray(sourceStart, sourceEnd), targetStart);
    }
    return len;
};
Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === "string") {
        if (typeof start === "string") {
            encoding = start;
            start = 0;
            end = this.length;
        } else if (typeof end === "string") {
            encoding = end;
            end = this.length;
        }
        if (encoding !== void 0 && typeof encoding !== "string") {
            throw new TypeError("encoding must be a string");
        }
        if (typeof encoding === "string" && !Buffer.isEncoding(encoding)) {
            throw new TypeError("Unknown encoding: " + encoding);
        }
        if (val.length === 1) {
            const code = val.charCodeAt(0);
            if (encoding === "utf8" && code < 128 || encoding === "latin1") {
                val = code;
            }
        }
    } else if (typeof val === "number") {
        val = val & 255;
    } else if (typeof val === "boolean") {
        val = Number(val);
    }
    if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
    }
    if (end <= start) {
        return this;
    }
    start = start >>> 0;
    end = end === void 0 ? this.length : end >>> 0;
    if (!val) {
        val = 0;
    }
    let i363;
    if (typeof val === "number") {
        for(i363 = start; i363 < end; ++i363){
            this[i363] = val;
        }
    } else {
        const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
        const len = bytes.length;
        if (len === 0) {
            throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        }
        for(i363 = 0; i363 < end - start; ++i363){
            this[i363 + start] = bytes[i363 % len];
        }
    }
    return this;
};
function checkBounds1(buf, offset, byteLength2) {
    validateNumber(offset, "offset");
    if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
        boundsError(offset, buf.length - (byteLength2 + 1));
    }
}
function checkIntBI(value, min, max, buf, offset, byteLength2) {
    if (value > max || value < min) {
        const n364 = typeof min === "bigint" ? "n" : "";
        let range;
        if (byteLength2 > 3) {
            if (min === 0 || min === BigInt(0)) {
                range = `>= 0${n364} and < 2${n364} ** ${(byteLength2 + 1) * 8}${n364}`;
            } else {
                range = `>= -(2${n364} ** ${(byteLength2 + 1) * 8 - 1}${n364}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n364}`;
            }
        } else {
            range = `>= ${min}${n364} and <= ${max}${n364}`;
        }
        throw new codes.ERR_OUT_OF_RANGE("value", range, value);
    }
    checkBounds1(buf, offset, byteLength2);
}
function utf8ToBytes(string, units) {
    units = units || Infinity;
    let codePoint;
    const length = string.length;
    let leadSurrogate = null;
    const bytes = [];
    for(let i364 = 0; i364 < length; ++i364){
        codePoint = string.charCodeAt(i364);
        if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
                if (codePoint > 56319) {
                    if ((units -= 3) > -1) {
                        bytes.push(239, 191, 189);
                    }
                    continue;
                } else if (i364 + 1 === length) {
                    if ((units -= 3) > -1) {
                        bytes.push(239, 191, 189);
                    }
                    continue;
                }
                leadSurrogate = codePoint;
                continue;
            }
            if (codePoint < 56320) {
                if ((units -= 3) > -1) {
                    bytes.push(239, 191, 189);
                }
                leadSurrogate = codePoint;
                continue;
            }
            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
            if ((units -= 3) > -1) {
                bytes.push(239, 191, 189);
            }
        }
        leadSurrogate = null;
        if (codePoint < 128) {
            if ((units -= 1) < 0) {
                break;
            }
            bytes.push(codePoint);
        } else if (codePoint < 2048) {
            if ((units -= 2) < 0) {
                break;
            }
            bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
        } else if (codePoint < 65536) {
            if ((units -= 3) < 0) {
                break;
            }
            bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else if (codePoint < 1114112) {
            if ((units -= 4) < 0) {
                break;
            }
            bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else {
            throw new Error("Invalid code point");
        }
    }
    return bytes;
}
function blitBuffer(src, dst, offset, length) {
    let i365;
    for(i365 = 0; i365 < length; ++i365){
        if (i365 + offset >= dst.length || i365 >= src.length) {
            break;
        }
        dst[i365 + offset] = src[i365];
    }
    return i365;
}
function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
const hexSliceLookupTable = function() {
    const alphabet = "0123456789abcdef";
    const table = new Array(256);
    for(let i366 = 0; i366 < 16; ++i366){
        const i16 = i366 * 16;
        for(let j43 = 0; j43 < 16; ++j43){
            table[i16 + j43] = alphabet[i366] + alphabet[j43];
        }
    }
    return table;
}();
function defineBigIntMethod(fn) {
    return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
}
function BufferBigIntNotDefined() {
    throw new Error("BigInt not supported");
}
globalThis.atob;
globalThis.Blob;
globalThis.btoa;
var valueType;
(function(valueType1) {
    valueType1[valueType1["noIterator"] = 0] = "noIterator";
    valueType1[valueType1["isArray"] = 1] = "isArray";
    valueType1[valueType1["isSet"] = 2] = "isSet";
    valueType1[valueType1["isMap"] = 3] = "isMap";
})(valueType || (valueType = {}));
let memo;
function innerDeepEqual(val1, val2, strict, memos = memo) {
    if (val1 === val2) {
        if (val1 !== 0) return true;
        return strict ? Object.is(val1, val2) : true;
    }
    if (strict) {
        if (typeof val1 !== "object") {
            return typeof val1 === "number" && Number.isNaN(val1) && Number.isNaN(val2);
        }
        if (typeof val2 !== "object" || val1 === null || val2 === null) {
            return false;
        }
        if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {
            return false;
        }
    } else {
        if (val1 === null || typeof val1 !== "object") {
            if (val2 === null || typeof val2 !== "object") {
                return val1 == val2 || Number.isNaN(val1) && Number.isNaN(val2);
            }
            return false;
        }
        if (val2 === null || typeof val2 !== "object") {
            return false;
        }
    }
    const val1Tag = Object.prototype.toString.call(val1);
    const val2Tag = Object.prototype.toString.call(val2);
    if (val1Tag !== val2Tag) {
        return false;
    }
    if (Array.isArray(val1)) {
        if (!Array.isArray(val2) || val1.length !== val2.length) {
            return false;
        }
        const filter = strict ? 2 : 2 | 16;
        const keys1 = getOwnNonIndexProperties(val1, filter);
        const keys2 = getOwnNonIndexProperties(val2, filter);
        if (keys1.length !== keys2.length) {
            return false;
        }
        return keyCheck(val1, val2, strict, memos, valueType.isArray, keys1);
    } else if (val1Tag === "[object Object]") {
        return keyCheck(val1, val2, strict, memos, valueType.noIterator);
    } else if (val1 instanceof Date) {
        if (!(val2 instanceof Date) || val1.getTime() !== val2.getTime()) {
            return false;
        }
    } else if (val1 instanceof RegExp) {
        if (!(val2 instanceof RegExp) || !areSimilarRegExps(val1, val2)) {
            return false;
        }
    } else if (isNativeError1(val1) || val1 instanceof Error) {
        if (!isNativeError1(val2) && !(val2 instanceof Error) || val1.message !== val2.message || val1.name !== val2.name) {
            return false;
        }
    } else if (isArrayBufferView(val1)) {
        const TypedArrayPrototypeGetSymbolToStringTag = (val)=>Object.getOwnPropertySymbols(val).map((item)=>item.toString()).toString();
        if (isTypedArray(val1) && isTypedArray(val2) && TypedArrayPrototypeGetSymbolToStringTag(val1) !== TypedArrayPrototypeGetSymbolToStringTag(val2)) {
            return false;
        }
        if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {
            if (!areSimilarFloatArrays(val1, val2)) {
                return false;
            }
        } else if (!areSimilarTypedArrays(val1, val2)) {
            return false;
        }
        const filter = strict ? 2 : 2 | 16;
        const keysVal1 = getOwnNonIndexProperties(val1, filter);
        const keysVal2 = getOwnNonIndexProperties(val2, filter);
        if (keysVal1.length !== keysVal2.length) {
            return false;
        }
        return keyCheck(val1, val2, strict, memos, valueType.noIterator, keysVal1);
    } else if (isSet1(val1)) {
        if (!isSet1(val2) || val1.size !== val2.size) {
            return false;
        }
        return keyCheck(val1, val2, strict, memos, valueType.isSet);
    } else if (isMap1(val1)) {
        if (!isMap1(val2) || val1.size !== val2.size) {
            return false;
        }
        return keyCheck(val1, val2, strict, memos, valueType.isMap);
    } else if (isAnyArrayBuffer1(val1)) {
        if (!isAnyArrayBuffer1(val2) || !areEqualArrayBuffers(val1, val2)) {
            return false;
        }
    } else if (isBoxedPrimitive1(val1)) {
        if (!isEqualBoxedPrimitive(val1, val2)) {
            return false;
        }
    } else if (Array.isArray(val2) || isArrayBufferView(val2) || isSet1(val2) || isMap1(val2) || isDate1(val2) || isRegExp1(val2) || isAnyArrayBuffer1(val2) || isBoxedPrimitive1(val2) || isNativeError1(val2) || val2 instanceof Error) {
        return false;
    }
    return keyCheck(val1, val2, strict, memos, valueType.noIterator);
}
function keyCheck(val1, val2, strict, memos, iterationType, aKeys = []) {
    if (arguments.length === 5) {
        aKeys = Object.keys(val1);
        const bKeys = Object.keys(val2);
        if (aKeys.length !== bKeys.length) {
            return false;
        }
    }
    let i367 = 0;
    for(; i367 < aKeys.length; i367++){
        if (!val2.propertyIsEnumerable(aKeys[i367])) {
            return false;
        }
    }
    if (strict && arguments.length === 5) {
        const symbolKeysA = Object.getOwnPropertySymbols(val1);
        if (symbolKeysA.length !== 0) {
            let count = 0;
            for(i367 = 0; i367 < symbolKeysA.length; i367++){
                const key = symbolKeysA[i367];
                if (val1.propertyIsEnumerable(key)) {
                    if (!val2.propertyIsEnumerable(key)) {
                        return false;
                    }
                    aKeys.push(key.toString());
                    count++;
                } else if (val2.propertyIsEnumerable(key)) {
                    return false;
                }
            }
            const symbolKeysB = Object.getOwnPropertySymbols(val2);
            if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {
                return false;
            }
        } else {
            const symbolKeysB = Object.getOwnPropertySymbols(val2);
            if (symbolKeysB.length !== 0 && getEnumerables(val2, symbolKeysB).length !== 0) {
                return false;
            }
        }
    }
    if (aKeys.length === 0 && (iterationType === valueType.noIterator || iterationType === valueType.isArray && val1.length === 0 || val1.size === 0)) {
        return true;
    }
    if (memos === undefined) {
        memos = {
            val1: new Map(),
            val2: new Map(),
            position: 0
        };
    } else {
        const val2MemoA = memos.val1.get(val1);
        if (val2MemoA !== undefined) {
            const val2MemoB = memos.val2.get(val2);
            if (val2MemoB !== undefined) {
                return val2MemoA === val2MemoB;
            }
        }
        memos.position++;
    }
    memos.val1.set(val1, memos.position);
    memos.val2.set(val2, memos.position);
    const areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);
    memos.val1.delete(val1);
    memos.val2.delete(val2);
    return areEq;
}
function areSimilarRegExps(a146, b55) {
    return a146.source === b55.source && a146.flags === b55.flags && a146.lastIndex === b55.lastIndex;
}
function areSimilarFloatArrays(arr1, arr2) {
    if (arr1.byteLength !== arr2.byteLength) {
        return false;
    }
    for(let i368 = 0; i368 < arr1.byteLength; i368++){
        if (arr1[i368] !== arr2[i368]) {
            return false;
        }
    }
    return true;
}
function areSimilarTypedArrays(arr1, arr2) {
    if (arr1.byteLength !== arr2.byteLength) {
        return false;
    }
    return Buffer.compare(new Uint8Array(arr1.buffer, arr1.byteOffset, arr1.byteLength), new Uint8Array(arr2.buffer, arr2.byteOffset, arr2.byteLength)) === 0;
}
function areEqualArrayBuffers(buf1, buf2) {
    return buf1.byteLength === buf2.byteLength && Buffer.compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;
}
function isEqualBoxedPrimitive(a147, b56) {
    if (Object.getOwnPropertyNames(a147).length !== Object.getOwnPropertyNames(b56).length) {
        return false;
    }
    if (Object.getOwnPropertySymbols(a147).length !== Object.getOwnPropertySymbols(b56).length) {
        return false;
    }
    if (isNumberObject1(a147)) {
        return isNumberObject1(b56) && Object.is(Number.prototype.valueOf.call(a147), Number.prototype.valueOf.call(b56));
    }
    if (isStringObject1(a147)) {
        return isStringObject1(b56) && String.prototype.valueOf.call(a147) === String.prototype.valueOf.call(b56);
    }
    if (isBooleanObject1(a147)) {
        return isBooleanObject1(b56) && Boolean.prototype.valueOf.call(a147) === Boolean.prototype.valueOf.call(b56);
    }
    if (isBigIntObject1(a147)) {
        return isBigIntObject1(b56) && BigInt.prototype.valueOf.call(a147) === BigInt.prototype.valueOf.call(b56);
    }
    if (isSymbolObject1(a147)) {
        return isSymbolObject1(b56) && Symbol.prototype.valueOf.call(a147) === Symbol.prototype.valueOf.call(b56);
    }
    throw Error(`Unknown boxed type`);
}
function getEnumerables(val, keys) {
    return keys.filter((key)=>val.propertyIsEnumerable(key));
}
function objEquiv(obj1, obj2, strict, keys, memos, iterationType) {
    let i369 = 0;
    if (iterationType === valueType.isSet) {
        if (!setEquiv(obj1, obj2, strict, memos)) {
            return false;
        }
    } else if (iterationType === valueType.isMap) {
        if (!mapEquiv(obj1, obj2, strict, memos)) {
            return false;
        }
    } else if (iterationType === valueType.isArray) {
        for(; i369 < obj1.length; i369++){
            if (obj1.hasOwnProperty(i369)) {
                if (!obj2.hasOwnProperty(i369) || !innerDeepEqual(obj1[i369], obj2[i369], strict, memos)) {
                    return false;
                }
            } else if (obj2.hasOwnProperty(i369)) {
                return false;
            } else {
                const keys1 = Object.keys(obj1);
                for(; i369 < keys1.length; i369++){
                    const key = keys1[i369];
                    if (!obj2.hasOwnProperty(key) || !innerDeepEqual(obj1[key], obj2[key], strict, memos)) {
                        return false;
                    }
                }
                if (keys1.length !== Object.keys(obj2).length) {
                    return false;
                }
                if (keys1.length !== Object.keys(obj2).length) {
                    return false;
                }
                return true;
            }
        }
    }
    for(i369 = 0; i369 < keys.length; i369++){
        const key = keys[i369];
        if (!innerDeepEqual(obj1[key], obj2[key], strict, memos)) {
            return false;
        }
    }
    return true;
}
function findLooseMatchingPrimitives(primitive) {
    switch(typeof primitive){
        case "undefined":
            return null;
        case "object":
            return undefined;
        case "symbol":
            return false;
        case "string":
            primitive = +primitive;
        case "number":
            if (Number.isNaN(primitive)) {
                return false;
            }
    }
    return true;
}
function setMightHaveLoosePrim(set1, set2, primitive) {
    const altValue = findLooseMatchingPrimitives(primitive);
    if (altValue != null) return altValue;
    return set2.has(altValue) && !set1.has(altValue);
}
function setHasEqualElement(set, val1, strict, memos) {
    for (const val2 of set){
        if (innerDeepEqual(val1, val2, strict, memos)) {
            set.delete(val2);
            return true;
        }
    }
    return false;
}
function setEquiv(set1, set2, strict, memos) {
    let set = null;
    for (const item of set1){
        if (typeof item === "object" && item !== null) {
            if (set === null) {
                set = new Set();
            }
            set.add(item);
        } else if (!set2.has(item)) {
            if (strict) return false;
            if (!setMightHaveLoosePrim(set1, set2, item)) {
                return false;
            }
            if (set === null) {
                set = new Set();
            }
            set.add(item);
        }
    }
    if (set !== null) {
        for (const item of set2){
            if (typeof item === "object" && item !== null) {
                if (!setHasEqualElement(set, item, strict, memos)) return false;
            } else if (!strict && !set1.has(item) && !setHasEqualElement(set, item, strict, memos)) {
                return false;
            }
        }
        return set.size === 0;
    }
    return true;
}
function mapMightHaveLoosePrimitive(map1, map2, primitive, item, memos) {
    const altValue = findLooseMatchingPrimitives(primitive);
    if (altValue != null) {
        return altValue;
    }
    const curB = map2.get(altValue);
    if (curB === undefined && !map2.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {
        return false;
    }
    return !map1.has(altValue) && innerDeepEqual(item, curB, false, memos);
}
function mapEquiv(map1, map2, strict, memos) {
    let set = null;
    for (const { 0: key , 1: item1  } of map1){
        if (typeof key === "object" && key !== null) {
            if (set === null) {
                set = new Set();
            }
            set.add(key);
        } else {
            const item2 = map2.get(key);
            if (item2 === undefined && !map2.has(key) || !innerDeepEqual(item1, item2, strict, memos)) {
                if (strict) return false;
                if (!mapMightHaveLoosePrimitive(map1, map2, key, item1, memos)) {
                    return false;
                }
                if (set === null) {
                    set = new Set();
                }
                set.add(key);
            }
        }
    }
    if (set !== null) {
        for (const { 0: key , 1: item  } of map2){
            if (typeof key === "object" && key !== null) {
                if (!mapHasEqualEntry(set, map1, key, item, strict, memos)) {
                    return false;
                }
            } else if (!strict && (!map1.has(key) || !innerDeepEqual(map1.get(key), item, false, memos)) && !mapHasEqualEntry(set, map1, key, item, false, memos)) {
                return false;
            }
        }
        return set.size === 0;
    }
    return true;
}
function mapHasEqualEntry(set, map, key1, item1, strict, memos) {
    for (const key2 of set){
        if (innerDeepEqual(key1, key2, strict, memos) && innerDeepEqual(item1, map.get(key2), strict, memos)) {
            set.delete(key2);
            return true;
        }
    }
    return false;
}
const NumberIsSafeInteger = Number.isSafeInteger;
function getSystemErrorName(code) {
    if (typeof code !== "number") {
        throw new codes.ERR_INVALID_ARG_TYPE("err", "number", code);
    }
    if (code >= 0 || !NumberIsSafeInteger(code)) {
        throw new codes.ERR_OUT_OF_RANGE("err", "a negative integer", code);
    }
    return errorMap.get(code)?.[0];
}
const { errno: { ENOTDIR , ENOENT  } ,  } = os;
const kIsNodeError = Symbol("kIsNodeError");
const classRegExp1 = /^([A-Z][a-z0-9]*)+$/;
const kTypes = [
    "string",
    "function",
    "number",
    "object",
    "Function",
    "Object",
    "boolean",
    "bigint",
    "symbol", 
];
function addNumericalSeparator(val) {
    let res = "";
    let i370 = val.length;
    const start = val[0] === "-" ? 1 : 0;
    for(; i370 >= start + 4; i370 -= 3){
        res = `_${val.slice(i370 - 3, i370)}${res}`;
    }
    return `${val.slice(0, i370)}${res}`;
}
const captureLargerStackTrace = hideStackFrames(function captureLargerStackTrace(err) {
    Error.captureStackTrace(err);
    return err;
});
hideStackFrames(function uvExceptionWithHostPort(err, syscall, address, port) {
    const { 0: code , 1: uvmsg  } = uvErrmapGet(err) || uvUnmappedError;
    const message = `${syscall} ${code}: ${uvmsg}`;
    let details = "";
    if (port && port > 0) {
        details = ` ${address}:${port}`;
    } else if (address) {
        details = ` ${address}`;
    }
    const ex = new Error(`${message}${details}`);
    ex.code = code;
    ex.errno = err;
    ex.syscall = syscall;
    ex.address = address;
    if (port) {
        ex.port = port;
    }
    return captureLargerStackTrace(ex);
});
hideStackFrames(function errnoException(err, syscall, original) {
    const code = getSystemErrorName(err);
    const message = original ? `${syscall} ${code} ${original}` : `${syscall} ${code}`;
    const ex = new Error(message);
    ex.errno = err;
    ex.code = code;
    ex.syscall = syscall;
    return captureLargerStackTrace(ex);
});
function uvErrmapGet(name) {
    return errorMap.get(name);
}
const uvUnmappedError = [
    "UNKNOWN",
    "unknown error"
];
hideStackFrames(function uvException(ctx) {
    const { 0: code , 1: uvmsg  } = uvErrmapGet(ctx.errno) || uvUnmappedError;
    let message = `${code}: ${ctx.message || uvmsg}, ${ctx.syscall}`;
    let path2;
    let dest;
    if (ctx.path) {
        path2 = ctx.path.toString();
        message += ` '${path2}'`;
    }
    if (ctx.dest) {
        dest = ctx.dest.toString();
        message += ` -> '${dest}'`;
    }
    const err = new Error(message);
    for (const prop of Object.keys(ctx)){
        if (prop === "message" || prop === "path" || prop === "dest") {
            continue;
        }
        err[prop] = ctx[prop];
    }
    err.code = code;
    if (path2) {
        err.path = path2;
    }
    if (dest) {
        err.dest = dest;
    }
    return captureLargerStackTrace(err);
});
hideStackFrames(function exceptionWithHostPort(err, syscall, address, port, additional) {
    const code = getSystemErrorName(err);
    let details = "";
    if (port && port > 0) {
        details = ` ${address}:${port}`;
    } else if (address) {
        details = ` ${address}`;
    }
    if (additional) {
        details += ` - Local (${additional})`;
    }
    const ex = new Error(`${syscall} ${code}${details}`);
    ex.errno = err;
    ex.code = code;
    ex.syscall = syscall;
    ex.address = address;
    if (port) {
        ex.port = port;
    }
    return captureLargerStackTrace(ex);
});
hideStackFrames(function(code, syscall, hostname) {
    let errno;
    if (typeof code === "number") {
        errno = code;
        if (code === codeMap.get("EAI_NODATA") || code === codeMap.get("EAI_NONAME")) {
            code = "ENOTFOUND";
        } else {
            code = getSystemErrorName(code);
        }
    }
    const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ""}`;
    const ex = new Error(message);
    ex.errno = errno;
    ex.code = code;
    ex.syscall = syscall;
    if (hostname) {
        ex.hostname = hostname;
    }
    return captureLargerStackTrace(ex);
});
class NodeErrorAbstraction extends Error {
    code;
    constructor(name, code, message){
        super(message);
        this.code = code;
        this.name = name;
        this.stack = this.stack && `${name} [${this.code}]${this.stack.slice(20)}`;
    }
    toString() {
        return `${this.name} [${this.code}]: ${this.message}`;
    }
}
class NodeError extends NodeErrorAbstraction {
    constructor(code, message){
        super(Error.prototype.name, code, message);
    }
}
class NodeRangeError extends NodeErrorAbstraction {
    constructor(code, message){
        super(RangeError.prototype.name, code, message);
        Object.setPrototypeOf(this, RangeError.prototype);
        this.toString = function() {
            return `${this.name} [${this.code}]: ${this.message}`;
        };
    }
}
class NodeTypeError extends NodeErrorAbstraction {
    constructor(code, message){
        super(TypeError.prototype.name, code, message);
        Object.setPrototypeOf(this, TypeError.prototype);
        this.toString = function() {
            return `${this.name} [${this.code}]: ${this.message}`;
        };
    }
}
class NodeURIError extends NodeErrorAbstraction {
    constructor(code, message){
        super(URIError.prototype.name, code, message);
        Object.setPrototypeOf(this, URIError.prototype);
        this.toString = function() {
            return `${this.name} [${this.code}]: ${this.message}`;
        };
    }
}
class NodeSystemError extends NodeErrorAbstraction {
    constructor(key, context, msgPrefix){
        let message = `${msgPrefix}: ${context.syscall} returned ` + `${context.code} (${context.message})`;
        if (context.path !== undefined) {
            message += ` ${context.path}`;
        }
        if (context.dest !== undefined) {
            message += ` => ${context.dest}`;
        }
        super("SystemError", key, message);
        captureLargerStackTrace(this);
        Object.defineProperties(this, {
            [kIsNodeError]: {
                value: true,
                enumerable: false,
                writable: false,
                configurable: true
            },
            info: {
                value: context,
                enumerable: true,
                configurable: true,
                writable: false
            },
            errno: {
                get () {
                    return context.errno;
                },
                set: (value)=>{
                    context.errno = value;
                },
                enumerable: true,
                configurable: true
            },
            syscall: {
                get () {
                    return context.syscall;
                },
                set: (value)=>{
                    context.syscall = value;
                },
                enumerable: true,
                configurable: true
            }
        });
        if (context.path !== undefined) {
            Object.defineProperty(this, "path", {
                get () {
                    return context.path;
                },
                set: (value)=>{
                    context.path = value;
                },
                enumerable: true,
                configurable: true
            });
        }
        if (context.dest !== undefined) {
            Object.defineProperty(this, "dest", {
                get () {
                    return context.dest;
                },
                set: (value)=>{
                    context.dest = value;
                },
                enumerable: true,
                configurable: true
            });
        }
    }
    toString() {
        return `${this.name} [${this.code}]: ${this.message}`;
    }
}
function makeSystemErrorWithCode(key, msgPrfix) {
    return class NodeError extends NodeSystemError {
        constructor(ctx){
            super(key, ctx, msgPrfix);
        }
    };
}
makeSystemErrorWithCode("ERR_FS_EISDIR", "Path is a directory");
function createInvalidArgType(name, expected) {
    expected = Array.isArray(expected) ? expected : [
        expected
    ];
    let msg = "The ";
    if (name.endsWith(" argument")) {
        msg += `${name} `;
    } else {
        const type = name.includes(".") ? "property" : "argument";
        msg += `"${name}" ${type} `;
    }
    msg += "must be ";
    const types = [];
    const instances = [];
    const other = [];
    for (const value of expected){
        if (kTypes.includes(value)) {
            types.push(value.toLocaleLowerCase());
        } else if (classRegExp1.test(value)) {
            instances.push(value);
        } else {
            other.push(value);
        }
    }
    if (instances.length > 0) {
        const pos = types.indexOf("object");
        if (pos !== -1) {
            types.splice(pos, 1);
            instances.push("Object");
        }
    }
    if (types.length > 0) {
        if (types.length > 2) {
            const last = types.pop();
            msg += `one of type ${types.join(", ")}, or ${last}`;
        } else if (types.length === 2) {
            msg += `one of type ${types[0]} or ${types[1]}`;
        } else {
            msg += `of type ${types[0]}`;
        }
        if (instances.length > 0 || other.length > 0) {
            msg += " or ";
        }
    }
    if (instances.length > 0) {
        if (instances.length > 2) {
            const last = instances.pop();
            msg += `an instance of ${instances.join(", ")}, or ${last}`;
        } else {
            msg += `an instance of ${instances[0]}`;
            if (instances.length === 2) {
                msg += ` or ${instances[1]}`;
            }
        }
        if (other.length > 0) {
            msg += " or ";
        }
    }
    if (other.length > 0) {
        if (other.length > 2) {
            const last = other.pop();
            msg += `one of ${other.join(", ")}, or ${last}`;
        } else if (other.length === 2) {
            msg += `one of ${other[0]} or ${other[1]}`;
        } else {
            if (other[0].toLowerCase() !== other[0]) {
                msg += "an ";
            }
            msg += `${other[0]}`;
        }
    }
    return msg;
}
class ERR_INVALID_ARG_TYPE_RANGE extends NodeRangeError {
    constructor(name, expected, actual){
        const msg = createInvalidArgType(name, expected);
        super("ERR_INVALID_ARG_TYPE", `${msg}.${invalidArgTypeHelper(actual)}`);
    }
}
class ERR_INVALID_ARG_TYPE extends NodeTypeError {
    constructor(name, expected, actual){
        const msg = createInvalidArgType(name, expected);
        super("ERR_INVALID_ARG_TYPE", `${msg}.${invalidArgTypeHelper(actual)}`);
    }
    static RangeError = ERR_INVALID_ARG_TYPE_RANGE;
}
class ERR_INVALID_ARG_VALUE_RANGE extends NodeRangeError {
    constructor(name, value, reason = "is invalid"){
        const type = name.includes(".") ? "property" : "argument";
        const inspected = inspect(value);
        super("ERR_INVALID_ARG_VALUE", `The ${type} '${name}' ${reason}. Received ${inspected}`);
    }
}
class ERR_INVALID_ARG_VALUE extends NodeTypeError {
    constructor(name, value, reason = "is invalid"){
        const type = name.includes(".") ? "property" : "argument";
        const inspected = inspect(value);
        super("ERR_INVALID_ARG_VALUE", `The ${type} '${name}' ${reason}. Received ${inspected}`);
    }
    static RangeError = ERR_INVALID_ARG_VALUE_RANGE;
}
function invalidArgTypeHelper(input) {
    if (input == null) {
        return ` Received ${input}`;
    }
    if (typeof input === "function" && input.name) {
        return ` Received function ${input.name}`;
    }
    if (typeof input === "object") {
        if (input.constructor && input.constructor.name) {
            return ` Received an instance of ${input.constructor.name}`;
        }
        return ` Received ${inspect(input, {
            depth: -1
        })}`;
    }
    let inspected = inspect(input, {
        colors: false
    });
    if (inspected.length > 25) {
        inspected = `${inspected.slice(0, 25)}...`;
    }
    return ` Received type ${typeof input} (${inspected})`;
}
class ERR_OUT_OF_RANGE extends RangeError {
    code = "ERR_OUT_OF_RANGE";
    constructor(str, range, input, replaceDefaultBoolean = false){
        assert(range, 'Missing "range" argument');
        let msg = replaceDefaultBoolean ? str : `The value of "${str}" is out of range.`;
        let received;
        if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
            received = addNumericalSeparator(String(input));
        } else if (typeof input === "bigint") {
            received = String(input);
            if (input > 2n ** 32n || input < -(2n ** 32n)) {
                received = addNumericalSeparator(received);
            }
            received += "n";
        } else {
            received = inspect(input);
        }
        msg += ` It must be ${range}. Received ${received}`;
        super(msg);
        const { name  } = this;
        this.name = `${name} [${this.code}]`;
        this.stack;
        this.name = name;
    }
}
class ERR_BUFFER_OUT_OF_BOUNDS extends NodeRangeError {
    constructor(name){
        super("ERR_BUFFER_OUT_OF_BOUNDS", name ? `"${name}" is outside of buffer bounds` : "Attempt to access memory outside buffer bounds");
    }
}
class ERR_INVALID_CALLBACK extends NodeTypeError {
    constructor(object){
        super("ERR_INVALID_CALLBACK", `Callback must be a function. Received ${inspect(object)}`);
    }
}
class ERR_INVALID_URI extends NodeURIError {
    constructor(){
        super("ERR_INVALID_URI", `URI malformed`);
    }
}
class ERR_IPC_CHANNEL_CLOSED extends NodeError {
    constructor(){
        super("ERR_IPC_CHANNEL_CLOSED", `Channel closed`);
    }
}
class ERR_SOCKET_BAD_PORT extends NodeRangeError {
    constructor(name, port, allowZero = true){
        assert(typeof allowZero === "boolean", "The 'allowZero' argument must be of type boolean.");
        const operator = allowZero ? ">=" : ">";
        super("ERR_SOCKET_BAD_PORT", `${name} should be ${operator} 0 and < 65536. Received ${port}.`);
    }
}
class ERR_UNKNOWN_ENCODING extends NodeTypeError {
    constructor(x88){
        super("ERR_UNKNOWN_ENCODING", `Unknown encoding: ${x88}`);
    }
}
codes.ERR_IPC_CHANNEL_CLOSED = ERR_IPC_CHANNEL_CLOSED;
codes.ERR_INVALID_ARG_TYPE = ERR_INVALID_ARG_TYPE;
codes.ERR_INVALID_ARG_VALUE = ERR_INVALID_ARG_VALUE;
codes.ERR_INVALID_CALLBACK = ERR_INVALID_CALLBACK;
codes.ERR_OUT_OF_RANGE = ERR_OUT_OF_RANGE;
codes.ERR_SOCKET_BAD_PORT = ERR_SOCKET_BAD_PORT;
codes.ERR_BUFFER_OUT_OF_BOUNDS = ERR_BUFFER_OUT_OF_BOUNDS;
codes.ERR_UNKNOWN_ENCODING = ERR_UNKNOWN_ENCODING;
const CHAR_FORWARD_SLASH = 47;
function assertPath(path3) {
    if (typeof path3 !== "string") {
        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path3)}`);
    }
}
function isPosixPathSeparator(code) {
    return code === 47;
}
function isPathSeparator(code) {
    return isPosixPathSeparator(code) || code === 92;
}
function isWindowsDeviceRoot(code) {
    return code >= 97 && code <= 122 || code >= 65 && code <= 90;
}
function normalizeString(path4, allowAboveRoot, separator, isPathSeparator1) {
    let res = "";
    let lastSegmentLength = 0;
    let lastSlash = -1;
    let dots = 0;
    let code;
    for(let i371 = 0, len = path4.length; i371 <= len; ++i371){
        if (i371 < len) code = path4.charCodeAt(i371);
        else if (isPathSeparator1(code)) break;
        else code = CHAR_FORWARD_SLASH;
        if (isPathSeparator1(code)) {
            if (lastSlash === i371 - 1 || dots === 1) {} else if (lastSlash !== i371 - 1 && dots === 2) {
                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
                    if (res.length > 2) {
                        const lastSlashIndex = res.lastIndexOf(separator);
                        if (lastSlashIndex === -1) {
                            res = "";
                            lastSegmentLength = 0;
                        } else {
                            res = res.slice(0, lastSlashIndex);
                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                        }
                        lastSlash = i371;
                        dots = 0;
                        continue;
                    } else if (res.length === 2 || res.length === 1) {
                        res = "";
                        lastSegmentLength = 0;
                        lastSlash = i371;
                        dots = 0;
                        continue;
                    }
                }
                if (allowAboveRoot) {
                    if (res.length > 0) res += `${separator}..`;
                    else res = "..";
                    lastSegmentLength = 2;
                }
            } else {
                if (res.length > 0) res += separator + path4.slice(lastSlash + 1, i371);
                else res = path4.slice(lastSlash + 1, i371);
                lastSegmentLength = i371 - lastSlash - 1;
            }
            lastSlash = i371;
            dots = 0;
        } else if (code === 46 && dots !== -1) {
            ++dots;
        } else {
            dots = -1;
        }
    }
    return res;
}
function _format(sep3, pathObject) {
    const dir = pathObject.dir || pathObject.root;
    const base7 = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
    if (!dir) return base7;
    if (dir === pathObject.root) return dir + base7;
    return dir + sep3 + base7;
}
const WHITESPACE_ENCODINGS = {
    "\u0009": "%09",
    "\u000A": "%0A",
    "\u000B": "%0B",
    "\u000C": "%0C",
    "\u000D": "%0D",
    "\u0020": "%20"
};
function encodeWhitespace(string) {
    return string.replaceAll(/[\s]/g, (c102)=>{
        return WHITESPACE_ENCODINGS[c102] ?? c102;
    });
}
const sep = "\\";
const delimiter = ";";
function resolve(...pathSegments) {
    let resolvedDevice = "";
    let resolvedTail = "";
    let resolvedAbsolute = false;
    for(let i372 = pathSegments.length - 1; i372 >= -1; i372--){
        let path5;
        const { Deno  } = globalThis;
        if (i372 >= 0) {
            path5 = pathSegments[i372];
        } else if (!resolvedDevice) {
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a drive-letter-less path without a CWD.");
            }
            path5 = Deno.cwd();
        } else {
            if (typeof Deno?.env?.get !== "function" || typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path5 = Deno.cwd();
            if (path5 === undefined || path5.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                path5 = `${resolvedDevice}\\`;
            }
        }
        assertPath(path5);
        const len = path5.length;
        if (len === 0) continue;
        let rootEnd = 0;
        let device = "";
        let isAbsolute1 = false;
        const code = path5.charCodeAt(0);
        if (len > 1) {
            if (isPathSeparator(code)) {
                isAbsolute1 = true;
                if (isPathSeparator(path5.charCodeAt(1))) {
                    let j44 = 2;
                    let last = j44;
                    for(; j44 < len; ++j44){
                        if (isPathSeparator(path5.charCodeAt(j44))) break;
                    }
                    if (j44 < len && j44 !== last) {
                        const firstPart = path5.slice(last, j44);
                        last = j44;
                        for(; j44 < len; ++j44){
                            if (!isPathSeparator(path5.charCodeAt(j44))) break;
                        }
                        if (j44 < len && j44 !== last) {
                            last = j44;
                            for(; j44 < len; ++j44){
                                if (isPathSeparator(path5.charCodeAt(j44))) break;
                            }
                            if (j44 === len) {
                                device = `\\\\${firstPart}\\${path5.slice(last)}`;
                                rootEnd = j44;
                            } else if (j44 !== last) {
                                device = `\\\\${firstPart}\\${path5.slice(last, j44)}`;
                                rootEnd = j44;
                            }
                        }
                    }
                } else {
                    rootEnd = 1;
                }
            } else if (isWindowsDeviceRoot(code)) {
                if (path5.charCodeAt(1) === 58) {
                    device = path5.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (isPathSeparator(path5.charCodeAt(2))) {
                            isAbsolute1 = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        } else if (isPathSeparator(code)) {
            rootEnd = 1;
            isAbsolute1 = true;
        }
        if (device.length > 0 && resolvedDevice.length > 0 && device.toLowerCase() !== resolvedDevice.toLowerCase()) {
            continue;
        }
        if (resolvedDevice.length === 0 && device.length > 0) {
            resolvedDevice = device;
        }
        if (!resolvedAbsolute) {
            resolvedTail = `${path5.slice(rootEnd)}\\${resolvedTail}`;
            resolvedAbsolute = isAbsolute1;
        }
        if (resolvedAbsolute && resolvedDevice.length > 0) break;
    }
    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, "\\", isPathSeparator);
    return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
}
function normalize(path6) {
    assertPath(path6);
    const len = path6.length;
    if (len === 0) return ".";
    let rootEnd = 0;
    let device;
    let isAbsolute2 = false;
    const code = path6.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code)) {
            isAbsolute2 = true;
            if (isPathSeparator(path6.charCodeAt(1))) {
                let j45 = 2;
                let last = j45;
                for(; j45 < len; ++j45){
                    if (isPathSeparator(path6.charCodeAt(j45))) break;
                }
                if (j45 < len && j45 !== last) {
                    const firstPart = path6.slice(last, j45);
                    last = j45;
                    for(; j45 < len; ++j45){
                        if (!isPathSeparator(path6.charCodeAt(j45))) break;
                    }
                    if (j45 < len && j45 !== last) {
                        last = j45;
                        for(; j45 < len; ++j45){
                            if (isPathSeparator(path6.charCodeAt(j45))) break;
                        }
                        if (j45 === len) {
                            return `\\\\${firstPart}\\${path6.slice(last)}\\`;
                        } else if (j45 !== last) {
                            device = `\\\\${firstPart}\\${path6.slice(last, j45)}`;
                            rootEnd = j45;
                        }
                    }
                }
            } else {
                rootEnd = 1;
            }
        } else if (isWindowsDeviceRoot(code)) {
            if (path6.charCodeAt(1) === 58) {
                device = path6.slice(0, 2);
                rootEnd = 2;
                if (len > 2) {
                    if (isPathSeparator(path6.charCodeAt(2))) {
                        isAbsolute2 = true;
                        rootEnd = 3;
                    }
                }
            }
        }
    } else if (isPathSeparator(code)) {
        return "\\";
    }
    let tail;
    if (rootEnd < len) {
        tail = normalizeString(path6.slice(rootEnd), !isAbsolute2, "\\", isPathSeparator);
    } else {
        tail = "";
    }
    if (tail.length === 0 && !isAbsolute2) tail = ".";
    if (tail.length > 0 && isPathSeparator(path6.charCodeAt(len - 1))) {
        tail += "\\";
    }
    if (device === undefined) {
        if (isAbsolute2) {
            if (tail.length > 0) return `\\${tail}`;
            else return "\\";
        } else if (tail.length > 0) {
            return tail;
        } else {
            return "";
        }
    } else if (isAbsolute2) {
        if (tail.length > 0) return `${device}\\${tail}`;
        else return `${device}\\`;
    } else if (tail.length > 0) {
        return device + tail;
    } else {
        return device;
    }
}
function isAbsolute(path7) {
    assertPath(path7);
    const len = path7.length;
    if (len === 0) return false;
    const code = path7.charCodeAt(0);
    if (isPathSeparator(code)) {
        return true;
    } else if (isWindowsDeviceRoot(code)) {
        if (len > 2 && path7.charCodeAt(1) === 58) {
            if (isPathSeparator(path7.charCodeAt(2))) return true;
        }
    }
    return false;
}
function join1(...paths) {
    const pathsCount = paths.length;
    if (pathsCount === 0) return ".";
    let joined;
    let firstPart = null;
    for(let i373 = 0; i373 < pathsCount; ++i373){
        const path8 = paths[i373];
        assertPath(path8);
        if (path8.length > 0) {
            if (joined === undefined) joined = firstPart = path8;
            else joined += `\\${path8}`;
        }
    }
    if (joined === undefined) return ".";
    let needsReplace = true;
    let slashCount = 0;
    assert(firstPart != null);
    if (isPathSeparator(firstPart.charCodeAt(0))) {
        ++slashCount;
        const firstLen = firstPart.length;
        if (firstLen > 1) {
            if (isPathSeparator(firstPart.charCodeAt(1))) {
                ++slashCount;
                if (firstLen > 2) {
                    if (isPathSeparator(firstPart.charCodeAt(2))) ++slashCount;
                    else {
                        needsReplace = false;
                    }
                }
            }
        }
    }
    if (needsReplace) {
        for(; slashCount < joined.length; ++slashCount){
            if (!isPathSeparator(joined.charCodeAt(slashCount))) break;
        }
        if (slashCount >= 2) joined = `\\${joined.slice(slashCount)}`;
    }
    return normalize(joined);
}
function relative(from, to2) {
    assertPath(from);
    assertPath(to2);
    if (from === to2) return "";
    const fromOrig = resolve(from);
    const toOrig = resolve(to2);
    if (fromOrig === toOrig) return "";
    from = fromOrig.toLowerCase();
    to2 = toOrig.toLowerCase();
    if (from === to2) return "";
    let fromStart = 0;
    let fromEnd = from.length;
    for(; fromStart < fromEnd; ++fromStart){
        if (from.charCodeAt(fromStart) !== 92) break;
    }
    for(; fromEnd - 1 > fromStart; --fromEnd){
        if (from.charCodeAt(fromEnd - 1) !== 92) break;
    }
    const fromLen = fromEnd - fromStart;
    let toStart = 0;
    let toEnd = to2.length;
    for(; toStart < toEnd; ++toStart){
        if (to2.charCodeAt(toStart) !== 92) break;
    }
    for(; toEnd - 1 > toStart; --toEnd){
        if (to2.charCodeAt(toEnd - 1) !== 92) break;
    }
    const toLen = toEnd - toStart;
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i374 = 0;
    for(; i374 <= length; ++i374){
        if (i374 === length) {
            if (toLen > length) {
                if (to2.charCodeAt(toStart + i374) === 92) {
                    return toOrig.slice(toStart + i374 + 1);
                } else if (i374 === 2) {
                    return toOrig.slice(toStart + i374);
                }
            }
            if (fromLen > length) {
                if (from.charCodeAt(fromStart + i374) === 92) {
                    lastCommonSep = i374;
                } else if (i374 === 2) {
                    lastCommonSep = 3;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i374);
        const toCode = to2.charCodeAt(toStart + i374);
        if (fromCode !== toCode) break;
        else if (fromCode === 92) lastCommonSep = i374;
    }
    if (i374 !== length && lastCommonSep === -1) {
        return toOrig;
    }
    let out = "";
    if (lastCommonSep === -1) lastCommonSep = 0;
    for(i374 = fromStart + lastCommonSep + 1; i374 <= fromEnd; ++i374){
        if (i374 === fromEnd || from.charCodeAt(i374) === 92) {
            if (out.length === 0) out += "..";
            else out += "\\..";
        }
    }
    if (out.length > 0) {
        return out + toOrig.slice(toStart + lastCommonSep, toEnd);
    } else {
        toStart += lastCommonSep;
        if (toOrig.charCodeAt(toStart) === 92) ++toStart;
        return toOrig.slice(toStart, toEnd);
    }
}
function toNamespacedPath(path9) {
    if (typeof path9 !== "string") return path9;
    if (path9.length === 0) return "";
    const resolvedPath = resolve(path9);
    if (resolvedPath.length >= 3) {
        if (resolvedPath.charCodeAt(0) === 92) {
            if (resolvedPath.charCodeAt(1) === 92) {
                const code = resolvedPath.charCodeAt(2);
                if (code !== 63 && code !== 46) {
                    return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                }
            }
        } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
            if (resolvedPath.charCodeAt(1) === 58 && resolvedPath.charCodeAt(2) === 92) {
                return `\\\\?\\${resolvedPath}`;
            }
        }
    }
    return path9;
}
function dirname(path10) {
    assertPath(path10);
    const len = path10.length;
    if (len === 0) return ".";
    let rootEnd = -1;
    let end = -1;
    let matchedSlash = true;
    let offset = 0;
    const code = path10.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code)) {
            rootEnd = offset = 1;
            if (isPathSeparator(path10.charCodeAt(1))) {
                let j46 = 2;
                let last = j46;
                for(; j46 < len; ++j46){
                    if (isPathSeparator(path10.charCodeAt(j46))) break;
                }
                if (j46 < len && j46 !== last) {
                    last = j46;
                    for(; j46 < len; ++j46){
                        if (!isPathSeparator(path10.charCodeAt(j46))) break;
                    }
                    if (j46 < len && j46 !== last) {
                        last = j46;
                        for(; j46 < len; ++j46){
                            if (isPathSeparator(path10.charCodeAt(j46))) break;
                        }
                        if (j46 === len) {
                            return path10;
                        }
                        if (j46 !== last) {
                            rootEnd = offset = j46 + 1;
                        }
                    }
                }
            }
        } else if (isWindowsDeviceRoot(code)) {
            if (path10.charCodeAt(1) === 58) {
                rootEnd = offset = 2;
                if (len > 2) {
                    if (isPathSeparator(path10.charCodeAt(2))) rootEnd = offset = 3;
                }
            }
        }
    } else if (isPathSeparator(code)) {
        return path10;
    }
    for(let i375 = len - 1; i375 >= offset; --i375){
        if (isPathSeparator(path10.charCodeAt(i375))) {
            if (!matchedSlash) {
                end = i375;
                break;
            }
        } else {
            matchedSlash = false;
        }
    }
    if (end === -1) {
        if (rootEnd === -1) return ".";
        else end = rootEnd;
    }
    return path10.slice(0, end);
}
function basename(path11, ext = "") {
    if (ext !== undefined && typeof ext !== "string") {
        throw new TypeError('"ext" argument must be a string');
    }
    assertPath(path11);
    let start = 0;
    let end = -1;
    let matchedSlash = true;
    let i376;
    if (path11.length >= 2) {
        const drive = path11.charCodeAt(0);
        if (isWindowsDeviceRoot(drive)) {
            if (path11.charCodeAt(1) === 58) start = 2;
        }
    }
    if (ext !== undefined && ext.length > 0 && ext.length <= path11.length) {
        if (ext.length === path11.length && ext === path11) return "";
        let extIdx = ext.length - 1;
        let firstNonSlashEnd = -1;
        for(i376 = path11.length - 1; i376 >= start; --i376){
            const code = path11.charCodeAt(i376);
            if (isPathSeparator(code)) {
                if (!matchedSlash) {
                    start = i376 + 1;
                    break;
                }
            } else {
                if (firstNonSlashEnd === -1) {
                    matchedSlash = false;
                    firstNonSlashEnd = i376 + 1;
                }
                if (extIdx >= 0) {
                    if (code === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                            end = i376;
                        }
                    } else {
                        extIdx = -1;
                        end = firstNonSlashEnd;
                    }
                }
            }
        }
        if (start === end) end = firstNonSlashEnd;
        else if (end === -1) end = path11.length;
        return path11.slice(start, end);
    } else {
        for(i376 = path11.length - 1; i376 >= start; --i376){
            if (isPathSeparator(path11.charCodeAt(i376))) {
                if (!matchedSlash) {
                    start = i376 + 1;
                    break;
                }
            } else if (end === -1) {
                matchedSlash = false;
                end = i376 + 1;
            }
        }
        if (end === -1) return "";
        return path11.slice(start, end);
    }
}
function extname(path12) {
    assertPath(path12);
    let start = 0;
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let preDotState = 0;
    if (path12.length >= 2 && path12.charCodeAt(1) === 58 && isWindowsDeviceRoot(path12.charCodeAt(0))) {
        start = startPart = 2;
    }
    for(let i377 = path12.length - 1; i377 >= start; --i377){
        const code = path12.charCodeAt(i377);
        if (isPathSeparator(code)) {
            if (!matchedSlash) {
                startPart = i377 + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i377 + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i377;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        return "";
    }
    return path12.slice(startDot, end);
}
function format(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
    return _format("\\", pathObject);
}
function parse(path13) {
    assertPath(path13);
    const ret = {
        root: "",
        dir: "",
        base: "",
        ext: "",
        name: ""
    };
    const len = path13.length;
    if (len === 0) return ret;
    let rootEnd = 0;
    let code = path13.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code)) {
            rootEnd = 1;
            if (isPathSeparator(path13.charCodeAt(1))) {
                let j47 = 2;
                let last = j47;
                for(; j47 < len; ++j47){
                    if (isPathSeparator(path13.charCodeAt(j47))) break;
                }
                if (j47 < len && j47 !== last) {
                    last = j47;
                    for(; j47 < len; ++j47){
                        if (!isPathSeparator(path13.charCodeAt(j47))) break;
                    }
                    if (j47 < len && j47 !== last) {
                        last = j47;
                        for(; j47 < len; ++j47){
                            if (isPathSeparator(path13.charCodeAt(j47))) break;
                        }
                        if (j47 === len) {
                            rootEnd = j47;
                        } else if (j47 !== last) {
                            rootEnd = j47 + 1;
                        }
                    }
                }
            }
        } else if (isWindowsDeviceRoot(code)) {
            if (path13.charCodeAt(1) === 58) {
                rootEnd = 2;
                if (len > 2) {
                    if (isPathSeparator(path13.charCodeAt(2))) {
                        if (len === 3) {
                            ret.root = ret.dir = path13;
                            return ret;
                        }
                        rootEnd = 3;
                    }
                } else {
                    ret.root = ret.dir = path13;
                    return ret;
                }
            }
        }
    } else if (isPathSeparator(code)) {
        ret.root = ret.dir = path13;
        return ret;
    }
    if (rootEnd > 0) ret.root = path13.slice(0, rootEnd);
    let startDot = -1;
    let startPart = rootEnd;
    let end = -1;
    let matchedSlash = true;
    let i378 = path13.length - 1;
    let preDotState = 0;
    for(; i378 >= rootEnd; --i378){
        code = path13.charCodeAt(i378);
        if (isPathSeparator(code)) {
            if (!matchedSlash) {
                startPart = i378 + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i378 + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i378;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        if (end !== -1) {
            ret.base = ret.name = path13.slice(startPart, end);
        }
    } else {
        ret.name = path13.slice(startPart, startDot);
        ret.base = path13.slice(startPart, end);
        ret.ext = path13.slice(startDot, end);
    }
    if (startPart > 0 && startPart !== rootEnd) {
        ret.dir = path13.slice(0, startPart - 1);
    } else ret.dir = ret.root;
    return ret;
}
function fromFileUrl(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol != "file:") {
        throw new TypeError("Must be a file URL.");
    }
    let path14 = decodeURIComponent(url.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
    if (url.hostname != "") {
        path14 = `\\\\${url.hostname}${path14}`;
    }
    return path14;
}
function toFileUrl(path15) {
    if (!isAbsolute(path15)) {
        throw new TypeError("Must be an absolute path.");
    }
    const [, hostname, pathname] = path15.match(/^(?:[/\\]{2}([^/\\]+)(?=[/\\](?:[^/\\]|$)))?(.*)/);
    const url = new URL("file:///");
    url.pathname = encodeWhitespace(pathname.replace(/%/g, "%25"));
    if (hostname != null && hostname != "localhost") {
        url.hostname = hostname;
        if (!url.hostname) {
            throw new TypeError("Invalid hostname.");
        }
    }
    return url;
}
const mod2 = {
    sep: sep,
    delimiter: delimiter,
    resolve: resolve,
    normalize: normalize,
    isAbsolute: isAbsolute,
    join: join1,
    relative: relative,
    toNamespacedPath: toNamespacedPath,
    dirname: dirname,
    basename: basename,
    extname: extname,
    format: format,
    parse: parse,
    fromFileUrl: fromFileUrl,
    toFileUrl: toFileUrl
};
const sep1 = "/";
const delimiter1 = ":";
function resolve1(...pathSegments) {
    let resolvedPath = "";
    let resolvedAbsolute = false;
    for(let i379 = pathSegments.length - 1; i379 >= -1 && !resolvedAbsolute; i379--){
        let path16;
        if (i379 >= 0) path16 = pathSegments[i379];
        else {
            const { Deno  } = globalThis;
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path16 = Deno.cwd();
        }
        assertPath(path16);
        if (path16.length === 0) {
            continue;
        }
        resolvedPath = `${path16}/${resolvedPath}`;
        resolvedAbsolute = path16.charCodeAt(0) === CHAR_FORWARD_SLASH;
    }
    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, "/", isPosixPathSeparator);
    if (resolvedAbsolute) {
        if (resolvedPath.length > 0) return `/${resolvedPath}`;
        else return "/";
    } else if (resolvedPath.length > 0) return resolvedPath;
    else return ".";
}
function normalize1(path17) {
    assertPath(path17);
    if (path17.length === 0) return ".";
    const isAbsolute1 = path17.charCodeAt(0) === 47;
    const trailingSeparator = path17.charCodeAt(path17.length - 1) === 47;
    path17 = normalizeString(path17, !isAbsolute1, "/", isPosixPathSeparator);
    if (path17.length === 0 && !isAbsolute1) path17 = ".";
    if (path17.length > 0 && trailingSeparator) path17 += "/";
    if (isAbsolute1) return `/${path17}`;
    return path17;
}
function isAbsolute1(path18) {
    assertPath(path18);
    return path18.length > 0 && path18.charCodeAt(0) === 47;
}
function join2(...paths) {
    if (paths.length === 0) return ".";
    let joined;
    for(let i380 = 0, len = paths.length; i380 < len; ++i380){
        const path19 = paths[i380];
        assertPath(path19);
        if (path19.length > 0) {
            if (!joined) joined = path19;
            else joined += `/${path19}`;
        }
    }
    if (!joined) return ".";
    return normalize1(joined);
}
function relative1(from, to3) {
    assertPath(from);
    assertPath(to3);
    if (from === to3) return "";
    from = resolve1(from);
    to3 = resolve1(to3);
    if (from === to3) return "";
    let fromStart = 1;
    const fromEnd = from.length;
    for(; fromStart < fromEnd; ++fromStart){
        if (from.charCodeAt(fromStart) !== 47) break;
    }
    const fromLen = fromEnd - fromStart;
    let toStart = 1;
    const toEnd = to3.length;
    for(; toStart < toEnd; ++toStart){
        if (to3.charCodeAt(toStart) !== 47) break;
    }
    const toLen = toEnd - toStart;
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i381 = 0;
    for(; i381 <= length; ++i381){
        if (i381 === length) {
            if (toLen > length) {
                if (to3.charCodeAt(toStart + i381) === 47) {
                    return to3.slice(toStart + i381 + 1);
                } else if (i381 === 0) {
                    return to3.slice(toStart + i381);
                }
            } else if (fromLen > length) {
                if (from.charCodeAt(fromStart + i381) === 47) {
                    lastCommonSep = i381;
                } else if (i381 === 0) {
                    lastCommonSep = 0;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i381);
        const toCode = to3.charCodeAt(toStart + i381);
        if (fromCode !== toCode) break;
        else if (fromCode === 47) lastCommonSep = i381;
    }
    let out = "";
    for(i381 = fromStart + lastCommonSep + 1; i381 <= fromEnd; ++i381){
        if (i381 === fromEnd || from.charCodeAt(i381) === 47) {
            if (out.length === 0) out += "..";
            else out += "/..";
        }
    }
    if (out.length > 0) return out + to3.slice(toStart + lastCommonSep);
    else {
        toStart += lastCommonSep;
        if (to3.charCodeAt(toStart) === 47) ++toStart;
        return to3.slice(toStart);
    }
}
function toNamespacedPath1(path20) {
    return path20;
}
function dirname1(path21) {
    assertPath(path21);
    if (path21.length === 0) return ".";
    const hasRoot = path21.charCodeAt(0) === 47;
    let end = -1;
    let matchedSlash = true;
    for(let i382 = path21.length - 1; i382 >= 1; --i382){
        if (path21.charCodeAt(i382) === 47) {
            if (!matchedSlash) {
                end = i382;
                break;
            }
        } else {
            matchedSlash = false;
        }
    }
    if (end === -1) return hasRoot ? "/" : ".";
    if (hasRoot && end === 1) return "//";
    return path21.slice(0, end);
}
function basename1(path22, ext = "") {
    if (ext !== undefined && typeof ext !== "string") {
        throw new TypeError('"ext" argument must be a string');
    }
    assertPath(path22);
    let start = 0;
    let end = -1;
    let matchedSlash = true;
    let i383;
    if (ext !== undefined && ext.length > 0 && ext.length <= path22.length) {
        if (ext.length === path22.length && ext === path22) return "";
        let extIdx = ext.length - 1;
        let firstNonSlashEnd = -1;
        for(i383 = path22.length - 1; i383 >= 0; --i383){
            const code = path22.charCodeAt(i383);
            if (code === 47) {
                if (!matchedSlash) {
                    start = i383 + 1;
                    break;
                }
            } else {
                if (firstNonSlashEnd === -1) {
                    matchedSlash = false;
                    firstNonSlashEnd = i383 + 1;
                }
                if (extIdx >= 0) {
                    if (code === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                            end = i383;
                        }
                    } else {
                        extIdx = -1;
                        end = firstNonSlashEnd;
                    }
                }
            }
        }
        if (start === end) end = firstNonSlashEnd;
        else if (end === -1) end = path22.length;
        return path22.slice(start, end);
    } else {
        for(i383 = path22.length - 1; i383 >= 0; --i383){
            if (path22.charCodeAt(i383) === 47) {
                if (!matchedSlash) {
                    start = i383 + 1;
                    break;
                }
            } else if (end === -1) {
                matchedSlash = false;
                end = i383 + 1;
            }
        }
        if (end === -1) return "";
        return path22.slice(start, end);
    }
}
function extname1(path23) {
    assertPath(path23);
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let preDotState = 0;
    for(let i384 = path23.length - 1; i384 >= 0; --i384){
        const code = path23.charCodeAt(i384);
        if (code === 47) {
            if (!matchedSlash) {
                startPart = i384 + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i384 + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i384;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        return "";
    }
    return path23.slice(startDot, end);
}
function format1(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
    return _format("/", pathObject);
}
function parse1(path24) {
    assertPath(path24);
    const ret = {
        root: "",
        dir: "",
        base: "",
        ext: "",
        name: ""
    };
    if (path24.length === 0) return ret;
    const isAbsolute2 = path24.charCodeAt(0) === 47;
    let start;
    if (isAbsolute2) {
        ret.root = "/";
        start = 1;
    } else {
        start = 0;
    }
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let i385 = path24.length - 1;
    let preDotState = 0;
    for(; i385 >= start; --i385){
        const code = path24.charCodeAt(i385);
        if (code === 47) {
            if (!matchedSlash) {
                startPart = i385 + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i385 + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i385;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        if (end !== -1) {
            if (startPart === 0 && isAbsolute2) {
                ret.base = ret.name = path24.slice(1, end);
            } else {
                ret.base = ret.name = path24.slice(startPart, end);
            }
        }
    } else {
        if (startPart === 0 && isAbsolute2) {
            ret.name = path24.slice(1, startDot);
            ret.base = path24.slice(1, end);
        } else {
            ret.name = path24.slice(startPart, startDot);
            ret.base = path24.slice(startPart, end);
        }
        ret.ext = path24.slice(startDot, end);
    }
    if (startPart > 0) ret.dir = path24.slice(0, startPart - 1);
    else if (isAbsolute2) ret.dir = "/";
    return ret;
}
function fromFileUrl1(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol != "file:") {
        throw new TypeError("Must be a file URL.");
    }
    return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function toFileUrl1(path25) {
    if (!isAbsolute1(path25)) {
        throw new TypeError("Must be an absolute path.");
    }
    const url = new URL("file:///");
    url.pathname = encodeWhitespace(path25.replace(/%/g, "%25").replace(/\\/g, "%5C"));
    return url;
}
const mod3 = {
    sep: sep1,
    delimiter: delimiter1,
    resolve: resolve1,
    normalize: normalize1,
    isAbsolute: isAbsolute1,
    join: join2,
    relative: relative1,
    toNamespacedPath: toNamespacedPath1,
    dirname: dirname1,
    basename: basename1,
    extname: extname1,
    format: format1,
    parse: parse1,
    fromFileUrl: fromFileUrl1,
    toFileUrl: toFileUrl1
};
const path = isWindows ? mod2 : mod3;
const { join: join3 , normalize: normalize2  } = path;
const path1 = isWindows ? mod2 : mod3;
const { basename: basename2 , delimiter: delimiter2 , dirname: dirname2 , extname: extname2 , format: format2 , fromFileUrl: fromFileUrl2 , isAbsolute: isAbsolute2 , join: join4 , normalize: normalize3 , parse: parse2 , relative: relative2 , resolve: resolve2 , sep: sep2 , toFileUrl: toFileUrl2 , toNamespacedPath: toNamespacedPath2 ,  } = path1;
"use strict";
const base = 36;
const damp = 700;
const delimiter3 = "-";
const regexNonASCII = /[^\0-\x7E]/;
const regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g;
const errors = {
    "overflow": "Overflow: input needs wider integers to process",
    "not-basic": "Illegal input >= 0x80 (not a basic code point)",
    "invalid-input": "Invalid input"
};
const baseMinusTMin = 36 - 1;
function error(type) {
    throw new RangeError(errors[type]);
}
function mapDomain(str, fn) {
    const parts = str.split("@");
    let result = "";
    if (parts.length > 1) {
        result = parts[0] + "@";
        str = parts[1];
    }
    str = str.replace(regexSeparators, "\x2E");
    const labels = str.split(".");
    const encoded = labels.map(fn).join(".");
    return result + encoded;
}
function ucs2decode(str) {
    const output = [];
    let counter = 0;
    const length = str.length;
    while(counter < length){
        const value = str.charCodeAt(counter++);
        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
            const extra = str.charCodeAt(counter++);
            if ((extra & 0xFC00) == 0xDC00) {
                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
            } else {
                output.push(value);
                counter--;
            }
        } else {
            output.push(value);
        }
    }
    return output;
}
function digitToBasic(digit, flag) {
    return digit + 22 + 75 * Number(digit < 26) - (Number(flag != 0) << 5);
}
function adapt(delta, numPoints, firstTime) {
    let k49 = 0;
    delta = firstTime ? Math.floor(delta / damp) : delta >> 1;
    delta += Math.floor(delta / numPoints);
    for(; delta > baseMinusTMin * 26 >> 1; k49 += base){
        delta = Math.floor(delta / baseMinusTMin);
    }
    return Math.floor(k49 + (baseMinusTMin + 1) * delta / (delta + 38));
}
function encode2(str) {
    const output = [];
    const input = ucs2decode(str);
    const inputLength = input.length;
    let n365 = 128;
    let delta = 0;
    let bias = 72;
    for (const currentValue of input){
        if (currentValue < 0x80) {
            output.push(String.fromCharCode(currentValue));
        }
    }
    const basicLength = output.length;
    let handledCPCount = basicLength;
    if (basicLength) {
        output.push(delimiter3);
    }
    while(handledCPCount < inputLength){
        let m90 = 2147483647;
        for (const currentValue of input){
            if (currentValue >= n365 && currentValue < m90) {
                m90 = currentValue;
            }
        }
        const handledCPCountPlusOne = handledCPCount + 1;
        if (m90 - n365 > Math.floor((2147483647 - delta) / handledCPCountPlusOne)) {
            error("overflow");
        }
        delta += (m90 - n365) * handledCPCountPlusOne;
        n365 = m90;
        for (const currentValue1 of input){
            if (currentValue1 < n365 && ++delta > 2147483647) {
                error("overflow");
            }
            if (currentValue1 == n365) {
                let q31 = delta;
                for(let k50 = 36;; k50 += base){
                    const t675 = k50 <= bias ? 1 : k50 >= bias + 26 ? 26 : k50 - bias;
                    if (q31 < t675) {
                        break;
                    }
                    const qMinusT = q31 - t675;
                    const baseMinusT = 36 - t675;
                    output.push(String.fromCharCode(digitToBasic(t675 + qMinusT % baseMinusT, 0)));
                    q31 = Math.floor(qMinusT / baseMinusT);
                }
                output.push(String.fromCharCode(digitToBasic(q31, 0)));
                bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                delta = 0;
                ++handledCPCount;
            }
        }
        ++delta;
        ++n365;
    }
    return output.join("");
}
function toASCII(input) {
    return mapDomain(input, function(str) {
        return regexNonASCII.test(str) ? "xn--" + encode2(str) : str;
    });
}
const hexTable = new Array(256);
for(let i10 = 0; i10 < 256; ++i10){
    hexTable[i10] = "%" + ((i10 < 16 ? "0" : "") + i10.toString(16)).toUpperCase();
}
new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
]);
function encodeStr(str, noEscapeTable, hexTable1) {
    const len = str.length;
    if (len === 0) return "";
    let out = "";
    let lastPos = 0;
    for(let i1101 = 0; i1101 < len; i1101++){
        let c103 = str.charCodeAt(i1101);
        if (c103 < 0x80) {
            if (noEscapeTable[c103] === 1) continue;
            if (lastPos < i1101) out += str.slice(lastPos, i1101);
            lastPos = i1101 + 1;
            out += hexTable1[c103];
            continue;
        }
        if (lastPos < i1101) out += str.slice(lastPos, i1101);
        if (c103 < 0x800) {
            lastPos = i1101 + 1;
            out += hexTable1[0xc0 | c103 >> 6] + hexTable1[0x80 | c103 & 0x3f];
            continue;
        }
        if (c103 < 0xd800 || c103 >= 0xe000) {
            lastPos = i1101 + 1;
            out += hexTable1[0xe0 | c103 >> 12] + hexTable1[0x80 | c103 >> 6 & 0x3f] + hexTable1[0x80 | c103 & 0x3f];
            continue;
        }
        ++i1101;
        if (i1101 >= len) throw new ERR_INVALID_URI();
        const c210 = str.charCodeAt(i1101) & 0x3ff;
        lastPos = i1101 + 1;
        c103 = 0x10000 + ((c103 & 0x3ff) << 10 | c210);
        out += hexTable1[0xf0 | c103 >> 18] + hexTable1[0x80 | c103 >> 12 & 0x3f] + hexTable1[0x80 | c103 >> 6 & 0x3f] + hexTable1[0x80 | c103 & 0x3f];
    }
    if (lastPos === 0) return str;
    if (lastPos < len) return out + str.slice(lastPos);
    return out;
}
const decode2 = parse3;
const encode3 = stringify;
function qsEscape(str) {
    if (typeof str !== "string") {
        if (typeof str === "object") {
            str = String(str);
        } else {
            str += "";
        }
    }
    return encodeStr(str, noEscape, hexTable);
}
const escape = qsEscape;
const isHexTable = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
]);
function charCodes(str) {
    const ret = new Array(str.length);
    for(let i386 = 0; i386 < str.length; ++i386){
        ret[i386] = str.charCodeAt(i386);
    }
    return ret;
}
function addKeyVal(obj, key, value, keyEncoded, valEncoded, decode11) {
    if (key.length > 0 && keyEncoded) {
        key = decode11(key);
    }
    if (value.length > 0 && valEncoded) {
        value = decode11(value);
    }
    if (obj[key] === undefined) {
        obj[key] = value;
    } else {
        const curValue = obj[key];
        if (curValue.pop) {
            curValue[curValue.length] = value;
        } else {
            obj[key] = [
                curValue,
                value
            ];
        }
    }
}
function parse3(str, sep4 = "&", eq = "=", { decodeURIComponent =unescape , maxKeys =1000  } = {}) {
    const obj = Object.create(null);
    if (typeof str !== "string" || str.length === 0) {
        return obj;
    }
    const sepCodes = !sep4 ? [
        38
    ] : charCodes(String(sep4));
    const eqCodes = !eq ? [
        61
    ] : charCodes(String(eq));
    const sepLen = sepCodes.length;
    const eqLen = eqCodes.length;
    let pairs = 1000;
    if (typeof maxKeys === "number") {
        pairs = maxKeys > 0 ? maxKeys : -1;
    }
    let decode21 = unescape;
    if (decodeURIComponent) {
        decode21 = decodeURIComponent;
    }
    const customDecode = decode21 !== unescape;
    let lastPos = 0;
    let sepIdx = 0;
    let eqIdx = 0;
    let key = "";
    let value = "";
    let keyEncoded = customDecode;
    let valEncoded = customDecode;
    const plusChar = customDecode ? "%20" : " ";
    let encodeCheck = 0;
    for(let i387 = 0; i387 < str.length; ++i387){
        const code = str.charCodeAt(i387);
        if (code === sepCodes[sepIdx]) {
            if (++sepIdx === sepLen) {
                const end = i387 - sepIdx + 1;
                if (eqIdx < eqLen) {
                    if (lastPos < end) {
                        key += str.slice(lastPos, end);
                    } else if (key.length === 0) {
                        if (--pairs === 0) {
                            return obj;
                        }
                        lastPos = i387 + 1;
                        sepIdx = eqIdx = 0;
                        continue;
                    }
                } else if (lastPos < end) {
                    value += str.slice(lastPos, end);
                }
                addKeyVal(obj, key, value, keyEncoded, valEncoded, decode21);
                if (--pairs === 0) {
                    return obj;
                }
                key = value = "";
                encodeCheck = 0;
                lastPos = i387 + 1;
                sepIdx = eqIdx = 0;
            }
        } else {
            sepIdx = 0;
            if (eqIdx < eqLen) {
                if (code === eqCodes[eqIdx]) {
                    if (++eqIdx === eqLen) {
                        const end = i387 - eqIdx + 1;
                        if (lastPos < end) {
                            key += str.slice(lastPos, end);
                        }
                        encodeCheck = 0;
                        lastPos = i387 + 1;
                    }
                    continue;
                } else {
                    eqIdx = 0;
                    if (!keyEncoded) {
                        if (code === 37) {
                            encodeCheck = 1;
                            continue;
                        } else if (encodeCheck > 0) {
                            if (isHexTable[code] === 1) {
                                if (++encodeCheck === 3) {
                                    keyEncoded = true;
                                }
                                continue;
                            } else {
                                encodeCheck = 0;
                            }
                        }
                    }
                }
                if (code === 43) {
                    if (lastPos < i387) {
                        key += str.slice(lastPos, i387);
                    }
                    key += plusChar;
                    lastPos = i387 + 1;
                    continue;
                }
            }
            if (code === 43) {
                if (lastPos < i387) {
                    value += str.slice(lastPos, i387);
                }
                value += plusChar;
                lastPos = i387 + 1;
            } else if (!valEncoded) {
                if (code === 37) {
                    encodeCheck = 1;
                } else if (encodeCheck > 0) {
                    if (isHexTable[code] === 1) {
                        if (++encodeCheck === 3) {
                            valEncoded = true;
                        }
                    } else {
                        encodeCheck = 0;
                    }
                }
            }
        }
    }
    if (lastPos < str.length) {
        if (eqIdx < eqLen) {
            key += str.slice(lastPos);
        } else if (sepIdx < sepLen) {
            value += str.slice(lastPos);
        }
    } else if (eqIdx === 0 && key.length === 0) {
        return obj;
    }
    addKeyVal(obj, key, value, keyEncoded, valEncoded, decode21);
    return obj;
}
const noEscape = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0
]);
function stringifyPrimitive(v45) {
    if (typeof v45 === "string") {
        return v45;
    }
    if (typeof v45 === "number" && isFinite(v45)) {
        return "" + v45;
    }
    if (typeof v45 === "bigint") {
        return "" + v45;
    }
    if (typeof v45 === "boolean") {
        return v45 ? "true" : "false";
    }
    return "";
}
function encodeStringifiedCustom(v46, encode11) {
    return encode11(stringifyPrimitive(v46));
}
function encodeStringified(v47, encode21) {
    if (typeof v47 === "string") {
        return v47.length ? encode21(v47) : "";
    }
    if (typeof v47 === "number" && isFinite(v47)) {
        return Math.abs(v47) < 1e21 ? "" + v47 : encode21("" + v47);
    }
    if (typeof v47 === "bigint") {
        return "" + v47;
    }
    if (typeof v47 === "boolean") {
        return v47 ? "true" : "false";
    }
    return "";
}
function stringify(obj, sep5, eq, options) {
    sep5 ||= "&";
    eq ||= "=";
    const encode31 = options ? options.encodeURIComponent : qsEscape;
    const convert = options ? encodeStringifiedCustom : encodeStringified;
    if (obj !== null && typeof obj === "object") {
        const keys = Object.keys(obj);
        const len = keys.length;
        let fields = "";
        for(let i388 = 0; i388 < len; ++i388){
            const k51 = keys[i388];
            const v48 = obj[k51];
            let ks = convert(k51, encode31);
            ks += eq;
            if (Array.isArray(v48)) {
                const vlen = v48.length;
                if (vlen === 0) continue;
                if (fields) {
                    fields += sep5;
                }
                for(let j48 = 0; j48 < vlen; ++j48){
                    if (j48) {
                        fields += sep5;
                    }
                    fields += ks;
                    fields += convert(v48[j48], encode31);
                }
            } else {
                if (fields) {
                    fields += sep5;
                }
                fields += ks;
                fields += convert(v48, encode31);
            }
        }
        return fields;
    }
    return "";
}
const unhexTable = new Int8Array([
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    +0,
    +1,
    +2,
    +3,
    +4,
    +5,
    +6,
    +7,
    +8,
    +9,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    10,
    11,
    12,
    13,
    14,
    15,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    10,
    11,
    12,
    13,
    14,
    15,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1
]);
function unescapeBuffer(s243, decodeSpaces = false) {
    const out = new Buffer(s243.length);
    let index = 0;
    let outIndex = 0;
    let currentChar;
    let nextChar;
    let hexHigh;
    let hexLow;
    const maxLength = s243.length - 2;
    let hasHex = false;
    while(index < s243.length){
        currentChar = s243.charCodeAt(index);
        if (currentChar === 43 && decodeSpaces) {
            out[outIndex++] = 32;
            index++;
            continue;
        }
        if (currentChar === 37 && index < maxLength) {
            currentChar = s243.charCodeAt(++index);
            hexHigh = unhexTable[currentChar];
            if (!(hexHigh >= 0)) {
                out[outIndex++] = 37;
                continue;
            } else {
                nextChar = s243.charCodeAt(++index);
                hexLow = unhexTable[nextChar];
                if (!(hexLow >= 0)) {
                    out[outIndex++] = 37;
                    index--;
                } else {
                    hasHex = true;
                    currentChar = hexHigh * 16 + hexLow;
                }
            }
        }
        out[outIndex++] = currentChar;
        index++;
    }
    return hasHex ? out.slice(0, outIndex) : out;
}
function qsUnescape(s244) {
    try {
        return decodeURIComponent(s244);
    } catch  {
        return unescapeBuffer(s244).toString();
    }
}
const unescape = qsUnescape;
const __default1 = {
    parse: parse3,
    stringify,
    decode: decode2,
    encode: encode3,
    unescape,
    escape,
    unescapeBuffer
};
const protocolPattern = /^[a-z0-9.+-]+:/i;
const portPattern = /:[0-9]*$/;
const hostPattern = /^\/\/[^@/]+@[^@/]+/;
const simplePathPattern = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/;
const unsafeProtocol = new Set([
    "javascript",
    "javascript:"
]);
const hostlessProtocol = new Set([
    "javascript",
    "javascript:"
]);
const slashedProtocol = new Set([
    "http",
    "http:",
    "https",
    "https:",
    "ftp",
    "ftp:",
    "gopher",
    "gopher:",
    "file",
    "file:",
    "ws",
    "ws:",
    "wss",
    "wss:", 
]);
const noEscapeAuth = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0
]);
const _url = URL;
class Url {
    protocol;
    slashes;
    auth;
    host;
    port;
    hostname;
    hash;
    search;
    query;
    pathname;
    path;
    href;
    constructor(){
        this.protocol = null;
        this.slashes = null;
        this.auth = null;
        this.host = null;
        this.port = null;
        this.hostname = null;
        this.hash = null;
        this.search = null;
        this.query = null;
        this.pathname = null;
        this.path = null;
        this.href = null;
    }
    parseHost() {
        let host = this.host || "";
        let port = portPattern.exec(host);
        if (port) {
            port = port[0];
            if (port !== ":") {
                this.port = port.slice(1);
            }
            host = host.slice(0, host.length - port.length);
        }
        if (host) this.hostname = host;
    }
    resolve(relative3) {
        return this.resolveObject(parse4(relative3, false, true)).format();
    }
    resolveObject(relative4) {
        if (typeof relative4 === "string") {
            const rel = new Url();
            rel.urlParse(relative4, false, true);
            relative4 = rel;
        }
        const result = new Url();
        const tkeys = Object.keys(this);
        for(let tk = 0; tk < tkeys.length; tk++){
            const tkey = tkeys[tk];
            result[tkey] = this[tkey];
        }
        result.hash = relative4.hash;
        if (relative4.href === "") {
            result.href = result.format();
            return result;
        }
        if (relative4.slashes && !relative4.protocol) {
            const rkeys = Object.keys(relative4);
            for(let rk = 0; rk < rkeys.length; rk++){
                const rkey = rkeys[rk];
                if (rkey !== "protocol") result[rkey] = relative4[rkey];
            }
            if (result.protocol && slashedProtocol.has(result.protocol) && result.hostname && !result.pathname) {
                result.path = result.pathname = "/";
            }
            result.href = result.format();
            return result;
        }
        if (relative4.protocol && relative4.protocol !== result.protocol) {
            if (!slashedProtocol.has(relative4.protocol)) {
                const keys = Object.keys(relative4);
                for(let v49 = 0; v49 < keys.length; v49++){
                    const k52 = keys[v49];
                    result[k52] = relative4[k52];
                }
                result.href = result.format();
                return result;
            }
            result.protocol = relative4.protocol;
            if (!relative4.host && !/^file:?$/.test(relative4.protocol) && !hostlessProtocol.has(relative4.protocol)) {
                const relPath = (relative4.pathname || "").split("/");
                while(relPath.length && !(relative4.host = relPath.shift() || null));
                if (!relative4.host) relative4.host = "";
                if (!relative4.hostname) relative4.hostname = "";
                if (relPath[0] !== "") relPath.unshift("");
                if (relPath.length < 2) relPath.unshift("");
                result.pathname = relPath.join("/");
            } else {
                result.pathname = relative4.pathname;
            }
            result.search = relative4.search;
            result.query = relative4.query;
            result.host = relative4.host || "";
            result.auth = relative4.auth;
            result.hostname = relative4.hostname || relative4.host;
            result.port = relative4.port;
            if (result.pathname || result.search) {
                const p136 = result.pathname || "";
                const s245 = result.search || "";
                result.path = p136 + s245;
            }
            result.slashes = result.slashes || relative4.slashes;
            result.href = result.format();
            return result;
        }
        const isSourceAbs = result.pathname && result.pathname.charAt(0) === "/";
        const isRelAbs = relative4.host || relative4.pathname && relative4.pathname.charAt(0) === "/";
        let mustEndAbs = isRelAbs || isSourceAbs || result.host && relative4.pathname;
        const removeAllDots = mustEndAbs;
        let srcPath = result.pathname && result.pathname.split("/") || [];
        const relPath = relative4.pathname && relative4.pathname.split("/") || [];
        const noLeadingSlashes = result.protocol && !slashedProtocol.has(result.protocol);
        if (noLeadingSlashes) {
            result.hostname = "";
            result.port = null;
            if (result.host) {
                if (srcPath[0] === "") srcPath[0] = result.host;
                else srcPath.unshift(result.host);
            }
            result.host = "";
            if (relative4.protocol) {
                relative4.hostname = null;
                relative4.port = null;
                result.auth = null;
                if (relative4.host) {
                    if (relPath[0] === "") relPath[0] = relative4.host;
                    else relPath.unshift(relative4.host);
                }
                relative4.host = null;
            }
            mustEndAbs = mustEndAbs && (relPath[0] === "" || srcPath[0] === "");
        }
        if (isRelAbs) {
            if (relative4.host || relative4.host === "") {
                if (result.host !== relative4.host) result.auth = null;
                result.host = relative4.host;
                result.port = relative4.port;
            }
            if (relative4.hostname || relative4.hostname === "") {
                if (result.hostname !== relative4.hostname) result.auth = null;
                result.hostname = relative4.hostname;
            }
            result.search = relative4.search;
            result.query = relative4.query;
            srcPath = relPath;
        } else if (relPath.length) {
            if (!srcPath) srcPath = [];
            srcPath.pop();
            srcPath = srcPath.concat(relPath);
            result.search = relative4.search;
            result.query = relative4.query;
        } else if (relative4.search !== null && relative4.search !== undefined) {
            if (noLeadingSlashes) {
                result.hostname = result.host = srcPath.shift() || null;
                const authInHost = result.host && result.host.indexOf("@") > 0 && result.host.split("@");
                if (authInHost) {
                    result.auth = authInHost.shift() || null;
                    result.host = result.hostname = authInHost.shift() || null;
                }
            }
            result.search = relative4.search;
            result.query = relative4.query;
            if (result.pathname !== null || result.search !== null) {
                result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
            }
            result.href = result.format();
            return result;
        }
        if (!srcPath.length) {
            result.pathname = null;
            if (result.search) {
                result.path = "/" + result.search;
            } else {
                result.path = null;
            }
            result.href = result.format();
            return result;
        }
        let last = srcPath.slice(-1)[0];
        const hasTrailingSlash = (result.host || relative4.host || srcPath.length > 1) && (last === "." || last === "..") || last === "";
        let up = 0;
        for(let i389 = srcPath.length - 1; i389 >= 0; i389--){
            last = srcPath[i389];
            if (last === ".") {
                srcPath.splice(i389, 1);
            } else if (last === "..") {
                srcPath.splice(i389, 1);
                up++;
            } else if (up) {
                srcPath.splice(i389, 1);
                up--;
            }
        }
        if (!mustEndAbs && !removeAllDots) {
            while(up--){
                srcPath.unshift("..");
            }
        }
        if (mustEndAbs && srcPath[0] !== "" && (!srcPath[0] || srcPath[0].charAt(0) !== "/")) {
            srcPath.unshift("");
        }
        if (hasTrailingSlash && srcPath.join("/").substr(-1) !== "/") {
            srcPath.push("");
        }
        const isAbsolute3 = srcPath[0] === "" || srcPath[0] && srcPath[0].charAt(0) === "/";
        if (noLeadingSlashes) {
            result.hostname = result.host = isAbsolute3 ? "" : srcPath.length ? srcPath.shift() || null : "";
            const authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
            if (authInHost) {
                result.auth = authInHost.shift() || null;
                result.host = result.hostname = authInHost.shift() || null;
            }
        }
        mustEndAbs = mustEndAbs || result.host && srcPath.length;
        if (mustEndAbs && !isAbsolute3) {
            srcPath.unshift("");
        }
        if (!srcPath.length) {
            result.pathname = null;
            result.path = null;
        } else {
            result.pathname = srcPath.join("/");
        }
        if (result.pathname !== null || result.search !== null) {
            result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
        }
        result.auth = relative4.auth || result.auth;
        result.slashes = result.slashes || relative4.slashes;
        result.href = result.format();
        return result;
    }
    format() {
        let auth = this.auth || "";
        if (auth) {
            auth = encodeStr(auth, noEscapeAuth, hexTable);
            auth += "@";
        }
        let protocol = this.protocol || "";
        let pathname = this.pathname || "";
        let hash = this.hash || "";
        let host = "";
        let query = "";
        if (this.host) {
            host = auth + this.host;
        } else if (this.hostname) {
            host = auth + (this.hostname.includes(":") && !isIpv6Hostname(this.hostname) ? "[" + this.hostname + "]" : this.hostname);
            if (this.port) {
                host += ":" + this.port;
            }
        }
        if (this.query !== null && typeof this.query === "object") {
            query = __default1.stringify(this.query);
        }
        let search = this.search || query && "?" + query || "";
        if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58) {
            protocol += ":";
        }
        let newPathname = "";
        let lastPos = 0;
        for(let i390 = 0; i390 < pathname.length; ++i390){
            switch(pathname.charCodeAt(i390)){
                case 35:
                    if (i390 - lastPos > 0) {
                        newPathname += pathname.slice(lastPos, i390);
                    }
                    newPathname += "%23";
                    lastPos = i390 + 1;
                    break;
                case 63:
                    if (i390 - lastPos > 0) {
                        newPathname += pathname.slice(lastPos, i390);
                    }
                    newPathname += "%3F";
                    lastPos = i390 + 1;
                    break;
            }
        }
        if (lastPos > 0) {
            if (lastPos !== pathname.length) {
                pathname = newPathname + pathname.slice(lastPos);
            } else pathname = newPathname;
        }
        if (this.slashes || slashedProtocol.has(protocol)) {
            if (this.slashes || host) {
                if (pathname && pathname.charCodeAt(0) !== 47) {
                    pathname = "/" + pathname;
                }
                host = "//" + host;
            } else if (protocol.length >= 4 && protocol.charCodeAt(0) === 102 && protocol.charCodeAt(1) === 105 && protocol.charCodeAt(2) === 108 && protocol.charCodeAt(3) === 101) {
                host = "//";
            }
        }
        search = search.replace(/#/g, "%23");
        if (hash && hash.charCodeAt(0) !== 35) {
            hash = "#" + hash;
        }
        if (search && search.charCodeAt(0) !== 63) {
            search = "?" + search;
        }
        return protocol + host + pathname + search + hash;
    }
    urlParse(url, parseQueryString, slashesDenoteHost) {
        let hasHash = false;
        let start = -1;
        let end = -1;
        let rest = "";
        let lastPos = 0;
        for(let i391 = 0, inWs = false, split = false; i391 < url.length; ++i391){
            const code = url.charCodeAt(i391);
            const isWs = code === 32 || code === 9 || code === 13 || code === 10 || code === 12 || code === 160 || code === 65279;
            if (start === -1) {
                if (isWs) continue;
                lastPos = start = i391;
            } else if (inWs) {
                if (!isWs) {
                    end = -1;
                    inWs = false;
                }
            } else if (isWs) {
                end = i391;
                inWs = true;
            }
            if (!split) {
                switch(code){
                    case 35:
                        hasHash = true;
                    case 63:
                        split = true;
                        break;
                    case 92:
                        if (i391 - lastPos > 0) rest += url.slice(lastPos, i391);
                        rest += "/";
                        lastPos = i391 + 1;
                        break;
                }
            } else if (!hasHash && code === 35) {
                hasHash = true;
            }
        }
        if (start !== -1) {
            if (lastPos === start) {
                if (end === -1) {
                    if (start === 0) rest = url;
                    else rest = url.slice(start);
                } else {
                    rest = url.slice(start, end);
                }
            } else if (end === -1 && lastPos < url.length) {
                rest += url.slice(lastPos);
            } else if (end !== -1 && lastPos < end) {
                rest += url.slice(lastPos, end);
            }
        }
        if (!slashesDenoteHost && !hasHash) {
            const simplePath = simplePathPattern.exec(rest);
            if (simplePath) {
                this.path = rest;
                this.href = rest;
                this.pathname = simplePath[1];
                if (simplePath[2]) {
                    this.search = simplePath[2];
                    if (parseQueryString) {
                        this.query = __default1.parse(this.search.slice(1));
                    } else {
                        this.query = this.search.slice(1);
                    }
                } else if (parseQueryString) {
                    this.search = null;
                    this.query = Object.create(null);
                }
                return this;
            }
        }
        let proto = protocolPattern.exec(rest);
        let lowerProto = "";
        if (proto) {
            proto = proto[0];
            lowerProto = proto.toLowerCase();
            this.protocol = lowerProto;
            rest = rest.slice(proto.length);
        }
        let slashes;
        if (slashesDenoteHost || proto || hostPattern.test(rest)) {
            slashes = rest.charCodeAt(0) === CHAR_FORWARD_SLASH && rest.charCodeAt(1) === CHAR_FORWARD_SLASH;
            if (slashes && !(proto && hostlessProtocol.has(lowerProto))) {
                rest = rest.slice(2);
                this.slashes = true;
            }
        }
        if (!hostlessProtocol.has(lowerProto) && (slashes || proto && !slashedProtocol.has(proto))) {
            let hostEnd = -1;
            let atSign = -1;
            let nonHost = -1;
            for(let i392 = 0; i392 < rest.length; ++i392){
                switch(rest.charCodeAt(i392)){
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                    case 34:
                    case 37:
                    case 39:
                    case 59:
                    case 60:
                    case 62:
                    case 92:
                    case 94:
                    case 96:
                    case 123:
                    case 124:
                    case 125:
                        if (nonHost === -1) nonHost = i392;
                        break;
                    case 35:
                    case 47:
                    case 63:
                        if (nonHost === -1) nonHost = i392;
                        hostEnd = i392;
                        break;
                    case 64:
                        atSign = i392;
                        nonHost = -1;
                        break;
                }
                if (hostEnd !== -1) break;
            }
            start = 0;
            if (atSign !== -1) {
                this.auth = decodeURIComponent(rest.slice(0, atSign));
                start = atSign + 1;
            }
            if (nonHost === -1) {
                this.host = rest.slice(start);
                rest = "";
            } else {
                this.host = rest.slice(start, nonHost);
                rest = rest.slice(nonHost);
            }
            this.parseHost();
            if (typeof this.hostname !== "string") this.hostname = "";
            const hostname = this.hostname;
            const ipv6Hostname = isIpv6Hostname(hostname);
            if (!ipv6Hostname) {
                rest = getHostname(this, rest, hostname);
            }
            if (this.hostname.length > 255) {
                this.hostname = "";
            } else {
                this.hostname = this.hostname.toLowerCase();
            }
            if (!ipv6Hostname) {
                this.hostname = toASCII(this.hostname);
            }
            const p137 = this.port ? ":" + this.port : "";
            const h108 = this.hostname || "";
            this.host = h108 + p137;
            if (ipv6Hostname) {
                this.hostname = this.hostname.slice(1, -1);
                if (rest[0] !== "/") {
                    rest = "/" + rest;
                }
            }
        }
        if (!unsafeProtocol.has(lowerProto)) {
            rest = autoEscapeStr(rest);
        }
        let questionIdx = -1;
        let hashIdx = -1;
        for(let i1102 = 0; i1102 < rest.length; ++i1102){
            const code = rest.charCodeAt(i1102);
            if (code === 35) {
                this.hash = rest.slice(i1102);
                hashIdx = i1102;
                break;
            } else if (code === 63 && questionIdx === -1) {
                questionIdx = i1102;
            }
        }
        if (questionIdx !== -1) {
            if (hashIdx === -1) {
                this.search = rest.slice(questionIdx);
                this.query = rest.slice(questionIdx + 1);
            } else {
                this.search = rest.slice(questionIdx, hashIdx);
                this.query = rest.slice(questionIdx + 1, hashIdx);
            }
            if (parseQueryString) {
                this.query = __default1.parse(this.query);
            }
        } else if (parseQueryString) {
            this.search = null;
            this.query = Object.create(null);
        }
        const useQuestionIdx = questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx);
        const firstIdx = useQuestionIdx ? questionIdx : hashIdx;
        if (firstIdx === -1) {
            if (rest.length > 0) this.pathname = rest;
        } else if (firstIdx > 0) {
            this.pathname = rest.slice(0, firstIdx);
        }
        if (slashedProtocol.has(lowerProto) && this.hostname && !this.pathname) {
            this.pathname = "/";
        }
        if (this.pathname || this.search) {
            const p138 = this.pathname || "";
            const s246 = this.search || "";
            this.path = p138 + s246;
        }
        this.href = this.format();
        return this;
    }
}
function isIpv6Hostname(hostname) {
    return hostname.charCodeAt(0) === 91 && hostname.charCodeAt(hostname.length - 1) === 93;
}
function getHostname(self, rest, hostname) {
    for(let i393 = 0; i393 < hostname.length; ++i393){
        const code = hostname.charCodeAt(i393);
        const isValid = code >= 97 && code <= 122 || code === 46 || code >= 65 && code <= 90 || code >= 48 && code <= 57 || code === 45 || code === 43 || code === 95 || code > 127;
        if (!isValid) {
            self.hostname = hostname.slice(0, i393);
            return `/${hostname.slice(i393)}${rest}`;
        }
    }
    return rest;
}
const escapedCodes = [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "%09",
    "%0A",
    "",
    "",
    "%0D",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "%20",
    "",
    "%22",
    "",
    "",
    "",
    "",
    "%27",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "%3C",
    "",
    "%3E",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "%5C",
    "",
    "%5E",
    "",
    "%60",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "%7B",
    "%7C",
    "%7D"
];
function autoEscapeStr(rest) {
    let escaped = "";
    let lastEscapedPos = 0;
    for(let i394 = 0; i394 < rest.length; ++i394){
        const escapedChar = escapedCodes[rest.charCodeAt(i394)];
        if (escapedChar) {
            if (i394 > lastEscapedPos) {
                escaped += rest.slice(lastEscapedPos, i394);
            }
            escaped += escapedChar;
            lastEscapedPos = i394 + 1;
        }
    }
    if (lastEscapedPos === 0) {
        return rest;
    }
    if (lastEscapedPos < rest.length) {
        escaped += rest.slice(lastEscapedPos);
    }
    return escaped;
}
function parse4(url, parseQueryString, slashesDenoteHost) {
    if (url instanceof Url) return url;
    const urlObject = new Url();
    urlObject.urlParse(url, parseQueryString, slashesDenoteHost);
    return urlObject;
}
function r9(t676, e763) {
    if (t676.type === "MemberExpression") return !t676.computed && r9(t676.object, t676);
    if (t676.type === "Identifier") {
        if (!e763) return !0;
        switch(e763.type){
            case "MemberExpression":
                return e763.computed || t676 === e763.object;
            case "MethodDefinition":
                return e763.computed;
            case "PropertyDefinition":
                return e763.computed || t676 === e763.value;
            case "Property":
                return e763.computed || t676 === e763.value;
            case "ExportSpecifier":
            case "ImportSpecifier":
                return t676 === e763.local;
            case "LabeledStatement":
            case "BreakStatement":
            case "ContinueStatement":
                return !1;
            default:
                return !0;
        }
    }
    return !1;
}
function _5(r347) {
    let e764 = new WeakMap, i395 = new Map, c104 = new l8(null, !1), n366 = [], a148 = c104;
    w7(r347, {
        enter (t677, h109) {
            switch(t677.type){
                case "Identifier":
                    r9(t677, h109) && n366.push([
                        a148,
                        t677
                    ]);
                    break;
                case "ImportDeclaration":
                    t677.specifiers.forEach((s247)=>{
                        a148.declarations.set(s247.local.name, s247);
                    });
                    break;
                case "FunctionExpression":
                case "FunctionDeclaration":
                case "ArrowFunctionExpression":
                    t677.type === "FunctionDeclaration" ? (t677.id && a148.declarations.set(t677.id.name, t677), e764.set(t677, a148 = new l8(a148, !1))) : (e764.set(t677, a148 = new l8(a148, !1)), t677.type === "FunctionExpression" && t677.id && a148.declarations.set(t677.id.name, t677)), t677.params.forEach((s248)=>{
                        o6(s248).forEach((u195)=>{
                            a148.declarations.set(u195, t677);
                        });
                    });
                    break;
                case "ForStatement":
                case "ForInStatement":
                case "ForOfStatement":
                    e764.set(t677, a148 = new l8(a148, !0));
                    break;
                case "BlockStatement":
                    e764.set(t677, a148 = new l8(a148, !0));
                    break;
                case "ClassDeclaration":
                case "VariableDeclaration":
                    a148.add_declaration(t677);
                    break;
                case "CatchClause":
                    e764.set(t677, a148 = new l8(a148, !0)), t677.param && o6(t677.param).forEach((s249)=>{
                        a148.declarations.set(s249, t677.param);
                    });
                    break;
            }
        },
        leave (t678) {
            e764.has(t678) && (a148 = a148.parent);
        }
    });
    for(let t1100 = n366.length - 1; t1100 >= 0; --t1100){
        let [h110, s250] = n366[t1100];
        h110.references.has(s250.name) || p14(h110, s250.name), h110.find_owner(s250.name) || i395.set(s250.name, s250);
    }
    return {
        map: e764,
        scope: c104,
        globals: i395
    };
}
function p14(r348, e765) {
    r348.references.add(e765), r348.parent && p14(r348.parent, e765);
}
var l8 = class {
    constructor(e766, i396){
        this.parent = e766, this.block = i396, this.declarations = new Map, this.initialised_declarations = new Set, this.references = new Set;
    }
    add_declaration(e767) {
        if (e767.type === "VariableDeclaration") if (e767.kind === "var" && this.block && this.parent) this.parent.add_declaration(e767);
        else {
            let i397 = (c105)=>{
                o6(c105.id).forEach((n367)=>{
                    this.declarations.set(n367, e767), c105.init && this.initialised_declarations.add(n367);
                });
            };
            e767.declarations.forEach(i397);
        }
        else e767.id && this.declarations.set(e767.id.name, e767);
    }
    find_owner(e768) {
        return this.declarations.has(e768) ? this : this.parent && this.parent.find_owner(e768);
    }
    has(e769) {
        return this.declarations.has(e769) || !!this.parent && this.parent.has(e769);
    }
};
function o6(r349) {
    return f6(r349).map((e770)=>e770.name);
}
function f6(r350, e771 = []) {
    switch(r350.type){
        case "Identifier":
            e771.push(r350);
            break;
        case "MemberExpression":
            let i398 = r350;
            for(; i398.type === "MemberExpression";)i398 = i398.object;
            e771.push(i398);
            break;
        case "ObjectPattern":
            let c106 = (a149)=>{
                a149.type === "RestElement" ? f6(a149.argument, e771) : f6(a149.value, e771);
            };
            r350.properties.forEach(c106);
            break;
        case "ArrayPattern":
            let n368 = (a150)=>{
                a150 && f6(a150, e771);
            };
            r350.elements.forEach(n368);
            break;
        case "RestElement":
            f6(r350.argument, e771);
            break;
        case "AssignmentPattern":
            f6(r350.left, e771);
            break;
    }
    return e771;
}
var { stringify: I12  } = JSON;
if (!String.prototype.repeat) throw new Error("String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation");
if (!String.prototype.endsWith) throw new Error("String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation");
var y7 = {
    "||": 3,
    "&&": 4,
    "|": 5,
    "??": 5,
    "^": 6,
    "&": 7,
    "==": 8,
    "!=": 8,
    "===": 8,
    "!==": 8,
    "<": 9,
    ">": 9,
    "<=": 9,
    ">=": 9,
    in: 9,
    instanceof: 9,
    "<<": 10,
    ">>": 10,
    ">>>": 10,
    "+": 11,
    "-": 11,
    "*": 12,
    "%": 12,
    "/": 12,
    "**": 13
}, u6 = 17, M2 = {
    ArrayExpression: 20,
    TaggedTemplateExpression: 20,
    ThisExpression: 20,
    Identifier: 20,
    PrivateIdentifier: 20,
    Literal: 18,
    TemplateLiteral: 20,
    Super: 20,
    SequenceExpression: 20,
    MemberExpression: 19,
    ChainExpression: 19,
    CallExpression: 19,
    NewExpression: 19,
    ArrowFunctionExpression: u6,
    ClassExpression: u6,
    FunctionExpression: u6,
    ObjectExpression: u6,
    UpdateExpression: 16,
    UnaryExpression: 15,
    AwaitExpression: 15,
    BinaryExpression: 14,
    LogicalExpression: 13,
    ConditionalExpression: 4,
    AssignmentExpression: 3,
    YieldExpression: 2,
    RestElement: 1
};
function h10(e772, i399) {
    let { generator: r351  } = e772;
    if (e772.write("("), i399 != null && i399.length > 0) {
        r351[i399[0].type](i399[0], e772);
        let { length: t679  } = i399;
        for(let n369 = 1; n369 < t679; n369++){
            let l184 = i399[n369];
            e772.write(", "), r351[l184.type](l184, e772);
        }
    }
    e772.write(")");
}
function L3(e773, i400, r352, t680) {
    let n370 = e773.expressionsPrecedence[i400.type];
    if (n370 === u6) return !0;
    let l185 = e773.expressionsPrecedence[r352.type];
    return n370 !== l185 ? !t680 && n370 === 15 && l185 === 14 && r352.operator === "**" || n370 < l185 : n370 !== 13 && n370 !== 14 ? !1 : i400.operator === "**" && r352.operator === "**" ? !t680 : t680 ? y7[i400.operator] <= y7[r352.operator] : y7[i400.operator] < y7[r352.operator];
}
function a16(e774, i401, r353, t681) {
    let { generator: n371  } = e774;
    L3(e774, i401, r353, t681) ? (e774.write("("), n371[i401.type](i401, e774), e774.write(")")) : n371[i401.type](i401, e774);
}
function q6(e775, i402, r354, t682) {
    let n372 = i402.split(`
`), l186 = n372.length - 1;
    if (e775.write(n372[0].trim()), l186 > 0) {
        e775.write(t682);
        for(let s251 = 1; s251 < l186; s251++)e775.write(r354 + n372[s251].trim() + t682);
        e775.write(r354 + n372[l186].trim());
    }
}
function w8(e776, i403, r355, t683) {
    let { length: n373  } = i403;
    for(let l187 = 0; l187 < n373; l187++){
        let s252 = i403[l187];
        e776.write(r355), s252.type[0] === "L" ? e776.write("// " + s252.value.trim() + `
`, s252) : (e776.write("/*"), q6(e776, s252.value, r355, t683), e776.write("*/" + t683));
    }
}
function O3(e777) {
    let i404 = e777;
    for(; i404 != null;){
        let { type: r356  } = i404;
        if (r356[0] === "C" && r356[1] === "a") return !0;
        if (r356[0] === "M" && r356[1] === "e" && r356[2] === "m") i404 = i404.object;
        else return !1;
    }
}
function x13(e778, i405) {
    let { generator: r357  } = e778, { declarations: t684  } = i405;
    e778.write(i405.kind + " ");
    let { length: n374  } = t684;
    if (n374 > 0) {
        r357.VariableDeclarator(t684[0], e778);
        for(let l188 = 1; l188 < n374; l188++)e778.write(", "), r357.VariableDeclarator(t684[l188], e778);
    }
}
var b9, S7, C11, P6, v6, k8, D9 = {
    Program (e779, i406) {
        let r358 = i406.indent.repeat(i406.indentLevel), { lineEnd: t685 , writeComments: n375  } = i406;
        n375 && e779.comments != null && w8(i406, e779.comments, r358, t685);
        let l189 = e779.body, { length: s253  } = l189;
        for(let p139 = 0; p139 < s253; p139++){
            let c107 = l189[p139];
            n375 && c107.comments != null && w8(i406, c107.comments, r358, t685), i406.write(r358), this[c107.type](c107, i406), i406.write(t685);
        }
        n375 && e779.trailingComments != null && w8(i406, e779.trailingComments, r358, t685);
    },
    BlockStatement: k8 = function(e780, i407) {
        let r359 = i407.indent.repeat(i407.indentLevel++), { lineEnd: t686 , writeComments: n376  } = i407, l190 = r359 + i407.indent;
        i407.write("{");
        let s254 = e780.body;
        if (s254 != null && s254.length > 0) {
            i407.write(t686), n376 && e780.comments != null && w8(i407, e780.comments, l190, t686);
            let { length: p140  } = s254;
            for(let c108 = 0; c108 < p140; c108++){
                let o = s254[c108];
                n376 && o.comments != null && w8(i407, o.comments, l190, t686), i407.write(l190), this[o.type](o, i407), i407.write(t686);
            }
            i407.write(r359);
        } else n376 && e780.comments != null && (i407.write(t686), w8(i407, e780.comments, l190, t686), i407.write(r359));
        n376 && e780.trailingComments != null && w8(i407, e780.trailingComments, l190, t686), i407.write("}"), i407.indentLevel--;
    },
    ClassBody: k8,
    StaticBlock (e781, i408) {
        i408.write("static "), this.BlockStatement(e781, i408);
    },
    EmptyStatement (e, i409) {
        i409.write(";");
    },
    ExpressionStatement (e782, i410) {
        let r360 = i410.expressionsPrecedence[e782.expression.type];
        r360 === u6 || r360 === 3 && e782.expression.left.type[0] === "O" ? (i410.write("("), this[e782.expression.type](e782.expression, i410), i410.write(")")) : this[e782.expression.type](e782.expression, i410), i410.write(";");
    },
    IfStatement (e783, i411) {
        i411.write("if ("), this[e783.test.type](e783.test, i411), i411.write(") "), this[e783.consequent.type](e783.consequent, i411), e783.alternate != null && (i411.write(" else "), this[e783.alternate.type](e783.alternate, i411));
    },
    LabeledStatement (e784, i412) {
        this[e784.label.type](e784.label, i412), i412.write(": "), this[e784.body.type](e784.body, i412);
    },
    BreakStatement (e785, i413) {
        i413.write("break"), e785.label != null && (i413.write(" "), this[e785.label.type](e785.label, i413)), i413.write(";");
    },
    ContinueStatement (e786, i414) {
        i414.write("continue"), e786.label != null && (i414.write(" "), this[e786.label.type](e786.label, i414)), i414.write(";");
    },
    WithStatement (e787, i415) {
        i415.write("with ("), this[e787.object.type](e787.object, i415), i415.write(") "), this[e787.body.type](e787.body, i415);
    },
    SwitchStatement (e788, i416) {
        let r361 = i416.indent.repeat(i416.indentLevel++), { lineEnd: t687 , writeComments: n377  } = i416;
        i416.indentLevel++;
        let l191 = r361 + i416.indent, s255 = l191 + i416.indent;
        i416.write("switch ("), this[e788.discriminant.type](e788.discriminant, i416), i416.write(") {" + t687);
        let { cases: p141  } = e788, { length: c109  } = p141;
        for(let o = 0; o < c109; o++){
            let m91 = p141[o];
            n377 && m91.comments != null && w8(i416, m91.comments, l191, t687), m91.test ? (i416.write(l191 + "case "), this[m91.test.type](m91.test, i416), i416.write(":" + t687)) : i416.write(l191 + "default:" + t687);
            let { consequent: E34  } = m91, { length: A40  } = E34;
            for(let g78 = 0; g78 < A40; g78++){
                let f100 = E34[g78];
                n377 && f100.comments != null && w8(i416, f100.comments, s255, t687), i416.write(s255), this[f100.type](f100, i416), i416.write(t687);
            }
        }
        i416.indentLevel -= 2, i416.write(r361 + "}");
    },
    ReturnStatement (e789, i417) {
        i417.write("return"), e789.argument && (i417.write(" "), this[e789.argument.type](e789.argument, i417)), i417.write(";");
    },
    ThrowStatement (e790, i418) {
        i418.write("throw "), this[e790.argument.type](e790.argument, i418), i418.write(";");
    },
    TryStatement (e791, i419) {
        if (i419.write("try "), this[e791.block.type](e791.block, i419), e791.handler) {
            let { handler: r362  } = e791;
            r362.param == null ? i419.write(" catch ") : (i419.write(" catch ("), this[r362.param.type](r362.param, i419), i419.write(") ")), this[r362.body.type](r362.body, i419);
        }
        e791.finalizer && (i419.write(" finally "), this[e791.finalizer.type](e791.finalizer, i419));
    },
    WhileStatement (e792, i420) {
        i420.write("while ("), this[e792.test.type](e792.test, i420), i420.write(") "), this[e792.body.type](e792.body, i420);
    },
    DoWhileStatement (e793, i421) {
        i421.write("do "), this[e793.body.type](e793.body, i421), i421.write(" while ("), this[e793.test.type](e793.test, i421), i421.write(");");
    },
    ForStatement (e794, i422) {
        if (i422.write("for ("), e794.init != null) {
            let { init: r363  } = e794;
            r363.type[0] === "V" ? x13(i422, r363) : this[r363.type](r363, i422);
        }
        i422.write("; "), e794.test && this[e794.test.type](e794.test, i422), i422.write("; "), e794.update && this[e794.update.type](e794.update, i422), i422.write(") "), this[e794.body.type](e794.body, i422);
    },
    ForInStatement: b9 = function(e795, i423) {
        i423.write(`for ${e795.await ? "await " : ""}(`);
        let { left: r364  } = e795;
        r364.type[0] === "V" ? x13(i423, r364) : this[r364.type](r364, i423), i423.write(e795.type[3] === "I" ? " in " : " of "), this[e795.right.type](e795.right, i423), i423.write(") "), this[e795.body.type](e795.body, i423);
    },
    ForOfStatement: b9,
    DebuggerStatement (e796, i424) {
        i424.write("debugger;", e796);
    },
    FunctionDeclaration: S7 = function(e797, i425) {
        i425.write((e797.async ? "async " : "") + (e797.generator ? "function* " : "function ") + (e797.id ? e797.id.name : ""), e797), h10(i425, e797.params), i425.write(" "), this[e797.body.type](e797.body, i425);
    },
    FunctionExpression: S7,
    VariableDeclaration (e798, i426) {
        x13(i426, e798), i426.write(";");
    },
    VariableDeclarator (e799, i427) {
        this[e799.id.type](e799.id, i427), e799.init != null && (i427.write(" = "), this[e799.init.type](e799.init, i427));
    },
    ClassDeclaration (e800, i428) {
        if (i428.write("class " + (e800.id ? `${e800.id.name} ` : ""), e800), e800.superClass) {
            i428.write("extends ");
            let { superClass: r365  } = e800, { type: t688  } = r365, n378 = i428.expressionsPrecedence[t688];
            (t688[0] !== "C" || t688[1] !== "l" || t688[5] !== "E") && (n378 === u6 || n378 < i428.expressionsPrecedence.ClassExpression) ? (i428.write("("), this[e800.superClass.type](r365, i428), i428.write(")")) : this[r365.type](r365, i428), i428.write(" ");
        }
        this.ClassBody(e800.body, i428);
    },
    ImportDeclaration (e801, i429) {
        i429.write("import ");
        let { specifiers: r366  } = e801, { length: t689  } = r366, n379 = 0;
        if (t689 > 0) {
            for(; n379 < t689;){
                n379 > 0 && i429.write(", ");
                let l192 = r366[n379], s256 = l192.type[6];
                if (s256 === "D") i429.write(l192.local.name, l192), n379++;
                else if (s256 === "N") i429.write("* as " + l192.local.name, l192), n379++;
                else break;
            }
            if (n379 < t689) {
                for(i429.write("{");;){
                    let l193 = r366[n379], { name: s257  } = l193.imported;
                    if (i429.write(s257, l193), s257 !== l193.local.name && i429.write(" as " + l193.local.name), ++n379 < t689) i429.write(", ");
                    else break;
                }
                i429.write("}");
            }
            i429.write(" from ");
        }
        this.Literal(e801.source, i429), i429.write(";");
    },
    ImportExpression (e802, i430) {
        i430.write("import("), this[e802.source.type](e802.source, i430), i430.write(")");
    },
    ExportDefaultDeclaration (e803, i431) {
        i431.write("export default "), this[e803.declaration.type](e803.declaration, i431), i431.expressionsPrecedence[e803.declaration.type] != null && e803.declaration.type[0] !== "F" && i431.write(";");
    },
    ExportNamedDeclaration (e804, i432) {
        if (i432.write("export "), e804.declaration) this[e804.declaration.type](e804.declaration, i432);
        else {
            i432.write("{");
            let { specifiers: r367  } = e804, { length: t690  } = r367;
            if (t690 > 0) for(let n380 = 0;;){
                let l194 = r367[n380], { name: s258  } = l194.local;
                if (i432.write(s258, l194), s258 !== l194.exported.name && i432.write(" as " + l194.exported.name), ++n380 < t690) i432.write(", ");
                else break;
            }
            i432.write("}"), e804.source && (i432.write(" from "), this.Literal(e804.source, i432)), i432.write(";");
        }
    },
    ExportAllDeclaration (e805, i433) {
        e805.exported != null ? i433.write("export * as " + e805.exported.name + " from ") : i433.write("export * from "), this.Literal(e805.source, i433), i433.write(";");
    },
    MethodDefinition (e806, i434) {
        e806.static && i434.write("static ");
        let r368 = e806.kind[0];
        (r368 === "g" || r368 === "s") && i434.write(e806.kind + " "), e806.value.async && i434.write("async "), e806.value.generator && i434.write("*"), e806.computed ? (i434.write("["), this[e806.key.type](e806.key, i434), i434.write("]")) : this[e806.key.type](e806.key, i434), h10(i434, e806.value.params), i434.write(" "), this[e806.value.body.type](e806.value.body, i434);
    },
    ClassExpression (e807, i435) {
        this.ClassDeclaration(e807, i435);
    },
    ArrowFunctionExpression (e808, i436) {
        i436.write(e808.async ? "async " : "", e808);
        let { params: r369  } = e808;
        r369 != null && (r369.length === 1 && r369[0].type[0] === "I" ? i436.write(r369[0].name, r369[0]) : h10(i436, e808.params)), i436.write(" => "), e808.body.type[0] === "O" ? (i436.write("("), this.ObjectExpression(e808.body, i436), i436.write(")")) : this[e808.body.type](e808.body, i436);
    },
    ThisExpression (e809, i437) {
        i437.write("this", e809);
    },
    Super (e810, i438) {
        i438.write("super", e810);
    },
    RestElement: C11 = function(e811, i439) {
        i439.write("..."), this[e811.argument.type](e811.argument, i439);
    },
    SpreadElement: C11,
    YieldExpression (e812, i440) {
        i440.write(e812.delegate ? "yield*" : "yield"), e812.argument && (i440.write(" "), this[e812.argument.type](e812.argument, i440));
    },
    AwaitExpression (e813, i441) {
        i441.write("await ", e813), a16(i441, e813.argument, e813);
    },
    TemplateLiteral (e814, i442) {
        let { quasis: r370 , expressions: t691  } = e814;
        i442.write("`");
        let { length: n381  } = t691;
        for(let s259 = 0; s259 < n381; s259++){
            let p142 = t691[s259], c110 = r370[s259];
            i442.write(c110.value.raw, c110), i442.write("${"), this[p142.type](p142, i442), i442.write("}");
        }
        let l195 = r370[r370.length - 1];
        i442.write(l195.value.raw, l195), i442.write("`");
    },
    TemplateElement (e815, i443) {
        i443.write(e815.value.raw, e815);
    },
    TaggedTemplateExpression (e816, i444) {
        a16(i444, e816.tag, e816), this[e816.quasi.type](e816.quasi, i444);
    },
    ArrayExpression: v6 = function(e817, i445) {
        if (i445.write("["), e817.elements.length > 0) {
            let { elements: r371  } = e817, { length: t692  } = r371;
            for(let n382 = 0;;){
                let l196 = r371[n382];
                if (l196 != null && this[l196.type](l196, i445), ++n382 < t692) i445.write(", ");
                else {
                    l196 == null && i445.write(", ");
                    break;
                }
            }
        }
        i445.write("]");
    },
    ArrayPattern: v6,
    ObjectExpression (e818, i446) {
        let r372 = i446.indent.repeat(i446.indentLevel++), { lineEnd: t693 , writeComments: n383  } = i446, l197 = r372 + i446.indent;
        if (i446.write("{"), e818.properties.length > 0) {
            i446.write(t693), n383 && e818.comments != null && w8(i446, e818.comments, l197, t693);
            let s260 = "," + t693, { properties: p143  } = e818, { length: c111  } = p143;
            for(let o = 0;;){
                let m92 = p143[o];
                if (n383 && m92.comments != null && w8(i446, m92.comments, l197, t693), i446.write(l197), this[m92.type](m92, i446), ++o < c111) i446.write(s260);
                else break;
            }
            i446.write(t693), n383 && e818.trailingComments != null && w8(i446, e818.trailingComments, l197, t693), i446.write(r372 + "}");
        } else n383 ? e818.comments != null ? (i446.write(t693), w8(i446, e818.comments, l197, t693), e818.trailingComments != null && w8(i446, e818.trailingComments, l197, t693), i446.write(r372 + "}")) : e818.trailingComments != null ? (i446.write(t693), w8(i446, e818.trailingComments, l197, t693), i446.write(r372 + "}")) : i446.write("}") : i446.write("}");
        i446.indentLevel--;
    },
    Property (e819, i447) {
        e819.method || e819.kind[0] !== "i" ? this.MethodDefinition(e819, i447) : (e819.shorthand || (e819.computed ? (i447.write("["), this[e819.key.type](e819.key, i447), i447.write("]")) : this[e819.key.type](e819.key, i447), i447.write(": ")), this[e819.value.type](e819.value, i447));
    },
    PropertyDefinition (e820, i448) {
        e820.static && i448.write("static "), this[e820.key.type](e820.key, i448), i448.write(" = "), this[e820.value.type](e820.value, i448);
    },
    ObjectPattern (e821, i449) {
        if (i449.write("{"), e821.properties.length > 0) {
            let { properties: r373  } = e821, { length: t694  } = r373;
            for(let n384 = 0; this[r373[n384].type](r373[n384], i449), ++n384 < t694;)i449.write(", ");
        }
        i449.write("}");
    },
    SequenceExpression (e822, i450) {
        h10(i450, e822.expressions);
    },
    UnaryExpression (e823, i451) {
        if (e823.prefix) {
            let { operator: r374 , argument: t695 , argument: { type: n385  }  } = e823;
            i451.write(r374);
            let l198 = L3(i451, t695, e823);
            !l198 && (r374.length > 1 || n385[0] === "U" && (n385[1] === "n" || n385[1] === "p") && t695.prefix && t695.operator[0] === r374 && (r374 === "+" || r374 === "-")) && i451.write(" "), l198 ? (i451.write(r374.length > 1 ? " (" : "("), this[n385](t695, i451), i451.write(")")) : this[n385](t695, i451);
        } else this[e823.argument.type](e823.argument, i451), i451.write(e823.operator);
    },
    UpdateExpression (e824, i452) {
        e824.prefix ? (i452.write(e824.operator), this[e824.argument.type](e824.argument, i452)) : (this[e824.argument.type](e824.argument, i452), i452.write(e824.operator));
    },
    AssignmentExpression (e825, i453) {
        this[e825.left.type](e825.left, i453), i453.write(" " + e825.operator + " "), this[e825.right.type](e825.right, i453);
    },
    AssignmentPattern (e826, i454) {
        this[e826.left.type](e826.left, i454), i454.write(" = "), this[e826.right.type](e826.right, i454);
    },
    BinaryExpression: P6 = function(e827, i455) {
        let r375 = e827.operator === "in";
        r375 && i455.write("("), a16(i455, e827.left, e827, !1), i455.write(" " + e827.operator + " "), a16(i455, e827.right, e827, !0), r375 && i455.write(")");
    },
    LogicalExpression: P6,
    ConditionalExpression (e828, i456) {
        let { test: r376  } = e828, t696 = i456.expressionsPrecedence[r376.type];
        t696 === u6 || t696 <= i456.expressionsPrecedence.ConditionalExpression ? (i456.write("("), this[r376.type](r376, i456), i456.write(")")) : this[r376.type](r376, i456), i456.write(" ? "), this[e828.consequent.type](e828.consequent, i456), i456.write(" : "), this[e828.alternate.type](e828.alternate, i456);
    },
    NewExpression (e829, i457) {
        i457.write("new ");
        let r377 = i457.expressionsPrecedence[e829.callee.type];
        r377 === u6 || r377 < i457.expressionsPrecedence.CallExpression || O3(e829.callee) ? (i457.write("("), this[e829.callee.type](e829.callee, i457), i457.write(")")) : this[e829.callee.type](e829.callee, i457), h10(i457, e829.arguments);
    },
    CallExpression (e830, i458) {
        let r378 = i458.expressionsPrecedence[e830.callee.type];
        r378 === u6 || r378 < i458.expressionsPrecedence.CallExpression ? (i458.write("("), this[e830.callee.type](e830.callee, i458), i458.write(")")) : this[e830.callee.type](e830.callee, i458), e830.optional && i458.write("?."), h10(i458, e830.arguments);
    },
    ChainExpression (e831, i459) {
        this[e831.expression.type](e831.expression, i459);
    },
    MemberExpression (e832, i460) {
        let r379 = i460.expressionsPrecedence[e832.object.type];
        r379 === u6 || r379 < i460.expressionsPrecedence.MemberExpression ? (i460.write("("), this[e832.object.type](e832.object, i460), i460.write(")")) : this[e832.object.type](e832.object, i460), e832.computed ? (e832.optional && i460.write("?."), i460.write("["), this[e832.property.type](e832.property, i460), i460.write("]")) : (e832.optional ? i460.write("?.") : i460.write("."), this[e832.property.type](e832.property, i460));
    },
    MetaProperty (e833, i461) {
        i461.write(e833.meta.name + "." + e833.property.name, e833);
    },
    Identifier (e834, i462) {
        i462.write(e834.name, e834);
    },
    PrivateIdentifier (e835, i463) {
        i463.write(`#${e835.name}`, e835);
    },
    Literal (e836, i464) {
        e836.raw != null ? i464.write(e836.raw, e836) : e836.regex != null ? this.RegExpLiteral(e836, i464) : e836.bigint != null ? i464.write(e836.bigint + "n", e836) : i464.write(I12(e836.value), e836);
    },
    RegExpLiteral (e837, i465) {
        let { regex: r380  } = e837;
        i465.write(`/${r380.pattern}/${r380.flags}`, e837);
    }
}, j9 = {}, T6 = class {
    constructor(i466){
        let r381 = i466 ?? j9;
        this.output = "", r381.output != null ? (this.output = r381.output, this.write = this.writeToStream) : this.output = "", this.generator = r381.generator != null ? r381.generator : D9, this.expressionsPrecedence = r381.expressionsPrecedence != null ? r381.expressionsPrecedence : M2, this.indent = r381.indent != null ? r381.indent : "  ", this.lineEnd = r381.lineEnd != null ? r381.lineEnd : `
`, this.indentLevel = r381.startingIndentLevel != null ? r381.startingIndentLevel : 0, this.writeComments = r381.comments ? r381.comments : !1, r381.sourceMap != null && (this.write = r381.output == null ? this.writeAndMap : this.writeToStreamAndMap, this.sourceMap = r381.sourceMap, this.line = 1, this.column = 0, this.lineEndSize = this.lineEnd.split(`
`).length - 1, this.mapping = {
            original: null,
            generated: this,
            name: void 0,
            source: r381.sourceMap.file || r381.sourceMap._file
        });
    }
    write(i467) {
        this.output += i467;
    }
    writeToStream(i468) {
        this.output.write(i468);
    }
    writeAndMap(i469, r382) {
        this.output += i469, this.map(i469, r382);
    }
    writeToStreamAndMap(i470, r383) {
        this.output.write(i470), this.map(i470, r383);
    }
    map(i471, r384) {
        if (r384 != null) {
            let { type: l199  } = r384;
            if (l199[0] === "L" && l199[2] === "n") {
                this.column = 0, this.line++;
                return;
            }
            if (r384.loc != null) {
                let { mapping: s261  } = this;
                s261.original = r384.loc.start, s261.name = r384.name, this.sourceMap.addMapping(s261);
            }
            if (l199[0] === "T" && l199[8] === "E" || l199[0] === "L" && l199[1] === "i" && typeof r384.value == "string") {
                let { length: s262  } = i471, { column: p144 , line: c112  } = this;
                for(let o = 0; o < s262; o++)i471[o] === `
` ? (p144 = 0, c112++) : p144++;
                this.column = p144, this.line = c112;
                return;
            }
        }
        let { length: t697  } = i471, { lineEnd: n386  } = this;
        t697 > 0 && (this.lineEndSize > 0 && (n386.length === 1 ? i471[t697 - 1] === n386 : i471.endsWith(n386)) ? (this.line += this.lineEndSize, this.column = 0) : this.column += t697);
    }
    toString() {
        return this.output;
    }
};
function B9(e838, i472) {
    let r385 = new T6(i472);
    return r385.generator[e838.type](e838, r385), r385.output;
}
function p15(t698, i473) {
    var n387 = i473 || {};
    return t698[t698.length - 1] === "" && (t698 = t698.concat("")), t698.join((n387.padRight ? " " : "") + "," + (n387.padLeft === !1 ? "" : " ")).trim();
}
var t8 = [].push;
function m10(n388, r386) {
    var e839 = (r386 || []).concat().sort(c8);
    return e839.length && u7(n388, {
        comments: e839,
        index: 0
    }), n388;
}
function u7(n389, r387) {
    var e840 = [], i474 = [], a151, l200, o;
    if (r387.index !== r387.comments.length) {
        for(a151 in n389)if (l200 = n389[a151], l200 && typeof l200 == "object" && a151 !== "comments") if (Array.isArray(l200)) for(o = -1; ++o < l200.length;)l200[o] && typeof l200[o].type == "string" && e840.push(l200[o]);
        else typeof l200.type == "string" && e840.push(l200);
        for(e840.sort(c8), t8.apply(i474, s10(r387, n389, !1, {
            leading: !0,
            trailing: !1
        })), o = -1; ++o < e840.length;)u7(e840[o], r387);
        t8.apply(i474, s10(r387, n389, !0, {
            leading: !1,
            trailing: Boolean(e840.length)
        })), i474.length && (n389.comments = i474);
    }
}
function s10(n390, r388, e841, i475) {
    for(var a152 = []; n390.comments[n390.index] && c8(n390.comments[n390.index], r388, e841) < 1;)a152.push(Object.assign({}, n390.comments[n390.index++], i475));
    return a152;
}
function c8(n391, r389, e842) {
    var i476 = e842 ? "end" : "start";
    return n391.range && r389.range ? n391.range[0] - r389.range[e842 ? 1 : 0] : n391.loc && n391.loc.start && r389.loc && r389.loc[i476] ? n391.loc.start.line - r389.loc[i476].line || n391.loc.start.column - r389.loc[i476].column : "start" in n391 && i476 in r389 ? n391.start - r389[i476] : NaN;
}
function r10(e843) {
    var t699 = e843 && typeof e843 == "object" && e843.type === "text" ? e843.value || "" : e843;
    return typeof t699 == "string" && t699.replace(/[ \t\n\f\r]/g, "") === "";
}
var E5 = Object.defineProperty;
var U4 = (e844, o)=>{
    for(var r390 in o)E5(e844, r390, {
        get: o[r390],
        enumerable: !0
    });
};
var m11 = class {
    constructor(o, r391, a153){
        this.property = o, this.normal = r391, a153 && (this.space = a153);
    }
};
m11.prototype.property = {};
m11.prototype.normal = {};
m11.prototype.space = null;
function b10(e845, o) {
    let r392 = {}, a154 = {}, d67 = -1;
    for(; ++d67 < e845.length;)Object.assign(r392, e845[d67].property), Object.assign(a154, e845[d67].normal);
    return new m11(r392, a154, o);
}
function y8(e846) {
    return e846.toLowerCase();
}
var u8 = class {
    constructor(o, r393){
        this.property = o, this.attribute = r393;
    }
};
u8.prototype.space = null;
u8.prototype.boolean = !1;
u8.prototype.booleanish = !1;
u8.prototype.overloadedBoolean = !1;
u8.prototype.number = !1;
u8.prototype.commaSeparated = !1;
u8.prototype.spaceSeparated = !1;
u8.prototype.commaOrSpaceSeparated = !1;
u8.prototype.mustUseProperty = !1;
u8.prototype.defined = !1;
var k9 = {};
U4(k9, {
    boolean: ()=>l9,
    booleanish: ()=>i11,
    commaOrSpaceSeparated: ()=>s11,
    commaSeparated: ()=>g7,
    number: ()=>n7,
    overloadedBoolean: ()=>C12,
    spaceSeparated: ()=>t9
});
var z4 = 0, l9 = f7(), i11 = f7(), C12 = f7(), n7 = f7(), t9 = f7(), g7 = f7(), s11 = f7();
function f7() {
    return 2 ** ++z4;
}
var L4 = Object.keys(k9), v7 = class extends u8 {
    constructor(o, r394, a155, d68){
        let c113 = -1;
        super(o, r394);
        if (O4(this, "space", d68), typeof a155 == "number") for(; ++c113 < L4.length;){
            let h111 = L4[c113];
            O4(this, L4[c113], (a155 & k9[h111]) === k9[h111]);
        }
    }
};
v7.prototype.defined = !0;
function O4(e847, o, r395) {
    r395 && (e847[o] = r395);
}
var I13 = {}.hasOwnProperty;
function p16(e848) {
    let o = {}, r396 = {}, a156;
    for(a156 in e848.properties)if (I13.call(e848.properties, a156)) {
        let d69 = e848.properties[a156], c114 = new v7(a156, e848.transform(e848.attributes || {}, a156), d69, e848.space);
        e848.mustUseProperty && e848.mustUseProperty.includes(a156) && (c114.mustUseProperty = !0), o[a156] = c114, r396[y8(a156)] = a156, r396[y8(c114.attribute)] = a156;
    }
    return new m11(o, r396, e848.space);
}
var w9 = p16({
    space: "xlink",
    transform (e, o) {
        return "xlink:" + o.slice(5).toLowerCase();
    },
    properties: {
        xLinkActuate: null,
        xLinkArcRole: null,
        xLinkHref: null,
        xLinkRole: null,
        xLinkShow: null,
        xLinkTitle: null,
        xLinkType: null
    }
});
var P7 = p16({
    space: "xml",
    transform (e, o) {
        return "xml:" + o.slice(3).toLowerCase();
    },
    properties: {
        xmlLang: null,
        xmlBase: null,
        xmlSpace: null
    }
});
function x14(e849, o) {
    return o in e849 ? e849[o] : o;
}
function S8(e850, o) {
    return x14(e850, o.toLowerCase());
}
var D10 = p16({
    space: "xmlns",
    attributes: {
        xmlnsxlink: "xmlns:xlink"
    },
    transform: S8,
    properties: {
        xmlns: null,
        xmlnsXLink: null
    }
});
var M3 = p16({
    transform (e, o) {
        return o === "role" ? o : "aria-" + o.slice(4).toLowerCase();
    },
    properties: {
        ariaActiveDescendant: null,
        ariaAtomic: i11,
        ariaAutoComplete: null,
        ariaBusy: i11,
        ariaChecked: i11,
        ariaColCount: n7,
        ariaColIndex: n7,
        ariaColSpan: n7,
        ariaControls: t9,
        ariaCurrent: null,
        ariaDescribedBy: t9,
        ariaDetails: null,
        ariaDisabled: i11,
        ariaDropEffect: t9,
        ariaErrorMessage: null,
        ariaExpanded: i11,
        ariaFlowTo: t9,
        ariaGrabbed: i11,
        ariaHasPopup: null,
        ariaHidden: i11,
        ariaInvalid: null,
        ariaKeyShortcuts: null,
        ariaLabel: null,
        ariaLabelledBy: t9,
        ariaLevel: n7,
        ariaLive: null,
        ariaModal: i11,
        ariaMultiLine: i11,
        ariaMultiSelectable: i11,
        ariaOrientation: null,
        ariaOwns: t9,
        ariaPlaceholder: null,
        ariaPosInSet: n7,
        ariaPressed: i11,
        ariaReadOnly: i11,
        ariaRelevant: null,
        ariaRequired: i11,
        ariaRoleDescription: t9,
        ariaRowCount: n7,
        ariaRowIndex: n7,
        ariaRowSpan: n7,
        ariaSelected: i11,
        ariaSetSize: n7,
        ariaSort: null,
        ariaValueMax: n7,
        ariaValueMin: n7,
        ariaValueNow: n7,
        ariaValueText: null,
        role: null
    }
});
var R5 = p16({
    space: "html",
    attributes: {
        acceptcharset: "accept-charset",
        classname: "class",
        htmlfor: "for",
        httpequiv: "http-equiv"
    },
    transform: S8,
    mustUseProperty: [
        "checked",
        "multiple",
        "muted",
        "selected"
    ],
    properties: {
        abbr: null,
        accept: g7,
        acceptCharset: t9,
        accessKey: t9,
        action: null,
        allow: null,
        allowFullScreen: l9,
        allowPaymentRequest: l9,
        allowUserMedia: l9,
        alt: null,
        as: null,
        async: l9,
        autoCapitalize: null,
        autoComplete: t9,
        autoFocus: l9,
        autoPlay: l9,
        capture: l9,
        charSet: null,
        checked: l9,
        cite: null,
        className: t9,
        cols: n7,
        colSpan: null,
        content: null,
        contentEditable: i11,
        controls: l9,
        controlsList: t9,
        coords: n7 | g7,
        crossOrigin: null,
        data: null,
        dateTime: null,
        decoding: null,
        default: l9,
        defer: l9,
        dir: null,
        dirName: null,
        disabled: l9,
        download: C12,
        draggable: i11,
        encType: null,
        enterKeyHint: null,
        form: null,
        formAction: null,
        formEncType: null,
        formMethod: null,
        formNoValidate: l9,
        formTarget: null,
        headers: t9,
        height: n7,
        hidden: l9,
        high: n7,
        href: null,
        hrefLang: null,
        htmlFor: t9,
        httpEquiv: t9,
        id: null,
        imageSizes: null,
        imageSrcSet: null,
        inputMode: null,
        integrity: null,
        is: null,
        isMap: l9,
        itemId: null,
        itemProp: t9,
        itemRef: t9,
        itemScope: l9,
        itemType: t9,
        kind: null,
        label: null,
        lang: null,
        language: null,
        list: null,
        loading: null,
        loop: l9,
        low: n7,
        manifest: null,
        max: null,
        maxLength: n7,
        media: null,
        method: null,
        min: null,
        minLength: n7,
        multiple: l9,
        muted: l9,
        name: null,
        nonce: null,
        noModule: l9,
        noValidate: l9,
        onAbort: null,
        onAfterPrint: null,
        onAuxClick: null,
        onBeforePrint: null,
        onBeforeUnload: null,
        onBlur: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onContextLost: null,
        onContextMenu: null,
        onContextRestored: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFormData: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLanguageChange: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadEnd: null,
        onLoadStart: null,
        onMessage: null,
        onMessageError: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRejectionHandled: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onSecurityPolicyViolation: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onSlotChange: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnhandledRejection: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onWheel: null,
        open: l9,
        optimum: n7,
        pattern: null,
        ping: t9,
        placeholder: null,
        playsInline: l9,
        poster: null,
        preload: null,
        readOnly: l9,
        referrerPolicy: null,
        rel: t9,
        required: l9,
        reversed: l9,
        rows: n7,
        rowSpan: n7,
        sandbox: t9,
        scope: null,
        scoped: l9,
        seamless: l9,
        selected: l9,
        shape: null,
        size: n7,
        sizes: null,
        slot: null,
        span: n7,
        spellCheck: i11,
        src: null,
        srcDoc: null,
        srcLang: null,
        srcSet: null,
        start: n7,
        step: null,
        style: null,
        tabIndex: n7,
        target: null,
        title: null,
        translate: null,
        type: null,
        typeMustMatch: l9,
        useMap: null,
        value: i11,
        width: n7,
        wrap: null,
        align: null,
        aLink: null,
        archive: t9,
        axis: null,
        background: null,
        bgColor: null,
        border: n7,
        borderColor: null,
        bottomMargin: n7,
        cellPadding: null,
        cellSpacing: null,
        char: null,
        charOff: null,
        classId: null,
        clear: null,
        code: null,
        codeBase: null,
        codeType: null,
        color: null,
        compact: l9,
        declare: l9,
        event: null,
        face: null,
        frame: null,
        frameBorder: null,
        hSpace: n7,
        leftMargin: n7,
        link: null,
        longDesc: null,
        lowSrc: null,
        marginHeight: n7,
        marginWidth: n7,
        noResize: l9,
        noHref: l9,
        noShade: l9,
        noWrap: l9,
        object: null,
        profile: null,
        prompt: null,
        rev: null,
        rightMargin: n7,
        rules: null,
        scheme: null,
        scrolling: i11,
        standby: null,
        summary: null,
        text: null,
        topMargin: n7,
        valueType: null,
        version: null,
        vAlign: null,
        vLink: null,
        vSpace: n7,
        allowTransparency: null,
        autoCorrect: null,
        autoSave: null,
        disablePictureInPicture: l9,
        disableRemotePlayback: l9,
        prefix: null,
        property: null,
        results: n7,
        security: null,
        unselectable: null
    }
});
var T7 = p16({
    space: "svg",
    attributes: {
        accentHeight: "accent-height",
        alignmentBaseline: "alignment-baseline",
        arabicForm: "arabic-form",
        baselineShift: "baseline-shift",
        capHeight: "cap-height",
        className: "class",
        clipPath: "clip-path",
        clipRule: "clip-rule",
        colorInterpolation: "color-interpolation",
        colorInterpolationFilters: "color-interpolation-filters",
        colorProfile: "color-profile",
        colorRendering: "color-rendering",
        crossOrigin: "crossorigin",
        dataType: "datatype",
        dominantBaseline: "dominant-baseline",
        enableBackground: "enable-background",
        fillOpacity: "fill-opacity",
        fillRule: "fill-rule",
        floodColor: "flood-color",
        floodOpacity: "flood-opacity",
        fontFamily: "font-family",
        fontSize: "font-size",
        fontSizeAdjust: "font-size-adjust",
        fontStretch: "font-stretch",
        fontStyle: "font-style",
        fontVariant: "font-variant",
        fontWeight: "font-weight",
        glyphName: "glyph-name",
        glyphOrientationHorizontal: "glyph-orientation-horizontal",
        glyphOrientationVertical: "glyph-orientation-vertical",
        hrefLang: "hreflang",
        horizAdvX: "horiz-adv-x",
        horizOriginX: "horiz-origin-x",
        horizOriginY: "horiz-origin-y",
        imageRendering: "image-rendering",
        letterSpacing: "letter-spacing",
        lightingColor: "lighting-color",
        markerEnd: "marker-end",
        markerMid: "marker-mid",
        markerStart: "marker-start",
        navDown: "nav-down",
        navDownLeft: "nav-down-left",
        navDownRight: "nav-down-right",
        navLeft: "nav-left",
        navNext: "nav-next",
        navPrev: "nav-prev",
        navRight: "nav-right",
        navUp: "nav-up",
        navUpLeft: "nav-up-left",
        navUpRight: "nav-up-right",
        onAbort: "onabort",
        onActivate: "onactivate",
        onAfterPrint: "onafterprint",
        onBeforePrint: "onbeforeprint",
        onBegin: "onbegin",
        onCancel: "oncancel",
        onCanPlay: "oncanplay",
        onCanPlayThrough: "oncanplaythrough",
        onChange: "onchange",
        onClick: "onclick",
        onClose: "onclose",
        onCopy: "oncopy",
        onCueChange: "oncuechange",
        onCut: "oncut",
        onDblClick: "ondblclick",
        onDrag: "ondrag",
        onDragEnd: "ondragend",
        onDragEnter: "ondragenter",
        onDragExit: "ondragexit",
        onDragLeave: "ondragleave",
        onDragOver: "ondragover",
        onDragStart: "ondragstart",
        onDrop: "ondrop",
        onDurationChange: "ondurationchange",
        onEmptied: "onemptied",
        onEnd: "onend",
        onEnded: "onended",
        onError: "onerror",
        onFocus: "onfocus",
        onFocusIn: "onfocusin",
        onFocusOut: "onfocusout",
        onHashChange: "onhashchange",
        onInput: "oninput",
        onInvalid: "oninvalid",
        onKeyDown: "onkeydown",
        onKeyPress: "onkeypress",
        onKeyUp: "onkeyup",
        onLoad: "onload",
        onLoadedData: "onloadeddata",
        onLoadedMetadata: "onloadedmetadata",
        onLoadStart: "onloadstart",
        onMessage: "onmessage",
        onMouseDown: "onmousedown",
        onMouseEnter: "onmouseenter",
        onMouseLeave: "onmouseleave",
        onMouseMove: "onmousemove",
        onMouseOut: "onmouseout",
        onMouseOver: "onmouseover",
        onMouseUp: "onmouseup",
        onMouseWheel: "onmousewheel",
        onOffline: "onoffline",
        onOnline: "ononline",
        onPageHide: "onpagehide",
        onPageShow: "onpageshow",
        onPaste: "onpaste",
        onPause: "onpause",
        onPlay: "onplay",
        onPlaying: "onplaying",
        onPopState: "onpopstate",
        onProgress: "onprogress",
        onRateChange: "onratechange",
        onRepeat: "onrepeat",
        onReset: "onreset",
        onResize: "onresize",
        onScroll: "onscroll",
        onSeeked: "onseeked",
        onSeeking: "onseeking",
        onSelect: "onselect",
        onShow: "onshow",
        onStalled: "onstalled",
        onStorage: "onstorage",
        onSubmit: "onsubmit",
        onSuspend: "onsuspend",
        onTimeUpdate: "ontimeupdate",
        onToggle: "ontoggle",
        onUnload: "onunload",
        onVolumeChange: "onvolumechange",
        onWaiting: "onwaiting",
        onZoom: "onzoom",
        overlinePosition: "overline-position",
        overlineThickness: "overline-thickness",
        paintOrder: "paint-order",
        panose1: "panose-1",
        pointerEvents: "pointer-events",
        referrerPolicy: "referrerpolicy",
        renderingIntent: "rendering-intent",
        shapeRendering: "shape-rendering",
        stopColor: "stop-color",
        stopOpacity: "stop-opacity",
        strikethroughPosition: "strikethrough-position",
        strikethroughThickness: "strikethrough-thickness",
        strokeDashArray: "stroke-dasharray",
        strokeDashOffset: "stroke-dashoffset",
        strokeLineCap: "stroke-linecap",
        strokeLineJoin: "stroke-linejoin",
        strokeMiterLimit: "stroke-miterlimit",
        strokeOpacity: "stroke-opacity",
        strokeWidth: "stroke-width",
        tabIndex: "tabindex",
        textAnchor: "text-anchor",
        textDecoration: "text-decoration",
        textRendering: "text-rendering",
        typeOf: "typeof",
        underlinePosition: "underline-position",
        underlineThickness: "underline-thickness",
        unicodeBidi: "unicode-bidi",
        unicodeRange: "unicode-range",
        unitsPerEm: "units-per-em",
        vAlphabetic: "v-alphabetic",
        vHanging: "v-hanging",
        vIdeographic: "v-ideographic",
        vMathematical: "v-mathematical",
        vectorEffect: "vector-effect",
        vertAdvY: "vert-adv-y",
        vertOriginX: "vert-origin-x",
        vertOriginY: "vert-origin-y",
        wordSpacing: "word-spacing",
        writingMode: "writing-mode",
        xHeight: "x-height",
        playbackOrder: "playbackorder",
        timelineBegin: "timelinebegin"
    },
    transform: x14,
    properties: {
        about: s11,
        accentHeight: n7,
        accumulate: null,
        additive: null,
        alignmentBaseline: null,
        alphabetic: n7,
        amplitude: n7,
        arabicForm: null,
        ascent: n7,
        attributeName: null,
        attributeType: null,
        azimuth: n7,
        bandwidth: null,
        baselineShift: null,
        baseFrequency: null,
        baseProfile: null,
        bbox: null,
        begin: null,
        bias: n7,
        by: null,
        calcMode: null,
        capHeight: n7,
        className: t9,
        clip: null,
        clipPath: null,
        clipPathUnits: null,
        clipRule: null,
        color: null,
        colorInterpolation: null,
        colorInterpolationFilters: null,
        colorProfile: null,
        colorRendering: null,
        content: null,
        contentScriptType: null,
        contentStyleType: null,
        crossOrigin: null,
        cursor: null,
        cx: null,
        cy: null,
        d: null,
        dataType: null,
        defaultAction: null,
        descent: n7,
        diffuseConstant: n7,
        direction: null,
        display: null,
        dur: null,
        divisor: n7,
        dominantBaseline: null,
        download: l9,
        dx: null,
        dy: null,
        edgeMode: null,
        editable: null,
        elevation: n7,
        enableBackground: null,
        end: null,
        event: null,
        exponent: n7,
        externalResourcesRequired: null,
        fill: null,
        fillOpacity: n7,
        fillRule: null,
        filter: null,
        filterRes: null,
        filterUnits: null,
        floodColor: null,
        floodOpacity: null,
        focusable: null,
        focusHighlight: null,
        fontFamily: null,
        fontSize: null,
        fontSizeAdjust: null,
        fontStretch: null,
        fontStyle: null,
        fontVariant: null,
        fontWeight: null,
        format: null,
        fr: null,
        from: null,
        fx: null,
        fy: null,
        g1: g7,
        g2: g7,
        glyphName: g7,
        glyphOrientationHorizontal: null,
        glyphOrientationVertical: null,
        glyphRef: null,
        gradientTransform: null,
        gradientUnits: null,
        handler: null,
        hanging: n7,
        hatchContentUnits: null,
        hatchUnits: null,
        height: null,
        href: null,
        hrefLang: null,
        horizAdvX: n7,
        horizOriginX: n7,
        horizOriginY: n7,
        id: null,
        ideographic: n7,
        imageRendering: null,
        initialVisibility: null,
        in: null,
        in2: null,
        intercept: n7,
        k: n7,
        k1: n7,
        k2: n7,
        k3: n7,
        k4: n7,
        kernelMatrix: s11,
        kernelUnitLength: null,
        keyPoints: null,
        keySplines: null,
        keyTimes: null,
        kerning: null,
        lang: null,
        lengthAdjust: null,
        letterSpacing: null,
        lightingColor: null,
        limitingConeAngle: n7,
        local: null,
        markerEnd: null,
        markerMid: null,
        markerStart: null,
        markerHeight: null,
        markerUnits: null,
        markerWidth: null,
        mask: null,
        maskContentUnits: null,
        maskUnits: null,
        mathematical: null,
        max: null,
        media: null,
        mediaCharacterEncoding: null,
        mediaContentEncodings: null,
        mediaSize: n7,
        mediaTime: null,
        method: null,
        min: null,
        mode: null,
        name: null,
        navDown: null,
        navDownLeft: null,
        navDownRight: null,
        navLeft: null,
        navNext: null,
        navPrev: null,
        navRight: null,
        navUp: null,
        navUpLeft: null,
        navUpRight: null,
        numOctaves: null,
        observer: null,
        offset: null,
        onAbort: null,
        onActivate: null,
        onAfterPrint: null,
        onBeforePrint: null,
        onBegin: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnd: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFocusIn: null,
        onFocusOut: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadStart: null,
        onMessage: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onMouseWheel: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRepeat: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onShow: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onZoom: null,
        opacity: null,
        operator: null,
        order: null,
        orient: null,
        orientation: null,
        origin: null,
        overflow: null,
        overlay: null,
        overlinePosition: n7,
        overlineThickness: n7,
        paintOrder: null,
        panose1: null,
        path: null,
        pathLength: n7,
        patternContentUnits: null,
        patternTransform: null,
        patternUnits: null,
        phase: null,
        ping: t9,
        pitch: null,
        playbackOrder: null,
        pointerEvents: null,
        points: null,
        pointsAtX: n7,
        pointsAtY: n7,
        pointsAtZ: n7,
        preserveAlpha: null,
        preserveAspectRatio: null,
        primitiveUnits: null,
        propagate: null,
        property: s11,
        r: null,
        radius: null,
        referrerPolicy: null,
        refX: null,
        refY: null,
        rel: s11,
        rev: s11,
        renderingIntent: null,
        repeatCount: null,
        repeatDur: null,
        requiredExtensions: s11,
        requiredFeatures: s11,
        requiredFonts: s11,
        requiredFormats: s11,
        resource: null,
        restart: null,
        result: null,
        rotate: null,
        rx: null,
        ry: null,
        scale: null,
        seed: null,
        shapeRendering: null,
        side: null,
        slope: null,
        snapshotTime: null,
        specularConstant: n7,
        specularExponent: n7,
        spreadMethod: null,
        spacing: null,
        startOffset: null,
        stdDeviation: null,
        stemh: null,
        stemv: null,
        stitchTiles: null,
        stopColor: null,
        stopOpacity: null,
        strikethroughPosition: n7,
        strikethroughThickness: n7,
        string: null,
        stroke: null,
        strokeDashArray: s11,
        strokeDashOffset: null,
        strokeLineCap: null,
        strokeLineJoin: null,
        strokeMiterLimit: n7,
        strokeOpacity: n7,
        strokeWidth: null,
        style: null,
        surfaceScale: n7,
        syncBehavior: null,
        syncBehaviorDefault: null,
        syncMaster: null,
        syncTolerance: null,
        syncToleranceDefault: null,
        systemLanguage: s11,
        tabIndex: n7,
        tableValues: null,
        target: null,
        targetX: n7,
        targetY: n7,
        textAnchor: null,
        textDecoration: null,
        textRendering: null,
        textLength: null,
        timelineBegin: null,
        title: null,
        transformBehavior: null,
        type: null,
        typeOf: s11,
        to: null,
        transform: null,
        u1: null,
        u2: null,
        underlinePosition: n7,
        underlineThickness: n7,
        unicode: null,
        unicodeBidi: null,
        unicodeRange: null,
        unitsPerEm: n7,
        values: null,
        vAlphabetic: n7,
        vMathematical: n7,
        vectorEffect: null,
        vHanging: n7,
        vIdeographic: n7,
        version: null,
        vertAdvY: n7,
        vertOriginX: n7,
        vertOriginY: n7,
        viewBox: null,
        viewTarget: null,
        visibility: null,
        width: null,
        widths: null,
        wordSpacing: null,
        writingMode: null,
        x: null,
        x1: null,
        x2: null,
        xChannelSelector: null,
        xHeight: n7,
        y: null,
        y1: null,
        y2: null,
        yChannelSelector: null,
        z: null,
        zoomAndPan: null
    }
});
var B10 = /^data[-\w.:]+$/i, A8 = /-[a-z]/g, H3 = /[A-Z]/g;
function F6(e851, o) {
    let r397 = y8(o), a157 = o, d70 = u8;
    if (r397 in e851.normal) return e851.property[e851.normal[r397]];
    if (r397.length > 4 && r397.slice(0, 4) === "data" && B10.test(o)) {
        if (o.charAt(4) === "-") {
            let c115 = o.slice(5).replace(A8, W2);
            a157 = "data" + c115.charAt(0).toUpperCase() + c115.slice(1);
        } else {
            let c116 = o.slice(4);
            if (!A8.test(c116)) {
                let h112 = c116.replace(H3, V4);
                h112.charAt(0) !== "-" && (h112 = "-" + h112), o = "data" + h112;
            }
        }
        d70 = v7;
    }
    return new d70(a157, o);
}
function V4(e852) {
    return "-" + e852.toLowerCase();
}
function W2(e853) {
    return e853.charAt(1).toUpperCase();
}
var j10 = {
    classId: "classID",
    dataType: "datatype",
    itemId: "itemID",
    strokeDashArray: "strokeDasharray",
    strokeDashOffset: "strokeDashoffset",
    strokeLineCap: "strokeLinecap",
    strokeLineJoin: "strokeLinejoin",
    strokeMiterLimit: "strokeMiterlimit",
    typeOf: "typeof",
    xLinkActuate: "xlinkActuate",
    xLinkArcRole: "xlinkArcrole",
    xLinkHref: "xlinkHref",
    xLinkRole: "xlinkRole",
    xLinkShow: "xlinkShow",
    xLinkTitle: "xlinkTitle",
    xLinkType: "xlinkType",
    xmlnsXLink: "xmlnsXlink"
};
var zn = b10([
    P7,
    w9,
    D10,
    M3,
    R5
], "html"), In = b10([
    P7,
    w9,
    D10,
    M3,
    T7
], "svg");
function i12(t700) {
    return t700.join(" ").trim();
}
var P8 = Object.create;
var v8 = Object.defineProperty;
var X2 = Object.getOwnPropertyDescriptor;
var M4 = Object.getOwnPropertyNames;
var S9 = Object.getPrototypeOf, C13 = Object.prototype.hasOwnProperty;
var $5 = (n392)=>v8(n392, "__esModule", {
        value: !0
    });
var x15 = (n393, t701)=>()=>(t701 || n393((t701 = {
            exports: {}
        }).exports, t701), t701.exports);
var W3 = (n394, t702, c117, a158)=>{
    if (t702 && typeof t702 == "object" || typeof t702 == "function") for (let o of M4(t702))!C13.call(n394, o) && (c117 || o !== "default") && v8(n394, o, {
        get: ()=>t702[o],
        enumerable: !(a158 = X2(t702, o)) || a158.enumerable
    });
    return n394;
}, d7 = (n395, t703)=>W3($5(v8(n395 != null ? P8(S9(n395)) : {}, "default", !t703 && n395 && n395.__esModule ? {
        get: ()=>n395.default,
        enumerable: !0
    } : {
        value: n395,
        enumerable: !0
    })), n395);
var E6 = x15((Q, w51)=>{
    var A41 = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, Y11 = /\n/g, D32 = /^\s*/, F33 = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/, H13 = /^:\s*/, b57 = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/, z26 = /^[;\s]*/, K16 = /^\s+|\s+$/g, U21 = `
`, _19 = "/", T28 = "*", u196 = "", V19 = "comment", j49 = "declaration";
    w51.exports = function(n396, t704) {
        if (typeof n396 != "string") throw new TypeError("First argument must be a string");
        if (!n396) return [];
        t704 = t704 || {};
        var c118 = 1, a159 = 1;
        function o(e854) {
            var r398 = e854.match(Y11);
            r398 && (c118 += r398.length);
            var i477 = e854.lastIndexOf(U21);
            a159 = ~i477 ? e854.length - i477 : a159 + e854.length;
        }
        function m93() {
            var e855 = {
                line: c118,
                column: a159
            };
            return function(r399) {
                return r399.position = new s263(e855), p145(), r399;
            };
        }
        function s263(e856) {
            this.start = e856, this.end = {
                line: c118,
                column: a159
            }, this.source = t704.source;
        }
        s263.prototype.content = n396;
        var O32 = [];
        function h113(e857) {
            var r400 = new Error(t704.source + ":" + c118 + ":" + a159 + ": " + e857);
            if (r400.reason = e857, r400.filename = t704.source, r400.line = c118, r400.column = a159, r400.source = n396, t704.silent) O32.push(r400);
            else throw r400;
        }
        function f101(e858) {
            var r401 = e858.exec(n396);
            if (!!r401) {
                var i478 = r401[0];
                return o(i478), n396 = n396.slice(i478.length), r401;
            }
        }
        function p145() {
            f101(D32);
        }
        function l201(e859) {
            var r402;
            for(e859 = e859 || []; r402 = R23();)r402 !== !1 && e859.push(r402);
            return e859;
        }
        function R23() {
            var e860 = m93();
            if (!(_19 != n396.charAt(0) || T28 != n396.charAt(1))) {
                for(var r403 = 2; u196 != n396.charAt(r403) && (T28 != n396.charAt(r403) || _19 != n396.charAt(r403 + 1));)++r403;
                if (r403 += 2, u196 === n396.charAt(r403 - 1)) return h113("End of comment missing");
                var i479 = n396.slice(2, r403 - 2);
                return a159 += 2, o(i479), n396 = n396.slice(r403), a159 += 2, e860({
                    type: V19,
                    comment: i479
                });
            }
        }
        function G17() {
            var e861 = m93(), r404 = f101(F33);
            if (!!r404) {
                if (R23(), !f101(H13)) return h113("property missing ':'");
                var i480 = f101(b57), L22 = e861({
                    type: j49,
                    property: g79(r404[0].replace(A41, u196)),
                    value: i480 ? g79(i480[0].replace(A41, u196)) : u196
                });
                return f101(z26), L22;
            }
        }
        function I40() {
            var e862 = [];
            l201(e862);
            for(var r405; r405 = G17();)r405 !== !1 && (e862.push(r405), l201(e862));
            return e862;
        }
        return p145(), I40();
    };
    function g79(n397) {
        return n397 ? n397.replace(K16, u196) : u196;
    }
});
var N7 = d7(E6()), k10 = d7(E6()), { default: q7 , ...B11 } = k10, Z2 = (N7.default ?? q7) ?? B11;
var m12 = Object.create;
var p17 = Object.defineProperty;
var $6 = Object.getOwnPropertyDescriptor;
var y9 = Object.getOwnPropertyNames;
var g8 = Object.getPrototypeOf, h11 = Object.prototype.hasOwnProperty;
var x16 = (r406)=>p17(r406, "__esModule", {
        value: !0
    });
((r407)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(r407, {
        get: (e863, t705)=>(typeof require != "undefined" ? require : e863)[t705]
    }) : r407)(function(r408) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + r408 + '" is not supported');
});
var j11 = (r409, e864)=>()=>(e864 || r409((e864 = {
            exports: {}
        }).exports, e864), e864.exports);
var q8 = (r410, e865, t706, o)=>{
    if (e865 && typeof e865 == "object" || typeof e865 == "function") for (let a160 of y9(e865))!h11.call(r410, a160) && (t706 || a160 !== "default") && p17(r410, a160, {
        get: ()=>e865[a160],
        enumerable: !(o = $6(e865, a160)) || o.enumerable
    });
    return r410;
}, v9 = (r411, e866)=>q8(x16(p17(r411 != null ? m12(g8(r411)) : {}, "default", !e866 && r411 && r411.__esModule ? {
        get: ()=>r411.default,
        enumerable: !0
    } : {
        value: r411,
        enumerable: !0
    })), r411);
var l10 = j11((z, i481)=>{
    var I41 = Z2;
    function O33(r412, e867) {
        var t707 = null;
        if (!r412 || typeof r412 != "string") return t707;
        for(var o, a161 = I41(r412), s264 = typeof e867 == "function", u197, f102, n398 = 0, c119 = a161.length; n398 < c119; n398++)o = a161[n398], u197 = o.property, f102 = o.value, s264 ? e867(u197, f102, o) : f102 && (t707 || (t707 = {}), t707[u197] = f102);
        return t707;
    }
    i481.exports = O33;
});
var d8 = v9(l10()), S10 = v9(l10()), { default: T8 , ...k11 } = S10, A9 = (d8.default ?? T8) ?? k11;
var o7 = {}.hasOwnProperty;
function d9(a162, s265) {
    var i482 = s265 || {};
    function n399(r413) {
        var t708 = n399.invalid, l202 = n399.handlers;
        if (r413 && o7.call(r413, a162) && (t708 = o7.call(l202, r413[a162]) ? l202[r413[a162]] : n399.unknown), t708) return t708.apply(this, arguments);
    }
    return n399.handlers = i482.handlers || {}, n399.invalid = i482.invalid, n399.unknown = i482.unknown, n399;
}
var I14 = j10, S11 = {}.hasOwnProperty, P9 = new Set([
    "table",
    "thead",
    "tbody",
    "tfoot",
    "tr",
    "th",
    "td"
]);
function ne1(e868, n400 = {}) {
    let t709 = {
        schema: n400.space === "svg" ? In : zn,
        comments: [],
        esm: [],
        handle: d9("type", {
            invalid: T9,
            unknown: V5,
            handlers: Object.assign({}, {
                comment: z5,
                doctype: R6,
                element: B12,
                mdxjsEsm: q9,
                mdxFlowExpression: J5,
                mdxJsxFlowElement: b11,
                mdxJsxTextElement: b11,
                mdxTextExpression: J5,
                root: M5,
                text: U5
            }, n400.handlers)
        })
    }, s266 = t709.handle(e868, t709), r414 = t709.esm;
    return s266 && (s266.type !== "JSXFragment" && s266.type !== "JSXElement" && (s266 = y10(e868, {
        type: "JSXFragment",
        openingFragment: {
            type: "JSXOpeningFragment"
        },
        closingFragment: {
            type: "JSXClosingFragment"
        },
        children: [
            s266
        ]
    })), r414.push(y10(e868, {
        type: "ExpressionStatement",
        expression: s266
    }))), y10(e868, {
        type: "Program",
        body: r414,
        sourceType: "module",
        comments: t709.comments
    });
}
function T9(e869) {
    throw new Error("Cannot handle value `" + e869 + "`, expected node");
}
function V5(e870) {
    throw new Error("Cannot handle unknown node `" + e870.type + "`");
}
function R6() {}
function z5(e871, n401) {
    let t710 = f8(e871, {
        type: "Block",
        value: e871.value
    });
    return n401.comments.push(t710), y10(e871, {
        type: "JSXExpressionContainer",
        expression: y10(e871, {
            type: "JSXEmptyExpression",
            comments: [
                Object.assign({}, t710, {
                    leading: !1,
                    trailing: !0
                })
            ]
        })
    });
}
function B12(e872, n402) {
    let t711 = n402.schema, s267 = t711, r415 = e872.properties || {};
    t711.space === "html" && e872.tagName.toLowerCase() === "svg" && (s267 = In, n402.schema = s267);
    let a163 = E7(e872, n402), p146 = [], l203;
    for(l203 in r415)if (S11.call(r415, l203)) {
        let o = r415[l203], m94 = F6(s267, l203), c120;
        if (o == null || typeof o == "number" && Number.isNaN(o) || o === !1 || !o && m94.boolean) continue;
        if (l203 = m94.space ? I14[m94.property] || m94.property : m94.attribute, Array.isArray(o) && (o = m94.commaSeparated ? p15(o) : i12(o)), l203 === "style") {
            let i483 = typeof o == "string" ? _6(o, e872.tagName) : o, d71 = [], u198;
            for(u198 in i483)S11.call(i483, u198) && d71.push({
                type: "Property",
                method: !1,
                shorthand: !1,
                computed: !1,
                key: {
                    type: "Identifier",
                    name: u198
                },
                value: {
                    type: "Literal",
                    value: String(i483[u198])
                },
                kind: "init"
            });
            c120 = {
                type: "JSXExpressionContainer",
                expression: {
                    type: "ObjectExpression",
                    properties: d71
                }
            };
        } else o === !0 ? c120 = null : c120 = {
            type: "Literal",
            value: String(o)
        };
        G5(l203) ? p146.push({
            type: "JSXAttribute",
            name: {
                type: "JSXIdentifier",
                name: l203
            },
            value: c120
        }) : p146.push({
            type: "JSXSpreadAttribute",
            argument: {
                type: "ObjectExpression",
                properties: [
                    {
                        type: "Property",
                        method: !1,
                        shorthand: !1,
                        computed: !1,
                        key: {
                            type: "Literal",
                            value: String(l203)
                        },
                        value: c120 || {
                            type: "Literal",
                            value: !0
                        },
                        kind: "init"
                    }
                ]
            }
        });
    }
    return n402.schema = t711, f8(e872, {
        type: "JSXElement",
        openingElement: {
            type: "JSXOpeningElement",
            attributes: p146,
            name: h12(e872.tagName),
            selfClosing: a163.length === 0
        },
        closingElement: a163.length > 0 ? {
            type: "JSXClosingElement",
            name: h12(e872.tagName)
        } : null,
        children: a163
    });
}
function q9(e873, n403) {
    let t712 = e873.data && e873.data.estree, s268 = t712 && t712.comments || [];
    t712 && (n403.comments.push(...s268), m10(t712, s268), n403.esm.push(...t712.body));
}
function J5(e874, n404) {
    let t713 = e874.data && e874.data.estree, s269 = t713 && t713.comments || [], r416;
    return t713 && (n404.comments.push(...s269), m10(t713, t713.comments), r416 = t713.body[0] && t713.body[0].type === "ExpressionStatement" && t713.body[0].expression || void 0), f8(e874, {
        type: "JSXExpressionContainer",
        expression: r416 || y10(e874, {
            type: "JSXEmptyExpression"
        })
    });
}
function b11(e875, n405) {
    let t714 = n405.schema, s270 = t714, r417 = e875.attributes || [], a164 = -1;
    e875.name && t714.space === "html" && e875.name.toLowerCase() === "svg" && (s270 = In, n405.schema = s270);
    let p147 = E7(e875, n405), l204 = [];
    for(; ++a164 < r417.length;){
        let o = r417[a164], m95 = o.value, c121;
        if (o.type === "mdxJsxAttribute") {
            if (m95 == null) c121 = null;
            else if (typeof m95 == "object") {
                let i484 = m95.data && m95.data.estree, d72 = i484 && i484.comments || [], u199;
                i484 && (n405.comments.push(...d72), m10(i484, i484.comments), u199 = i484.body[0] && i484.body[0].type === "ExpressionStatement" && i484.body[0].expression || void 0), c121 = f8(m95, {
                    type: "JSXExpressionContainer",
                    expression: u199 || {
                        type: "JSXEmptyExpression"
                    }
                });
            } else c121 = {
                type: "Literal",
                value: String(m95)
            };
            l204.push(f8(o, {
                type: "JSXAttribute",
                name: h12(o.name, !0),
                value: c121
            }));
        } else {
            let i485 = o.data && o.data.estree, d73 = i485 && i485.comments || [], u200;
            i485 && (n405.comments.push(...d73), m10(i485, i485.comments), u200 = i485.body[0] && i485.body[0].type === "ExpressionStatement" && i485.body[0].expression && i485.body[0].expression.type === "ObjectExpression" && i485.body[0].expression.properties && i485.body[0].expression.properties[0] && i485.body[0].expression.properties[0].type === "SpreadElement" && i485.body[0].expression.properties[0].argument || void 0), l204.push(f8(o, {
                type: "JSXSpreadAttribute",
                argument: u200 || {
                    type: "ObjectExpression",
                    properties: []
                }
            }));
        }
    }
    return n405.schema = t714, f8(e875, e875.name ? {
        type: "JSXElement",
        openingElement: {
            type: "JSXOpeningElement",
            attributes: l204,
            name: h12(e875.name),
            selfClosing: p147.length === 0
        },
        closingElement: p147.length > 0 ? {
            type: "JSXClosingElement",
            name: h12(e875.name)
        } : null,
        children: p147
    } : {
        type: "JSXFragment",
        openingFragment: {
            type: "JSXOpeningFragment"
        },
        closingFragment: {
            type: "JSXClosingFragment"
        },
        children: p147
    });
}
function M5(e876, n406) {
    let t715 = E7(e876, n406), s271 = [], r418 = -1, a165;
    for(; ++r418 < t715.length;){
        let p148 = t715[r418];
        p148.type === "JSXExpressionContainer" && p148.expression.type === "Literal" && r10(p148.expression.value) ? a165 && a165.push(p148) : (a165 && s271.push(...a165), s271.push(p148), a165 = []);
    }
    return f8(e876, {
        type: "JSXFragment",
        openingFragment: {
            type: "JSXOpeningFragment"
        },
        closingFragment: {
            type: "JSXClosingFragment"
        },
        children: s271
    });
}
function U5(e877) {
    let n407 = String(e877.value || "");
    if (!!n407) return y10(e877, {
        type: "JSXExpressionContainer",
        expression: f8(e877, {
            type: "Literal",
            value: n407
        })
    });
}
function E7(e878, n408) {
    let t716 = e878.children || [], s272 = -1, r419 = [], a166 = n408.schema.space === "html" && e878.type === "element" && P9.has(e878.tagName.toLowerCase());
    for(; ++s272 < t716.length;){
        let p149 = t716[s272];
        if (a166 && p149.type === "text" && p149.value === `
`) continue;
        let l205 = n408.handle(p149, n408);
        Array.isArray(l205) ? r419.push(...l205) : l205 && r419.push(l205);
    }
    return r419;
}
function f8(e879, n409) {
    let t717 = e879.data, s273, r420;
    if (y10(e879, n409), t717) {
        for(r420 in t717)S11.call(t717, r420) && r420 !== "estree" && (s273 || (s273 = {}), s273[r420] = t717[r420]);
        s273 && (n409.data = s273);
    }
    return n409;
}
function y10(e880, n410) {
    let t718 = e6(e880);
    return t718.start.line && t718.start.offset !== void 0 && t718.end.offset !== void 0 && (n410.start = t718.start.offset, n410.end = t718.end.offset, n410.loc = {
        start: {
            line: t718.start.line,
            column: t718.start.column - 1
        },
        end: {
            line: t718.end.line,
            column: t718.end.column - 1
        }
    }, n410.range = [
        t718.start.offset,
        t718.end.offset
    ]), n410;
}
var h12 = function(e881, n411) {
    if (!n411 && e881.includes(".")) {
        let t719 = e881.split("."), s274 = t719.shift(), r421 = {
            type: "JSXIdentifier",
            name: s274
        };
        for(; s274 = t719.shift();)r421 = {
            type: "JSXMemberExpression",
            object: r421,
            property: {
                type: "JSXIdentifier",
                name: s274
            }
        };
        return r421;
    }
    if (e881.includes(":")) {
        let t720 = e881.split(":");
        return {
            type: "JSXNamespacedName",
            namespace: {
                type: "JSXIdentifier",
                name: t720[0]
            },
            name: {
                type: "JSXIdentifier",
                name: t720[1]
            }
        };
    }
    return {
        type: "JSXIdentifier",
        name: e881
    };
};
function _6(e882, n412) {
    let t721 = {};
    try {
        A9(e882, s275);
    } catch (r1100) {
        let a167 = r1100;
        throw a167.message = n412 + "[style]" + a167.message.slice("undefined".length), r1100;
    }
    return t721;
    function s275(r422, a168) {
        r422.slice(0, 4) === "-ms-" && (r422 = "ms-" + r422.slice(4)), t721[r422.replace(/-([a-z])/g, D11)] = a168;
    }
}
function D11(e, n413) {
    return n413.toUpperCase();
}
function G5(e883) {
    let n414 = -1;
    for(; ++n414 < e883.length;)if (!(n414 ? t722 : C6)(e883.charCodeAt(n414))) return !1;
    return n414 > 0;
    function t722(s276) {
        return D5(s276) || s276 === 45;
    }
}
var k12 = Object.create;
var r11 = Object.defineProperty;
var l11 = Object.getOwnPropertyDescriptor;
var p18 = Object.getOwnPropertyNames;
var w10 = Object.getPrototypeOf, $7 = Object.prototype.hasOwnProperty;
var c9 = (d74)=>r11(d74, "__esModule", {
        value: !0
    });
var n8 = (d75, m96)=>()=>(m96 || d75((m96 = {
            exports: {}
        }).exports, m96), m96.exports);
var x17 = (d76, m97, i486, t723)=>{
    if (m97 && typeof m97 == "object" || typeof m97 == "function") for (let o of p18(m97))!$7.call(d76, o) && (i486 || o !== "default") && r11(d76, o, {
        get: ()=>m97[o],
        enumerable: !(t723 = l11(m97, o)) || t723.enumerable
    });
    return d76;
}, f9 = (d77, m98)=>x17(c9(r11(d77 != null ? k12(w10(d77)) : {}, "default", !m98 && d77 && d77.__esModule ? {
        get: ()=>d77.default,
        enumerable: !0
    } : {
        value: d77,
        enumerable: !0
    })), d77);
var s12 = n8((v, q32)=>{
    q32.exports = [
        "md",
        "markdown",
        "mdown",
        "mkdn",
        "mkd",
        "mdwn",
        "mkdown",
        "ron"
    ];
});
var e7 = n8((y, u201)=>{
    "use strict";
    u201.exports = s12();
});
var a17 = f9(e7()), b12 = f9(e7()), { default: g9 , ...h13 } = b12, z6 = (a17.default ?? g9) ?? h13;
function v10(e884, t724) {
    let r423 = [
        "start",
        "end",
        "loc",
        "range",
        "comments"
    ], n415 = -1;
    for(; ++n415 < r423.length;){
        let s277 = r423[n415];
        s277 in e884 && (t724[s277] = e884[s277]);
    }
    return t724;
}
function F7(e885, t725) {
    let r424 = -1, n416 = [], s278 = [], c122;
    for(; ++r424 < e885.length;){
        let l206 = e885[r424];
        l206.type === "ImportNamespaceSpecifier" ? c122 = l206 : s278.push(l206);
    }
    return c122 && n416.push(v10(c122, {
        type: "VariableDeclarator",
        id: c122.local,
        init: t725
    })), n416.push({
        type: "VariableDeclarator",
        id: {
            type: "ObjectPattern",
            properties: s278.map((l207)=>{
                let m99 = l207.type === "ImportSpecifier" ? l207.imported : l207.type === "ExportSpecifier" ? l207.exported : {
                    type: "Identifier",
                    name: "default"
                }, f103 = l207.local;
                return l207.type === "ExportSpecifier" && (f103 = m99, m99 = l207.local), v10(l207, {
                    type: "Property",
                    kind: "init",
                    shorthand: m99.name === f103.name,
                    method: !1,
                    computed: !1,
                    key: m99,
                    value: f103
                });
            })
        },
        init: c122 ? {
            type: "Identifier",
            name: c122.local.name
        } : t725
    }), n416;
}
var X3 = z7("Identifier", "MemberExpression", r2), O5 = z7("JSXIdentifier", "JSXMemberExpression", ue1);
function z7(e886, t726, r425) {
    return n417;
    function n417(s279) {
        let c123 = -1, l208;
        for(; ++c123 < s279.length;){
            let m100 = s279[c123], f104 = typeof m100 == "string" && r425(m100);
            if (e886 === "JSXIdentifier" && !f104) throw new Error("Cannot turn `" + m100 + "` into a JSX identifier");
            let d78 = f104 ? {
                type: e886,
                name: m100
            } : {
                type: "Literal",
                value: m100
            };
            l208 = l208 ? {
                type: t726,
                object: l208,
                property: d78,
                computed: d78.type === "Literal",
                optional: !1
            } : d78;
        }
        if (!l208) throw new Error("Expected non-empty `ids` to be passed");
        if (l208.type === "Literal") throw new Error("Expected identifier as left-most value");
        return l208;
    }
}
function ue1(e887) {
    let t727 = -1;
    for(; ++t727 < e887.length;)if (!(t727 ? fe2 : C6)(e887.charCodeAt(t727))) return !1;
    return t727 > 0;
}
function fe2(e888) {
    return e888 === 45 || D5(e888);
}
function G6(e889 = {}) {
    let { outputFormat: t728  } = e889;
    return (r426)=>{
        _4(r426), t728 === "function-body" && r426.body[0] && r426.body[0].type === "ImportDeclaration" && typeof r426.body[0].source.value == "string" && /\/jsx-runtime$/.test(r426.body[0].source.value) && (r426.body[0] = {
            type: "VariableDeclaration",
            kind: "const",
            declarations: F7(r426.body[0].specifiers, X3([
                "arguments",
                0
            ]))
        });
    };
}
function H4(e890) {
    if (e890.type === "FunctionDeclaration") return {
        ...e890,
        type: "FunctionExpression"
    };
    if (e890.type === "ClassDeclaration") return {
        ...e890,
        type: "ClassExpression"
    };
    throw new Error("Cannot turn `" + e890.type + "` into an expression");
}
function $8(e891) {
    let t729 = e891 && typeof e891 == "object" && e891.type;
    return Boolean(t729 === "FunctionDeclaration" || t729 === "ClassDeclaration" || t729 === "VariableDeclaration");
}
function W4(e892 = {}) {
    let { baseUrl: t730 , useDynamicImport: r427 , outputFormat: n418 = "program" , pragma: s280 = "React.createElement" , pragmaFrag: c124 = "React.Fragment" , pragmaImportSource: l209 = "react" , jsxImportSource: m101 = "react" , jsxRuntime: f105 = "automatic"  } = e892;
    return (E35, S56)=>{
        let p150 = [], i487 = [], x89 = [], h114 = 0, u202, g80, a169;
        if (E35.comments || (E35.comments = []), f105 && x89.push("@jsxRuntime " + f105), f105 === "automatic" && m101 && x89.push("@jsxImportSource " + m101), f105 === "classic" && s280 && x89.push("@jsx " + s280), f105 === "classic" && c124 && x89.push("@jsxFrag " + c124), x89.length > 0 && E35.comments.unshift({
            type: "Block",
            value: x89.join(" ")
        }), f105 === "classic" && l209) {
            if (!s280) throw new Error("Missing `pragma` in classic runtime with `pragmaImportSource`");
            I42({
                type: "ImportDeclaration",
                specifiers: [
                    {
                        type: "ImportDefaultSpecifier",
                        local: {
                            type: "Identifier",
                            name: s280.split(".")[0]
                        }
                    }
                ],
                source: {
                    type: "Literal",
                    value: l209
                }
            });
        }
        for (a169 of E35.body)if (a169.type === "ExportDefaultDeclaration") u202 && S56.fail("Cannot specify multiple layouts (previous: " + c1(s4(u202)) + ")", s4(a169), "recma-document:duplicate-layout"), u202 = a169, i487.push({
            type: "VariableDeclaration",
            kind: "const",
            declarations: [
                {
                    type: "VariableDeclarator",
                    id: {
                        type: "Identifier",
                        name: "MDXLayout"
                    },
                    init: $8(a169.declaration) ? H4(a169.declaration) : a169.declaration
                }
            ]
        });
        else if (a169.type === "ExportNamedDeclaration" && a169.source) {
            let o = a169.source;
            a169.specifiers = a169.specifiers.filter((y59)=>y59.exported.name === "default" ? (u202 && S56.fail("Cannot specify multiple layouts (previous: " + c1(s4(u202)) + ")", s4(a169), "recma-document:duplicate-layout"), u202 = y59, I42(v10(y59, {
                    type: "ImportDeclaration",
                    specifiers: [
                        y59.local.name === "default" ? {
                            type: "ImportDefaultSpecifier",
                            local: {
                                type: "Identifier",
                                name: "MDXLayout"
                            }
                        } : v10(y59.local, {
                            type: "ImportSpecifier",
                            imported: y59.local,
                            local: {
                                type: "Identifier",
                                name: "MDXLayout"
                            }
                        })
                    ],
                    source: v10(o, {
                        type: "Literal",
                        value: o.value
                    })
                })), !1) : !0), a169.specifiers.length > 0 && D33(a169);
        } else a169.type === "ExportNamedDeclaration" || a169.type === "ExportAllDeclaration" ? D33(a169) : a169.type === "ImportDeclaration" ? I42(a169) : a169.type === "ExpressionStatement" && (a169.expression.type === "JSXFragment" || a169.expression.type === "JSXElement") ? (g80 = !0, i487.push(d79(a169.expression))) : i487.push(a169);
        g80 || i487.push(d79()), p150.push([
            "MDXContent",
            "default"
        ]), n418 === "function-body" ? i487.push({
            type: "ReturnStatement",
            argument: {
                type: "ObjectExpression",
                properties: [
                    ...Array.from({
                        length: h114
                    }).map((o, y60)=>({
                            type: "SpreadElement",
                            argument: {
                                type: "Identifier",
                                name: "_exportAll" + (y60 + 1)
                            }
                        })),
                    ...p150.map((o)=>({
                            type: "Property",
                            kind: "init",
                            method: !1,
                            computed: !1,
                            shorthand: typeof o == "string",
                            key: {
                                type: "Identifier",
                                name: typeof o == "string" ? o : o[1]
                            },
                            value: {
                                type: "Identifier",
                                name: typeof o == "string" ? o : o[0]
                            }
                        }))
                ]
            }
        }) : i487.push({
            type: "ExportDefaultDeclaration",
            declaration: {
                type: "Identifier",
                name: "MDXContent"
            }
        }), E35.body = i487;
        function D33(o) {
            if (o.type === "ExportNamedDeclaration") {
                o.declaration && p150.push(..._5(o.declaration).scope.declarations.keys());
                for (a169 of o.specifiers)p150.push(a169.exported.name);
            }
            I42(o);
        }
        function I42(o) {
            if (t730 && o.source) {
                let w52 = String(o.source.value);
                try {
                    w52 = String(new _url(w52));
                } catch  {
                    /^\.{0,2}\//.test(w52) && (w52 = String(new _url(w52, t730)));
                }
                o.source = v10(o.source, {
                    type: "Literal",
                    value: w52
                });
            }
            let y61, J15;
            if (n418 === "function-body") if (o.type === "ImportDeclaration" || o.type === "ExportAllDeclaration" || o.type === "ExportNamedDeclaration" && o.source) {
                if (r427 || S56.fail("Cannot use `import` or `export \u2026 from` in `evaluate` (outputting a function body) by default: please set `useDynamicImport: true` (and probably specify a `baseUrl`)", s4(o), "recma-document:invalid-esm-statement"), !o.source) throw new Error("Expected `node.source` to be defined");
                J15 = {
                    type: "AwaitExpression",
                    argument: v10(o, {
                        type: "ImportExpression",
                        source: o.source
                    })
                }, (o.type === "ImportDeclaration" || o.type === "ExportNamedDeclaration") && o.specifiers.length === 0 ? y61 = {
                    type: "ExpressionStatement",
                    expression: J15
                } : y61 = {
                    type: "VariableDeclaration",
                    kind: "const",
                    declarations: o.type === "ExportAllDeclaration" ? [
                        {
                            type: "VariableDeclarator",
                            id: {
                                type: "Identifier",
                                name: "_exportAll" + ++h114
                            },
                            init: J15
                        }
                    ] : F7(o.specifiers, J15)
                };
            } else if (o.declaration) y61 = o.declaration;
            else {
                let w53 = o.specifiers.filter((b58)=>b58.local.name !== b58.exported.name).map((b59)=>({
                        type: "VariableDeclarator",
                        id: b59.exported,
                        init: b59.local
                    }));
                w53.length > 0 && (y61 = {
                    type: "VariableDeclaration",
                    kind: "const",
                    declarations: w53
                });
            }
            else y61 = o;
            y61 && i487.push(y61);
        }
    };
    function d79(E36) {
        let p151 = {
            type: "JSXElement",
            openingElement: {
                type: "JSXOpeningElement",
                name: {
                    type: "JSXIdentifier",
                    name: "MDXLayout"
                },
                attributes: [
                    {
                        type: "JSXSpreadAttribute",
                        argument: {
                            type: "Identifier",
                            name: "props"
                        }
                    }
                ],
                selfClosing: !1
            },
            closingElement: {
                type: "JSXClosingElement",
                name: {
                    type: "JSXIdentifier",
                    name: "MDXLayout"
                }
            },
            children: [
                {
                    type: "JSXElement",
                    openingElement: {
                        type: "JSXOpeningElement",
                        name: {
                            type: "JSXIdentifier",
                            name: "_createMdxContent"
                        },
                        attributes: [],
                        selfClosing: !0
                    },
                    closingElement: null,
                    children: []
                }
            ]
        }, i488 = E36 || {
            type: "Literal",
            value: null
        };
        return i488 && i488.type === "JSXFragment" && i488.children.length === 1 && i488.children[0].type === "JSXElement" && (i488 = i488.children[0]), {
            type: "FunctionDeclaration",
            id: {
                type: "Identifier",
                name: "MDXContent"
            },
            params: [
                {
                    type: "AssignmentPattern",
                    left: {
                        type: "Identifier",
                        name: "props"
                    },
                    right: {
                        type: "ObjectExpression",
                        properties: []
                    }
                }
            ],
            body: {
                type: "BlockStatement",
                body: [
                    {
                        type: "ReturnStatement",
                        argument: {
                            type: "ConditionalExpression",
                            test: {
                                type: "Identifier",
                                name: "MDXLayout"
                            },
                            consequent: p151,
                            alternate: {
                                type: "CallExpression",
                                callee: {
                                    type: "Identifier",
                                    name: "_createMdxContent"
                                },
                                arguments: [],
                                optional: !1
                            }
                        }
                    },
                    {
                        type: "FunctionDeclaration",
                        id: {
                            type: "Identifier",
                            name: "_createMdxContent"
                        },
                        params: [],
                        body: {
                            type: "BlockStatement",
                            body: [
                                {
                                    type: "ReturnStatement",
                                    argument: i488
                                }
                            ]
                        }
                    }
                ]
            }
        };
    }
}
function P10(e893) {
    let t731 = -1, r428;
    for(; ++t731 < e893.length;){
        let n419 = e893[t731];
        r428 = r428 ? {
            type: "BinaryExpression",
            left: r428,
            operator: "+",
            right: n419
        } : n419;
    }
    if (!r428) throw new Error("Expected non-empty `expressions` to be passed");
    return r428;
}
var C14 = {}.hasOwnProperty;
function ee1(e894 = {}) {
    let { development: t732 , providerImportSource: r429 , outputFormat: n420  } = e894;
    return (s281, c125)=>{
        let l210 = _5(s281), m102 = [], f106, d80, E37;
        if (w7(s281, {
            enter (S57) {
                let p152 = S57;
                (p152.type === "FunctionDeclaration" || p152.type === "FunctionExpression" || p152.type === "ArrowFunctionExpression") && m102.push({
                    objects: [],
                    components: [],
                    tags: [],
                    references: {},
                    node: p152
                });
                let i489 = m102[0];
                if (!i489 || !k13(i489.node, "MDXContent") && !r429) return;
                m102[1] && k13(m102[1].node, "_createMdxContent") && (i489 = m102[1]);
                let x90 = l210.map.get(p152);
                if (x90 && (x90.node = p152, E37 = x90), E37 && p152.type === "JSXElement") {
                    let h115 = p152.openingElement.name;
                    if (h115.type === "JSXMemberExpression") {
                        let u203 = [];
                        for(; h115.type === "JSXMemberExpression";)u203.unshift(h115.property.name), h115 = h115.object;
                        u203.unshift(h115.name);
                        let g81 = u203.join("."), a170 = h115.name;
                        C14.call(i489.references, g81) || (i489.references[g81] = {
                            node: p152,
                            component: !0
                        }), !i489.objects.includes(a170) && !Z3(E37, a170) && i489.objects.push(a170);
                    } else if (h115.type !== "JSXNamespacedName") {
                        if (r2(h115.name) && !/^[a-z]/.test(h115.name)) {
                            let u204 = h115.name;
                            Z3(E37, u204) || (u204 !== "MDXLayout" && !C14.call(i489.references, u204) && (i489.references[u204] = {
                                node: p152,
                                component: !0
                            }), i489.components.includes(u204) || i489.components.push(u204));
                        } else if (!(p152.data && p152.data._mdxExplicitJsx)) {
                            let u205 = h115.name;
                            i489.tags.includes(u205) || i489.tags.push(u205), p152.openingElement.name = O5([
                                "_components",
                                u205
                            ]), p152.closingElement && (p152.closingElement.name = O5([
                                "_components",
                                u205
                            ]));
                        }
                    }
                }
            },
            leave (S58) {
                let p153 = [], i490 = [], x91 = [], h116 = [];
                if (E37 && E37.node === S58 && (E37 = E37.parent), S58.type === "FunctionDeclaration" || S58.type === "FunctionExpression" || S58.type === "ArrowFunctionExpression") {
                    let u206 = S58, g82 = m102[m102.length - 1], a171;
                    for (a171 of g82.tags)p153.push({
                        type: "Property",
                        kind: "init",
                        key: r2(a171) ? {
                            type: "Identifier",
                            name: a171
                        } : {
                            type: "Literal",
                            value: a171
                        },
                        value: {
                            type: "Literal",
                            value: a171
                        },
                        method: !1,
                        shorthand: !1,
                        computed: !1
                    });
                    i490.push(...g82.components);
                    for (a171 of g82.objects)i490.includes(a171) || i490.push(a171);
                    let D34;
                    for(D34 in g82.references)if (C14.call(g82.references, D34)) {
                        let I43 = D34.split("."), o = 0;
                        for(; ++o < I43.length;){
                            let y62 = I43.slice(0, o).join(".");
                            C14.call(g82.references, y62) || (g82.references[y62] = {
                                node: g82.references[D34].node,
                                component: !1
                            });
                        }
                    }
                    if (p153.length > 0 || i490.length > 0) {
                        r429 && (f106 = !0, x91.push({
                            type: "CallExpression",
                            callee: {
                                type: "Identifier",
                                name: "_provideComponents"
                            },
                            arguments: [],
                            optional: !1
                        })), (k13(g82.node, "MDXContent") || k13(g82.node, "_createMdxContent")) && x91.push(X3([
                            "props",
                            "components"
                        ])), (p153.length > 0 || x91.length > 1) && x91.unshift({
                            type: "ObjectExpression",
                            properties: p153
                        });
                        let I44 = x91.length > 1 ? {
                            type: "CallExpression",
                            callee: X3([
                                "Object",
                                "assign"
                            ]),
                            arguments: x91,
                            optional: !1
                        } : x91[0].type === "MemberExpression" ? {
                            type: "LogicalExpression",
                            operator: "||",
                            left: x91[0],
                            right: {
                                type: "ObjectExpression",
                                properties: []
                            }
                        } : x91[0], o;
                        i490.length > 0 && (o = {
                            type: "ObjectPattern",
                            properties: i490.map((b60)=>({
                                    type: "Property",
                                    kind: "init",
                                    key: {
                                        type: "Identifier",
                                        name: b60 === "MDXLayout" ? "wrapper" : b60
                                    },
                                    value: {
                                        type: "Identifier",
                                        name: b60
                                    },
                                    method: !1,
                                    shorthand: b60 !== "MDXLayout",
                                    computed: !1
                                }))
                        }), g82.tags.length > 0 && (h116.push({
                            type: "VariableDeclarator",
                            id: {
                                type: "Identifier",
                                name: "_components"
                            },
                            init: I44
                        }), I44 = {
                            type: "Identifier",
                            name: "_components"
                        }), o && h116.push({
                            type: "VariableDeclarator",
                            id: o,
                            init: I44
                        }), u206.body.type !== "BlockStatement" && (u206.body = {
                            type: "BlockStatement",
                            body: [
                                {
                                    type: "ReturnStatement",
                                    argument: u206.body
                                }
                            ]
                        });
                        let y63 = [
                            {
                                type: "VariableDeclaration",
                                kind: "const",
                                declarations: h116
                            }
                        ], J16 = Object.keys(g82.references).sort(), w54 = -1;
                        for(; ++w54 < J16.length;){
                            let b61 = J16[w54], B32 = g82.references[b61], U22 = c1(s4(B32.node)), q33 = [
                                {
                                    type: "Literal",
                                    value: b61
                                },
                                {
                                    type: "Literal",
                                    value: B32.component
                                }
                            ];
                            d80 = !0, t732 && U22 !== "1:1-1:1" && q33.push({
                                type: "Literal",
                                value: U22
                            }), y63.push({
                                type: "IfStatement",
                                test: {
                                    type: "UnaryExpression",
                                    operator: "!",
                                    prefix: !0,
                                    argument: X3(b61.split("."))
                                },
                                consequent: {
                                    type: "ExpressionStatement",
                                    expression: {
                                        type: "CallExpression",
                                        callee: {
                                            type: "Identifier",
                                            name: "_missingMdxReference"
                                        },
                                        arguments: q33,
                                        optional: !1
                                    }
                                },
                                alternate: null
                            });
                        }
                        u206.body.body.unshift(...y63);
                    }
                    m102.pop();
                }
            }
        }), f106 && r429 && s281.body.unshift(Se2(r429, n420)), d80) {
            let S59 = [
                {
                    type: "Literal",
                    value: "Expected "
                },
                {
                    type: "ConditionalExpression",
                    test: {
                        type: "Identifier",
                        name: "component"
                    },
                    consequent: {
                        type: "Literal",
                        value: "component"
                    },
                    alternate: {
                        type: "Literal",
                        value: "object"
                    }
                },
                {
                    type: "Literal",
                    value: " `"
                },
                {
                    type: "Identifier",
                    name: "id"
                },
                {
                    type: "Literal",
                    value: "` to be defined: you likely forgot to import, pass, or provide it."
                }
            ], p154 = [
                {
                    type: "Identifier",
                    name: "id"
                },
                {
                    type: "Identifier",
                    name: "component"
                }
            ];
            t732 && (S59.push({
                type: "ConditionalExpression",
                test: {
                    type: "Identifier",
                    name: "place"
                },
                consequent: P10([
                    {
                        type: "Literal",
                        value: "\nIt\u2019s referenced in your code at `"
                    },
                    {
                        type: "Identifier",
                        name: "place"
                    },
                    {
                        type: "Literal",
                        value: (c125.path ? "` in `" + c125.path : "") + "`"
                    }
                ]),
                alternate: {
                    type: "Literal",
                    value: ""
                }
            }), p154.push({
                type: "Identifier",
                name: "place"
            })), s281.body.push({
                type: "FunctionDeclaration",
                id: {
                    type: "Identifier",
                    name: "_missingMdxReference"
                },
                generator: !1,
                async: !1,
                params: p154,
                body: {
                    type: "BlockStatement",
                    body: [
                        {
                            type: "ThrowStatement",
                            argument: {
                                type: "NewExpression",
                                callee: {
                                    type: "Identifier",
                                    name: "Error"
                                },
                                arguments: [
                                    P10(S59)
                                ]
                            }
                        }
                    ]
                }
            });
        }
    };
}
function Se2(e895, t733) {
    let r430 = [
        {
            type: "ImportSpecifier",
            imported: {
                type: "Identifier",
                name: "useMDXComponents"
            },
            local: {
                type: "Identifier",
                name: "_provideComponents"
            }
        }
    ];
    return t733 === "function-body" ? {
        type: "VariableDeclaration",
        kind: "const",
        declarations: F7(r430, X3([
            "arguments",
            0
        ]))
    } : {
        type: "ImportDeclaration",
        specifiers: r430,
        source: {
            type: "Literal",
            value: e895
        }
    };
}
function k13(e896, t734) {
    return Boolean(e896 && "id" in e896 && e896.id && e896.id.name === t734);
}
function Z3(e897, t735) {
    let r431 = e897;
    for(; r431;){
        if (r431.declarations.has(t735)) return !0;
        r431 = r431.parent;
    }
    return !1;
}
function te1(e898 = {}) {
    let { SourceMapGenerator: t736  } = e898;
    Object.assign(this, {
        Compiler: r432
    });
    function r432(n421, s282) {
        let c126;
        t736 && (c126 = new t736({
            file: s282.path || "unknown.mdx"
        }));
        let l211 = {
            ...D9,
            JSXAttribute: Ie2,
            JSXClosingElement: ve2,
            JSXClosingFragment: De2,
            JSXElement: Je1,
            JSXEmptyExpression: Xe1,
            JSXExpressionContainer: Fe2,
            JSXFragment: Me3,
            JSXIdentifier: Ce2,
            JSXMemberExpression: ke2,
            JSXNamespacedName: je2,
            JSXOpeningElement: Le2,
            JSXOpeningFragment: Oe2,
            JSXSpreadAttribute: Pe3,
            JSXText: Ae2
        }, m103 = B9(n421, {
            generator: l211,
            comments: !0,
            sourceMap: c126
        });
        return c126 && (s282.map = c126.toJSON()), m103;
    }
}
function Ie2(e899, t737) {
    this[e899.name.type](e899.name, t737), e899.value !== void 0 && e899.value !== null && (t737.write("="), e899.value.type === "Literal" ? t737.write('"' + re1(String(e899.value.value)).replace(/"/g, "&quot;") + '"', e899) : this[e899.value.type](e899.value, t737));
}
function ve2(e900, t738) {
    t738.write("</"), this[e900.name.type](e900.name, t738), t738.write(">");
}
function De2(e901, t739) {
    t739.write("</>", e901);
}
function Je1(e902, t740) {
    let r433 = -1;
    if (this[e902.openingElement.type](e902.openingElement, t740), e902.children) for(; ++r433 < e902.children.length;){
        let n422 = e902.children[r433];
        if (n422.type === "JSXSpreadChild") throw new Error("JSX spread children are not supported");
        this[n422.type](n422, t740);
    }
    e902.closingElement && this[e902.closingElement.type](e902.closingElement, t740);
}
function Xe1() {}
function Fe2(e903, t741) {
    t741.write("{"), this[e903.expression.type](e903.expression, t741), t741.write("}");
}
function Me3(e904, t742) {
    let r434 = -1;
    if (this[e904.openingFragment.type](e904.openingFragment, t742), e904.children) for(; ++r434 < e904.children.length;){
        let n423 = e904.children[r434];
        if (n423.type === "JSXSpreadChild") throw new Error("JSX spread children are not supported");
        this[n423.type](n423, t742);
    }
    this[e904.closingFragment.type](e904.closingFragment, t742);
}
function Ce2(e905, t743) {
    t743.write(e905.name, e905);
}
function ke2(e906, t744) {
    this[e906.object.type](e906.object, t744), t744.write("."), this[e906.property.type](e906.property, t744);
}
function je2(e907, t745) {
    this[e907.namespace.type](e907.namespace, t745), t745.write(":"), this[e907.name.type](e907.name, t745);
}
function Le2(e908, t746) {
    let r435 = -1;
    if (t746.write("<"), this[e908.name.type](e908.name, t746), e908.attributes) for(; ++r435 < e908.attributes.length;)t746.write(" "), this[e908.attributes[r435].type](e908.attributes[r435], t746);
    t746.write(e908.selfClosing ? " />" : ">");
}
function Oe2(e909, t747) {
    t747.write("<>", e909);
}
function Pe3(e910, t748) {
    t748.write("{"), this.SpreadElement(e910, t748), t748.write("}");
}
function Ae2(e911, t749) {
    t749.write(re1(e911.value).replace(/<|{/g, (r436)=>r436 === "<" ? "&lt;" : "&#123;"), e911);
}
function re1(e912) {
    return e912.replace(/&(?=[#a-z])/gi, "&amp;");
}
function ne2() {
    return (e913)=>ne1(e913);
}
function oe1() {
    return (e914)=>{
        a12(e914, "raw", (t, r437, n424)=>{
            if (n424 && typeof r437 == "number") return n424.children.splice(r437, 1), r437;
        });
    };
}
function ie2() {
    return (e915)=>{
        a12(e915, (t750, r438, n425)=>{
            let s283 = n425, c127 = -1, l212 = !0, m104;
            if (s283 && typeof r438 == "number" && t750.type === "paragraph") {
                let f107 = t750.children;
                for(; ++c127 < f107.length;){
                    let d81 = f107[c127];
                    if (d81.type === "mdxJsxTextElement" || d81.type === "mdxTextExpression") m104 = !0;
                    else if (!(d81.type === "text" && /^[\t\r\n ]+$/.test(String(d81.value)))) {
                        l212 = !1;
                        break;
                    }
                }
                if (l212 && m104) {
                    for(c127 = -1; ++c127 < f107.length;){
                        let d82 = f107[c127];
                        d82.type === "mdxJsxTextElement" && (d82.type = "mdxJsxFlowElement"), d82.type === "mdxTextExpression" && (d82.type = "mdxFlowExpression");
                    }
                    return s283.children.splice(r438, 1, ...f107), r438;
                }
            }
            if (t750.type === "mdxJsxFlowElement" || t750.type === "mdxJsxTextElement") {
                let f108 = t750.data || (t750.data = {});
                f108._mdxExplicitJsx = !0;
            }
        });
    };
}
var A10 = [
    "mdxFlowExpression",
    "mdxJsxFlowElement",
    "mdxJsxTextElement",
    "mdxTextExpression",
    "mdxjsEsm"
];
var ae1 = !1;
var pe1 = [
    "filepath",
    "compilers",
    "hastPlugins",
    "mdPlugins",
    "skipExport",
    "wrapExport"
];
function j12(e916 = {}) {
    let { development: t751 = ae1 , jsx: r439 , format: n426 , outputFormat: s284 , providerImportSource: c128 , recmaPlugins: l213 , rehypePlugins: m105 , remarkPlugins: f109 , SourceMapGenerator: d83 , ...E38 } = e916, S60 = -1;
    for(; ++S60 < pe1.length;){
        let i491 = pe1[S60];
        if (i491 in e916) throw new Error("`options." + i491 + "` is no longer supported. Please see <https://mdxjs.com/migrating/v2/> for more information");
    }
    if (n426 === "detect") throw new Error("Incorrect `format: 'detect'`: `createProcessor` can support either `md` or `mdx`; it does not support detecting the format");
    let p155 = G().use(d5);
    return n426 !== "md" && p155.use(i6), p155.use(ie2).use(f109 || []).use(m9, {
        allowDangerousHtml: !0,
        passThrough: A10
    }).use(m105 || []), n426 === "md" && p155.use(oe1), p155.use(ne2).use(W4, {
        ...E38,
        outputFormat: s284
    }).use(ee1, {
        development: t751,
        providerImportSource: c128,
        outputFormat: s284
    }), r439 || p155.use(G6, {
        outputFormat: s284
    }), p155.use(te1, {
        SourceMapGenerator: d83
    }).use(l213 || []), p155;
}
var se1 = z6.map((e917)=>"." + e917);
function R7(e918, t752) {
    let r440 = Ge2(e918) ? e918 : new y2(e918), { format: n427 , ...s285 } = t752 || {};
    return {
        file: r440,
        options: {
            format: n427 === "md" || n427 === "mdx" ? n427 : r440.extname && (s285.mdExtensions || se1).includes(r440.extname) ? "md" : "mdx",
            ...s285
        }
    };
}
function Ge2(e919) {
    return Boolean(e919 && typeof e919 == "object" && "message" in e919 && "messages" in e919);
}
function T10(e920, t753) {
    let { file: r441 , options: n428  } = R7(e920, t753);
    return j12(n428).process(r441);
}
var He2 = Object.getPrototypeOf(L5).constructor;
async function L5(e921, t754) {
    return new He2(String(e921))(t754);
}
function makeHTMLPage({ body , title , head  }) {
    return `<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    ${head}
  </head>
  <body>
    ${body}
  </body>
</html>`;
}
var O6 = Object.create;
var u9 = Object.defineProperty;
var j13 = Object.getOwnPropertyDescriptor;
var v11 = Object.getOwnPropertyNames;
var E8 = Object.getPrototypeOf, $9 = Object.prototype.hasOwnProperty;
var i13 = (r442, e922)=>u9(r442, "name", {
        value: e922,
        configurable: !0
    }), k14 = ((r443)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(r443, {
        get: (e923, o)=>(typeof require != "undefined" ? require : e923)[o]
    }) : r443)(function(r444) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + r444 + '" is not supported');
});
var _7 = (r445, e924)=>()=>(e924 || r445((e924 = {
            exports: {}
        }).exports, e924), e924.exports);
var N8 = (r446, e925, o, t755)=>{
    if (e925 && typeof e925 == "object" || typeof e925 == "function") for (let s286 of v11(e925))!$9.call(r446, s286) && s286 !== o && u9(r446, s286, {
        get: ()=>e925[s286],
        enumerable: !(t755 = j13(e925, s286)) || t755.enumerable
    });
    return r446;
};
var d10 = (r447, e926, o)=>(o = r447 != null ? O6(E8(r447)) : {}, N8(e926 || !r447 || !r447.__esModule ? u9(o, "default", {
        value: r447,
        enumerable: !0
    }) : o, r447));
var c10 = _7((n429)=>{
    "use strict";
    var R24 = Ge, S61 = Symbol.for("react.element"), b62 = Symbol.for("react.fragment"), q34 = Object.prototype.hasOwnProperty, w55 = R24.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, P29 = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
    };
    function m106(r448, e927, o) {
        var t756, s287 = {}, f110 = null, p156 = null;
        o !== void 0 && (f110 = "" + o), e927.key !== void 0 && (f110 = "" + e927.key), e927.ref !== void 0 && (p156 = e927.ref);
        for(t756 in e927)q34.call(e927, t756) && !P29.hasOwnProperty(t756) && (s287[t756] = e927[t756]);
        if (r448 && r448.defaultProps) for(t756 in e927 = r448.defaultProps, e927)s287[t756] === void 0 && (s287[t756] = e927[t756]);
        return {
            $$typeof: S61,
            type: r448,
            key: f110,
            ref: p156,
            props: s287,
            _owner: w55.current
        };
    }
    i13(m106, "q");
    n429.Fragment = b62;
    n429.jsx = m106;
    n429.jsxs = m106;
});
var l12 = _7((L, y64)=>{
    "use strict";
    y64.exports = c10();
});
var a18 = d10(l12()), x18 = d10(l12()), { Fragment: T11 , jsx: g10 , jsxs: C15  } = x18, { default: h14 , ...D12 } = x18, U6 = (a18.default ?? h14) ?? D12;
const mod4 = {
    default: U6,
    Fragment: T11,
    jsx: g10,
    jsxs: C15
};
var P11 = Object.defineProperty;
var s13 = (e928, t757)=>P11(e928, "name", {
        value: t757,
        configurable: !0
    });
var f10 = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof f10 < "u" && f10, h15 = {
    searchParams: "URLSearchParams" in f10,
    iterable: "Symbol" in f10 && "iterator" in Symbol,
    blob: "FileReader" in f10 && "Blob" in f10 && function() {
        try {
            return new Blob, !0;
        } catch  {
            return !1;
        }
    }(),
    formData: "FormData" in f10,
    arrayBuffer: "ArrayBuffer" in f10
};
function O7(e929) {
    return e929 && DataView.prototype.isPrototypeOf(e929);
}
s13(O7, "isDataView");
h15.arrayBuffer && (A11 = [
    "[object Int8Array]",
    "[object Uint8Array]",
    "[object Uint8ClampedArray]",
    "[object Int16Array]",
    "[object Uint16Array]",
    "[object Int32Array]",
    "[object Uint32Array]",
    "[object Float32Array]",
    "[object Float64Array]"
], B13 = ArrayBuffer.isView || function(e930) {
    return e930 && A11.indexOf(Object.prototype.toString.call(e930)) > -1;
});
var A11, B13;
function y11(e931) {
    if (typeof e931 != "string" && (e931 = String(e931)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e931) || e931 === "") throw new TypeError('Invalid character in header field name: "' + e931 + '"');
    return e931.toLowerCase();
}
s13(y11, "normalizeName");
function w11(e932) {
    return typeof e932 != "string" && (e932 = String(e932)), e932;
}
s13(w11, "normalizeValue");
function v12(e933) {
    var t758 = {
        next: function() {
            var r449 = e933.shift();
            return {
                done: r449 === void 0,
                value: r449
            };
        }
    };
    return h15.iterable && (t758[Symbol.iterator] = function() {
        return t758;
    }), t758;
}
s13(v12, "iteratorFor");
function a19(e934) {
    this.map = {}, e934 instanceof a19 ? e934.forEach(function(t759, r450) {
        this.append(r450, t759);
    }, this) : Array.isArray(e934) ? e934.forEach(function(t760) {
        this.append(t760[0], t760[1]);
    }, this) : e934 && Object.getOwnPropertyNames(e934).forEach(function(t761) {
        this.append(t761, e934[t761]);
    }, this);
}
s13(a19, "Headers");
a19.prototype.append = function(e935, t762) {
    e935 = y11(e935), t762 = w11(t762);
    var r451 = this.map[e935];
    this.map[e935] = r451 ? r451 + ", " + t762 : t762;
};
a19.prototype.delete = function(e936) {
    delete this.map[y11(e936)];
};
a19.prototype.get = function(e937) {
    return e937 = y11(e937), this.has(e937) ? this.map[e937] : null;
};
a19.prototype.has = function(e938) {
    return this.map.hasOwnProperty(y11(e938));
};
a19.prototype.set = function(e939, t763) {
    this.map[y11(e939)] = w11(t763);
};
a19.prototype.forEach = function(e940, t764) {
    for(var r452 in this.map)this.map.hasOwnProperty(r452) && e940.call(t764, this.map[r452], r452, this);
};
a19.prototype.keys = function() {
    var e941 = [];
    return this.forEach(function(t, r453) {
        e941.push(r453);
    }), v12(e941);
};
a19.prototype.values = function() {
    var e942 = [];
    return this.forEach(function(t765) {
        e942.push(t765);
    }), v12(e942);
};
a19.prototype.entries = function() {
    var e943 = [];
    return this.forEach(function(t766, r454) {
        e943.push([
            r454,
            t766
        ]);
    }), v12(e943);
};
h15.iterable && (a19.prototype[Symbol.iterator] = a19.prototype.entries);
function m13(e944) {
    if (e944.bodyUsed) return Promise.reject(new TypeError("Already read"));
    e944.bodyUsed = !0;
}
s13(m13, "consumed");
function _8(e945) {
    return new Promise(function(t767, r455) {
        e945.onload = function() {
            t767(e945.result);
        }, e945.onerror = function() {
            r455(e945.error);
        };
    });
}
s13(_8, "fileReaderReady");
function U7(e946) {
    var t768 = new FileReader, r456 = _8(t768);
    return t768.readAsArrayBuffer(e946), r456;
}
s13(U7, "readBlobAsArrayBuffer");
function D13(e947) {
    var t769 = new FileReader, r457 = _8(t769);
    return t769.readAsText(e947), r457;
}
s13(D13, "readBlobAsText");
function R8(e948) {
    for(var t770 = new Uint8Array(e948), r458 = new Array(t770.length), i492 = 0; i492 < t770.length; i492++)r458[i492] = String.fromCharCode(t770[i492]);
    return r458.join("");
}
s13(R8, "readArrayBufferAsText");
function T12(e949) {
    if (e949.slice) return e949.slice(0);
    var t771 = new Uint8Array(e949.byteLength);
    return t771.set(new Uint8Array(e949)), t771.buffer;
}
s13(T12, "bufferClone");
function g11() {
    return this.bodyUsed = !1, this._initBody = function(e950) {
        this.bodyUsed = this.bodyUsed, this._bodyInit = e950, e950 ? typeof e950 == "string" ? this._bodyText = e950 : h15.blob && Blob.prototype.isPrototypeOf(e950) ? this._bodyBlob = e950 : h15.formData && FormData.prototype.isPrototypeOf(e950) ? this._bodyFormData = e950 : h15.searchParams && URLSearchParams.prototype.isPrototypeOf(e950) ? this._bodyText = e950.toString() : h15.arrayBuffer && h15.blob && O7(e950) ? (this._bodyArrayBuffer = T12(e950.buffer), this._bodyInit = new Blob([
            this._bodyArrayBuffer
        ])) : h15.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(e950) || B13(e950)) ? this._bodyArrayBuffer = T12(e950) : this._bodyText = e950 = Object.prototype.toString.call(e950) : this._bodyText = "", this.headers.get("content-type") || (typeof e950 == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : h15.searchParams && URLSearchParams.prototype.isPrototypeOf(e950) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
    }, h15.blob && (this.blob = function() {
        var e951 = m13(this);
        if (e951) return e951;
        if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
        if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
            this._bodyArrayBuffer
        ]));
        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
        return Promise.resolve(new Blob([
            this._bodyText
        ]));
    }, this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
            var e952 = m13(this);
            return e952 || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer));
        } else return this.blob().then(U7);
    }), this.text = function() {
        var e953 = m13(this);
        if (e953) return e953;
        if (this._bodyBlob) return D13(this._bodyBlob);
        if (this._bodyArrayBuffer) return Promise.resolve(R8(this._bodyArrayBuffer));
        if (this._bodyFormData) throw new Error("could not read FormData body as text");
        return Promise.resolve(this._bodyText);
    }, h15.formData && (this.formData = function() {
        return this.text().then(F8);
    }), this.json = function() {
        return this.text().then(JSON.parse);
    }, this;
}
s13(g11, "Body");
var j14 = [
    "DELETE",
    "GET",
    "HEAD",
    "OPTIONS",
    "POST",
    "PUT"
];
function S12(e954) {
    var t772 = e954.toUpperCase();
    return j14.indexOf(t772) > -1 ? t772 : e954;
}
s13(S12, "normalizeMethod");
function d11(e955, t773) {
    if (!(this instanceof d11)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
    t773 = t773 || {};
    var r459 = t773.body;
    if (e955 instanceof d11) {
        if (e955.bodyUsed) throw new TypeError("Already read");
        this.url = e955.url, this.credentials = e955.credentials, t773.headers || (this.headers = new a19(e955.headers)), this.method = e955.method, this.mode = e955.mode, this.signal = e955.signal, !r459 && e955._bodyInit != null && (r459 = e955._bodyInit, e955.bodyUsed = !0);
    } else this.url = String(e955);
    if (this.credentials = t773.credentials || this.credentials || "same-origin", (t773.headers || !this.headers) && (this.headers = new a19(t773.headers)), this.method = S12(t773.method || this.method || "GET"), this.mode = t773.mode || this.mode || null, this.signal = t773.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && r459) throw new TypeError("Body not allowed for GET or HEAD requests");
    if (this._initBody(r459), (this.method === "GET" || this.method === "HEAD") && (t773.cache === "no-store" || t773.cache === "no-cache")) {
        var i493 = /([?&])_=[^&]*/;
        if (i493.test(this.url)) this.url = this.url.replace(i493, "$1_=" + new Date().getTime());
        else {
            var n430 = /\?/;
            this.url += (n430.test(this.url) ? "&" : "?") + "_=" + new Date().getTime();
        }
    }
}
s13(d11, "Request");
d11.prototype.clone = function() {
    return new d11(this, {
        body: this._bodyInit
    });
};
function F8(e956) {
    var t774 = new FormData;
    return e956.trim().split("&").forEach(function(r460) {
        if (r460) {
            var i494 = r460.split("="), n431 = i494.shift().replace(/\+/g, " "), o = i494.join("=").replace(/\+/g, " ");
            t774.append(decodeURIComponent(n431), decodeURIComponent(o));
        }
    }), t774;
}
s13(F8, "decode");
function I15(e957) {
    var t775 = new a19, r461 = e957.replace(/\r?\n[\t ]+/g, " ");
    return r461.split("\r").map(function(i495) {
        return i495.indexOf(`
`) === 0 ? i495.substr(1, i495.length) : i495;
    }).forEach(function(i496) {
        var n432 = i496.split(":"), o = n432.shift().trim();
        if (o) {
            var p157 = n432.join(":").trim();
            t775.append(o, p157);
        }
    }), t775;
}
s13(I15, "parseHeaders");
g11.call(d11.prototype);
function l13(e958, t776) {
    if (!(this instanceof l13)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
    t776 || (t776 = {}), this.type = "default", this.status = t776.status === void 0 ? 200 : t776.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = t776.statusText === void 0 ? "" : "" + t776.statusText, this.headers = new a19(t776.headers), this.url = t776.url || "", this._initBody(e958);
}
s13(l13, "Response");
g11.call(l13.prototype);
l13.prototype.clone = function() {
    return new l13(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new a19(this.headers),
        url: this.url
    });
};
l13.error = function() {
    var e959 = new l13(null, {
        status: 0,
        statusText: ""
    });
    return e959.type = "error", e959;
};
var L6 = [
    301,
    302,
    303,
    307,
    308
];
l13.redirect = function(e960, t777) {
    if (L6.indexOf(t777) === -1) throw new RangeError("Invalid status code");
    return new l13(null, {
        status: t777,
        headers: {
            location: e960
        }
    });
};
var c11 = f10.DOMException;
try {
    new c11;
} catch  {
    c11 = s13(function(t778, r462) {
        this.message = t778, this.name = r462;
        var i497 = Error(t778);
        this.stack = i497.stack;
    }, "DOMException"), c11.prototype = Object.create(Error.prototype), c11.prototype.constructor = c11;
}
function E9(e961, t779) {
    return new Promise(function(r463, i498) {
        var n433 = new d11(e961, t779);
        if (n433.signal && n433.signal.aborted) return i498(new c11("Aborted", "AbortError"));
        var o = new XMLHttpRequest;
        function p158() {
            o.abort();
        }
        s13(p158, "abortXhr"), o.onload = function() {
            var u207 = {
                status: o.status,
                statusText: o.statusText,
                headers: I15(o.getAllResponseHeaders() || "")
            };
            u207.url = "responseURL" in o ? o.responseURL : u207.headers.get("X-Request-URL");
            var b63 = "response" in o ? o.response : o.responseText;
            setTimeout(function() {
                r463(new l13(b63, u207));
            }, 0);
        }, o.onerror = function() {
            setTimeout(function() {
                i498(new TypeError("Network request failed"));
            }, 0);
        }, o.ontimeout = function() {
            setTimeout(function() {
                i498(new TypeError("Network request failed"));
            }, 0);
        }, o.onabort = function() {
            setTimeout(function() {
                i498(new c11("Aborted", "AbortError"));
            }, 0);
        };
        function x92(u208) {
            try {
                return u208 === "" && f10.location.href ? f10.location.href : u208;
            } catch  {
                return u208;
            }
        }
        s13(x92, "fixUrl"), o.open(n433.method, x92(n433.url), !0), n433.credentials === "include" ? o.withCredentials = !0 : n433.credentials === "omit" && (o.withCredentials = !1), "responseType" in o && (h15.blob ? o.responseType = "blob" : h15.arrayBuffer && n433.headers.get("Content-Type") && n433.headers.get("Content-Type").indexOf("application/octet-stream") !== -1 && (o.responseType = "arraybuffer")), t779 && typeof t779.headers == "object" && !(t779.headers instanceof a19) ? Object.getOwnPropertyNames(t779.headers).forEach(function(u209) {
            o.setRequestHeader(u209, w11(t779.headers[u209]));
        }) : n433.headers.forEach(function(u210, b65) {
            o.setRequestHeader(b65, u210);
        }), n433.signal && (n433.signal.addEventListener("abort", p158), o.onreadystatechange = function() {
            o.readyState === 4 && n433.signal.removeEventListener("abort", p158);
        }), o.send(typeof n433._bodyInit > "u" ? null : n433._bodyInit);
    });
}
s13(E9, "fetch");
E9.polyfill = !0;
f10.fetch || (f10.fetch = E9, f10.Headers = a19, f10.Request = d11, f10.Response = l13);
var a20 = Object.create;
var l14 = Object.defineProperty;
var i14 = Object.getOwnPropertyDescriptor;
var p19 = Object.getOwnPropertyNames;
var $10 = Object.getPrototypeOf, c12 = Object.prototype.hasOwnProperty;
((e962)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e962, {
        get: (t780, f111)=>(typeof require != "undefined" ? require : t780)[f111]
    }) : e962)(function(e963) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e963 + '" is not supported');
});
var x19 = (e964, t781)=>()=>(t781 || e964((t781 = {
            exports: {}
        }).exports, t781), t781.exports);
var b13 = (e965, t782, f112, d84)=>{
    if (t782 && typeof t782 == "object" || typeof t782 == "function") for (let r464 of p19(t782))!c12.call(e965, r464) && r464 !== f112 && l14(e965, r464, {
        get: ()=>t782[r464],
        enumerable: !(d84 = i14(t782, r464)) || d84.enumerable
    });
    return e965;
};
var s14 = (e966, t783, f113)=>(f113 = e966 != null ? a20($10(e966)) : {}, b13(t783 || !e966 || !e966.__esModule ? l14(f113, "default", {
        value: e966,
        enumerable: !0
    }) : f113, e966));
var o8 = x19((k, m107)=>{
    m107.exports = self.fetch.bind(self);
});
var u10 = s14(o8()), h16 = s14(o8()), { default: q10 , ...g12 } = h16, v13 = (u10.default ?? q10) ?? g12;
var $11 = Object.create;
var S13 = Object.defineProperty;
var g13 = Object.getOwnPropertyDescriptor;
var z8 = Object.getOwnPropertyNames;
var L7 = Object.getPrototypeOf, Z4 = Object.prototype.hasOwnProperty;
var O8 = (p159, d85)=>S13(p159, "name", {
        value: d85,
        configurable: !0
    });
var D14 = (p160, d86)=>()=>(d86 || p160((d86 = {
            exports: {}
        }).exports, d86), d86.exports);
var F9 = (p161, d87, _20, T29)=>{
    if (d87 && typeof d87 == "object" || typeof d87 == "function") for (let x93 of z8(d87))!Z4.call(p161, x93) && x93 !== _20 && S13(p161, x93, {
        get: ()=>d87[x93],
        enumerable: !(T29 = g13(d87, x93)) || T29.enumerable
    });
    return p161;
};
var j15 = (p162, d88, _21)=>(_21 = p162 != null ? $11(L7(p162)) : {}, F9(d88 || !p162 || !p162.__esModule ? S13(_21, "default", {
        value: p162,
        enumerable: !0
    }) : _21, p162));
var B14 = D14((J, M27)=>{
    var k53 = function() {
        var p163 = String.fromCharCode, d89 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", _22 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$", T30 = {};
        function x94(n434, r465) {
            if (!T30[n434]) {
                T30[n434] = {};
                for(var c129 = 0; c129 < n434.length; c129++)T30[n434][n434.charAt(c129)] = c129;
            }
            return T30[n434][r465];
        }
        O8(x94, "getBaseValue");
        var w56 = {
            compressToBase64: function(n435) {
                if (n435 == null) return "";
                var r466 = w56._compress(n435, 6, function(c130) {
                    return d89.charAt(c130);
                });
                switch(r466.length % 4){
                    default:
                    case 0:
                        return r466;
                    case 1:
                        return r466 + "===";
                    case 2:
                        return r466 + "==";
                    case 3:
                        return r466 + "=";
                }
            },
            decompressFromBase64: function(n436) {
                return n436 == null ? "" : n436 == "" ? null : w56._decompress(n436.length, 32, function(r467) {
                    return x94(d89, n436.charAt(r467));
                });
            },
            compressToUTF16: function(n437) {
                return n437 == null ? "" : w56._compress(n437, 15, function(r468) {
                    return p163(r468 + 32);
                }) + " ";
            },
            decompressFromUTF16: function(n438) {
                return n438 == null ? "" : n438 == "" ? null : w56._decompress(n438.length, 16384, function(r469) {
                    return n438.charCodeAt(r469) - 32;
                });
            },
            compressToUint8Array: function(n439) {
                for(var r470 = w56.compress(n439), c131 = new Uint8Array(r470.length * 2), t784 = 0, s288 = r470.length; t784 < s288; t784++){
                    var a172 = r470.charCodeAt(t784);
                    c131[t784 * 2] = a172 >>> 8, c131[t784 * 2 + 1] = a172 % 256;
                }
                return c131;
            },
            decompressFromUint8Array: function(n440) {
                if (n440 == null) return w56.decompress(n440);
                for(var r471 = new Array(n440.length / 2), c132 = 0, t785 = r471.length; c132 < t785; c132++)r471[c132] = n440[c132 * 2] * 256 + n440[c132 * 2 + 1];
                var s289 = [];
                return r471.forEach(function(a173) {
                    s289.push(p163(a173));
                }), w56.decompress(s289.join(""));
            },
            compressToEncodedURIComponent: function(n441) {
                return n441 == null ? "" : w56._compress(n441, 6, function(r472) {
                    return _22.charAt(r472);
                });
            },
            decompressFromEncodedURIComponent: function(n442) {
                return n442 == null ? "" : n442 == "" ? null : (n442 = n442.replace(/ /g, "+"), w56._decompress(n442.length, 32, function(r473) {
                    return x94(_22, n442.charAt(r473));
                }));
            },
            compress: function(n443) {
                return w56._compress(n443, 16, function(r474) {
                    return p163(r474);
                });
            },
            _compress: function(n444, r475, c133) {
                if (n444 == null) return "";
                var t786, s290, a174 = {}, v50 = {}, A42 = "", y65 = "", u211 = "", h117 = 2, U23 = 3, f114 = 2, l214 = [], o = 0, e967 = 0, m108;
                for(m108 = 0; m108 < n444.length; m108 += 1)if (A42 = n444.charAt(m108), Object.prototype.hasOwnProperty.call(a174, A42) || (a174[A42] = U23++, v50[A42] = !0), y65 = u211 + A42, Object.prototype.hasOwnProperty.call(a174, y65)) u211 = y65;
                else {
                    if (Object.prototype.hasOwnProperty.call(v50, u211)) {
                        if (u211.charCodeAt(0) < 256) {
                            for(t786 = 0; t786 < f114; t786++)o = o << 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++;
                            for(s290 = u211.charCodeAt(0), t786 = 0; t786 < 8; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                        } else {
                            for(s290 = 1, t786 = 0; t786 < f114; t786++)o = o << 1 | s290, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = 0;
                            for(s290 = u211.charCodeAt(0), t786 = 0; t786 < 16; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                        }
                        h117--, h117 == 0 && (h117 = Math.pow(2, f114), f114++), delete v50[u211];
                    } else for(s290 = a174[u211], t786 = 0; t786 < f114; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                    h117--, h117 == 0 && (h117 = Math.pow(2, f114), f114++), a174[y65] = U23++, u211 = String(A42);
                }
                if (u211 !== "") {
                    if (Object.prototype.hasOwnProperty.call(v50, u211)) {
                        if (u211.charCodeAt(0) < 256) {
                            for(t786 = 0; t786 < f114; t786++)o = o << 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++;
                            for(s290 = u211.charCodeAt(0), t786 = 0; t786 < 8; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                        } else {
                            for(s290 = 1, t786 = 0; t786 < f114; t786++)o = o << 1 | s290, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = 0;
                            for(s290 = u211.charCodeAt(0), t786 = 0; t786 < 16; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                        }
                        h117--, h117 == 0 && (h117 = Math.pow(2, f114), f114++), delete v50[u211];
                    } else for(s290 = a174[u211], t786 = 0; t786 < f114; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                    h117--, h117 == 0 && (h117 = Math.pow(2, f114), f114++);
                }
                for(s290 = 2, t786 = 0; t786 < f114; t786++)o = o << 1 | s290 & 1, e967 == r475 - 1 ? (e967 = 0, l214.push(c133(o)), o = 0) : e967++, s290 = s290 >> 1;
                for(;;)if (o = o << 1, e967 == r475 - 1) {
                    l214.push(c133(o));
                    break;
                } else e967++;
                return l214.join("");
            },
            decompress: function(n445) {
                return n445 == null ? "" : n445 == "" ? null : w56._decompress(n445.length, 32768, function(r476) {
                    return n445.charCodeAt(r476);
                });
            },
            _decompress: function(n446, r477, c134) {
                var t787 = [], a175 = 4, v51 = 4, A43 = 3, y66 = "", u212 = [], h118, U24, f115, l215, o, e968, m109, i499 = {
                    val: c134(0),
                    position: r477,
                    index: 1
                };
                for(h118 = 0; h118 < 3; h118 += 1)t787[h118] = h118;
                for(f115 = 0, o = Math.pow(2, 2), e968 = 1; e968 != o;)l215 = i499.val & i499.position, i499.position >>= 1, i499.position == 0 && (i499.position = r477, i499.val = c134(i499.index++)), f115 |= (l215 > 0 ? 1 : 0) * e968, e968 <<= 1;
                switch(f115){
                    case 0:
                        for(f115 = 0, o = Math.pow(2, 8), e968 = 1; e968 != o;)l215 = i499.val & i499.position, i499.position >>= 1, i499.position == 0 && (i499.position = r477, i499.val = c134(i499.index++)), f115 |= (l215 > 0 ? 1 : 0) * e968, e968 <<= 1;
                        m109 = p163(f115);
                        break;
                    case 1:
                        for(f115 = 0, o = Math.pow(2, 16), e968 = 1; e968 != o;)l215 = i499.val & i499.position, i499.position >>= 1, i499.position == 0 && (i499.position = r477, i499.val = c134(i499.index++)), f115 |= (l215 > 0 ? 1 : 0) * e968, e968 <<= 1;
                        m109 = p163(f115);
                        break;
                    case 2:
                        return "";
                }
                for(t787[3] = m109, U24 = m109, u212.push(m109);;){
                    if (i499.index > n446) return "";
                    for(f115 = 0, o = Math.pow(2, A43), e968 = 1; e968 != o;)l215 = i499.val & i499.position, i499.position >>= 1, i499.position == 0 && (i499.position = r477, i499.val = c134(i499.index++)), f115 |= (l215 > 0 ? 1 : 0) * e968, e968 <<= 1;
                    switch(m109 = f115){
                        case 0:
                            for(f115 = 0, o = Math.pow(2, 8), e968 = 1; e968 != o;)l215 = i499.val & i499.position, i499.position >>= 1, i499.position == 0 && (i499.position = r477, i499.val = c134(i499.index++)), f115 |= (l215 > 0 ? 1 : 0) * e968, e968 <<= 1;
                            t787[v51++] = p163(f115), m109 = v51 - 1, a175--;
                            break;
                        case 1:
                            for(f115 = 0, o = Math.pow(2, 16), e968 = 1; e968 != o;)l215 = i499.val & i499.position, i499.position >>= 1, i499.position == 0 && (i499.position = r477, i499.val = c134(i499.index++)), f115 |= (l215 > 0 ? 1 : 0) * e968, e968 <<= 1;
                            t787[v51++] = p163(f115), m109 = v51 - 1, a175--;
                            break;
                        case 2:
                            return u212.join("");
                    }
                    if (a175 == 0 && (a175 = Math.pow(2, A43), A43++), t787[m109]) y66 = t787[m109];
                    else if (m109 === v51) y66 = U24 + U24.charAt(0);
                    else return null;
                    u212.push(y66), t787[v51++] = U24 + y66.charAt(0), a175--, U24 = y66, a175 == 0 && (a175 = Math.pow(2, A43), A43++);
                }
            }
        };
        return w56;
    }();
    typeof define == "function" && define.amd ? define(function() {
        return k53;
    }) : typeof M27 < "u" && M27 != null && (M27.exports = k53);
});
var E10 = j15(B14()), R9 = j15(B14()), { compressToBase64: K4 , decompressFromBase64: Q2 , compressToUTF16: W5 , decompressFromUTF16: X4 , compressToUint8Array: Y2 , decompressFromUint8Array: b14 , compressToEncodedURIComponent: I16 , decompressFromEncodedURIComponent: C16 , compress: N9 , _compress: P12 , decompress: V6 , _decompress: oo  } = R9, { default: q11 , ...G7 } = R9, eo = (E10.default ?? q11) ?? G7;
var l15 = Object.create;
var s15 = Object.defineProperty;
var p20 = Object.getOwnPropertyDescriptor;
var d12 = Object.getOwnPropertyNames;
var g14 = Object.getPrototypeOf, P13 = Object.prototype.hasOwnProperty;
var u11 = (e969, r478)=>s15(e969, "name", {
        value: r478,
        configurable: !0
    }), _9 = ((e970)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e970, {
        get: (r479, t788)=>(typeof require != "undefined" ? require : r479)[t788]
    }) : e970)(function(e971) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e971 + '" is not supported');
});
var $12 = (e972, r480)=>()=>(r480 || e972((r480 = {
            exports: {}
        }).exports, r480), r480.exports);
var v14 = (e973, r481, t789, i500)=>{
    if (r481 && typeof r481 == "object" || typeof r481 == "function") for (let a176 of d12(r481))!P13.call(e973, a176) && a176 !== t789 && s15(e973, a176, {
        get: ()=>r481[a176],
        enumerable: !(i500 = p20(r481, a176)) || i500.enumerable
    });
    return e973;
};
var m14 = (e974, r482, t790)=>(t790 = e974 != null ? l15(g14(e974)) : {}, v14(r482 || !e974 || !e974.__esModule ? s15(t790, "default", {
        value: e974,
        enumerable: !0
    }) : t790, e974));
var c13 = $12((o)=>{
    "use strict";
    Object.defineProperty(o, "__esModule", {
        value: !0
    });
    o.getParameters = void 0;
    var x95 = eo;
    function y67(e975) {
        return x95.compressToBase64(e975).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
    }
    u11(y67, "compress");
    function M28(e976) {
        return y67(JSON.stringify(e976));
    }
    u11(M28, "getParameters");
    o.getParameters = M28;
});
var n9 = m14(c13()), f11 = m14(c13()), { __esModule: q12 , getParameters: B15  } = f11, { default: O9 , ...S14 } = f11, J6 = (n9.default ?? O9) ?? S14;
var l16 = Object.create;
var m15 = Object.defineProperty;
var _10 = Object.getOwnPropertyDescriptor;
var g15 = Object.getOwnPropertyNames;
var p21 = Object.getPrototypeOf, P14 = Object.prototype.hasOwnProperty;
((e977)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e977, {
        get: (t791, r483)=>(typeof require != "undefined" ? require : t791)[r483]
    }) : e977)(function(e978) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e978 + '" is not supported');
});
var c14 = (e979, t792)=>()=>(t792 || e979((t792 = {
            exports: {}
        }).exports, t792), t792.exports);
var n10 = (e980, t793, r484, d90)=>{
    if (t793 && typeof t793 == "object" || typeof t793 == "function") for (let a177 of g15(t793))!P14.call(e980, a177) && a177 !== r484 && m15(e980, a177, {
        get: ()=>t793[a177],
        enumerable: !(d90 = _10(t793, a177)) || d90.enumerable
    });
    return e980;
};
var u12 = (e981, t794, r485)=>(r485 = e981 != null ? l16(p21(e981)) : {}, n10(t794 || !e981 || !e981.__esModule ? m15(r485, "default", {
        value: e981,
        enumerable: !0
    }) : r485, e981));
var s16 = c14((o)=>{
    "use strict";
    o.__esModule = !0;
    o.getParameters = void 0;
    var v52 = J6;
    o.getParameters = v52.getParameters;
});
var f12 = u12(s16()), i15 = u12(s16()), { __esModule: h17 , getParameters: j16  } = i15, { default: x20 , ...M6 } = i15, k15 = (f12.default ?? x20) ?? M6;
var y12 = Object.create;
var f13 = Object.defineProperty;
var m16 = Object.getOwnPropertyDescriptor;
var a21 = Object.getOwnPropertyNames;
var l17 = Object.getPrototypeOf, A12 = Object.prototype.hasOwnProperty;
var o9 = (r486, t795)=>f13(r486, "name", {
        value: t795,
        configurable: !0
    });
var $13 = (r487, t796)=>()=>(t796 || r487((t796 = {
            exports: {}
        }).exports, t796), t796.exports);
var g16 = (r488, t797, e982, i501)=>{
    if (t797 && typeof t797 == "object" || typeof t797 == "function") for (let n447 of a21(t797))!A12.call(r488, n447) && n447 !== e982 && f13(r488, n447, {
        get: ()=>t797[n447],
        enumerable: !(i501 = m16(t797, n447)) || i501.enumerable
    });
    return r488;
};
var s17 = (r489, t798, e983)=>(e983 = r489 != null ? y12(l17(r489)) : {}, g16(t798 || !r489 || !r489.__esModule ? f13(e983, "default", {
        value: r489,
        enumerable: !0
    }) : e983, r489));
var d13 = $13((O, c135)=>{
    "use strict";
    c135.exports = b66;
    function b66(r490, t799, e984) {
        var i502;
        return e984 == null && (typeof t799 != "object" || Array.isArray(t799)) && (e984 = t799, t799 = {}), i502 = Object.assign({
            type: String(r490)
        }, t799), Array.isArray(e984) ? i502.children = e984 : e984 != null && (i502.value = String(e984)), i502;
    }
    o9(b66, "u");
});
var u13 = s17(d13()), j17 = s17(d13()), { default: x21 , ...S15 } = j17, k16 = (u13.default ?? x21) ?? S15;
var o10 = Object.create;
var n11 = Object.defineProperty;
var g17 = Object.getOwnPropertyDescriptor;
var p22 = Object.getOwnPropertyNames;
var $14 = Object.getPrototypeOf, v15 = Object.prototype.hasOwnProperty;
var u14 = (t800, r491)=>n11(t800, "name", {
        value: r491,
        configurable: !0
    });
var x22 = (t801, r492)=>()=>(r492 || t801((r492 = {
            exports: {}
        }).exports, r492), r492.exports);
var d14 = (t802, r493, l216, i503)=>{
    if (r493 && typeof r493 == "object" || typeof r493 == "function") for (let e985 of p22(r493))!v15.call(t802, e985) && e985 !== l216 && n11(t802, e985, {
        get: ()=>r493[e985],
        enumerable: !(i503 = g17(r493, e985)) || i503.enumerable
    });
    return t802;
};
var f14 = (t803, r494, l217)=>(l217 = t803 != null ? o10($14(t803)) : {}, d14(r494 || !t803 || !t803.__esModule ? n11(l217, "default", {
        value: t803,
        enumerable: !0
    }) : l217, t803));
var a22 = x22((k, s291)=>{
    "use strict";
    s291.exports = h119;
    function h119(t804) {
        return t804 && (t804.value || t804.alt || t804.title || "children" in t804 && c136(t804.children) || "length" in t804 && c136(t804)) || "";
    }
    u14(h119, "toString");
    function c136(t805) {
        for(var r495 = [], l218 = t805.length, i504 = -1; ++i504 < l218;)r495[i504] = h119(t805[i504]);
        return r495.join("");
    }
    u14(c136, "all");
});
var m17 = f14(a22()), j18 = f14(a22()), { default: w12 , ...S16 } = j18, q13 = (m17.default ?? w12) ?? S16;
var d15 = Object.create;
var i16 = Object.defineProperty;
var g18 = Object.getOwnPropertyDescriptor;
var m18 = Object.getOwnPropertyNames;
var x23 = Object.getPrototypeOf, b15 = Object.prototype.hasOwnProperty;
var o11 = (r496, n448)=>i16(r496, "name", {
        value: n448,
        configurable: !0
    });
var l18 = (r497, n449)=>()=>(n449 || r497((n449 = {
            exports: {}
        }).exports, n449), n449.exports);
var k17 = (r498, n450, e986, t806)=>{
    if (n450 && typeof n450 == "object" || typeof n450 == "function") for (let u213 of m18(n450))!b15.call(r498, u213) && u213 !== e986 && i16(r498, u213, {
        get: ()=>n450[u213],
        enumerable: !(t806 = g18(n450, u213)) || t806.enumerable
    });
    return r498;
};
var a23 = (r499, n451, e987)=>(e987 = r499 != null ? d15(x23(r499)) : {}, k17(n451 || !r499 || !r499.__esModule ? i16(e987, "default", {
        value: r499,
        enumerable: !0
    }) : e987, r499));
var h18 = l18((C, y68)=>{
    "use strict";
    y68.exports = p164;
    function p164(r500) {
        if (r500 == null) return B33;
        if (typeof r500 == "string") return j50(r500);
        if (typeof r500 == "object") return "length" in r500 ? F34(r500) : $36(r500);
        if (typeof r500 == "function") return r500;
        throw new Error("Expected function, string, or object as test");
    }
    o11(p164, "convert");
    function $36(r501) {
        return n452;
        function n452(e988) {
            var t807;
            for(t807 in r501)if (e988[t807] !== r501[t807]) return !1;
            return !0;
        }
    }
    o11($36, "allFactory");
    function F34(r502) {
        for(var n453 = [], e989 = -1; ++e989 < r502.length;)n453[e989] = p164(r502[e989]);
        return t808;
        function t808() {
            for(var u214 = -1; ++u214 < n453.length;)if (n453[u214].apply(this, arguments)) return !0;
            return !1;
        }
    }
    o11(F34, "anyFactory");
    function j50(r503) {
        return n454;
        function n454(e990) {
            return Boolean(e990 && e990.type === r503);
        }
    }
    o11(j50, "typeFactory");
    function B33() {
        return !0;
    }
    o11(B33, "ok");
});
var c15 = l18((D, v53)=>{
    "use strict";
    var s292 = h18();
    v53.exports = f116;
    f116.convert = s292;
    function f116(r504, n455, e991, t809, u215) {
        var E39 = s292(n455);
        if (e991 != null && (typeof e991 != "number" || e991 < 0 || e991 === 1 / 0)) throw new Error("Expected positive finite index");
        if (t809 != null && (!f116(t809) || !t809.children)) throw new Error("Expected parent node");
        if (t809 == null != (e991 == null)) throw new Error("Expected both parent and index");
        return r504 && r504.type && typeof r504.type == "string" ? Boolean(E39.call(u215, r504, e991, t809)) : !1;
    }
    o11(f116, "is");
});
var w13 = a23(c15()), q14 = a23(c15()), { default: I17 , ...z9 } = q14, G8 = (w13.default ?? I17) ?? z9;
var y13 = Object.create;
var f15 = Object.defineProperty;
var h19 = Object.getOwnPropertyDescriptor;
var d16 = Object.getOwnPropertyNames;
var g19 = Object.getPrototypeOf, m19 = Object.prototype.hasOwnProperty;
var t10 = (r505, n456)=>f15(r505, "name", {
        value: n456,
        configurable: !0
    });
var v16 = (r506, n457)=>()=>(n457 || r506((n457 = {
            exports: {}
        }).exports, n457), n457.exports);
var x24 = (r507, n458, e992, o)=>{
    if (n458 && typeof n458 == "object" || typeof n458 == "function") for (let u216 of d16(n458))!m19.call(r507, u216) && u216 !== e992 && f15(r507, u216, {
        get: ()=>n458[u216],
        enumerable: !(o = h19(n458, u216)) || o.enumerable
    });
    return r507;
};
var a24 = (r508, n459, e993)=>(e993 = r508 != null ? y13(g19(r508)) : {}, x24(n459 || !r508 || !r508.__esModule ? f15(e993, "default", {
        value: r508,
        enumerable: !0
    }) : e993, r508));
var i17 = v16((B, l219)=>{
    "use strict";
    l219.exports = c137;
    function c137(r509) {
        if (r509 == null) return k54;
        if (typeof r509 == "string") return $37(r509);
        if (typeof r509 == "object") return "length" in r509 ? w57(r509) : s293(r509);
        if (typeof r509 == "function") return r509;
        throw new Error("Expected function, string, or object as test");
    }
    t10(c137, "convert");
    function s293(r510) {
        return n460;
        function n460(e994) {
            var o;
            for(o in r510)if (e994[o] !== r510[o]) return !1;
            return !0;
        }
    }
    t10(s293, "allFactory");
    function w57(r511) {
        for(var n461 = [], e995 = -1; ++e995 < r511.length;)n461[e995] = c137(r511[e995]);
        return o;
        function o() {
            for(var u217 = -1; ++u217 < n461.length;)if (n461[u217].apply(this, arguments)) return !0;
            return !1;
        }
    }
    t10(w57, "anyFactory");
    function $37(r512) {
        return n462;
        function n462(e996) {
            return Boolean(e996 && e996.type === r512);
        }
    }
    t10($37, "typeFactory");
    function k54() {
        return !0;
    }
    t10(k54, "ok");
});
var p23 = a24(i17()), F10 = a24(i17()), { default: b16 , ...j19 } = F10, q15 = (p23.default ?? b16) ?? j19;
var K5 = Object.create;
var s18 = Object.defineProperty;
var O10 = Object.getOwnPropertyDescriptor;
var S17 = Object.getOwnPropertyNames;
var U8 = Object.getPrototypeOf, X5 = Object.prototype.hasOwnProperty;
var u15 = (t810, r513)=>s18(t810, "name", {
        value: r513,
        configurable: !0
    }), k18 = ((t811)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(t811, {
        get: (r514, n463)=>(typeof require != "undefined" ? require : r514)[n463]
    }) : t811)(function(t812) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + t812 + '" is not supported');
});
var I18 = (t813, r515)=>()=>(r515 || t813((r515 = {
            exports: {}
        }).exports, r515), r515.exports);
var w14 = (t814, r516, n464, a178)=>{
    if (r516 && typeof r516 == "object" || typeof r516 == "function") for (let f117 of S17(r516))!X5.call(t814, f117) && f117 !== n464 && s18(t814, f117, {
        get: ()=>r516[f117],
        enumerable: !(a178 = O10(r516, f117)) || a178.enumerable
    });
    return t814;
};
var b17 = (t815, r517, n465)=>(n465 = t815 != null ? K5(U8(t815)) : {}, w14(r517 || !t815 || !t815.__esModule ? s18(n465, "default", {
        value: t815,
        enumerable: !0
    }) : n465, t815));
var T13 = I18((J, E40)=>{
    E40.exports = R25;
    function R25(t816) {
        return t816;
    }
    u15(R25, "identity");
});
var h20 = I18((L, P30)=>{
    "use strict";
    P30.exports = y69;
    var z27 = q15, A44 = T13(), $38 = !0, x96 = "skip", g83 = !1;
    y69.CONTINUE = $38;
    y69.SKIP = x96;
    y69.EXIT = g83;
    function y69(t817, r518, n466, a179) {
        var f118, N24;
        typeof r518 == "function" && typeof n466 != "function" && (a179 = n466, n466 = r518, r518 = null), N24 = z27(r518), f118 = a179 ? -1 : 1, d91(t817, null, [])();
        function d91(e997, q35, p165) {
            var l220 = typeof e997 == "object" && e997 !== null ? e997 : {}, m110;
            return typeof l220.type == "string" && (m110 = typeof l220.tagName == "string" ? l220.tagName : typeof l220.name == "string" ? l220.name : void 0, v54.displayName = "node (" + A44(l220.type + (m110 ? "<" + m110 + ">" : "")) + ")"), v54;
            function v54() {
                var C = p165.concat(e997), o = [], c138, i505;
                if ((!r518 || N24(e997, q35, p165[p165.length - 1] || null)) && (o = B34(n466(e997, p165)), o[0] === g83)) return o;
                if (e997.children && o[0] !== x96) for(i505 = (a179 ? e997.children.length : -1) + f118; i505 > -1 && i505 < e997.children.length;){
                    if (c138 = d91(e997.children[i505], i505, C)(), c138[0] === g83) return c138;
                    i505 = typeof c138[1] == "number" ? c138[1] : i505 + f118;
                }
                return o;
            }
            u15(v54, "visit");
        }
        u15(d91, "factory");
    }
    u15(y69, "visitParents");
    function B34(t818) {
        return t818 !== null && typeof t818 == "object" && "length" in t818 ? t818 : typeof t818 == "number" ? [
            $38,
            t818
        ] : [
            t818
        ];
    }
    u15(B34, "toResult");
});
var j20 = b17(h20()), D15 = b17(h20()), { default: F11 , ...G9 } = D15, M7 = (j20.default ?? F11) ?? G9;
var m20 = Object.create;
var l19 = Object.defineProperty;
var v17 = Object.getOwnPropertyDescriptor;
var x25 = Object.getOwnPropertyNames;
var O11 = Object.getPrototypeOf, P15 = Object.prototype.hasOwnProperty;
var i18 = (r519, n467)=>l19(r519, "name", {
        value: n467,
        configurable: !0
    }), $15 = ((r520)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(r520, {
        get: (n468, f119)=>(typeof require != "undefined" ? require : n468)[f119]
    }) : r520)(function(r521) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + r521 + '" is not supported');
});
var C17 = (r522, n469)=>()=>(n469 || r522((n469 = {
            exports: {}
        }).exports, n469), n469.exports);
var K6 = (r523, n470, f120, t819)=>{
    if (n470 && typeof n470 == "object" || typeof n470 == "function") for (let e998 of x25(n470))!P15.call(r523, e998) && e998 !== f120 && l19(r523, e998, {
        get: ()=>n470[e998],
        enumerable: !(t819 = v17(n470, e998)) || t819.enumerable
    });
    return r523;
};
var p24 = (r524, n471, f121)=>(f121 = r524 != null ? m20(O11(r524)) : {}, K6(n471 || !r524 || !r524.__esModule ? l19(f121, "default", {
        value: r524,
        enumerable: !0
    }) : f121, r524));
var I19 = C17((s, E41)=>{
    "use strict";
    E41.exports = a180;
    var u218 = M7, S62 = u218.CONTINUE, U25 = u218.SKIP, X21 = u218.EXIT;
    a180.CONTINUE = S62;
    a180.SKIP = U25;
    a180.EXIT = X21;
    function a180(r525, n472, f122, t820) {
        typeof n472 == "function" && typeof f122 != "function" && (t820 = f122, f122 = n472, n472 = null), u218(r525, n472, e999, t820);
        function e999(d92, c139) {
            var o = c139[c139.length - 1], T31 = o ? o.children.indexOf(d92) : null;
            return f122(d92, T31, o);
        }
        i18(e999, "overload");
    }
    i18(a180, "visit");
});
var N10 = p24(I19()), h21 = p24(I19()), { default: y14 , ...g20 } = h21, b18 = (N10.default ?? y14) ?? g20;
var se2 = Object.create;
var V7 = Object.defineProperty;
var ue2 = Object.getOwnPropertyDescriptor;
var ce1 = Object.getOwnPropertyNames;
var fe3 = Object.getPrototypeOf, le1 = Object.prototype.hasOwnProperty;
var l20 = (e1000, t821)=>V7(e1000, "name", {
        value: t821,
        configurable: !0
    }), B16 = ((e1001)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e1001, {
        get: (t822, n473)=>(typeof require != "undefined" ? require : t822)[n473]
    }) : e1001)(function(e1002) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e1002 + '" is not supported');
});
var de2 = (e1003, t823)=>()=>(t823 || e1003((t823 = {
            exports: {}
        }).exports, t823), t823.exports);
var he2 = (e1004, t824, n474, r526)=>{
    if (t824 && typeof t824 == "object" || typeof t824 == "function") for (let y70 of ce1(t824))!le1.call(e1004, y70) && y70 !== n474 && V7(e1004, y70, {
        get: ()=>t824[y70],
        enumerable: !(r526 = ue2(t824, y70)) || r526.enumerable
    });
    return e1004;
};
var Z5 = (e1005, t825, n475)=>(n475 = e1005 != null ? se2(fe3(e1005)) : {}, he2(t825 || !e1005 || !e1005.__esModule ? V7(n475, "default", {
        value: e1005,
        enumerable: !0
    }) : n475, e1005));
var X6 = de2((Se, ie8)=>{
    "use strict";
    function z28(e1006) {
        return e1006 && typeof e1006 == "object" && "default" in e1006 ? e1006.default : e1006;
    }
    l20(z28, "e");
    var me6 = z28(b18), ee8 = z28(G8), ve5 = z28(q13), H14 = z28(k16), pe5 = z28(k15), te8 = z28(v13);
    function M29() {
        return (M29 = Object.assign || function(e1007) {
            for(var t826 = 1; t826 < arguments.length; t826++){
                var n476 = arguments[t826];
                for(var r527 in n476)Object.prototype.hasOwnProperty.call(n476, r527) && (e1007[r527] = n476[r527]);
            }
            return e1007;
        }).apply(this, arguments);
    }
    l20(M29, "s");
    var ne10 = typeof Symbol < "u" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
    function v55(e1008, t827, n477) {
        if (!e1008.s) {
            if (n477 instanceof _23) {
                if (!n477.s) return void (n477.o = v55.bind(null, e1008, t827));
                1 & t827 && (t827 = n477.s), n477 = n477.v;
            }
            if (n477 && n477.then) return void n477.then(v55.bind(null, e1008, t827), v55.bind(null, e1008, 2));
            e1008.s = t827, e1008.v = n477;
            var r528 = e1008.o;
            r528 && r528(e1008);
        }
    }
    l20(v55, "c");
    var _23 = function() {
        function e1009() {}
        return l20(e1009, "e"), e1009.prototype.then = function(t828, n478) {
            var r529 = new e1009, y71 = this.s;
            if (y71) {
                var O34 = 1 & y71 ? t828 : n478;
                if (O34) {
                    try {
                        v55(r529, 1, O34(this.v));
                    } catch (E42) {
                        v55(r529, 2, E42);
                    }
                    return r529;
                }
                return this;
            }
            return this.o = function(E43) {
                try {
                    var S63 = E43.v;
                    1 & E43.s ? v55(r529, 1, t828 ? t828(S63) : S63) : n478 ? v55(r529, 1, n478(S63)) : v55(r529, 2, S63);
                } catch (R26) {
                    v55(r529, 2, R26);
                }
            }, r529;
        }, e1009;
    }();
    function re9(e1010) {
        return e1010 instanceof _23 && 1 & e1010.s;
    }
    l20(re9, "l");
    var oe8, ye6 = pe5.getParameters, be5 = l20(function(e1011, t829) {
        function n479(E44) {
            return E44.trim().split(";").map(function(S64) {
                return S64.trim();
            }).filter(Boolean).map(function(S65) {
                return S65.split(":").map(function(R27) {
                    return R27.trim();
                });
            });
        }
        l20(n479, "r");
        var r530 = n479(e1011), y72 = n479(t829), O35 = Object.fromEntries(r530.concat(y72));
        return Object.entries(O35).map(function(E45) {
            return E45.join(":") + ";";
        }).join(" ");
    }, "v");
    oe8 = window.URLSearchParams;
    var we5 = {
        react: {
            extends: "new"
        },
        "react-component": {
            extends: "new",
            entry: "src/App.js"
        }
    }, ge7 = [
        "overrideEntry",
        "entry",
        "style"
    ];
    ie8.exports = function(e1012) {
        e1012 === void 0 && (e1012 = {});
        var t830 = new Map, n480 = e1012.mode || "meta", r531 = M29({}, we5, {}, e1012.customTemplates || {}), y73 = e1012.autoDeploy || !1, O36 = n480 === "iframe" ? {
            fontsize: "14px",
            hidenavigation: 1,
            theme: "dark"
        } : void 0;
        return e1012.query !== void 0 ? O36 = e1012.query : e1012.iframeQuery !== void 0 && (console.warn("options.iframeQuery is now deprecated and will be removed in the upcoming version, please use options.query instead."), O36 = e1012.iframeQuery), function(E46, S) {
            try {
                var R28, Y12 = [];
                return me6(E46, function(d93, T32, C) {
                    !R28 && ee8(d93, [
                        "heading",
                        {
                            depth: 1
                        }
                    ]) ? R28 = ve5(d93) : ee8(d93, "code") && Y12.push([
                        d93,
                        T32,
                        C
                    ]);
                }), Promise.resolve(function(d94, T33, C) {
                    if (typeof d94[ne10] == "function") {
                        var h120, m111, D35, N25 = d94[ne10]();
                        if (l20(function o(s294) {
                            try {
                                for(; !(h120 = N25.next()).done;)if ((s294 = T33(h120.value)) && s294.then) {
                                    if (!re9(s294)) return void s294.then(o, D35 || (D35 = v55.bind(null, m111 = new _23, 2)));
                                    s294 = s294.v;
                                }
                                m111 ? v55(m111, 1, s294) : m111 = s294;
                            } catch (P31) {
                                v55(m111 || (m111 = new _23), 2, P31);
                            }
                        }, "e")(), N25.return) {
                            var Q13 = l20(function(o) {
                                try {
                                    h120.done || N25.return();
                                } catch  {}
                                return o;
                            }, "s");
                            if (m111 && m111.then) return m111.then(Q13, function(o) {
                                throw Q13(o);
                            });
                            Q13();
                        }
                        return m111;
                    }
                    if (!("length" in d94)) throw new TypeError("Object is not iterable");
                    for(var F35 = [], a181 = 0; a181 < d94.length; a181++)F35.push(d94[a181]);
                    return function(o, s295, P) {
                        var i506, c140, j51 = -1;
                        return l20(function G18(f123) {
                            try {
                                for(; ++j51 < o.length;)if ((f123 = s295(j51)) && f123.then) {
                                    if (!re9(f123)) return void f123.then(G18, c140 || (c140 = v55.bind(null, i506 = new _23, 2)));
                                    f123 = f123.v;
                                }
                                i506 ? v55(i506, 1, f123) : i506 = f123;
                            } catch (W17) {
                                v55(i506 || (i506 = new _23), 2, W17);
                            }
                        }, "r")(), i506;
                    }(F35, function(o) {
                        return T33(F35[o]);
                    });
                }(Y12, function(d95) {
                    var T34, C, h121 = d95[0], m112 = d95[2], D36 = (T34 = h121.meta || "", C = {}, T34.split(" ").forEach(function(a182) {
                        var o = a182.indexOf("=");
                        if (o > 0) {
                            var s296 = a182.slice(0, o), P32 = a182.slice(o + 1);
                            C[s296] = P32;
                        }
                    }), C).codesandbox;
                    if (D36) {
                        var N26 = D36.split("?"), Q14 = N26[0], F36 = N26[1];
                        return Promise.resolve(function(a183, o, s297, P) {
                            try {
                                return a183.has(o) || a183.set(o, l20(function i507(c141, j52, G) {
                                    try {
                                        var f124 = l20(function(U26) {
                                            var g84;
                                            if (W18) return U26;
                                            var p166 = function() {
                                                if (c141.startsWith("file:")) throw new Error('"file:" template is not supported in browser environment!');
                                                var q36 = l20(function(b) {
                                                    var x97 = {};
                                                    (g84.directories || []).forEach(function(u219) {
                                                        x97[u219.shortid] = u219;
                                                    }), (g84.modules || []).forEach(function(u220) {
                                                        x97[u220.shortid] = u220;
                                                    });
                                                    var w58 = {};
                                                    (g84.modules || []).forEach(function(u221) {
                                                        var L23 = l20(function J17(A45, I45) {
                                                            var K17 = A45[I45];
                                                            return K17 ? [
                                                                J17(A45, K17.directory_shortid),
                                                                K17.title
                                                            ].filter(Boolean).join("/") : null;
                                                        }, "e")(x97, u221.shortid);
                                                        w58[L23] = {
                                                            content: u221.code
                                                        };
                                                    }), g84.files = w58;
                                                }, "e"), $39 = function(b, x98) {
                                                    try {
                                                        var w = Promise.resolve(te8("https://codesandbox.io/api/v1/sandboxes/" + c141)).then(function(u222) {
                                                            return Promise.resolve(u222.json()).then(function(L24) {
                                                                g84 = (u222 = L24).data;
                                                            });
                                                        });
                                                    } catch (u223) {
                                                        return x98(u223);
                                                    }
                                                    return w && w.then ? w.then(void 0, x98) : w;
                                                }(0, function(b67) {
                                                    throw console.error("Failed to get the sandbox template: " + c141), b67;
                                                });
                                                return $39 && $39.then ? $39.then(q36) : q36();
                                            }();
                                            return p166 && p166.then ? p166.then(function(q) {
                                                return g84;
                                            }) : g84;
                                        }, "i"), W18 = !1, k55 = function() {
                                            if (j52[c141]) return Promise.resolve(i507(j52[c141].extends, j52)).then(function(U27) {
                                                var g85 = function(p167, q37) {
                                                    return M29({}, p167, {}, q37, {
                                                        files: M29({}, p167.files || {}, {}, q37.files || {})
                                                    });
                                                }(U27, j52[c141]);
                                                return W18 = !0, g85;
                                            });
                                        }();
                                        return Promise.resolve(k55 && k55.then ? k55.then(f124) : f124(k55));
                                    } catch (U28) {
                                        return Promise.reject(U28);
                                    }
                                }, "e")(o, s297)), Promise.resolve(a183.get(o));
                            } catch (i508) {
                                return Promise.reject(i508);
                            }
                        }(t830, Q14, r531)).then(function(a184) {
                            var o;
                            function s298() {
                                switch(n480){
                                    case "button":
                                        var b68 = H14("paragraph", [
                                            H14("link", {
                                                url: p168
                                            }, [
                                                H14("image", {
                                                    url: "https://codesandbox.io/static/img/play-codesandbox.svg",
                                                    alt: "Edit on CodeSandbox"
                                                })
                                            ])
                                        ]), x99 = m112.children.indexOf(h121);
                                        return void m112.children.splice(x99 + 1, 0, b68);
                                    case "iframe":
                                        var w = H14("html", {
                                            value: `<iframe
  src="` + (y73 ? p168.replace("/s/", "/embed/") : p168 + "&embed=1") + `"
  style="` + be5("width:100%; height:500px; border:0; border-radius:4px; overflow:hidden;", G19) + `"
  title="` + (a184.title || "") + `"
  allow="geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"
  sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"
></iframe>`
                                        }), u224 = m112.children.indexOf(h121);
                                        return void m112.children.splice(u224, 1, w);
                                    case "meta":
                                    default:
                                        return h121.data = h121.data || {}, h121.data.hProperties = h121.data.hProperties || {}, h121.data.codesandboxUrl = p168, void (h121.data.hProperties.dataCodesandboxUrl = p168);
                                }
                            }
                            l20(s298, "r"), a184.title = R28 || a184.title;
                            var P33, i509 = function(b69) {
                                var x100 = new URLSearchParams;
                                new URLSearchParams(b69).forEach(function(J18, A46) {
                                    x100.set(A46, J18);
                                });
                                for(var w = arguments.length, u225 = new Array(w > 1 ? w - 1 : 0), L25 = 1; L25 < w; L25++)u225[L25 - 1] = arguments[L25];
                                return u225.forEach(function(J19) {
                                    new URLSearchParams(J19).forEach(function(A47, I46) {
                                        x100.set(I46, A47);
                                    });
                                }), x100;
                            }(O36, a184.query, F36), c142 = i509.has("entry") ? (P33 = i509.get("entry")).startsWith("./") ? P33.slice(2) : P33.startsWith("/") ? P33.slice(1) : P33 : a184.entry;
                            i509.has("module") || i509.set("module", c142.startsWith("/") ? c142 : "/" + c142);
                            var j53 = i509.get("overrideEntry"), G19 = i509.get("style") || "";
                            if (ge7.forEach(function(b70) {
                                i509.delete(b70);
                            }), !a184.files[c142]) throw new Error('Entry "' + c142 + '" is not present in template "' + Q14 + '".');
                            var f125 = a184.files[c142].content;
                            if (j53) {
                                if (j53 !== "false") {
                                    var W19 = j53.split("-"), k56 = W19[0], U29 = W19[1], g86 = f125.split(`
`);
                                    f125 = [].concat(g86.slice(0, Number(k56) - 1), [
                                        h121.value
                                    ], U29 === "" ? [] : g86.slice(Number(U29))).join(`
`);
                                }
                            } else f125 = h121.value;
                            var p168, q38 = ye6({
                                files: M29({}, a184.files, (o = {}, o[c142] = {
                                    content: f125
                                }, o))
                            }), $40 = function() {
                                if (y73) return Promise.resolve(te8("https://codesandbox.io/api/v1/sandboxes/define", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                    body: JSON.stringify({
                                        parameters: q38,
                                        json: 1
                                    })
                                }).then(function(b71) {
                                    return b71.json();
                                })).then(function(b72) {
                                    p168 = "https://codesandbox.io/s/" + b72.sandbox_id + "?" + i509.toString();
                                });
                                p168 = "https://codesandbox.io/api/v1/sandboxes/define?" + new oe8({
                                    parameters: q38,
                                    query: i509
                                }).toString();
                            }();
                            return $40 && $40.then ? $40.then(s298) : s298();
                        });
                    }
                }));
            } catch (d96) {
                return Promise.reject(d96);
            }
        };
    };
});
var ae2 = Z5(X6()), xe2 = Z5(X6()), { default: Pe4 , ...je3 } = xe2, qe2 = (ae2.default ?? Pe4) ?? je3;
var y15 = Object.create;
var f16 = Object.defineProperty;
var h22 = Object.getOwnPropertyDescriptor;
var d17 = Object.getOwnPropertyNames;
var g21 = Object.getPrototypeOf, m21 = Object.prototype.hasOwnProperty;
var t11 = (r532, n481)=>f16(r532, "name", {
        value: n481,
        configurable: !0
    });
var v18 = (r533, n482)=>()=>(n482 || r533((n482 = {
            exports: {}
        }).exports, n482), n482.exports);
var x26 = (r534, n483, e1013, o)=>{
    if (n483 && typeof n483 == "object" || typeof n483 == "function") for (let u226 of d17(n483))!m21.call(r534, u226) && u226 !== e1013 && f16(r534, u226, {
        get: ()=>n483[u226],
        enumerable: !(o = h22(n483, u226)) || o.enumerable
    });
    return r534;
};
var a25 = (r535, n484, e1014)=>(e1014 = r535 != null ? y15(g21(r535)) : {}, x26(n484 || !r535 || !r535.__esModule ? f16(e1014, "default", {
        value: r535,
        enumerable: !0
    }) : e1014, r535));
var i19 = v18((B, l221)=>{
    "use strict";
    l221.exports = c143;
    function c143(r536) {
        if (r536 == null) return k57;
        if (typeof r536 == "string") return $41(r536);
        if (typeof r536 == "object") return "length" in r536 ? w(r536) : s299(r536);
        if (typeof r536 == "function") return r536;
        throw new Error("Expected function, string, or object as test");
    }
    t11(c143, "convert");
    function s299(r537) {
        return n485;
        function n485(e1015) {
            var o;
            for(o in r537)if (e1015[o] !== r537[o]) return !1;
            return !0;
        }
    }
    t11(s299, "allFactory");
    function w(r538) {
        for(var n486 = [], e1016 = -1; ++e1016 < r538.length;)n486[e1016] = c143(r538[e1016]);
        return o;
        function o() {
            for(var u227 = -1; ++u227 < n486.length;)if (n486[u227].apply(this, arguments)) return !0;
            return !1;
        }
    }
    t11(w, "anyFactory");
    function $41(r539) {
        return n487;
        function n487(e1017) {
            return Boolean(e1017 && e1017.type === r539);
        }
    }
    t11($41, "typeFactory");
    function k57() {
        return !0;
    }
    t11(k57, "ok");
});
var p25 = a25(i19()), F12 = a25(i19()), { default: b19 , ...j21 } = F12, q16 = (p25.default ?? b19) ?? j21;
var K7 = Object.create;
var s19 = Object.defineProperty;
var O12 = Object.getOwnPropertyDescriptor;
var S18 = Object.getOwnPropertyNames;
var U9 = Object.getPrototypeOf, X7 = Object.prototype.hasOwnProperty;
var u16 = (t831, r540)=>s19(t831, "name", {
        value: r540,
        configurable: !0
    }), k19 = ((t832)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(t832, {
        get: (r541, n488)=>(typeof require != "undefined" ? require : r541)[n488]
    }) : t832)(function(t833) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + t833 + '" is not supported');
});
var I20 = (t834, r542)=>()=>(r542 || t834((r542 = {
            exports: {}
        }).exports, r542), r542.exports);
var w15 = (t835, r543, n489, a185)=>{
    if (r543 && typeof r543 == "object" || typeof r543 == "function") for (let f126 of S18(r543))!X7.call(t835, f126) && f126 !== n489 && s19(t835, f126, {
        get: ()=>r543[f126],
        enumerable: !(a185 = O12(r543, f126)) || a185.enumerable
    });
    return t835;
};
var b20 = (t836, r544, n490)=>(n490 = t836 != null ? K7(U9(t836)) : {}, w15(r544 || !t836 || !t836.__esModule ? s19(n490, "default", {
        value: t836,
        enumerable: !0
    }) : n490, t836));
var T14 = I20((J, E47)=>{
    E47.exports = R29;
    function R29(t837) {
        return t837;
    }
    u16(R29, "identity");
});
var h23 = I20((L, P34)=>{
    "use strict";
    P34.exports = y74;
    var z29 = q16, A48 = T14(), $42 = !0, x101 = "skip", g87 = !1;
    y74.CONTINUE = $42;
    y74.SKIP = x101;
    y74.EXIT = g87;
    function y74(t838, r545, n491, a186) {
        var f127, N27;
        typeof r545 == "function" && typeof n491 != "function" && (a186 = n491, n491 = r545, r545 = null), N27 = z29(r545), f127 = a186 ? -1 : 1, d97(t838, null, [])();
        function d97(e1018, q39, p169) {
            var l222 = typeof e1018 == "object" && e1018 !== null ? e1018 : {}, m113;
            return typeof l222.type == "string" && (m113 = typeof l222.tagName == "string" ? l222.tagName : typeof l222.name == "string" ? l222.name : void 0, v56.displayName = "node (" + A48(l222.type + (m113 ? "<" + m113 + ">" : "")) + ")"), v56;
            function v56() {
                var C = p169.concat(e1018), o = [], c144, i510;
                if ((!r545 || N27(e1018, q39, p169[p169.length - 1] || null)) && (o = B35(n491(e1018, p169)), o[0] === g87)) return o;
                if (e1018.children && o[0] !== x101) for(i510 = (a186 ? e1018.children.length : -1) + f127; i510 > -1 && i510 < e1018.children.length;){
                    if (c144 = d97(e1018.children[i510], i510, C)(), c144[0] === g87) return c144;
                    i510 = typeof c144[1] == "number" ? c144[1] : i510 + f127;
                }
                return o;
            }
            u16(v56, "visit");
        }
        u16(d97, "factory");
    }
    u16(y74, "visitParents");
    function B35(t839) {
        return t839 !== null && typeof t839 == "object" && "length" in t839 ? t839 : typeof t839 == "number" ? [
            $42,
            t839
        ] : [
            t839
        ];
    }
    u16(B35, "toResult");
});
var j22 = b20(h23()), D16 = b20(h23()), { default: F13 , ...G10 } = D16, M8 = (j22.default ?? F13) ?? G10;
var m22 = Object.create;
var l21 = Object.defineProperty;
var v19 = Object.getOwnPropertyDescriptor;
var x27 = Object.getOwnPropertyNames;
var O13 = Object.getPrototypeOf, P16 = Object.prototype.hasOwnProperty;
var i20 = (r546, n492)=>l21(r546, "name", {
        value: n492,
        configurable: !0
    }), $16 = ((r547)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(r547, {
        get: (n493, f128)=>(typeof require != "undefined" ? require : n493)[f128]
    }) : r547)(function(r548) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + r548 + '" is not supported');
});
var C18 = (r549, n494)=>()=>(n494 || r549((n494 = {
            exports: {}
        }).exports, n494), n494.exports);
var K8 = (r550, n495, f129, t840)=>{
    if (n495 && typeof n495 == "object" || typeof n495 == "function") for (let e1019 of x27(n495))!P16.call(r550, e1019) && e1019 !== f129 && l21(r550, e1019, {
        get: ()=>n495[e1019],
        enumerable: !(t840 = v19(n495, e1019)) || t840.enumerable
    });
    return r550;
};
var p26 = (r551, n496, f130)=>(f130 = r551 != null ? m22(O13(r551)) : {}, K8(n496 || !r551 || !r551.__esModule ? l21(f130, "default", {
        value: r551,
        enumerable: !0
    }) : f130, r551));
var I21 = C18((s, E48)=>{
    "use strict";
    E48.exports = a187;
    var u228 = M8, S66 = u228.CONTINUE, U30 = u228.SKIP, X22 = u228.EXIT;
    a187.CONTINUE = S66;
    a187.SKIP = U30;
    a187.EXIT = X22;
    function a187(r552, n497, f131, t841) {
        typeof n497 == "function" && typeof f131 != "function" && (t841 = f131, f131 = n497, n497 = null), u228(r552, n497, e1020, t841);
        function e1020(d98, c145) {
            var o = c145[c145.length - 1], T35 = o ? o.children.indexOf(d98) : null;
            return f131(d98, T35, o);
        }
        i20(e1020, "overload");
    }
    i20(a187, "visit");
});
var N11 = p26(I21()), h24 = p26(I21()), { default: y16 , ...g22 } = h24, b21 = (N11.default ?? y16) ?? g22;
var __global$ = globalThis || (typeof window !== "undefined" ? window : self);
var ee2 = Object.create;
var D17 = Object.defineProperty;
var ae3 = Object.getOwnPropertyDescriptor;
var ne3 = Object.getOwnPropertyNames;
var re2 = Object.getPrototypeOf, ie3 = Object.prototype.hasOwnProperty;
var v20 = (g88, o)=>D17(g88, "name", {
        value: o,
        configurable: !0
    });
var te2 = (g89, o)=>()=>(o || g89((o = {
            exports: {}
        }).exports, o), o.exports);
var le2 = (g90, o, m114, A49)=>{
    if (o && typeof o == "object" || typeof o == "function") for (let t842 of ne3(o))!ie3.call(g90, t842) && t842 !== m114 && D17(g90, t842, {
        get: ()=>o[t842],
        enumerable: !(A49 = ae3(o, t842)) || A49.enumerable
    });
    return g90;
};
var R10 = (g91, o, m115)=>(m115 = g91 != null ? ee2(re2(g91)) : {}, le2(o || !g91 || !g91.__esModule ? D17(m115, "default", {
        value: g91,
        enumerable: !0
    }) : m115, g91));
var G11 = te2((ce, W20)=>{
    var ue7 = typeof document < "u" ? window : typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope ? self : {};
    var K18 = function(g92) {
        var o = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i, m116 = 0, A50 = {}, t843 = {
            manual: g92.Prism && g92.Prism.manual,
            disableWorkerMessageHandler: g92.Prism && g92.Prism.disableWorkerMessageHandler,
            util: {
                encode: v20(function a188(e1021) {
                    return e1021 instanceof y75 ? new y75(e1021.type, a188(e1021.content), e1021.alias) : Array.isArray(e1021) ? e1021.map(a188) : e1021.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
                }, "encode"),
                type: function(a189) {
                    return Object.prototype.toString.call(a189).slice(8, -1);
                },
                objId: function(a190) {
                    return a190.__id || Object.defineProperty(a190, "__id", {
                        value: ++m116
                    }), a190.__id;
                },
                clone: v20(function a191(e1022, n498) {
                    n498 = n498 || {};
                    var r553, i511;
                    switch(t843.util.type(e1022)){
                        case "Object":
                            if (i511 = t843.util.objId(e1022), n498[i511]) return n498[i511];
                            r553 = {}, n498[i511] = r553;
                            for(var l223 in e1022)e1022.hasOwnProperty(l223) && (r553[l223] = a191(e1022[l223], n498));
                            return r553;
                        case "Array":
                            return i511 = t843.util.objId(e1022), n498[i511] ? n498[i511] : (r553 = [], n498[i511] = r553, e1022.forEach(function(f132, u229) {
                                r553[u229] = a191(f132, n498);
                            }), r553);
                        default:
                            return e1022;
                    }
                }, "deepClone"),
                getLanguage: function(a192) {
                    for(; a192;){
                        var e1023 = o.exec(a192.className);
                        if (e1023) return e1023[1].toLowerCase();
                        a192 = a192.parentElement;
                    }
                    return "none";
                },
                setLanguage: function(a193, e1024) {
                    a193.className = a193.className.replace(RegExp(o, "gi"), ""), a193.classList.add("language-" + e1024);
                },
                currentScript: function() {
                    if (typeof document > "u") return null;
                    if ("currentScript" in document && 1 < 2) return document.currentScript;
                    try {
                        throw new Error;
                    } catch (r554) {
                        var a194 = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(r554.stack) || [])[1];
                        if (a194) {
                            var e1025 = document.getElementsByTagName("script");
                            for(var n499 in e1025)if (e1025[n499].src == a194) return e1025[n499];
                        }
                        return null;
                    }
                },
                isActive: function(a195, e1026, n500) {
                    for(var r555 = "no-" + e1026; a195;){
                        var i512 = a195.classList;
                        if (i512.contains(e1026)) return !0;
                        if (i512.contains(r555)) return !1;
                        a195 = a195.parentElement;
                    }
                    return !!n500;
                }
            },
            languages: {
                plain: A50,
                plaintext: A50,
                text: A50,
                txt: A50,
                extend: function(a196, e1027) {
                    var n501 = t843.util.clone(t843.languages[a196]);
                    for(var r556 in e1027)n501[r556] = e1027[r556];
                    return n501;
                },
                insertBefore: function(a197, e1028, n502, r557) {
                    r557 = r557 || t843.languages;
                    var i513 = r557[a197], l224 = {};
                    for(var f133 in i513)if (i513.hasOwnProperty(f133)) {
                        if (f133 == e1028) for(var u230 in n502)n502.hasOwnProperty(u230) && (l224[u230] = n502[u230]);
                        n502.hasOwnProperty(f133) || (l224[f133] = i513[f133]);
                    }
                    var s300 = r557[a197];
                    return r557[a197] = l224, t843.languages.DFS(t843.languages, function(c146, x102) {
                        x102 === s300 && c146 != a197 && (this[c146] = l224);
                    }), l224;
                },
                DFS: v20(function a198(e1029, n503, r558, i514) {
                    i514 = i514 || {};
                    var l225 = t843.util.objId;
                    for(var f134 in e1029)if (e1029.hasOwnProperty(f134)) {
                        n503.call(e1029, f134, e1029[f134], r558 || f134);
                        var u231 = e1029[f134], s301 = t843.util.type(u231);
                        s301 === "Object" && !i514[l225(u231)] ? (i514[l225(u231)] = !0, a198(u231, n503, null, i514)) : s301 === "Array" && !i514[l225(u231)] && (i514[l225(u231)] = !0, a198(u231, n503, f134, i514));
                    }
                }, "DFS")
            },
            plugins: {},
            highlightAll: function(a199, e1030) {
                t843.highlightAllUnder(document, a199, e1030);
            },
            highlightAllUnder: function(a200, e1031, n504) {
                var r559 = {
                    callback: n504,
                    container: a200,
                    selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
                };
                t843.hooks.run("before-highlightall", r559), r559.elements = Array.prototype.slice.apply(r559.container.querySelectorAll(r559.selector)), t843.hooks.run("before-all-elements-highlight", r559);
                for(var i515 = 0, l226; l226 = r559.elements[i515++];)t843.highlightElement(l226, e1031 === !0, r559.callback);
            },
            highlightElement: function(a201, e1032, n505) {
                var r560 = t843.util.getLanguage(a201), i516 = t843.languages[r560];
                t843.util.setLanguage(a201, r560);
                var l227 = a201.parentElement;
                l227 && l227.nodeName.toLowerCase() === "pre" && t843.util.setLanguage(l227, r560);
                var f135 = a201.textContent, u232 = {
                    element: a201,
                    language: r560,
                    grammar: i516,
                    code: f135
                };
                function s302(x103) {
                    u232.highlightedCode = x103, t843.hooks.run("before-insert", u232), u232.element.innerHTML = u232.highlightedCode, t843.hooks.run("after-highlight", u232), t843.hooks.run("complete", u232), n505 && n505.call(u232.element);
                }
                if (v20(s302, "insertHighlightedCode"), t843.hooks.run("before-sanity-check", u232), l227 = u232.element.parentElement, l227 && l227.nodeName.toLowerCase() === "pre" && !l227.hasAttribute("tabindex") && l227.setAttribute("tabindex", "0"), !u232.code) {
                    t843.hooks.run("complete", u232), n505 && n505.call(u232.element);
                    return;
                }
                if (t843.hooks.run("before-highlight", u232), !u232.grammar) {
                    s302(t843.util.encode(u232.code));
                    return;
                }
                if (e1032 && g92.Worker) {
                    var c147 = new Worker(t843.filename);
                    c147.onmessage = function(x104) {
                        s302(x104.data);
                    }, c147.postMessage(JSON.stringify({
                        language: u232.language,
                        code: u232.code,
                        immediateClose: !0
                    }));
                } else s302(t843.highlight(u232.code, u232.grammar, u232.language));
            },
            highlight: function(a202, e1033, n506) {
                var r561 = {
                    code: a202,
                    grammar: e1033,
                    language: n506
                };
                if (t843.hooks.run("before-tokenize", r561), !r561.grammar) throw new Error('The language "' + r561.language + '" has no grammar.');
                return r561.tokens = t843.tokenize(r561.code, r561.grammar), t843.hooks.run("after-tokenize", r561), y75.stringify(t843.util.encode(r561.tokens), r561.language);
            },
            tokenize: function(a203, e1034) {
                var n507 = e1034.rest;
                if (n507) {
                    for(var r562 in n507)e1034[r562] = n507[r562];
                    delete e1034.rest;
                }
                var i517 = new V20;
                return S67(i517, i517.head, a203), T36(a203, i517, e1034, i517.head, 0), Y13(i517);
            },
            hooks: {
                all: {},
                add: function(a204, e1035) {
                    var n508 = t843.hooks.all;
                    n508[a204] = n508[a204] || [], n508[a204].push(e1035);
                },
                run: function(a205, e1036) {
                    var n509 = t843.hooks.all[a205];
                    if (!(!n509 || !n509.length)) for(var r563 = 0, i518; i518 = n509[r563++];)i518(e1036);
                }
            },
            Token: y75
        };
        g92.Prism = t843;
        function y75(a206, e1037, n510, r564) {
            this.type = a206, this.content = e1037, this.alias = n510, this.length = (r564 || "").length | 0;
        }
        v20(y75, "Token"), y75.stringify = v20(function a207(e1038, n511) {
            if (typeof e1038 == "string") return e1038;
            if (Array.isArray(e1038)) {
                var r565 = "";
                return e1038.forEach(function(s303) {
                    r565 += a207(s303, n511);
                }), r565;
            }
            var i519 = {
                type: e1038.type,
                content: a207(e1038.content, n511),
                tag: "span",
                classes: [
                    "token",
                    e1038.type
                ],
                attributes: {},
                language: n511
            }, l228 = e1038.alias;
            l228 && (Array.isArray(l228) ? Array.prototype.push.apply(i519.classes, l228) : i519.classes.push(l228)), t843.hooks.run("wrap", i519);
            var f136 = "";
            for(var u233 in i519.attributes)f136 += " " + u233 + '="' + (i519.attributes[u233] || "").replace(/"/g, "&quot;") + '"';
            return "<" + i519.tag + ' class="' + i519.classes.join(" ") + '"' + f136 + ">" + i519.content + "</" + i519.tag + ">";
        }, "stringify");
        function O37(a208, e1039, n512, r566) {
            a208.lastIndex = e1039;
            var i520 = a208.exec(n512);
            if (i520 && r566 && i520[1]) {
                var l229 = i520[1].length;
                i520.index += l229, i520[0] = i520[0].slice(l229);
            }
            return i520;
        }
        v20(O37, "matchPattern");
        function T36(a209, e1040, n513, r567, i521, l230) {
            for(var f137 in n513)if (!(!n513.hasOwnProperty(f137) || !n513[f137])) {
                var u234 = n513[f137];
                u234 = Array.isArray(u234) ? u234 : [
                    u234
                ];
                for(var s304 = 0; s304 < u234.length; ++s304){
                    if (l230 && l230.cause == f137 + "," + s304) return;
                    var c148 = u234[s304], x105 = c148.inside, F37 = !!c148.lookbehind, J20 = !!c148.greedy, Z13 = c148.alias;
                    if (J20 && !c148.pattern.global) {
                        var _24 = c148.pattern.toString().match(/[imsuy]*$/)[0];
                        c148.pattern = RegExp(c148.pattern.source, _24 + "g");
                    }
                    for(var U31 = c148.pattern || c148, h122 = r567.next, p170 = i521; h122 !== e1040.tail && !(l230 && p170 >= l230.reach); p170 += h122.value.length, h122 = h122.next){
                        var b73 = h122.value;
                        if (e1040.length > a209.length) return;
                        if (!(b73 instanceof y75)) {
                            var C = 1, d99;
                            if (J20) {
                                if (d99 = O37(U31, p170, a209, F37), !d99 || d99.index >= a209.length) break;
                                var L26 = d99.index, j54 = d99.index + d99[0].length, w = p170;
                                for(w += h122.value.length; L26 >= w;)h122 = h122.next, w += h122.value.length;
                                if (w -= h122.value.length, p170 = w, h122.value instanceof y75) continue;
                                for(var P35 = h122; P35 !== e1040.tail && (w < j54 || typeof P35.value == "string"); P35 = P35.next)C++, w += P35.value.length;
                                C--, b73 = a209.slice(p170, w), d99.index -= p170;
                            } else if (d99 = O37(U31, 0, b73, F37), !d99) continue;
                            var L26 = d99.index, I47 = d99[0], q40 = b73.slice(0, L26), k58 = b73.slice(L26 + I47.length), z30 = p170 + b73.length;
                            l230 && z30 > l230.reach && (l230.reach = z30);
                            var M30 = h122.prev;
                            q40 && (M30 = S67(e1040, M30, q40), p170 += q40.length), X23(e1040, M30, C);
                            var N28 = new y75(f137, x105 ? t843.tokenize(I47, x105) : I47, Z13, I47);
                            if (h122 = S67(e1040, M30, N28), k58 && S67(e1040, h122, k58), C > 1) {
                                var H15 = {
                                    cause: f137 + "," + s304,
                                    reach: z30
                                };
                                T36(a209, e1040, n513, h122.prev, p170, H15), l230 && H15.reach > l230.reach && (l230.reach = H15.reach);
                            }
                        }
                    }
                }
            }
        }
        v20(T36, "matchGrammar");
        function V20() {
            var a210 = {
                value: null,
                prev: null,
                next: null
            }, e1041 = {
                value: null,
                prev: a210,
                next: null
            };
            a210.next = e1041, this.head = a210, this.tail = e1041, this.length = 0;
        }
        v20(V20, "LinkedList");
        function S67(a211, e1042, n514) {
            var r568 = e1042.next, i522 = {
                value: n514,
                prev: e1042,
                next: r568
            };
            return e1042.next = i522, r568.prev = i522, a211.length++, i522;
        }
        v20(S67, "addAfter");
        function X23(a212, e1043, n515) {
            for(var r569 = e1043.next, i523 = 0; i523 < n515 && r569 !== a212.tail; i523++)r569 = r569.next;
            e1043.next = r569, r569.prev = e1043, a212.length -= i523;
        }
        v20(X23, "removeRange");
        function Y13(a213) {
            for(var e1044 = [], n516 = a213.head.next; n516 !== a213.tail;)e1044.push(n516.value), n516 = n516.next;
            return e1044;
        }
        if (v20(Y13, "toArray"), !g92.document) return g92.addEventListener && (t843.disableWorkerMessageHandler || g92.addEventListener("message", function(a214) {
            var e1045 = JSON.parse(a214.data), n517 = e1045.language, r570 = e1045.code, i524 = e1045.immediateClose;
            g92.postMessage(t843.highlight(r570, t843.languages[n517], n517)), i524 && g92.close();
        }, !1)), t843;
        var E49 = t843.util.currentScript();
        E49 && (t843.filename = E49.src, E49.hasAttribute("data-manual") && (t843.manual = !0));
        function $43() {
            t843.manual || t843.highlightAll();
        }
        if (v20($43, "highlightAutomaticallyCallback"), !t843.manual) {
            var B36 = document.readyState;
            B36 === "loading" || B36 === "interactive" && E49 && E49.defer ? document.addEventListener("DOMContentLoaded", $43) : window.requestAnimationFrame ? window.requestAnimationFrame($43) : window.setTimeout($43, 16);
        }
        return t843;
    }(ue7);
    typeof W20 < "u" && W20.exports && (W20.exports = K18);
    typeof __global$ < "u" && (__global$.Prism = K18);
});
var Q3 = R10(G11()), ge2 = R10(G11()), { default: fe4 , ...oe2 } = ge2, he3 = (Q3.default ?? fe4) ?? oe2;
var H5 = Object.defineProperty;
var I22 = (G20, f138)=>{
    for(var r571 in f138)H5(G20, r571, {
        get: f138[r571],
        enumerable: !0
    });
};
var e8 = {};
I22(e8, {
    "0": ()=>d18,
    "128": ()=>m23,
    "130": ()=>a26,
    "131": ()=>l22,
    "132": ()=>u17,
    "133": ()=>$17,
    "134": ()=>p27,
    "135": ()=>s20,
    "136": ()=>i21,
    "137": ()=>c16,
    "138": ()=>n12,
    "139": ()=>x28,
    "140": ()=>b22,
    "142": ()=>g23,
    "145": ()=>h25,
    "146": ()=>j23,
    "147": ()=>k20,
    "148": ()=>q17,
    "149": ()=>v21,
    "150": ()=>w16,
    "151": ()=>y17,
    "152": ()=>z10,
    "153": ()=>A13,
    "154": ()=>B17,
    "155": ()=>C19,
    "156": ()=>D18,
    "158": ()=>E11,
    "159": ()=>F14,
    default: ()=>o12
});
var d18 = "\uFFFD", m23 = "\u20AC", a26 = "\u201A", l22 = "\u0192", u17 = "\u201E", $17 = "\u2026", p27 = "\u2020", s20 = "\u2021", i21 = "\u02C6", c16 = "\u2030", n12 = "\u0160", x28 = "\u2039", b22 = "\u0152", g23 = "\u017D", h25 = "\u2018", j23 = "\u2019", k20 = "\u201C", q17 = "\u201D", v21 = "\u2022", w16 = "\u2013", y17 = "\u2014", z10 = "\u02DC", A13 = "\u2122", B17 = "\u0161", C19 = "\u203A", D18 = "\u0153", E11 = "\u017E", F14 = "\u0178", o12 = {
    "0": d18,
    "128": m23,
    "130": a26,
    "131": l22,
    "132": u17,
    "133": $17,
    "134": p27,
    "135": s20,
    "136": i21,
    "137": c16,
    "138": n12,
    "139": x28,
    "140": b22,
    "142": g23,
    "145": h25,
    "146": j23,
    "147": k20,
    "148": q17,
    "149": v21,
    "150": w16,
    "151": y17,
    "152": z10,
    "153": A13,
    "154": B17,
    "155": C19,
    "156": D18,
    "158": E11,
    "159": F14
};
var { default: J7 , ...K9 } = e8, N12 = (o12 ?? J7) ?? K9;
var rc = Object.defineProperty;
var ic = (uc, u235)=>{
    for(var r572 in u235)rc(uc, r572, {
        get: u235[r572],
        enumerable: !0
    });
};
var c17 = {};
ic(c17, {
    AElig: ()=>i22,
    AMP: ()=>t12,
    Aacute: ()=>l23,
    Acirc: ()=>m24,
    Agrave: ()=>o13,
    Aring: ()=>d19,
    Atilde: ()=>g24,
    Auml: ()=>s21,
    COPY: ()=>n13,
    Ccedil: ()=>v22,
    ETH: ()=>p28,
    Eacute: ()=>O14,
    Ecirc: ()=>A14,
    Egrave: ()=>f17,
    Euml: ()=>E12,
    GT: ()=>h26,
    Iacute: ()=>y18,
    Icirc: ()=>T15,
    Igrave: ()=>U10,
    Iuml: ()=>q18,
    LT: ()=>I23,
    Ntilde: ()=>b23,
    Oacute: ()=>x29,
    Ocirc: ()=>C20,
    Ograve: ()=>G12,
    Oslash: ()=>H6,
    Otilde: ()=>N13,
    Ouml: ()=>P17,
    QUOT: ()=>R11,
    REG: ()=>Y3,
    THORN: ()=>$18,
    Uacute: ()=>z11,
    Ucirc: ()=>L8,
    Ugrave: ()=>M9,
    Uuml: ()=>Q4,
    Yacute: ()=>j24,
    aacute: ()=>k21,
    acirc: ()=>w17,
    acute: ()=>B18,
    aelig: ()=>D19,
    agrave: ()=>F15,
    amp: ()=>J8,
    aring: ()=>K10,
    atilde: ()=>S19,
    auml: ()=>V8,
    brvbar: ()=>W6,
    ccedil: ()=>X8,
    cedil: ()=>Z6,
    cent: ()=>_11,
    copy: ()=>ee3,
    curren: ()=>ce2,
    default: ()=>a27,
    deg: ()=>ae4,
    divide: ()=>ue3,
    eacute: ()=>re3,
    ecirc: ()=>ie4,
    egrave: ()=>te3,
    eth: ()=>le3,
    euml: ()=>me2,
    frac12: ()=>oe3,
    frac14: ()=>de3,
    frac34: ()=>ge3,
    gt: ()=>se3,
    iacute: ()=>ne4,
    icirc: ()=>ve3,
    iexcl: ()=>pe2,
    igrave: ()=>Oe3,
    iquest: ()=>Ae3,
    iuml: ()=>fe5,
    laquo: ()=>Ee2,
    lt: ()=>he4,
    macr: ()=>ye2,
    micro: ()=>Te2,
    middot: ()=>Ue3,
    nbsp: ()=>qe3,
    not: ()=>Ie3,
    ntilde: ()=>be3,
    oacute: ()=>xe3,
    ocirc: ()=>Ce3,
    ograve: ()=>Ge3,
    ordf: ()=>He3,
    ordm: ()=>Ne2,
    oslash: ()=>Pe5,
    otilde: ()=>Re2,
    ouml: ()=>Ye2,
    para: ()=>$e2,
    plusmn: ()=>ze2,
    pound: ()=>Le3,
    quot: ()=>Me4,
    raquo: ()=>Qe1,
    reg: ()=>je4,
    sect: ()=>ke3,
    shy: ()=>we2,
    sup1: ()=>Be2,
    sup2: ()=>De3,
    sup3: ()=>Fe3,
    szlig: ()=>Je2,
    thorn: ()=>Ke1,
    times: ()=>Se3,
    uacute: ()=>Ve3,
    ucirc: ()=>We2,
    ugrave: ()=>Xe2,
    uml: ()=>Ze1,
    uuml: ()=>_e2,
    yacute: ()=>ec,
    yen: ()=>cc,
    yuml: ()=>ac
});
var i22 = "\xC6", t12 = "&", l23 = "\xC1", m24 = "\xC2", o13 = "\xC0", d19 = "\xC5", g24 = "\xC3", s21 = "\xC4", n13 = "\xA9", v22 = "\xC7", p28 = "\xD0", O14 = "\xC9", A14 = "\xCA", f17 = "\xC8", E12 = "\xCB", h26 = ">", y18 = "\xCD", T15 = "\xCE", U10 = "\xCC", q18 = "\xCF", I23 = "<", b23 = "\xD1", x29 = "\xD3", C20 = "\xD4", G12 = "\xD2", H6 = "\xD8", N13 = "\xD5", P17 = "\xD6", R11 = '"', Y3 = "\xAE", $18 = "\xDE", z11 = "\xDA", L8 = "\xDB", M9 = "\xD9", Q4 = "\xDC", j24 = "\xDD", k21 = "\xE1", w17 = "\xE2", B18 = "\xB4", D19 = "\xE6", F15 = "\xE0", J8 = "&", K10 = "\xE5", S19 = "\xE3", V8 = "\xE4", W6 = "\xA6", X8 = "\xE7", Z6 = "\xB8", _11 = "\xA2", ee3 = "\xA9", ce2 = "\xA4", ae4 = "\xB0", ue3 = "\xF7", re3 = "\xE9", ie4 = "\xEA", te3 = "\xE8", le3 = "\xF0", me2 = "\xEB", oe3 = "\xBD", de3 = "\xBC", ge3 = "\xBE", se3 = ">", ne4 = "\xED", ve3 = "\xEE", pe2 = "\xA1", Oe3 = "\xEC", Ae3 = "\xBF", fe5 = "\xEF", Ee2 = "\xAB", he4 = "<", ye2 = "\xAF", Te2 = "\xB5", Ue3 = "\xB7", qe3 = "\xA0", Ie3 = "\xAC", be3 = "\xF1", xe3 = "\xF3", Ce3 = "\xF4", Ge3 = "\xF2", He3 = "\xAA", Ne2 = "\xBA", Pe5 = "\xF8", Re2 = "\xF5", Ye2 = "\xF6", $e2 = "\xB6", ze2 = "\xB1", Le3 = "\xA3", Me4 = '"', Qe1 = "\xBB", je4 = "\xAE", ke3 = "\xA7", we2 = "\xAD", Be2 = "\xB9", De3 = "\xB2", Fe3 = "\xB3", Je2 = "\xDF", Ke1 = "\xFE", Se3 = "\xD7", Ve3 = "\xFA", We2 = "\xFB", Xe2 = "\xF9", Ze1 = "\xA8", _e2 = "\xFC", ec = "\xFD", cc = "\xA5", ac = "\xFF", a27 = {
    AElig: i22,
    AMP: t12,
    Aacute: l23,
    Acirc: m24,
    Agrave: o13,
    Aring: d19,
    Atilde: g24,
    Auml: s21,
    COPY: n13,
    Ccedil: v22,
    ETH: p28,
    Eacute: O14,
    Ecirc: A14,
    Egrave: f17,
    Euml: E12,
    GT: h26,
    Iacute: y18,
    Icirc: T15,
    Igrave: U10,
    Iuml: q18,
    LT: I23,
    Ntilde: b23,
    Oacute: x29,
    Ocirc: C20,
    Ograve: G12,
    Oslash: H6,
    Otilde: N13,
    Ouml: P17,
    QUOT: R11,
    REG: Y3,
    THORN: $18,
    Uacute: z11,
    Ucirc: L8,
    Ugrave: M9,
    Uuml: Q4,
    Yacute: j24,
    aacute: k21,
    acirc: w17,
    acute: B18,
    aelig: D19,
    agrave: F15,
    amp: J8,
    aring: K10,
    atilde: S19,
    auml: V8,
    brvbar: W6,
    ccedil: X8,
    cedil: Z6,
    cent: _11,
    copy: ee3,
    curren: ce2,
    deg: ae4,
    divide: ue3,
    eacute: re3,
    ecirc: ie4,
    egrave: te3,
    eth: le3,
    euml: me2,
    frac12: oe3,
    frac14: de3,
    frac34: ge3,
    gt: se3,
    iacute: ne4,
    icirc: ve3,
    iexcl: pe2,
    igrave: Oe3,
    iquest: Ae3,
    iuml: fe5,
    laquo: Ee2,
    lt: he4,
    macr: ye2,
    micro: Te2,
    middot: Ue3,
    nbsp: qe3,
    not: Ie3,
    ntilde: be3,
    oacute: xe3,
    ocirc: Ce3,
    ograve: Ge3,
    ordf: He3,
    ordm: Ne2,
    oslash: Pe5,
    otilde: Re2,
    ouml: Ye2,
    para: $e2,
    plusmn: ze2,
    pound: Le3,
    quot: Me4,
    raquo: Qe1,
    reg: je4,
    sect: ke3,
    shy: we2,
    sup1: Be2,
    sup2: De3,
    sup3: Fe3,
    szlig: Je2,
    thorn: Ke1,
    times: Se3,
    uacute: Ve3,
    ucirc: We2,
    ugrave: Xe2,
    uml: Ze1,
    uuml: _e2,
    yacute: ec,
    yen: cc,
    yuml: ac
};
var { AElig: dc , AMP: gc , Aacute: sc , Acirc: nc , Agrave: vc , Aring: pc , Atilde: Oc , Auml: Ac , COPY: fc , Ccedil: Ec , ETH: hc , Eacute: yc , Ecirc: Tc , Egrave: Uc , Euml: qc , GT: Ic , Iacute: bc , Icirc: xc , Igrave: Cc , Iuml: Gc , LT: Hc , Ntilde: Nc , Oacute: Pc , Ocirc: Rc , Ograve: Yc , Oslash: $c , Otilde: zc , Ouml: Lc , QUOT: Mc , REG: Qc , THORN: jc , Uacute: kc , Ucirc: wc , Ugrave: Bc , Uuml: Dc , Yacute: Fc , aacute: Jc , acirc: Kc , acute: Sc , aelig: Vc , agrave: Wc , amp: Xc , aring: Zc , atilde: _c , auml: ea , brvbar: ca , ccedil: aa , cedil: ua , cent: ra , copy: ia , curren: ta , deg: la , divide: ma , eacute: oa , ecirc: da , egrave: ga , eth: sa , euml: na , frac12: va , frac14: pa , frac34: Oa , gt: Aa , iacute: fa , icirc: Ea , iexcl: ha , igrave: ya , iquest: Ta , iuml: Ua , laquo: qa , lt: Ia , macr: ba , micro: xa , middot: Ca , nbsp: Ga , not: Ha , ntilde: Na , oacute: Pa , ocirc: Ra , ograve: Ya , ordf: $a , ordm: za , oslash: La , otilde: Ma , ouml: Qa , para: ja , plusmn: ka , pound: wa , quot: Ba , raquo: Da , reg: Fa , sect: Ja , shy: Ka , sup1: Sa , sup2: Va , sup3: Wa , szlig: Xa , thorn: Za , times: _a , uacute: eu , ucirc: cu , ugrave: au , uml: uu , uuml: ru , yacute: iu , yen: tu , yuml: lu  } = c17, { default: tc , ...lc } = c17, mu = (a27 ?? tc) ?? lc;
var n14 = Object.create;
var d20 = Object.defineProperty;
var p29 = Object.getOwnPropertyDescriptor;
var $19 = Object.getOwnPropertyNames;
var a28 = Object.getPrototypeOf, c18 = Object.prototype.hasOwnProperty;
var u18 = (t844, e1046)=>d20(t844, "name", {
        value: e1046,
        configurable: !0
    });
var x30 = (t845, e1047)=>()=>(e1047 || t845((e1047 = {
            exports: {}
        }).exports, e1047), e1047.exports);
var g25 = (t846, e1048, o, s305)=>{
    if (e1048 && typeof e1048 == "object" || typeof e1048 == "function") for (let r573 of $19(e1048))!c18.call(t846, r573) && r573 !== o && d20(t846, r573, {
        get: ()=>e1048[r573],
        enumerable: !(s305 = p29(e1048, r573)) || s305.enumerable
    });
    return t846;
};
var i23 = (t847, e1049, o)=>(o = t847 != null ? n14(a28(t847)) : {}, g25(e1049 || !t847 || !t847.__esModule ? d20(o, "default", {
        value: t847,
        enumerable: !0
    }) : o, t847));
var f18 = x30((j, m117)=>{
    "use strict";
    m117.exports = v57;
    function v57(t848) {
        var e1050 = typeof t848 == "string" ? t848.charCodeAt(0) : t848;
        return e1050 >= 48 && e1050 <= 57;
    }
    u18(v57, "decimal");
});
var l24 = i23(f18()), y19 = i23(f18()), { default: A15 , ...C21 } = y19, k22 = (l24.default ?? A15) ?? C21;
var a29 = Object.create;
var f19 = Object.defineProperty;
var m25 = Object.getOwnPropertyDescriptor;
var n15 = Object.getOwnPropertyNames;
var $20 = Object.getPrototypeOf, c19 = Object.prototype.hasOwnProperty;
var u19 = (e1051, t849)=>f19(e1051, "name", {
        value: t849,
        configurable: !0
    });
var x31 = (e1052, t850)=>()=>(t850 || e1052((t850 = {
            exports: {}
        }).exports, t850), t850.exports);
var b24 = (e1053, t851, o, s306)=>{
    if (t851 && typeof t851 == "object" || typeof t851 == "function") for (let r574 of n15(t851))!c19.call(e1053, r574) && r574 !== o && f19(e1053, r574, {
        get: ()=>t851[r574],
        enumerable: !(s306 = m25(t851, r574)) || s306.enumerable
    });
    return e1053;
};
var i24 = (e1054, t852, o)=>(o = e1054 != null ? a29($20(e1054)) : {}, b24(t852 || !e1054 || !e1054.__esModule ? f19(o, "default", {
        value: e1054,
        enumerable: !0
    }) : o, e1054));
var d21 = x31((h, l231)=>{
    "use strict";
    l231.exports = g93;
    function g93(e1055) {
        var t853 = typeof e1055 == "string" ? e1055.charCodeAt(0) : e1055;
        return t853 >= 97 && t853 <= 122 || t853 >= 65 && t853 <= 90;
    }
    u19(g93, "alphabetical");
});
var p30 = i24(d21()), v23 = i24(d21()), { default: y20 , ...A16 } = v23, j25 = (p30.default ?? y20) ?? A16;
var s22 = Object.create;
var u20 = Object.defineProperty;
var n16 = Object.getOwnPropertyDescriptor;
var c20 = Object.getOwnPropertyNames;
var $21 = Object.getPrototypeOf, q19 = Object.prototype.hasOwnProperty;
var o14 = (e1056, r575)=>u20(e1056, "name", {
        value: r575,
        configurable: !0
    }), f20 = ((e1057)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e1057, {
        get: (r576, t854)=>(typeof require != "undefined" ? require : r576)[t854]
    }) : e1057)(function(e1058) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e1058 + '" is not supported');
});
var v24 = (e1059, r577)=>()=>(r577 || e1059((r577 = {
            exports: {}
        }).exports, r577), r577.exports);
var x32 = (e1060, r578, t855, l232)=>{
    if (r578 && typeof r578 == "object" || typeof r578 == "function") for (let a215 of c20(r578))!q19.call(e1060, a215) && a215 !== t855 && u20(e1060, a215, {
        get: ()=>r578[a215],
        enumerable: !(l232 = n16(r578, a215)) || l232.enumerable
    });
    return e1060;
};
var m26 = (e1061, r579, t856)=>(t856 = e1061 != null ? s22($21(e1061)) : {}, x32(r579 || !e1061 || !e1061.__esModule ? u20(t856, "default", {
        value: e1061,
        enumerable: !0
    }) : t856, e1061));
var i25 = v24((z, d100)=>{
    "use strict";
    var b74 = j25, h123 = k22;
    d100.exports = g94;
    function g94(e1062) {
        return b74(e1062) || h123(e1062);
    }
    o14(g94, "alphanumerical");
});
var p31 = m26(i25()), j26 = m26(i25()), { default: k23 , ...w18 } = j26, A17 = (p31.default ?? k23) ?? w18;
var n17 = Object.create;
var d22 = Object.defineProperty;
var p32 = Object.getOwnPropertyDescriptor;
var a30 = Object.getOwnPropertyNames;
var $22 = Object.getPrototypeOf, x33 = Object.prototype.hasOwnProperty;
var u21 = (e1063, t857)=>d22(e1063, "name", {
        value: t857,
        configurable: !0
    });
var c21 = (e1064, t858)=>()=>(t858 || e1064((t858 = {
            exports: {}
        }).exports, t858), t858.exports);
var g26 = (e1065, t859, o, s307)=>{
    if (t859 && typeof t859 == "object" || typeof t859 == "function") for (let r580 of a30(t859))!x33.call(e1065, r580) && r580 !== o && d22(e1065, r580, {
        get: ()=>t859[r580],
        enumerable: !(s307 = p32(t859, r580)) || s307.enumerable
    });
    return e1065;
};
var i26 = (e1066, t860, o)=>(o = e1066 != null ? n17($22(e1066)) : {}, g26(t860 || !e1066 || !e1066.__esModule ? d22(o, "default", {
        value: e1066,
        enumerable: !0
    }) : o, e1066));
var f21 = c21((h, m118)=>{
    "use strict";
    m118.exports = v58;
    function v58(e1067) {
        var t861 = typeof e1067 == "string" ? e1067.charCodeAt(0) : e1067;
        return t861 >= 97 && t861 <= 102 || t861 >= 65 && t861 <= 70 || t861 >= 48 && t861 <= 57;
    }
    u21(v58, "hexadecimal");
});
var l25 = i26(f21()), y21 = i26(f21()), { default: A18 , ...C22 } = y21, j27 = (l25.default ?? A18) ?? C22;
var ye3 = Object.create;
var I24 = Object.defineProperty;
var ge4 = Object.getOwnPropertyDescriptor;
var Ne3 = Object.getOwnPropertyNames;
var Te3 = Object.getPrototypeOf, qe4 = Object.prototype.hasOwnProperty;
var s23 = (e1068, r581)=>I24(e1068, "name", {
        value: r581,
        configurable: !0
    }), E13 = ((e1069)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e1069, {
        get: (r582, a216)=>(typeof require != "undefined" ? require : r582)[a216]
    }) : e1069)(function(e1070) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e1070 + '" is not supported');
});
var Z7 = (e1071, r583)=>()=>(r583 || e1071((r583 = {
            exports: {}
        }).exports, r583), r583.exports);
var Ae4 = (e1072, r584, a217, v59)=>{
    if (r584 && typeof r584 == "object" || typeof r584 == "function") for (let f139 of Ne3(r584))!qe4.call(e1072, f139) && f139 !== a217 && I24(e1072, f139, {
        get: ()=>r584[f139],
        enumerable: !(v59 = ge4(r584, f139)) || v59.enumerable
    });
    return e1072;
};
var _12 = (e1073, r585, a218)=>(a218 = e1073 != null ? ye3(Te3(e1073)) : {}, Ae4(r585 || !e1073 || !e1073.__esModule ? I24(a218, "default", {
        value: e1073,
        enumerable: !0
    }) : a218, e1073));
var re4 = Z7((Ze, ee9)=>{
    "use strict";
    var F38, Ee5 = 59;
    ee9.exports = ke6;
    function ke6(e1074) {
        var r586 = "&" + e1074 + ";", a219;
        return F38 = F38 || document.createElement("i"), F38.innerHTML = r586, a219 = F38.textContent, a219.charCodeAt(a219.length - 1) === Ee5 && e1074 !== "semi" || a219 === r586 ? !1 : a219;
    }
    s23(ke6, "decodeEntity");
});
var W7 = Z7((_e, me7)=>{
    "use strict";
    var ae8 = mu, ne11 = N12, $e5 = k22, Fe6 = j27, oe9 = A17, Pe8 = re4();
    me7.exports = ze4;
    var Se6 = {}.hasOwnProperty, g95 = String.fromCharCode, Ue4 = Function.prototype, te9 = {
        warning: null,
        reference: null,
        text: null,
        warningContext: null,
        referenceContext: null,
        textContext: null,
        position: {},
        additional: null,
        attribute: !1,
        nonTerminated: !0
    }, Xe4 = 9, ie9 = 10, je6 = 12, De5 = 32, fe8 = 38, He5 = 59, Ie6 = 60, Le5 = 61, Me6 = 35, Oe5 = 88, Re4 = 120, We4 = 65533, N29 = "named", M31 = "hexadecimal", O38 = "decimal", R30 = {};
    R30[M31] = 16;
    R30[O38] = 10;
    var P36 = {};
    P36[N29] = oe9;
    P36[O38] = $e5;
    P36[M31] = Fe6;
    var le6 = 1, ce6 = 2, se7 = 3, ve6 = 4, de6 = 5, L27 = 6, ue8 = 7, x106 = {};
    x106[le6] = "Named character references must be terminated by a semicolon";
    x106[ce6] = "Numeric character references must be terminated by a semicolon";
    x106[se7] = "Named character references cannot be empty";
    x106[ve6] = "Numeric character references cannot be empty";
    x106[de6] = "Named character references must be known";
    x106[L27] = "Numeric character references cannot be disallowed";
    x106[ue8] = "Numeric character references cannot be outside the permissible Unicode range";
    function ze4(e1075, r587) {
        var a220 = {}, v60, f140;
        r587 || (r587 = {});
        for(f140 in te9)v60 = r587[f140], a220[f140] = v60 ?? te9[f140];
        return (a220.position.indent || a220.position.start) && (a220.indent = a220.position.indent || [], a220.position = a220.position.start), Be5(e1075, a220);
    }
    s23(ze4, "parseEntities");
    function Be5(e1076, r588) {
        var a221 = r588.additional, v61 = r588.nonTerminated, f141 = r588.text, z31 = r588.reference, B37 = r588.warning, he7 = r588.textContext, pe6 = r588.referenceContext, Ce5 = r588.warningContext, S68 = r588.position, be6 = r588.indent || [], U32 = e1076.length, u236 = 0, G21 = -1, h124 = S68.column || 1, J21 = S68.line || 1, p171 = "", X24 = [], y76, j55, C, o, m119, t862, n518, l233, k59, D37, b75, T37, w, d101, K19, q41, $44, c149, i525;
        for(typeof a221 == "string" && (a221 = a221.charCodeAt(0)), q41 = A51(), l233 = B37 ? we6 : Ue4, u236--, U32++; ++u236 < U32;)if (m119 === ie9 && (h124 = be6[G21] || 1), m119 = e1076.charCodeAt(u236), m119 === fe8) {
            if (n518 = e1076.charCodeAt(u236 + 1), n518 === Xe4 || n518 === ie9 || n518 === je6 || n518 === De5 || n518 === fe8 || n518 === Ie6 || n518 !== n518 || a221 && n518 === a221) {
                p171 += g95(m119), h124++;
                continue;
            }
            for(w = u236 + 1, T37 = w, i525 = w, n518 === Me6 ? (i525 = ++T37, n518 = e1076.charCodeAt(i525), n518 === Oe5 || n518 === Re4 ? (d101 = M31, i525 = ++T37) : d101 = O38) : d101 = N29, y76 = "", b75 = "", o = "", K19 = P36[d101], i525--; ++i525 < U32 && (n518 = e1076.charCodeAt(i525), !!K19(n518));)o += g95(n518), d101 === N29 && Se6.call(ae8, o) && (y76 = o, b75 = ae8[o]);
            C = e1076.charCodeAt(i525) === He5, C && (i525++, j55 = d101 === N29 ? Pe8(o) : !1, j55 && (y76 = o, b75 = j55)), c149 = 1 + i525 - w, !C && !v61 || (o ? d101 === N29 ? (C && !b75 ? l233(de6, 1) : (y76 !== o && (i525 = T37 + y76.length, c149 = 1 + i525 - T37, C = !1), C || (k59 = y76 ? le6 : se7, r588.attribute ? (n518 = e1076.charCodeAt(i525), n518 === Le5 ? (l233(k59, c149), b75 = null) : oe9(n518) ? b75 = null : l233(k59, c149)) : l233(k59, c149))), t862 = b75) : (C || l233(ce6, c149), t862 = parseInt(o, R30[d101]), Ge5(t862) ? (l233(ue8, c149), t862 = g95(We4)) : t862 in ne11 ? (l233(L27, c149), t862 = ne11[t862]) : (D37 = "", Je4(t862) && l233(L27, c149), t862 > 65535 && (t862 -= 65536, D37 += g95(t862 >>> 10 | 55296), t862 = 56320 | t862 & 1023), t862 = D37 + g95(t862))) : d101 !== N29 && l233(ve6, c149)), t862 ? (Q15(), q41 = A51(), u236 = i525 - 1, h124 += i525 - w + 1, X24.push(t862), $44 = A51(), $44.offset++, z31 && z31.call(pe6, t862, {
                start: q41,
                end: $44
            }, e1076.slice(w - 1, i525)), q41 = $44) : (o = e1076.slice(w - 1, i525), p171 += o, h124 += o.length, u236 = i525 - 1);
        } else m119 === 10 && (J21++, G21++, h124 = 0), m119 === m119 ? (p171 += g95(m119), h124++) : Q15();
        return X24.join("");
        function A51() {
            return {
                line: J21,
                column: h124,
                offset: u236 + (S68.offset || 0)
            };
        }
        function we6(V21, Y14) {
            var H16 = A51();
            H16.column += Y14, H16.offset += Y14, B37.call(Ce5, x106[V21], H16, V21);
        }
        function Q15() {
            p171 && (X24.push(p171), f141 && f141.call(he7, p171, {
                start: q41,
                end: A51()
            }), p171 = "");
        }
    }
    s23(Be5, "parse");
    function Ge5(e1077) {
        return e1077 >= 55296 && e1077 <= 57343 || e1077 > 1114111;
    }
    s23(Ge5, "prohibited");
    function Je4(e1078) {
        return e1078 >= 1 && e1078 <= 8 || e1078 === 11 || e1078 >= 13 && e1078 <= 31 || e1078 >= 127 && e1078 <= 159 || e1078 >= 64976 && e1078 <= 65007 || (e1078 & 65535) === 65535 || (e1078 & 65535) === 65534;
    }
    s23(Je4, "disallowed");
});
var xe4 = _12(W7()), Ke2 = _12(W7()), { default: Qe2 , ...Ve4 } = Ke2, er1 = (xe4.default ?? Qe2) ?? Ve4;
var L9 = Object.create;
var f22 = Object.defineProperty;
var O15 = Object.getOwnPropertyDescriptor;
var T16 = Object.getOwnPropertyNames;
var U11 = Object.getPrototypeOf, D20 = Object.prototype.hasOwnProperty;
var t13 = (r589, e1079)=>f22(r589, "name", {
        value: e1079,
        configurable: !0
    });
var c22 = (r590, e1080)=>()=>(e1080 || r590((e1080 = {
            exports: {}
        }).exports, e1080), e1080.exports);
var P18 = (r591, e1081, a222, i526)=>{
    if (e1081 && typeof e1081 == "object" || typeof e1081 == "function") for (let n519 of T16(e1081))!D20.call(r591, n519) && n519 !== a222 && f22(r591, n519, {
        get: ()=>e1081[n519],
        enumerable: !(i526 = O15(e1081, n519)) || i526.enumerable
    });
    return r591;
};
var v25 = (r592, e1082, a223)=>(a223 = r592 != null ? L9(U11(r592)) : {}, P18(e1082 || !r592 || !r592.__esModule ? f22(a223, "default", {
        value: r592,
        enumerable: !0
    }) : a223, r592));
var S20 = c22((ee, b76)=>{
    "use strict";
    b76.exports = M32;
    function M32(r593) {
        return r593.toLowerCase();
    }
    t13(M32, "normalize");
});
var u22 = c22((re, w)=>{
    "use strict";
    w.exports = y77;
    var o = y77.prototype;
    o.space = null;
    o.attribute = null;
    o.property = null;
    o.boolean = !1;
    o.booleanish = !1;
    o.overloadedBoolean = !1;
    o.number = !1;
    o.commaSeparated = !1;
    o.spaceSeparated = !1;
    o.commaOrSpaceSeparated = !1;
    o.mustUseProperty = !1;
    o.defined = !1;
    function y77(r594, e1083) {
        this.property = r594, this.attribute = e1083;
    }
    t13(y77, "Info");
});
var x34 = c22((s308)=>{
    "use strict";
    var Z14 = 0;
    s308.boolean = p172();
    s308.booleanish = p172();
    s308.overloadedBoolean = p172();
    s308.number = p172();
    s308.spaceSeparated = p172();
    s308.commaSeparated = p172();
    s308.commaOrSpaceSeparated = p172();
    function p172() {
        return Math.pow(2, ++Z14);
    }
    t13(p172, "increment");
});
var $23 = c22((te, I48)=>{
    "use strict";
    var k60 = u22(), A52 = x34();
    I48.exports = d102;
    d102.prototype = new k60;
    d102.prototype.defined = !0;
    var q42 = [
        "boolean",
        "booleanish",
        "overloadedBoolean",
        "number",
        "commaSeparated",
        "spaceSeparated",
        "commaOrSpaceSeparated"
    ], j56 = q42.length;
    function d102(r595, e1084, a224, i527) {
        var n520 = -1, l234;
        for(g96(this, "space", i527), k60.call(this, r595, e1084); ++n520 < j56;)l234 = q42[n520], g96(this, l234, (a224 & A52[l234]) === A52[l234]);
    }
    t13(d102, "DefinedInfo");
    function g96(r596, e1085, a225) {
        a225 && (r596[e1085] = a225);
    }
    t13(g96, "mark");
});
var h27 = c22((oe, z32)=>{
    "use strict";
    var E50 = S20(), F39 = $23(), G22 = u22(), m120 = "data";
    z32.exports = K20;
    var H17 = /^data[-\w.:]+$/i, C = /-[a-z]/g, J22 = /[A-Z]/g;
    function K20(r597, e1086) {
        var a226 = E50(e1086), i528 = e1086, n521 = G22;
        return a226 in r597.normal ? r597.property[r597.normal[a226]] : (a226.length > 4 && a226.slice(0, 4) === m120 && H17.test(e1086) && (e1086.charAt(4) === "-" ? i528 = N30(e1086) : e1086 = Q16(e1086), n521 = F39), new n521(i528, e1086));
    }
    t13(K20, "find");
    function N30(r598) {
        var e1087 = r598.slice(5).replace(C, V22);
        return m120 + e1087.charAt(0).toUpperCase() + e1087.slice(1);
    }
    t13(N30, "datasetToProperty");
    function Q16(r599) {
        var e1088 = r599.slice(4);
        return C.test(e1088) ? r599 : (e1088 = e1088.replace(J22, R31), e1088.charAt(0) !== "-" && (e1088 = "-" + e1088), m120 + e1088);
    }
    t13(Q16, "datasetToAttribute");
    function R31(r600) {
        return "-" + r600.toLowerCase();
    }
    t13(R31, "kebab");
    function V22(r601) {
        return r601.charAt(1).toUpperCase();
    }
    t13(V22, "camelcase");
});
var B19 = v25(h27()), W8 = v25(h27()), { default: X9 , ...Y4 } = W8, ne5 = (B19.default ?? X9) ?? Y4;
var s24 = Object.create;
var n18 = Object.defineProperty;
var u23 = Object.getOwnPropertyDescriptor;
var v26 = Object.getOwnPropertyNames;
var g27 = Object.getPrototypeOf, $24 = Object.prototype.hasOwnProperty;
var p33 = (t863, r602)=>n18(t863, "name", {
        value: r602,
        configurable: !0
    });
var h28 = (t864, r603)=>()=>(r603 || t864((r603 = {
            exports: {}
        }).exports, r603), r603.exports);
var i27 = (t865, r604, a227, e1089)=>{
    if (r604 && typeof r604 == "object" || typeof r604 == "function") for (let o of v26(r604))!$24.call(t865, o) && o !== a227 && n18(t865, o, {
        get: ()=>r604[o],
        enumerable: !(e1089 = u23(r604, o)) || e1089.enumerable
    });
    return t865;
};
var l26 = (t866, r605, a228)=>(a228 = t866 != null ? s24(g27(t866)) : {}, i27(r605 || !t866 || !t866.__esModule ? n18(a228, "default", {
        value: t866,
        enumerable: !0
    }) : a228, t866));
var f23 = h28((j, m121)=>{
    m121.exports = O39;
    var x107 = Object.prototype.hasOwnProperty;
    function O39() {
        for(var t867 = {}, r606 = 0; r606 < arguments.length; r606++){
            var a229 = arguments[r606];
            for(var e1090 in a229)x107.call(a229, e1090) && (t867[e1090] = a229[e1090]);
        }
        return t867;
    }
    p33(O39, "extend");
});
var d23 = l26(f23()), c23 = l26(f23()), { default: w19 , ...P19 } = c23, y22 = (d23.default ?? w19) ?? P19;
var ml = Object.create;
var M10 = Object.defineProperty;
var vl = Object.getOwnPropertyDescriptor;
var hl = Object.getOwnPropertyNames;
var fl = Object.getPrototypeOf, gl = Object.prototype.hasOwnProperty;
var a31 = (l235, e1091)=>M10(l235, "name", {
        value: e1091,
        configurable: !0
    }), Sl = ((l236)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(l236, {
        get: (e1092, o)=>(typeof require != "undefined" ? require : e1092)[o]
    }) : l236)(function(l237) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + l237 + '" is not supported');
});
var u24 = (l238, e1093)=>()=>(e1093 || l238((e1093 = {
            exports: {}
        }).exports, e1093), e1093.exports);
var xl = (l239, e1094, o, m122)=>{
    if (e1094 && typeof e1094 == "object" || typeof e1094 == "function") for (let i529 of hl(e1094))!gl.call(l239, i529) && i529 !== o && M10(l239, i529, {
        get: ()=>e1094[i529],
        enumerable: !(m122 = vl(e1094, i529)) || m122.enumerable
    });
    return l239;
};
var E14 = (l240, e1095, o)=>(o = l240 != null ? ml(fl(l240)) : {}, xl(e1095 || !l240 || !l240.__esModule ? M10(o, "default", {
        value: l240,
        enumerable: !0
    }) : o, l240));
var q20 = u24((Yl, B38)=>{
    "use strict";
    B38.exports = O40;
    var P37 = O40.prototype;
    P37.space = null;
    P37.normal = {};
    P37.property = {};
    function O40(l241, e1096, o) {
        this.property = l241, this.normal = e1096, o && (this.space = o);
    }
    a31(O40, "Schema");
});
var z12 = u24((Zl, A53)=>{
    "use strict";
    var U33 = y22, yl2 = q20();
    A53.exports = bl;
    function bl(l242) {
        for(var e1097 = l242.length, o = [], m123 = [], i530 = -1, d103, y78; ++i530 < e1097;)d103 = l242[i530], o.push(d103.property), m123.push(d103.normal), y78 = d103.space;
        return new yl2(U33.apply(null, o), U33.apply(null, m123), y78);
    }
    a31(bl, "merge");
});
var V9 = u24((le, H18)=>{
    "use strict";
    H18.exports = Cl2;
    function Cl2(l243) {
        return l243.toLowerCase();
    }
    a31(Cl2, "normalize");
});
var N14 = u24((ee, K21)=>{
    "use strict";
    K21.exports = F40;
    var c150 = F40.prototype;
    c150.space = null;
    c150.attribute = null;
    c150.property = null;
    c150.boolean = !1;
    c150.booleanish = !1;
    c150.overloadedBoolean = !1;
    c150.number = !1;
    c150.commaSeparated = !1;
    c150.spaceSeparated = !1;
    c150.commaOrSpaceSeparated = !1;
    c150.mustUseProperty = !1;
    c150.defined = !1;
    function F40(l244, e1098) {
        this.property = l244, this.attribute = e1098;
    }
    a31(F40, "Info");
});
var w20 = u24((h125)=>{
    "use strict";
    var wl = 0;
    h125.boolean = f142();
    h125.booleanish = f142();
    h125.overloadedBoolean = f142();
    h125.number = f142();
    h125.spaceSeparated = f142();
    h125.commaSeparated = f142();
    h125.commaOrSpaceSeparated = f142();
    function f142() {
        return Math.pow(2, ++wl);
    }
    a31(f142, "increment");
});
var X10 = u24((ae, G23)=>{
    "use strict";
    var j57 = N14(), W21 = w20();
    G23.exports = D38;
    D38.prototype = new j57;
    D38.prototype.defined = !0;
    var _25 = [
        "boolean",
        "booleanish",
        "overloadedBoolean",
        "number",
        "commaSeparated",
        "spaceSeparated",
        "commaOrSpaceSeparated"
    ], Ll2 = _25.length;
    function D38(l245, e1099, o, m124) {
        var i531 = -1, d104;
        for($45(this, "space", m124), j57.call(this, l245, e1099); ++i531 < Ll2;)d104 = _25[i531], $45(this, d104, (o & W21[d104]) === W21[d104]);
    }
    a31(D38, "DefinedInfo");
    function $45(l246, e1101, o) {
        o && (l246[e1101] = o);
    }
    a31($45, "mark");
});
var S21 = u24((re, Q17)=>{
    "use strict";
    var J23 = V9(), kl = q20(), Ml1 = X10();
    Q17.exports = Pl;
    function Pl(l247) {
        var e1102 = l247.space, o = l247.mustUseProperty || [], m125 = l247.attributes || {}, i532 = l247.properties, d105 = l247.transform, y79 = {}, k61 = {}, v62, C;
        for(v62 in i532)C = new Ml1(v62, d105(m125, v62), i532[v62], e1102), o.indexOf(v62) !== -1 && (C.mustUseProperty = !0), y79[v62] = C, k61[J23(v62)] = v62, k61[J23(C.attribute)] = v62;
        return new kl(y79, k61, e1102);
    }
    a31(Pl, "create");
});
var Z8 = u24((oe, Y15)=>{
    "use strict";
    var ql1 = S21();
    Y15.exports = ql1({
        space: "xlink",
        transform: Dl1,
        properties: {
            xLinkActuate: null,
            xLinkArcRole: null,
            xLinkHref: null,
            xLinkRole: null,
            xLinkShow: null,
            xLinkTitle: null,
            xLinkType: null
        }
    });
    function Dl1(l, e1103) {
        return "xlink:" + e1103.slice(5).toLowerCase();
    }
    a31(Dl1, "xlinkTransform");
});
var el = u24((ue, ll)=>{
    "use strict";
    var Tl = S21();
    ll.exports = Tl({
        space: "xml",
        transform: Il1,
        properties: {
            xmlLang: null,
            xmlBase: null,
            xmlSpace: null
        }
    });
    function Il1(l, e1104) {
        return "xml:" + e1104.slice(3).toLowerCase();
    }
    a31(Il1, "xmlTransform");
});
var al = u24((te, nl)=>{
    "use strict";
    nl.exports = Rl2;
    function Rl2(l248, e1105) {
        return e1105 in l248 ? l248[e1105] : e1105;
    }
    a31(Rl2, "caseSensitiveTransform");
});
var T17 = u24((ie, rl2)=>{
    "use strict";
    var El = al();
    rl2.exports = Ol1;
    function Ol1(l249, e1106) {
        return El(l249, e1106.toLowerCase());
    }
    a31(Ol1, "caseInsensitiveTransform");
});
var ul = u24((se, ol)=>{
    "use strict";
    var Bl1 = S21(), Ul = T17();
    ol.exports = Bl1({
        space: "xmlns",
        attributes: {
            xmlnsxlink: "xmlns:xlink"
        },
        transform: Ul,
        properties: {
            xmlns: null,
            xmlnsXLink: null
        }
    });
});
var il = u24((ce, tl2)=>{
    "use strict";
    var I49 = w20(), Al2 = S21(), s309 = I49.booleanish, p173 = I49.number, g97 = I49.spaceSeparated;
    tl2.exports = Al2({
        transform: zl2,
        properties: {
            ariaActiveDescendant: null,
            ariaAtomic: s309,
            ariaAutoComplete: null,
            ariaBusy: s309,
            ariaChecked: s309,
            ariaColCount: p173,
            ariaColIndex: p173,
            ariaColSpan: p173,
            ariaControls: g97,
            ariaCurrent: null,
            ariaDescribedBy: g97,
            ariaDetails: null,
            ariaDisabled: s309,
            ariaDropEffect: g97,
            ariaErrorMessage: null,
            ariaExpanded: s309,
            ariaFlowTo: g97,
            ariaGrabbed: s309,
            ariaHasPopup: null,
            ariaHidden: s309,
            ariaInvalid: null,
            ariaKeyShortcuts: null,
            ariaLabel: null,
            ariaLabelledBy: g97,
            ariaLevel: p173,
            ariaLive: null,
            ariaModal: s309,
            ariaMultiLine: s309,
            ariaMultiSelectable: s309,
            ariaOrientation: null,
            ariaOwns: g97,
            ariaPlaceholder: null,
            ariaPosInSet: p173,
            ariaPressed: s309,
            ariaReadOnly: s309,
            ariaRelevant: null,
            ariaRequired: s309,
            ariaRoleDescription: g97,
            ariaRowCount: p173,
            ariaRowIndex: p173,
            ariaRowSpan: p173,
            ariaSelected: s309,
            ariaSetSize: p173,
            ariaSort: null,
            ariaValueMax: p173,
            ariaValueMin: p173,
            ariaValueNow: p173,
            ariaValueText: null,
            role: null
        }
    });
    function zl2(l, e1107) {
        return e1107 === "role" ? e1107 : "aria-" + e1107.slice(4).toLowerCase();
    }
    a31(zl2, "ariaTransform");
});
var cl = u24((pe, sl2)=>{
    "use strict";
    var x108 = w20(), Hl = S21(), Vl1 = T17(), n522 = x108.boolean, Fl2 = x108.overloadedBoolean, b77 = x108.booleanish, r607 = x108.number, t868 = x108.spaceSeparated, L28 = x108.commaSeparated;
    sl2.exports = Hl({
        space: "html",
        attributes: {
            acceptcharset: "accept-charset",
            classname: "class",
            htmlfor: "for",
            httpequiv: "http-equiv"
        },
        transform: Vl1,
        mustUseProperty: [
            "checked",
            "multiple",
            "muted",
            "selected"
        ],
        properties: {
            abbr: null,
            accept: L28,
            acceptCharset: t868,
            accessKey: t868,
            action: null,
            allow: null,
            allowFullScreen: n522,
            allowPaymentRequest: n522,
            allowUserMedia: n522,
            alt: null,
            as: null,
            async: n522,
            autoCapitalize: null,
            autoComplete: t868,
            autoFocus: n522,
            autoPlay: n522,
            capture: n522,
            charSet: null,
            checked: n522,
            cite: null,
            className: t868,
            cols: r607,
            colSpan: null,
            content: null,
            contentEditable: b77,
            controls: n522,
            controlsList: t868,
            coords: r607 | L28,
            crossOrigin: null,
            data: null,
            dateTime: null,
            decoding: null,
            default: n522,
            defer: n522,
            dir: null,
            dirName: null,
            disabled: n522,
            download: Fl2,
            draggable: b77,
            encType: null,
            enterKeyHint: null,
            form: null,
            formAction: null,
            formEncType: null,
            formMethod: null,
            formNoValidate: n522,
            formTarget: null,
            headers: t868,
            height: r607,
            hidden: n522,
            high: r607,
            href: null,
            hrefLang: null,
            htmlFor: t868,
            httpEquiv: t868,
            id: null,
            imageSizes: null,
            imageSrcSet: L28,
            inputMode: null,
            integrity: null,
            is: null,
            isMap: n522,
            itemId: null,
            itemProp: t868,
            itemRef: t868,
            itemScope: n522,
            itemType: t868,
            kind: null,
            label: null,
            lang: null,
            language: null,
            list: null,
            loading: null,
            loop: n522,
            low: r607,
            manifest: null,
            max: null,
            maxLength: r607,
            media: null,
            method: null,
            min: null,
            minLength: r607,
            multiple: n522,
            muted: n522,
            name: null,
            nonce: null,
            noModule: n522,
            noValidate: n522,
            onAbort: null,
            onAfterPrint: null,
            onAuxClick: null,
            onBeforePrint: null,
            onBeforeUnload: null,
            onBlur: null,
            onCancel: null,
            onCanPlay: null,
            onCanPlayThrough: null,
            onChange: null,
            onClick: null,
            onClose: null,
            onContextMenu: null,
            onCopy: null,
            onCueChange: null,
            onCut: null,
            onDblClick: null,
            onDrag: null,
            onDragEnd: null,
            onDragEnter: null,
            onDragExit: null,
            onDragLeave: null,
            onDragOver: null,
            onDragStart: null,
            onDrop: null,
            onDurationChange: null,
            onEmptied: null,
            onEnded: null,
            onError: null,
            onFocus: null,
            onFormData: null,
            onHashChange: null,
            onInput: null,
            onInvalid: null,
            onKeyDown: null,
            onKeyPress: null,
            onKeyUp: null,
            onLanguageChange: null,
            onLoad: null,
            onLoadedData: null,
            onLoadedMetadata: null,
            onLoadEnd: null,
            onLoadStart: null,
            onMessage: null,
            onMessageError: null,
            onMouseDown: null,
            onMouseEnter: null,
            onMouseLeave: null,
            onMouseMove: null,
            onMouseOut: null,
            onMouseOver: null,
            onMouseUp: null,
            onOffline: null,
            onOnline: null,
            onPageHide: null,
            onPageShow: null,
            onPaste: null,
            onPause: null,
            onPlay: null,
            onPlaying: null,
            onPopState: null,
            onProgress: null,
            onRateChange: null,
            onRejectionHandled: null,
            onReset: null,
            onResize: null,
            onScroll: null,
            onSecurityPolicyViolation: null,
            onSeeked: null,
            onSeeking: null,
            onSelect: null,
            onSlotChange: null,
            onStalled: null,
            onStorage: null,
            onSubmit: null,
            onSuspend: null,
            onTimeUpdate: null,
            onToggle: null,
            onUnhandledRejection: null,
            onUnload: null,
            onVolumeChange: null,
            onWaiting: null,
            onWheel: null,
            open: n522,
            optimum: r607,
            pattern: null,
            ping: t868,
            placeholder: null,
            playsInline: n522,
            poster: null,
            preload: null,
            readOnly: n522,
            referrerPolicy: null,
            rel: t868,
            required: n522,
            reversed: n522,
            rows: r607,
            rowSpan: r607,
            sandbox: t868,
            scope: null,
            scoped: n522,
            seamless: n522,
            selected: n522,
            shape: null,
            size: r607,
            sizes: null,
            slot: null,
            span: r607,
            spellCheck: b77,
            src: null,
            srcDoc: null,
            srcLang: null,
            srcSet: L28,
            start: r607,
            step: null,
            style: null,
            tabIndex: r607,
            target: null,
            title: null,
            translate: null,
            type: null,
            typeMustMatch: n522,
            useMap: null,
            value: b77,
            width: r607,
            wrap: null,
            align: null,
            aLink: null,
            archive: t868,
            axis: null,
            background: null,
            bgColor: null,
            border: r607,
            borderColor: null,
            bottomMargin: r607,
            cellPadding: null,
            cellSpacing: null,
            char: null,
            charOff: null,
            classId: null,
            clear: null,
            code: null,
            codeBase: null,
            codeType: null,
            color: null,
            compact: n522,
            declare: n522,
            event: null,
            face: null,
            frame: null,
            frameBorder: null,
            hSpace: r607,
            leftMargin: r607,
            link: null,
            longDesc: null,
            lowSrc: null,
            marginHeight: r607,
            marginWidth: r607,
            noResize: n522,
            noHref: n522,
            noShade: n522,
            noWrap: n522,
            object: null,
            profile: null,
            prompt: null,
            rev: null,
            rightMargin: r607,
            rules: null,
            scheme: null,
            scrolling: b77,
            standby: null,
            summary: null,
            text: null,
            topMargin: r607,
            valueType: null,
            version: null,
            vAlign: null,
            vLink: null,
            vSpace: r607,
            allowTransparency: null,
            autoCorrect: null,
            autoSave: null,
            disablePictureInPicture: n522,
            disableRemotePlayback: n522,
            prefix: null,
            property: null,
            results: r607,
            security: null,
            unselectable: null
        }
    });
});
var R12 = u24((de, pl)=>{
    "use strict";
    var Kl = z12(), Nl1 = Z8(), Wl1 = el(), $l1 = ul(), jl1 = il(), _l = cl();
    pl.exports = Kl([
        Wl1,
        Nl1,
        $l1,
        jl1,
        _l
    ]);
});
var dl = E14(R12()), Gl = E14(R12()), { default: Xl , ...Jl } = Gl, me3 = (dl.default ?? Xl) ?? Jl;
var h29 = Object.create;
var o15 = Object.defineProperty;
var x35 = Object.getOwnPropertyDescriptor;
var y23 = Object.getOwnPropertyNames;
var $25 = Object.getPrototypeOf, O16 = Object.prototype.hasOwnProperty;
var p34 = (r608, t869)=>o15(r608, "name", {
        value: t869,
        configurable: !0
    });
var j28 = (r609, t870)=>()=>(t870 || r609((t870 = {
            exports: {}
        }).exports, t870), t870.exports);
var w21 = (r610, t871, e1108, a230)=>{
    if (t871 && typeof t871 == "object" || typeof t871 == "function") for (let i533 of y23(t871))!O16.call(r610, i533) && i533 !== e1108 && o15(r610, i533, {
        get: ()=>t871[i533],
        enumerable: !(a230 = x35(t871, i533)) || a230.enumerable
    });
    return r610;
};
var m27 = (r611, t872, e1109)=>(e1109 = r611 != null ? h29($25(r611)) : {}, w21(t872 || !r611 || !r611.__esModule ? o15(e1109, "default", {
        value: r611,
        enumerable: !0
    }) : e1109, r611));
var l27 = j28((c151)=>{
    "use strict";
    c151.parse = I50;
    c151.stringify = L29;
    var d106 = ",", v63 = " ", n523 = "";
    function I50(r612) {
        for(var t873 = [], e1110 = String(r612 || n523), a231 = e1110.indexOf(d106), i534 = 0, f143 = !1, s310; !f143;)a231 === -1 && (a231 = e1110.length, f143 = !0), s310 = e1110.slice(i534, a231).trim(), (s310 || !f143) && t873.push(s310), i534 = a231 + 1, a231 = e1110.indexOf(d106, i534);
        return t873;
    }
    p34(I50, "parse");
    function L29(r613, t874) {
        var e1111 = t874 || {}, a232 = e1111.padLeft === !1 ? n523 : v63, i535 = e1111.padRight ? v63 : n523;
        return r613[r613.length - 1] === n523 && (r613 = r613.concat(n523)), r613.join(i535 + d106 + a232).trim();
    }
    p34(L29, "stringify");
});
var g28 = m27(l27()), u25 = m27(l27()), { parse: q21 , stringify: z13  } = u25, { default: R13 , ...S22 } = u25, A19 = (g28.default ?? R13) ?? S22;
var d24 = Object.create;
var n19 = Object.defineProperty;
var g29 = Object.getOwnPropertyDescriptor;
var l28 = Object.getOwnPropertyNames;
var v27 = Object.getPrototypeOf, y24 = Object.prototype.hasOwnProperty;
var s25 = (t875, r614)=>n19(t875, "name", {
        value: r614,
        configurable: !0
    });
var $26 = (t876, r615)=>()=>(r615 || t876((r615 = {
            exports: {}
        }).exports, r615), r615.exports);
var x36 = (t877, r616, e1112, o)=>{
    if (r616 && typeof r616 == "object" || typeof r616 == "function") for (let i536 of l28(r616))!y24.call(t877, i536) && i536 !== e1112 && n19(t877, i536, {
        get: ()=>r616[i536],
        enumerable: !(o = g29(r616, i536)) || o.enumerable
    });
    return t877;
};
var p35 = (t878, r617, e1113)=>(e1113 = t878 != null ? d24(v27(t878)) : {}, x36(r617 || !t878 || !t878.__esModule ? n19(e1113, "default", {
        value: t878,
        enumerable: !0
    }) : e1113, t878));
var f24 = $26((a233)=>{
    "use strict";
    a233.parse = j58;
    a233.stringify = w;
    var u237 = "", S69 = " ", h126 = /[ \t\n\r\f]+/g;
    function j58(t879) {
        var r618 = String(t879 || u237).trim();
        return r618 === u237 ? [] : r618.split(h126);
    }
    s25(j58, "parse");
    function w(t880) {
        return t880.join(S69).trim();
    }
    s25(w, "stringify");
});
var m28 = p35(f24()), c24 = p35(f24()), { parse: A20 , stringify: B20  } = c24, { default: b25 , ...k24 } = c24, C23 = (m28.default ?? b25) ?? k24;
var h30 = Object.create;
var n20 = Object.defineProperty;
var g30 = Object.getOwnPropertyDescriptor;
var x37 = Object.getOwnPropertyNames;
var N15 = Object.getPrototypeOf, $27 = Object.prototype.hasOwnProperty;
var p36 = (a234, e1114)=>n20(a234, "name", {
        value: e1114,
        configurable: !0
    });
var b26 = (a235, e1115)=>()=>(e1115 || a235((e1115 = {
            exports: {}
        }).exports, e1115), e1115.exports);
var w22 = (a236, e1116, s311, l250)=>{
    if (e1116 && typeof e1116 == "object" || typeof e1116 == "function") for (let r619 of x37(e1116))!$27.call(a236, r619) && r619 !== s311 && n20(a236, r619, {
        get: ()=>e1116[r619],
        enumerable: !(l250 = g30(e1116, r619)) || l250.enumerable
    });
    return a236;
};
var u26 = (a237, e1117, s312)=>(s312 = a237 != null ? h30(N15(a237)) : {}, w22(e1117 || !a237 || !a237.__esModule ? n20(s312, "default", {
        value: a237,
        enumerable: !0
    }) : s312, a237));
var o16 = b26((z, c152)=>{
    "use strict";
    c152.exports = y80;
    var v64 = /[#.]/g;
    function y80(a238, e1118) {
        for(var s313 = a238 || "", l251 = e1118 || "div", r620 = {}, i537 = 0, t881, m126, f144; i537 < s313.length;)v64.lastIndex = i537, f144 = v64.exec(s313), t881 = s313.slice(i537, f144 ? f144.index : s313.length), t881 && (m126 ? m126 === "#" ? r620.id = t881 : r620.className ? r620.className.push(t881) : r620.className = [
            t881
        ] : l251 = t881, i537 += t881.length), f144 && (m126 = f144[0], i537++);
        return {
            type: "element",
            tagName: l251,
            properties: r620,
            children: []
        };
    }
    p36(y80, "parse");
});
var d25 = u26(o16()), I25 = u26(o16()), { default: j29 , ...k25 } = I25, A21 = (d25.default ?? j29) ?? k25;
var l29 = Object.create;
var f25 = Object.defineProperty;
var n21 = Object.getOwnPropertyDescriptor;
var p37 = Object.getOwnPropertyNames;
var $28 = Object.getPrototypeOf, c25 = Object.prototype.hasOwnProperty;
var a32 = (t882, e1119)=>f25(t882, "name", {
        value: e1119,
        configurable: !0
    });
var x38 = (t883, e1120)=>()=>(e1120 || t883((e1120 = {
            exports: {}
        }).exports, e1120), e1120.exports);
var w23 = (t884, e1121, o, u238)=>{
    if (e1121 && typeof e1121 == "object" || typeof e1121 == "function") for (let r621 of p37(e1121))!c25.call(t884, r621) && r621 !== o && f25(t884, r621, {
        get: ()=>e1121[r621],
        enumerable: !(u238 = n21(e1121, r621)) || u238.enumerable
    });
    return t884;
};
var m29 = (t885, e1122, o)=>(o = t885 != null ? l29($28(t885)) : {}, w23(e1122 || !t885 || !t885.__esModule ? f25(o, "default", {
        value: t885,
        enumerable: !0
    }) : o, t885));
var s26 = x38((h, d107)=>{
    "use strict";
    d107.exports = z33;
    function z33(t886) {
        return t886.toLowerCase();
    }
    a32(z33, "normalize");
});
var i28 = m29(s26()), C24 = m29(s26()), { default: L10 , ...b27 } = C24, j30 = (i28.default ?? L10) ?? b27;
var A22 = Object.create;
var h31 = Object.defineProperty;
var E15 = Object.getOwnPropertyDescriptor;
var O17 = Object.getOwnPropertyNames;
var k26 = Object.getPrototypeOf, z14 = Object.prototype.hasOwnProperty;
var s27 = (e1123, r622)=>h31(e1123, "name", {
        value: r622,
        configurable: !0
    }), p38 = ((e1124)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e1124, {
        get: (r623, t887)=>(typeof require != "undefined" ? require : r623)[t887]
    }) : e1124)(function(e1125) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e1125 + '" is not supported');
});
var m30 = (e1126, r624)=>()=>(r624 || e1126((r624 = {
            exports: {}
        }).exports, r624), r624.exports);
var B21 = (e1127, r625, t888, n524)=>{
    if (r625 && typeof r625 == "object" || typeof r625 == "function") for (let a239 of O17(r625))!z14.call(e1127, a239) && a239 !== t888 && h31(e1127, a239, {
        get: ()=>r625[a239],
        enumerable: !(n524 = E15(r625, a239)) || n524.enumerable
    });
    return e1127;
};
var g31 = (e1128, r626, t889)=>(t889 = e1128 != null ? A22(k26(e1128)) : {}, B21(r626 || !e1128 || !e1128.__esModule ? h31(t889, "default", {
        value: e1128,
        enumerable: !0
    }) : t889, e1128));
var q22 = m30((Y, x109)=>{
    "use strict";
    var M33 = ne5, b78 = j30, D39 = A21, N31 = A20, v65 = q21;
    x109.exports = G24;
    var F41 = {}.hasOwnProperty;
    function G24(e1129, r627, t890) {
        var n525 = t890 ? Q18(t890) : null;
        return a240;
        function a240(l252, f145) {
            var i538 = D39(l252, r627), c153 = Array.prototype.slice.call(arguments, 2), u239 = i538.tagName.toLowerCase(), o;
            if (i538.tagName = n525 && F41.call(n525, u239) ? n525[u239] : u239, f145 && H19(f145, i538) && (c153.unshift(f145), f145 = null), f145) for(o in f145)d108(i538.properties, o, f145[o]);
            return j59(i538.children, c153), i538.tagName === "template" && (i538.content = {
                type: "root",
                children: i538.children
            }, i538.children = []), i538;
        }
        function d108(l253, f146, i539) {
            var c154, u240, o;
            i539 == null || i539 !== i539 || (c154 = M33(e1129, f146), u240 = c154.property, o = i539, typeof o == "string" && (c154.spaceSeparated ? o = N31(o) : c154.commaSeparated ? o = v65(o) : c154.commaOrSpaceSeparated && (o = N31(v65(o).join(" ")))), u240 === "style" && typeof i539 != "string" && (o = K22(o)), u240 === "className" && l253.className && (o = l253.className.concat(o)), l253[u240] = J24(c154, u240, o));
        }
    }
    s27(G24, "factory");
    function H19(e1130, r628) {
        return typeof e1130 == "string" || "length" in e1130 || I51(r628.tagName, e1130);
    }
    s27(H19, "isChildren");
    function I51(e1131, r629) {
        var t891 = r629.type;
        return e1131 === "input" || !t891 || typeof t891 != "string" ? !1 : typeof r629.children == "object" && "length" in r629.children ? !0 : (t891 = t891.toLowerCase(), e1131 === "button" ? t891 !== "menu" && t891 !== "submit" && t891 !== "reset" && t891 !== "button" : "value" in r629);
    }
    s27(I51, "isNode");
    function j59(e1132, r630) {
        var t892, n526;
        if (typeof r630 == "string" || typeof r630 == "number") {
            e1132.push({
                type: "text",
                value: String(r630)
            });
            return;
        }
        if (typeof r630 == "object" && "length" in r630) {
            for(t892 = -1, n526 = r630.length; ++t892 < n526;)j59(e1132, r630[t892]);
            return;
        }
        if (typeof r630 != "object" || !("type" in r630)) throw new Error("Expected node, nodes, or string, got `" + r630 + "`");
        e1132.push(r630);
    }
    s27(j59, "addChild");
    function J24(e1133, r631, t893) {
        var n527, a241, d109;
        if (typeof t893 != "object" || !("length" in t893)) return w(e1133, r631, t893);
        for(a241 = t893.length, n527 = -1, d109 = []; ++n527 < a241;)d109[n527] = w(e1133, r631, t893[n527]);
        return d109;
    }
    s27(J24, "parsePrimitives");
    function w(e1134, r632, t894) {
        var n528 = t894;
        return e1134.number || e1134.positiveNumber ? !isNaN(n528) && n528 !== "" && (n528 = Number(n528)) : (e1134.boolean || e1134.overloadedBoolean) && typeof n528 == "string" && (n528 === "" || b78(t894) === b78(r632)) && (n528 = !0), n528;
    }
    s27(w, "parsePrimitive");
    function K22(e1135) {
        var r633 = [], t895;
        for(t895 in e1135)r633.push([
            t895,
            e1135[t895]
        ].join(": "));
        return r633.join("; ");
    }
    s27(K22, "style");
    function Q18(e1136) {
        for(var r634 = e1136.length, t896 = -1, n529 = {}, a242; ++t896 < r634;)a242 = e1136[t896], n529[a242.toLowerCase()] = a242;
        return n529;
    }
    s27(Q18, "createAdjustMap");
});
var P20 = m30((Z, S70)=>{
    "use strict";
    var R32 = me3, T38 = q22(), C = T38(R32, "div");
    C.displayName = "html";
    S70.exports = C;
});
var y25 = m30((_, $46)=>{
    "use strict";
    $46.exports = P20();
});
var L11 = g31(y25()), U12 = g31(y25()), { default: V10 , ...W9 } = U12, rr1 = (L11.default ?? V10) ?? W9;
var __global$1 = globalThis || (typeof window !== "undefined" ? window : self);
var Nm = Object.create;
var ie5 = Object.defineProperty;
var wm = Object.getOwnPropertyDescriptor;
var vm = Object.getOwnPropertyNames;
var km = Object.getPrototypeOf, Cm = Object.prototype.hasOwnProperty;
var a33 = (e1137, t897)=>ie5(e1137, "name", {
        value: t897,
        configurable: !0
    }), oe4 = ((e1138)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e1138, {
        get: (t898, r635)=>(typeof require != "undefined" ? require : t898)[r635]
    }) : e1138)(function(e1139) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e1139 + '" is not supported');
});
var o17 = (e1140, t899)=>()=>(t899 || e1140((t899 = {
            exports: {}
        }).exports, t899), t899.exports);
var Om = (e1141, t900, r636, n530)=>{
    if (t900 && typeof t900 == "object" || typeof t900 == "function") for (let i540 of vm(t900))!Cm.call(e1141, i540) && i540 !== r636 && ie5(e1141, i540, {
        get: ()=>t900[i540],
        enumerable: !(n530 = wm(t900, i540)) || n530.enumerable
    });
    return e1141;
};
var Ri = (e1142, t901, r637)=>(r637 = e1142 != null ? Nm(km(e1142)) : {}, Om(t901 || !e1142 || !e1142.__esModule ? ie5(r637, "default", {
        value: e1142,
        enumerable: !0
    }) : r637, e1142));
var Ni = o17((Jf, Ii)=>{
    "use strict";
    Ii.exports = se8;
    se8.displayName = "markup";
    se8.aliases = [
        "html",
        "mathml",
        "svg",
        "xml",
        "ssml",
        "atom",
        "rss"
    ];
    function se8(e1143) {
        e1143.languages.markup = {
            comment: {
                pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
                greedy: !0
            },
            prolog: {
                pattern: /<\?[\s\S]+?\?>/,
                greedy: !0
            },
            doctype: {
                pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
                greedy: !0,
                inside: {
                    "internal-subset": {
                        pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: null
                    },
                    string: {
                        pattern: /"[^"]*"|'[^']*'/,
                        greedy: !0
                    },
                    punctuation: /^<!|>$|[[\]]/,
                    "doctype-tag": /^DOCTYPE/i,
                    name: /[^\s<>'"]+/
                }
            },
            cdata: {
                pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
                greedy: !0
            },
            tag: {
                pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
                greedy: !0,
                inside: {
                    tag: {
                        pattern: /^<\/?[^\s>\/]+/,
                        inside: {
                            punctuation: /^<\/?/,
                            namespace: /^[^\s>\/:]+:/
                        }
                    },
                    "special-attr": [],
                    "attr-value": {
                        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
                        inside: {
                            punctuation: [
                                {
                                    pattern: /^=/,
                                    alias: "attr-equals"
                                },
                                /"|'/
                            ]
                        }
                    },
                    punctuation: /\/?>/,
                    "attr-name": {
                        pattern: /[^\s>\/]+/,
                        inside: {
                            namespace: /^[^\s>\/:]+:/
                        }
                    }
                }
            },
            entity: [
                {
                    pattern: /&[\da-z]{1,8};/i,
                    alias: "named-entity"
                },
                /&#x?[\da-f]{1,8};/i
            ]
        }, e1143.languages.markup.tag.inside["attr-value"].inside.entity = e1143.languages.markup.entity, e1143.languages.markup.doctype.inside["internal-subset"].inside = e1143.languages.markup, e1143.hooks.add("wrap", function(t902) {
            t902.type === "entity" && (t902.attributes.title = t902.content.value.replace(/&amp;/, "&"));
        }), Object.defineProperty(e1143.languages.markup.tag, "addInlined", {
            value: a33(function(r638, n531) {
                var i541 = {};
                i541["language-" + n531] = {
                    pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
                    lookbehind: !0,
                    inside: e1143.languages[n531]
                }, i541.cdata = /^<!\[CDATA\[|\]\]>$/i;
                var l254 = {
                    "included-cdata": {
                        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
                        inside: i541
                    }
                };
                l254["language-" + n531] = {
                    pattern: /[\s\S]+/,
                    inside: e1143.languages[n531]
                };
                var d110 = {};
                d110[r638] = {
                    pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
                        return r638;
                    }), "i"),
                    lookbehind: !0,
                    greedy: !0,
                    inside: l254
                }, e1143.languages.insertBefore("markup", "cdata", d110);
            }, "addInlined")
        }), Object.defineProperty(e1143.languages.markup.tag, "addAttribute", {
            value: function(t903, r639) {
                e1143.languages.markup.tag.inside["special-attr"].push({
                    pattern: RegExp(/(^|["'\s])/.source + "(?:" + t903 + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"),
                    lookbehind: !0,
                    inside: {
                        "attr-name": /^[^\s=]+/,
                        "attr-value": {
                            pattern: /=[\s\S]+/,
                            inside: {
                                value: {
                                    pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                                    lookbehind: !0,
                                    alias: [
                                        r639,
                                        "language-" + r639
                                    ],
                                    inside: e1143.languages[r639]
                                },
                                punctuation: [
                                    {
                                        pattern: /^=/,
                                        alias: "attr-equals"
                                    },
                                    /"|'/
                                ]
                            }
                        }
                    }
                });
            }
        }), e1143.languages.html = e1143.languages.markup, e1143.languages.mathml = e1143.languages.markup, e1143.languages.svg = e1143.languages.markup, e1143.languages.xml = e1143.languages.extend("markup", {}), e1143.languages.ssml = e1143.languages.xml, e1143.languages.atom = e1143.languages.xml, e1143.languages.rss = e1143.languages.xml;
    }
    a33(se8, "markup");
});
var vi = o17((eE, wi)=>{
    "use strict";
    wi.exports = le7;
    le7.displayName = "css";
    le7.aliases = [];
    function le7(e1144) {
        (function(t904) {
            var r640 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
            t904.languages.css = {
                comment: /\/\*[\s\S]*?\*\//,
                atrule: {
                    pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
                    inside: {
                        rule: /^@[\w-]+/,
                        "selector-function-argument": {
                            pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
                            lookbehind: !0,
                            alias: "selector"
                        },
                        keyword: {
                            pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
                            lookbehind: !0
                        }
                    }
                },
                url: {
                    pattern: RegExp("\\burl\\((?:" + r640.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
                    greedy: !0,
                    inside: {
                        function: /^url/i,
                        punctuation: /^\(|\)$/,
                        string: {
                            pattern: RegExp("^" + r640.source + "$"),
                            alias: "url"
                        }
                    }
                },
                selector: {
                    pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + r640.source + ")*(?=\\s*\\{)"),
                    lookbehind: !0
                },
                string: {
                    pattern: r640,
                    greedy: !0
                },
                property: {
                    pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
                    lookbehind: !0
                },
                important: /!important\b/i,
                function: {
                    pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
                    lookbehind: !0
                },
                punctuation: /[(){};:,]/
            }, t904.languages.css.atrule.inside.rest = t904.languages.css;
            var n532 = t904.languages.markup;
            n532 && (n532.tag.addInlined("style", "css"), n532.tag.addAttribute("style", "css"));
        })(e1144);
    }
    a33(le7, "css");
});
var Ci = o17((tE, ki)=>{
    "use strict";
    ki.exports = ue9;
    ue9.displayName = "clike";
    ue9.aliases = [];
    function ue9(e1145) {
        e1145.languages.clike = {
            comment: [
                {
                    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /(^|[^\\:])\/\/.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: {
                pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            "class-name": {
                pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
                lookbehind: !0,
                inside: {
                    punctuation: /[.\\]/
                }
            },
            keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
            boolean: /\b(?:false|true)\b/,
            function: /\b\w+(?=\()/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
            punctuation: /[{}[\];(),.:]/
        };
    }
    a33(ue9, "clike");
});
var Li = o17((aE, Oi)=>{
    "use strict";
    Oi.exports = de7;
    de7.displayName = "javascript";
    de7.aliases = [
        "js"
    ];
    function de7(e1146) {
        e1146.languages.javascript = e1146.languages.extend("clike", {
            "class-name": [
                e1146.languages.clike["class-name"],
                {
                    pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
                    lookbehind: !0
                }
            ],
            keyword: [
                {
                    pattern: /((?:^|\})\s*)catch\b/,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
                    lookbehind: !0
                }
            ],
            function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
            number: {
                pattern: RegExp(/(^|[^\w$])/.source + "(?:" + (/NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source),
                lookbehind: !0
            },
            operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
        }), e1146.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/, e1146.languages.insertBefore("javascript", "keyword", {
            regex: {
                pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    "regex-source": {
                        pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
                        lookbehind: !0,
                        alias: "language-regex",
                        inside: e1146.languages.regex
                    },
                    "regex-delimiter": /^\/|\/$/,
                    "regex-flags": /^[a-z]+$/
                }
            },
            "function-variable": {
                pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
                alias: "function"
            },
            parameter: [
                {
                    pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
                    lookbehind: !0,
                    inside: e1146.languages.javascript
                },
                {
                    pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
                    lookbehind: !0,
                    inside: e1146.languages.javascript
                },
                {
                    pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
                    lookbehind: !0,
                    inside: e1146.languages.javascript
                },
                {
                    pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
                    lookbehind: !0,
                    inside: e1146.languages.javascript
                }
            ],
            constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
        }), e1146.languages.insertBefore("javascript", "string", {
            hashbang: {
                pattern: /^#!.*/,
                greedy: !0,
                alias: "comment"
            },
            "template-string": {
                pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
                greedy: !0,
                inside: {
                    "template-punctuation": {
                        pattern: /^`|`$/,
                        alias: "string"
                    },
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                        lookbehind: !0,
                        inside: {
                            "interpolation-punctuation": {
                                pattern: /^\$\{|\}$/,
                                alias: "punctuation"
                            },
                            rest: e1146.languages.javascript
                        }
                    },
                    string: /[\s\S]+/
                }
            },
            "string-property": {
                pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
                lookbehind: !0,
                greedy: !0,
                alias: "property"
            }
        }), e1146.languages.insertBefore("javascript", "operator", {
            "literal-property": {
                pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
                lookbehind: !0,
                alias: "property"
            }
        }), e1146.languages.markup && (e1146.languages.markup.tag.addInlined("script", "javascript"), e1146.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript")), e1146.languages.js = e1146.languages.javascript;
    }
    a33(de7, "javascript");
});
var Fi = o17((rE, Mi)=>{
    "use strict";
    var z34 = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof __global$1 == "object" ? __global$1 : {}, Lm = jm();
    z34.Prism = {
        manual: !0,
        disableWorkerMessageHandler: !0
    };
    var xm = rr1, Dm = er1, xi = he3, Mm = Ni(), Fm = vi(), Um = Ci(), Bm = Li();
    Lm();
    var ce7 = {}.hasOwnProperty;
    function Di() {}
    a33(Di, "Refractor");
    Di.prototype = xi;
    var I52 = new Di;
    Mi.exports = I52;
    I52.highlight = Gm;
    I52.register = V23;
    I52.alias = Pm;
    I52.registered = $m;
    I52.listLanguages = qm;
    V23(Mm);
    V23(Fm);
    V23(Um);
    V23(Bm);
    I52.util.encode = Vm;
    I52.Token.stringify = Hm;
    function V23(e1147) {
        if (typeof e1147 != "function" || !e1147.displayName) throw new Error("Expected `function` for `grammar`, got `" + e1147 + "`");
        I52.languages[e1147.displayName] === void 0 && e1147(I52);
    }
    a33(V23, "register");
    function Pm(e1148, t905) {
        var r641 = I52.languages, n533 = e1148, i542, l255, d111, u241;
        t905 && (n533 = {}, n533[e1148] = t905);
        for(i542 in n533)for(l255 = n533[i542], l255 = typeof l255 == "string" ? [
            l255
        ] : l255, d111 = l255.length, u241 = -1; ++u241 < d111;)r641[l255[u241]] = r641[i542];
    }
    a33(Pm, "alias");
    function Gm(e1149, t906) {
        var r642 = xi.highlight, n534;
        if (typeof e1149 != "string") throw new Error("Expected `string` for `value`, got `" + e1149 + "`");
        if (I52.util.type(t906) === "Object") n534 = t906, t906 = null;
        else {
            if (typeof t906 != "string") throw new Error("Expected `string` for `name`, got `" + t906 + "`");
            if (ce7.call(I52.languages, t906)) n534 = I52.languages[t906];
            else throw new Error("Unknown language: `" + t906 + "` is not registered");
        }
        return r642.call(this, e1149, n534, t906);
    }
    a33(Gm, "highlight");
    function $m(e1150) {
        if (typeof e1150 != "string") throw new Error("Expected `string` for `language`, got `" + e1150 + "`");
        return ce7.call(I52.languages, e1150);
    }
    a33($m, "registered");
    function qm() {
        var e1151 = I52.languages, t907 = [], r643;
        for(r643 in e1151)ce7.call(e1151, r643) && typeof e1151[r643] == "object" && t907.push(r643);
        return t907;
    }
    a33(qm, "listLanguages");
    function Hm(e1152, t908, r644) {
        var n535;
        return typeof e1152 == "string" ? {
            type: "text",
            value: e1152
        } : I52.util.type(e1152) === "Array" ? zm(e1152, t908) : (n535 = {
            type: e1152.type,
            content: I52.Token.stringify(e1152.content, t908, r644),
            tag: "span",
            classes: [
                "token",
                e1152.type
            ],
            attributes: {},
            language: t908,
            parent: r644
        }, e1152.alias && (n535.classes = n535.classes.concat(e1152.alias)), I52.hooks.run("wrap", n535), xm(n535.tag + "." + n535.classes.join("."), Wm(n535.attributes), n535.content));
    }
    a33(Hm, "stringify");
    function zm(e1153, t909) {
        for(var r645 = [], n536 = e1153.length, i543 = -1, l256; ++i543 < n536;)l256 = e1153[i543], l256 !== "" && l256 !== null && l256 !== void 0 && r645.push(l256);
        for(i543 = -1, n536 = r645.length; ++i543 < n536;)l256 = r645[i543], r645[i543] = I52.Token.stringify(l256, t909, r645);
        return r645;
    }
    a33(zm, "stringifyAll");
    function Vm(e1154) {
        return e1154;
    }
    a33(Vm, "encode");
    function Wm(e1155) {
        var t910;
        for(t910 in e1155)e1155[t910] = Dm(e1155[t910]);
        return e1155;
    }
    a33(Wm, "attributes");
    function jm() {
        var e1156 = "Prism" in z34, t911 = e1156 ? z34.Prism : void 0;
        return r646;
        function r646() {
            e1156 ? z34.Prism = t911 : delete z34.Prism, e1156 = void 0, t911 = void 0;
        }
    }
    a33(jm, "capture");
});
var Bi = o17((nE, Ui)=>{
    "use strict";
    Ui.exports = pe7;
    pe7.displayName = "abap";
    pe7.aliases = [];
    function pe7(e1157) {
        e1157.languages.abap = {
            comment: /^\*.*/m,
            string: /(`|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
            "string-template": {
                pattern: /([|}])(?:\\.|[^\\|{\r\n])*(?=[|{])/,
                lookbehind: !0,
                alias: "string"
            },
            "eol-comment": {
                pattern: /(^|\s)".*/m,
                lookbehind: !0,
                alias: "comment"
            },
            keyword: {
                pattern: /(\s|\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\/MM\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\/DD\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\/MM\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\/DD\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\b/i,
                lookbehind: !0
            },
            number: /\b\d+\b/,
            operator: {
                pattern: /(\s)(?:\*\*?|<[=>]?|>=?|\?=|[-+\/=])(?=\s)/,
                lookbehind: !0
            },
            "string-operator": {
                pattern: /(\s)&&?(?=\s)/,
                lookbehind: !0,
                alias: "keyword"
            },
            "token-operator": [
                {
                    pattern: /(\w)(?:->?|=>|[~|{}])(?=\w)/,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                {
                    pattern: /[|{}]/,
                    alias: "punctuation"
                }
            ],
            punctuation: /[,.:()]/
        };
    }
    a33(pe7, "abap");
});
var Gi = o17((iE, Pi)=>{
    "use strict";
    Pi.exports = ge8;
    ge8.displayName = "abnf";
    ge8.aliases = [];
    function ge8(e1158) {
        (function(t912) {
            var r647 = "(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)";
            t912.languages.abnf = {
                comment: /;.*/,
                string: {
                    pattern: /(?:%[is])?"[^"\n\r]*"/,
                    greedy: !0,
                    inside: {
                        punctuation: /^%[is]/
                    }
                },
                range: {
                    pattern: /%(?:b[01]+-[01]+|d\d+-\d+|x[A-F\d]+-[A-F\d]+)/i,
                    alias: "number"
                },
                terminal: {
                    pattern: /%(?:b[01]+(?:\.[01]+)*|d\d+(?:\.\d+)*|x[A-F\d]+(?:\.[A-F\d]+)*)/i,
                    alias: "number"
                },
                repetition: {
                    pattern: /(^|[^\w-])(?:\d*\*\d*|\d+)/,
                    lookbehind: !0,
                    alias: "operator"
                },
                definition: {
                    pattern: /(^[ \t]*)(?:[a-z][\w-]*|<[^<>\r\n]*>)(?=\s*=)/m,
                    lookbehind: !0,
                    alias: "keyword",
                    inside: {
                        punctuation: /<|>/
                    }
                },
                "core-rule": {
                    pattern: RegExp("(?:(^|[^<\\w-])" + r647 + "|<" + r647 + ">)(?![\\w-])", "i"),
                    lookbehind: !0,
                    alias: [
                        "rule",
                        "constant"
                    ],
                    inside: {
                        punctuation: /<|>/
                    }
                },
                rule: {
                    pattern: /(^|[^<\w-])[a-z][\w-]*|<[^<>\r\n]*>/i,
                    lookbehind: !0,
                    inside: {
                        punctuation: /<|>/
                    }
                },
                operator: /=\/?|\//,
                punctuation: /[()\[\]]/
            };
        })(e1158);
    }
    a33(ge8, "abnf");
});
var qi = o17((oE, $i)=>{
    "use strict";
    $i.exports = be7;
    be7.displayName = "actionscript";
    be7.aliases = [];
    function be7(e1159) {
        e1159.languages.actionscript = e1159.languages.extend("javascript", {
            keyword: /\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,
            operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/
        }), e1159.languages.actionscript["class-name"].alias = "function", delete e1159.languages.actionscript.parameter, delete e1159.languages.actionscript["literal-property"], e1159.languages.markup && e1159.languages.insertBefore("actionscript", "string", {
            xml: {
                pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,
                lookbehind: !0,
                inside: e1159.languages.markup
            }
        });
    }
    a33(be7, "actionscript");
});
var zi = o17((sE, Hi)=>{
    "use strict";
    Hi.exports = me8;
    me8.displayName = "ada";
    me8.aliases = [];
    function me8(e1160) {
        e1160.languages.ada = {
            comment: /--.*/,
            string: /"(?:""|[^"\r\f\n])*"/,
            number: [
                {
                    pattern: /\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i
                },
                {
                    pattern: /\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i
                }
            ],
            "attr-name": /\b'\w+/,
            keyword: /\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,
            boolean: /\b(?:false|true)\b/i,
            operator: /<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,
            punctuation: /\.\.?|[,;():]/,
            char: /'.'/,
            variable: /\b[a-z](?:\w)*\b/i
        };
    }
    a33(me8, "ada");
});
var Wi = o17((lE, Vi)=>{
    "use strict";
    Vi.exports = fe9;
    fe9.displayName = "agda";
    fe9.aliases = [];
    function fe9(e1161) {
        (function(t913) {
            t913.languages.agda = {
                comment: /\{-[\s\S]*?(?:-\}|$)|--.*/,
                string: {
                    pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
                    greedy: !0
                },
                punctuation: /[(){}⦃⦄.;@]/,
                "class-name": {
                    pattern: /((?:data|record) +)\S+/,
                    lookbehind: !0
                },
                function: {
                    pattern: /(^[ \t]*)(?!\s)[^:\r\n]+(?=:)/m,
                    lookbehind: !0
                },
                operator: {
                    pattern: /(^\s*|\s)(?:[=|:∀→λ\\?_]|->)(?=\s)/,
                    lookbehind: !0
                },
                keyword: /\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\b/
            };
        })(e1161);
    }
    a33(fe9, "agda");
});
var Yi = o17((uE, ji)=>{
    "use strict";
    ji.exports = Ee6;
    Ee6.displayName = "al";
    Ee6.aliases = [];
    function Ee6(e1162) {
        e1162.languages.al = {
            comment: /\/\/.*|\/\*[\s\S]*?\*\//,
            string: {
                pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
                greedy: !0
            },
            function: {
                pattern: /(\b(?:event|procedure|trigger)\s+|(?:^|[^.])\.\s*)[a-z_]\w*(?=\s*\()/i,
                lookbehind: !0
            },
            keyword: [
                /\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\b/i,
                /\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\b/i
            ],
            number: /\b(?:0x[\da-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)(?:F|LL?|U(?:LL?)?)?\b/i,
            boolean: /\b(?:false|true)\b/i,
            variable: /\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\b/,
            "class-name": /\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\b/i,
            operator: /\.\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\b(?:and|div|mod|not|or|xor)\b/i,
            punctuation: /[()\[\]{}:.;,]/
        };
    }
    a33(Ee6, "al");
});
var Zi = o17((dE, Ki)=>{
    "use strict";
    Ki.exports = Se7;
    Se7.displayName = "antlr4";
    Se7.aliases = [
        "g4"
    ];
    function Se7(e1163) {
        e1163.languages.antlr4 = {
            comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
            string: {
                pattern: /'(?:\\.|[^\\'\r\n])*'/,
                greedy: !0
            },
            "character-class": {
                pattern: /\[(?:\\.|[^\\\]\r\n])*\]/,
                greedy: !0,
                alias: "regex",
                inside: {
                    range: {
                        pattern: /([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/,
                        lookbehind: !0,
                        alias: "punctuation"
                    },
                    escape: /\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,
                    punctuation: /[\[\]]/
                }
            },
            action: {
                pattern: /\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,
                greedy: !0,
                inside: {
                    content: {
                        pattern: /(\{)[\s\S]+(?=\})/,
                        lookbehind: !0
                    },
                    punctuation: /[{}]/
                }
            },
            command: {
                pattern: /(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,
                lookbehind: !0,
                inside: {
                    function: /\b\w+(?=\s*(?:[,(]|$))/,
                    punctuation: /[,()]/
                }
            },
            annotation: {
                pattern: /@\w+(?:::\w+)*/,
                alias: "keyword"
            },
            label: {
                pattern: /#[ \t]*\w+/,
                alias: "punctuation"
            },
            keyword: /\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,
            definition: [
                {
                    pattern: /\b[a-z]\w*(?=\s*:)/,
                    alias: [
                        "rule",
                        "class-name"
                    ]
                },
                {
                    pattern: /\b[A-Z]\w*(?=\s*:)/,
                    alias: [
                        "token",
                        "constant"
                    ]
                }
            ],
            constant: /\b[A-Z][A-Z_]*\b/,
            operator: /\.\.|->|[|~]|[*+?]\??/,
            punctuation: /[;:()=]/
        }, e1163.languages.g4 = e1163.languages.antlr4;
    }
    a33(Se7, "antlr4");
});
var Qi = o17((cE, Xi)=>{
    "use strict";
    Xi.exports = he8;
    he8.displayName = "apacheconf";
    he8.aliases = [];
    function he8(e1164) {
        e1164.languages.apacheconf = {
            comment: /#.*/,
            "directive-inline": {
                pattern: /(^[\t ]*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im,
                lookbehind: !0,
                alias: "property"
            },
            "directive-block": {
                pattern: /<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b.*>/i,
                inside: {
                    "directive-block": {
                        pattern: /^<\/?\w+/,
                        inside: {
                            punctuation: /^<\/?/
                        },
                        alias: "tag"
                    },
                    "directive-block-parameter": {
                        pattern: /.*[^>]/,
                        inside: {
                            punctuation: /:/,
                            string: {
                                pattern: /("|').*\1/,
                                inside: {
                                    variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
                                }
                            }
                        },
                        alias: "attr-value"
                    },
                    punctuation: />/
                },
                alias: "tag"
            },
            "directive-flags": {
                pattern: /\[(?:[\w=],?)+\]/,
                alias: "keyword"
            },
            string: {
                pattern: /("|').*\1/,
                inside: {
                    variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
                }
            },
            variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/,
            regex: /\^?.*\$|\^.*\$?/
        };
    }
    a33(he8, "apacheconf");
});
var X11 = o17((pE, Ji)=>{
    "use strict";
    Ji.exports = ye7;
    ye7.displayName = "sql";
    ye7.aliases = [];
    function ye7(e1165) {
        e1165.languages.sql = {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
                lookbehind: !0
            },
            variable: [
                {
                    pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
                    greedy: !0
                },
                /@[\w.$]+/
            ],
            string: {
                pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
                greedy: !0,
                lookbehind: !0
            },
            identifier: {
                pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
                greedy: !0,
                lookbehind: !0,
                inside: {
                    punctuation: /^`|`$/
                }
            },
            function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
            keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
            boolean: /\b(?:FALSE|NULL|TRUE)\b/i,
            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
            operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
            punctuation: /[;[\]()`,.]/
        };
    }
    a33(ye7, "sql");
});
var to = o17((gE, eo2)=>{
    "use strict";
    var Ym = X11();
    eo2.exports = Te6;
    Te6.displayName = "apex";
    Te6.aliases = [];
    function Te6(e1166) {
        e1166.register(Ym), function(t914) {
            var r648 = /\b(?:(?:after|before)(?=\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\s+sharing)\b/i, n537 = /\b(?:(?=[a-z_]\w*\s*[<\[])|(?!<keyword>))[A-Z_]\w*(?:\s*\.\s*[A-Z_]\w*)*\b(?:\s*(?:\[\s*\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function() {
                return r648.source;
            });
            function i544(d112) {
                return RegExp(d112.replace(/<CLASS-NAME>/g, function() {
                    return n537;
                }), "i");
            }
            a33(i544, "insertClassName");
            var l257 = {
                keyword: r648,
                punctuation: /[()\[\]{};,:.<>]/
            };
            t914.languages.apex = {
                comment: t914.languages.clike.comment,
                string: t914.languages.clike.string,
                sql: {
                    pattern: /((?:[=,({:]|\breturn)\s*)\[[^\[\]]*\]/i,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "language-sql",
                    inside: t914.languages.sql
                },
                annotation: {
                    pattern: /@\w+\b/,
                    alias: "punctuation"
                },
                "class-name": [
                    {
                        pattern: i544(/(\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\s+\w+\s+on)\s+)<CLASS-NAME>/.source),
                        lookbehind: !0,
                        inside: l257
                    },
                    {
                        pattern: i544(/(\(\s*)<CLASS-NAME>(?=\s*\)\s*[\w(])/.source),
                        lookbehind: !0,
                        inside: l257
                    },
                    {
                        pattern: i544(/<CLASS-NAME>(?=\s*\w+\s*[;=,(){:])/.source),
                        inside: l257
                    }
                ],
                trigger: {
                    pattern: /(\btrigger\s+)\w+\b/i,
                    lookbehind: !0,
                    alias: "class-name"
                },
                keyword: r648,
                function: /\b[a-z_]\w*(?=\s*\()/i,
                boolean: /\b(?:false|true)\b/i,
                number: /(?:\B\.\d+|\b\d+(?:\.\d+|L)?)\b/i,
                operator: /[!=](?:==?)?|\?\.?|&&|\|\||--|\+\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,
                punctuation: /[()\[\]{};,.]/
            };
        }(e1166);
    }
    a33(Te6, "apex");
});
var ro = o17((bE, ao)=>{
    "use strict";
    ao.exports = Ae6;
    Ae6.displayName = "apl";
    Ae6.aliases = [];
    function Ae6(e1167) {
        e1167.languages.apl = {
            comment: /(?:⍝|#[! ]).*$/m,
            string: {
                pattern: /'(?:[^'\r\n]|'')*'/,
                greedy: !0
            },
            number: /¯?(?:\d*\.?\b\d+(?:e[+¯]?\d+)?|¯|∞)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+)?|¯|∞))?/i,
            statement: /:[A-Z][a-z][A-Za-z]*\b/,
            "system-function": {
                pattern: /⎕[A-Z]+/i,
                alias: "function"
            },
            constant: /[⍬⌾#⎕⍞]/,
            function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,
            "monadic-operator": {
                pattern: /[\\\/⌿⍀¨⍨⌶&∥]/,
                alias: "operator"
            },
            "dyadic-operator": {
                pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,
                alias: "operator"
            },
            assignment: {
                pattern: /←/,
                alias: "keyword"
            },
            punctuation: /[\[;\]()◇⋄]/,
            dfn: {
                pattern: /[{}⍺⍵⍶⍹∇⍫:]/,
                alias: "builtin"
            }
        };
    }
    a33(Ae6, "apl");
});
var io = o17((mE, no)=>{
    "use strict";
    no.exports = _e4;
    _e4.displayName = "applescript";
    _e4.aliases = [];
    function _e4(e1168) {
        e1168.languages.applescript = {
            comment: [
                /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
                /--.+/,
                /#.+/
            ],
            string: /"(?:\\.|[^"\\\r\n])*"/,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?\b/i,
            operator: [
                /[&=≠≤≥*+\-\/÷^]|[<>]=?/,
                /\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\b/
            ],
            keyword: /\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\b/,
            "class-name": /\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\b/,
            punctuation: /[{}():,¬«»《》]/
        };
    }
    a33(_e4, "applescript");
});
var so = o17((fE, oo2)=>{
    "use strict";
    oo2.exports = Re5;
    Re5.displayName = "aql";
    Re5.aliases = [];
    function Re5(e1169) {
        e1169.languages.aql = {
            comment: /\/\/.*|\/\*[\s\S]*?\*\//,
            property: {
                pattern: /([{,]\s*)(?:(?!\d)\w+|(["'´`])(?:(?!\2)[^\\\r\n]|\\.)*\2)(?=\s*:)/,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
                greedy: !0
            },
            identifier: {
                pattern: /([´`])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
                greedy: !0
            },
            variable: /@@?\w+/,
            keyword: [
                {
                    pattern: /(\bWITH\s+)COUNT(?=\s+INTO\b)/i,
                    lookbehind: !0
                },
                /\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\b/i,
                {
                    pattern: /(^|[^\w.[])(?:KEEP|PRUNE|SEARCH|TO)\b/i,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^\w.[])(?:CURRENT|NEW|OLD)\b/,
                    lookbehind: !0
                },
                {
                    pattern: /\bOPTIONS(?=\s*\{)/i
                }
            ],
            function: /\b(?!\d)\w+(?=\s*\()/,
            boolean: /\b(?:false|true)\b/i,
            range: {
                pattern: /\.\./,
                alias: "operator"
            },
            number: [
                /\b0b[01]+/i,
                /\b0x[0-9a-f]+/i,
                /(?:\B\.\d+|\b(?:0|[1-9]\d*)(?:\.\d+)?)(?:e[+-]?\d+)?/i
            ],
            operator: /\*{2,}|[=!]~|[!=<>]=?|&&|\|\||[-+*/%]/,
            punctuation: /::|[?.:,;()[\]{}]/
        };
    }
    a33(Re5, "aql");
});
var x39 = o17((EE, lo)=>{
    "use strict";
    lo.exports = Ie7;
    Ie7.displayName = "c";
    Ie7.aliases = [];
    function Ie7(e1170) {
        e1170.languages.c = e1170.languages.extend("clike", {
            comment: {
                pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
                greedy: !0
            },
            string: {
                pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
                greedy: !0
            },
            "class-name": {
                pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
                lookbehind: !0
            },
            keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
            operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
        }), e1170.languages.insertBefore("c", "string", {
            char: {
                pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
                greedy: !0
            }
        }), e1170.languages.insertBefore("c", "string", {
            macro: {
                pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
                lookbehind: !0,
                greedy: !0,
                alias: "property",
                inside: {
                    string: [
                        {
                            pattern: /^(#\s*include\s*)<[^>]+>/,
                            lookbehind: !0
                        },
                        e1170.languages.c.string
                    ],
                    char: e1170.languages.c.char,
                    comment: e1170.languages.c.comment,
                    "macro-name": [
                        {
                            pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
                            lookbehind: !0
                        },
                        {
                            pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
                            lookbehind: !0,
                            alias: "function"
                        }
                    ],
                    directive: {
                        pattern: /^(#\s*)[a-z]+/,
                        lookbehind: !0,
                        alias: "keyword"
                    },
                    "directive-hash": /^#/,
                    punctuation: /##|\\(?=[\r\n])/,
                    expression: {
                        pattern: /\S[\s\S]*/,
                        inside: e1170.languages.c
                    }
                }
            }
        }), e1170.languages.insertBefore("c", "function", {
            constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
        }), delete e1170.languages.c.boolean;
    }
    a33(Ie7, "c");
});
var Q5 = o17((SE, uo)=>{
    "use strict";
    var Km = x39();
    uo.exports = Ne5;
    Ne5.displayName = "cpp";
    Ne5.aliases = [];
    function Ne5(e1171) {
        e1171.register(Km), function(t915) {
            var r649 = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, n538 = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function() {
                return r649.source;
            });
            t915.languages.cpp = t915.languages.extend("c", {
                "class-name": [
                    {
                        pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function() {
                            return r649.source;
                        })),
                        lookbehind: !0
                    },
                    /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
                    /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
                    /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/
                ],
                keyword: r649,
                number: {
                    pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
                    greedy: !0
                },
                operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
                boolean: /\b(?:false|true)\b/
            }), t915.languages.insertBefore("cpp", "string", {
                module: {
                    pattern: RegExp(/(\b(?:import|module)\s+)/.source + "(?:" + /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function() {
                        return n538;
                    }) + ")"),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        string: /^[<"][\s\S]+/,
                        operator: /:/,
                        punctuation: /\./
                    }
                },
                "raw-string": {
                    pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
                    alias: "string",
                    greedy: !0
                }
            }), t915.languages.insertBefore("cpp", "keyword", {
                "generic-function": {
                    pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
                    inside: {
                        function: /^\w+/,
                        generic: {
                            pattern: /<[\s\S]+/,
                            alias: "class-name",
                            inside: t915.languages.cpp
                        }
                    }
                }
            }), t915.languages.insertBefore("cpp", "operator", {
                "double-colon": {
                    pattern: /::/,
                    alias: "punctuation"
                }
            }), t915.languages.insertBefore("cpp", "class-name", {
                "base-clause": {
                    pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: t915.languages.extend("cpp", {})
                }
            }), t915.languages.insertBefore("inside", "double-colon", {
                "class-name": /\b[a-z_]\w*\b(?!\s*::)/i
            }, t915.languages.cpp["base-clause"]);
        }(e1171);
    }
    a33(Ne5, "cpp");
});
var po = o17((hE, co)=>{
    "use strict";
    var Zm = Q5();
    co.exports = we7;
    we7.displayName = "arduino";
    we7.aliases = [
        "ino"
    ];
    function we7(e1172) {
        e1172.register(Zm), e1172.languages.arduino = e1172.languages.extend("cpp", {
            keyword: /\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\b/,
            constant: /\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\b/,
            builtin: /\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\b/
        }), e1172.languages.ino = e1172.languages.arduino;
    }
    a33(we7, "arduino");
});
var bo = o17((yE, go)=>{
    "use strict";
    go.exports = ve7;
    ve7.displayName = "arff";
    ve7.aliases = [];
    function ve7(e1173) {
        e1173.languages.arff = {
            comment: /%.*/,
            string: {
                pattern: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            keyword: /@(?:attribute|data|end|relation)\b/i,
            number: /\b\d+(?:\.\d+)?\b/,
            punctuation: /[{},]/
        };
    }
    a33(ve7, "arff");
});
var fo = o17((TE, mo)=>{
    "use strict";
    mo.exports = ke7;
    ke7.displayName = "asciidoc";
    ke7.aliases = [
        "adoc"
    ];
    function ke7(e1174) {
        (function(t916) {
            var r650 = {
                pattern: /(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\[\]\\]|\\.)*\]|[^\[\]\\"'$`]|\\.)*\]/m,
                lookbehind: !0,
                inside: {
                    quoted: {
                        pattern: /([$`])(?:(?!\1)[^\\]|\\.)*\1/,
                        inside: {
                            punctuation: /^[$`]|[$`]$/
                        }
                    },
                    interpreted: {
                        pattern: /'(?:[^'\\]|\\.)*'/,
                        inside: {
                            punctuation: /^'|'$/
                        }
                    },
                    string: /"(?:[^"\\]|\\.)*"/,
                    variable: /\w+(?==)/,
                    punctuation: /^\[|\]$|,/,
                    operator: /=/,
                    "attr-value": /(?!^\s+$).+/
                }
            }, n539 = t916.languages.asciidoc = {
                "comment-block": {
                    pattern: /^(\/{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1/m,
                    alias: "comment"
                },
                table: {
                    pattern: /^\|={3,}(?:(?:\r?\n|\r(?!\n)).*)*?(?:\r?\n|\r)\|={3,}$/m,
                    inside: {
                        specifiers: {
                            pattern: /(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*](?:[<^>](?:\.[<^>])?|\.[<^>])?|[<^>](?:\.[<^>])?|\.[<^>])[a-z]*|[a-z]+)(?=\|)/,
                            alias: "attr-value"
                        },
                        punctuation: {
                            pattern: /(^|[^\\])[|!]=*/,
                            lookbehind: !0
                        }
                    }
                },
                "passthrough-block": {
                    pattern: /^(\+{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
                    inside: {
                        punctuation: /^\++|\++$/
                    }
                },
                "literal-block": {
                    pattern: /^(-{4,}|\.{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
                    inside: {
                        punctuation: /^(?:-+|\.+)|(?:-+|\.+)$/
                    }
                },
                "other-block": {
                    pattern: /^(--|\*{4,}|_{4,}|={4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
                    inside: {
                        punctuation: /^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/
                    }
                },
                "list-punctuation": {
                    pattern: /(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                "list-label": {
                    pattern: /(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im,
                    lookbehind: !0,
                    alias: "symbol"
                },
                "indented-block": {
                    pattern: /((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/,
                    lookbehind: !0
                },
                comment: /^\/\/.*/m,
                title: {
                    pattern: /^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} .+|^\.(?![\s.]).*/m,
                    alias: "important",
                    inside: {
                        punctuation: /^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/
                    }
                },
                "attribute-entry": {
                    pattern: /^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m,
                    alias: "tag"
                },
                attributes: r650,
                hr: {
                    pattern: /^'{3,}$/m,
                    alias: "punctuation"
                },
                "page-break": {
                    pattern: /^<{3,}$/m,
                    alias: "punctuation"
                },
                admonition: {
                    pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,
                    alias: "keyword"
                },
                callout: [
                    {
                        pattern: /(^[ \t]*)<?\d*>/m,
                        lookbehind: !0,
                        alias: "symbol"
                    },
                    {
                        pattern: /<\d+>/,
                        alias: "symbol"
                    }
                ],
                macro: {
                    pattern: /\b[a-z\d][a-z\d-]*::?(?:[^\s\[\]]*\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
                    inside: {
                        function: /^[a-z\d-]+(?=:)/,
                        punctuation: /^::?/,
                        attributes: {
                            pattern: /(?:\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
                            inside: r650.inside
                        }
                    }
                },
                inline: {
                    pattern: /(^|[^\\])(?:(?:\B\[(?:[^\]\\"']|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?:[^`'\s]|\s+\S)+['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"']|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,
                    lookbehind: !0,
                    inside: {
                        attributes: r650,
                        url: {
                            pattern: /^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/,
                            inside: {
                                punctuation: /^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/
                            }
                        },
                        "attribute-ref": {
                            pattern: /^\{.+\}$/,
                            inside: {
                                variable: {
                                    pattern: /(^\{)[a-z\d,+_-]+/,
                                    lookbehind: !0
                                },
                                operator: /^[=?!#%@$]|!(?=[:}])/,
                                punctuation: /^\{|\}$|::?/
                            }
                        },
                        italic: {
                            pattern: /^(['_])[\s\S]+\1$/,
                            inside: {
                                punctuation: /^(?:''?|__?)|(?:''?|__?)$/
                            }
                        },
                        bold: {
                            pattern: /^\*[\s\S]+\*$/,
                            inside: {
                                punctuation: /^\*\*?|\*\*?$/
                            }
                        },
                        punctuation: /^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/
                    }
                },
                replacement: {
                    pattern: /\((?:C|R|TM)\)/,
                    alias: "builtin"
                },
                entity: /&#?[\da-z]{1,8};/i,
                "line-continuation": {
                    pattern: /(^| )\+$/m,
                    lookbehind: !0,
                    alias: "punctuation"
                }
            };
            function i545(l258) {
                l258 = l258.split(" ");
                for(var d113 = {}, u242 = 0, p174 = l258.length; u242 < p174; u242++)d113[l258[u242]] = n539[l258[u242]];
                return d113;
            }
            a33(i545, "copyFromAsciiDoc"), r650.inside.interpreted.inside.rest = i545("macro inline replacement entity"), n539["passthrough-block"].inside.rest = i545("macro"), n539["literal-block"].inside.rest = i545("callout"), n539.table.inside.rest = i545("comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation"), n539["other-block"].inside.rest = i545("table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation"), n539.title.inside.rest = i545("macro inline replacement entity"), t916.hooks.add("wrap", function(l259) {
                l259.type === "entity" && (l259.attributes.title = l259.content.value.replace(/&amp;/, "&"));
            }), t916.languages.adoc = t916.languages.asciidoc;
        })(e1174);
    }
    a33(ke7, "asciidoc");
});
var So = o17((AE, Eo)=>{
    "use strict";
    Eo.exports = Ce6;
    Ce6.displayName = "asm6502";
    Ce6.aliases = [];
    function Ce6(e1175) {
        e1175.languages.asm6502 = {
            comment: /;.*/,
            directive: {
                pattern: /\.\w+(?= )/,
                alias: "property"
            },
            string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
            "op-code": {
                pattern: /\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\b/,
                alias: "keyword"
            },
            "hex-number": {
                pattern: /#?\$[\da-f]{1,4}\b/i,
                alias: "number"
            },
            "binary-number": {
                pattern: /#?%[01]+\b/,
                alias: "number"
            },
            "decimal-number": {
                pattern: /#?\b\d+\b/,
                alias: "number"
            },
            register: {
                pattern: /\b[xya]\b/i,
                alias: "variable"
            },
            punctuation: /[(),:]/
        };
    }
    a33(Ce6, "asm6502");
});
var yo = o17((_E, ho)=>{
    "use strict";
    ho.exports = Oe6;
    Oe6.displayName = "asmatmel";
    Oe6.aliases = [];
    function Oe6(e1176) {
        e1176.languages.asmatmel = {
            comment: {
                pattern: /;.*/,
                greedy: !0
            },
            string: {
                pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            constant: /\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\d|[0-2]\d|3[01]))\b/,
            directive: {
                pattern: /\.\w+(?= )/,
                alias: "property"
            },
            "r-register": {
                pattern: /\br(?:\d|[12]\d|3[01])\b/,
                alias: "variable"
            },
            "op-code": {
                pattern: /\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\b/,
                alias: "keyword"
            },
            "hex-number": {
                pattern: /#?\$[\da-f]{2,4}\b/i,
                alias: "number"
            },
            "binary-number": {
                pattern: /#?%[01]+\b/,
                alias: "number"
            },
            "decimal-number": {
                pattern: /#?\b\d+\b/,
                alias: "number"
            },
            register: {
                pattern: /\b[acznvshtixy]\b/i,
                alias: "variable"
            },
            operator: />>=?|<<=?|&&?|\|\|?|[-+*/%&|^!=<>?]=?/,
            punctuation: /[(),:]/
        };
    }
    a33(Oe6, "asmatmel");
});
var W10 = o17((RE, To)=>{
    "use strict";
    To.exports = Le6;
    Le6.displayName = "csharp";
    Le6.aliases = [
        "dotnet",
        "cs"
    ];
    function Le6(e1177) {
        (function(t917) {
            function r651(C, M34) {
                return C.replace(/<<(\d+)>>/g, function(H, Im) {
                    return "(?:" + M34[+Im] + ")";
                });
            }
            a33(r651, "replace");
            function n540(C, M35, H20) {
                return RegExp(r651(C, M35), H20 || "");
            }
            a33(n540, "re");
            function i546(C, M36) {
                for(var H21 = 0; H21 < M36; H21++)C = C.replace(/<<self>>/g, function() {
                    return "(?:" + C + ")";
                });
                return C.replace(/<<self>>/g, "[^\\s\\S]");
            }
            a33(i546, "nested");
            var l260 = {
                type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
                typeDeclaration: "class enum interface record struct",
                contextual: "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
                other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"
            };
            function d114(C) {
                return "\\b(?:" + C.trim().replace(/ /g, "|") + ")\\b";
            }
            a33(d114, "keywordsToPattern");
            var u243 = d114(l260.typeDeclaration), p175 = RegExp(d114(l260.type + " " + l260.typeDeclaration + " " + l260.contextual + " " + l260.other)), c155 = d114(l260.typeDeclaration + " " + l260.contextual + " " + l260.other), g98 = d114(l260.type + " " + l260.typeDeclaration + " " + l260.other), b79 = i546(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2), m127 = i546(/\((?:[^()]|<<self>>)*\)/.source, 2), E51 = /@?\b[A-Za-z_]\w*\b/.source, f147 = r651(/<<0>>(?:\s*<<1>>)?/.source, [
                E51,
                b79
            ]), h127 = r651(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [
                c155,
                f147
            ]), S71 = /\[\s*(?:,\s*)*\]/.source, T39 = r651(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source, [
                h127,
                S71
            ]), y81 = r651(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [
                b79,
                m127,
                S71
            ]), A54 = r651(/\(<<0>>+(?:,<<0>>+)+\)/.source, [
                y81
            ]), _26 = r651(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source, [
                A54,
                h127,
                S71
            ]), R33 = {
                keyword: p175,
                punctuation: /[<>()?,.:[\]]/
            }, D40 = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source, O41 = /"(?:\\.|[^\\"\r\n])*"/.source, v66 = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
            t917.languages.csharp = t917.languages.extend("clike", {
                string: [
                    {
                        pattern: n540(/(^|[^$\\])<<0>>/.source, [
                            v66
                        ]),
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: n540(/(^|[^@$\\])<<0>>/.source, [
                            O41
                        ]),
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                "class-name": [
                    {
                        pattern: n540(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [
                            h127
                        ]),
                        lookbehind: !0,
                        inside: R33
                    },
                    {
                        pattern: n540(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [
                            E51,
                            _26
                        ]),
                        lookbehind: !0,
                        inside: R33
                    },
                    {
                        pattern: n540(/(\busing\s+)<<0>>(?=\s*=)/.source, [
                            E51
                        ]),
                        lookbehind: !0
                    },
                    {
                        pattern: n540(/(\b<<0>>\s+)<<1>>/.source, [
                            u243,
                            f147
                        ]),
                        lookbehind: !0,
                        inside: R33
                    },
                    {
                        pattern: n540(/(\bcatch\s*\(\s*)<<0>>/.source, [
                            h127
                        ]),
                        lookbehind: !0,
                        inside: R33
                    },
                    {
                        pattern: n540(/(\bwhere\s+)<<0>>/.source, [
                            E51
                        ]),
                        lookbehind: !0
                    },
                    {
                        pattern: n540(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [
                            T39
                        ]),
                        lookbehind: !0,
                        inside: R33
                    },
                    {
                        pattern: n540(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source, [
                            _26,
                            g98,
                            E51
                        ]),
                        inside: R33
                    }
                ],
                keyword: p175,
                number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
                operator: />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
                punctuation: /\?\.?|::|[{}[\];(),.:]/
            }), t917.languages.insertBefore("csharp", "number", {
                range: {
                    pattern: /\.\./,
                    alias: "operator"
                }
            }), t917.languages.insertBefore("csharp", "punctuation", {
                "named-parameter": {
                    pattern: n540(/([(,]\s*)<<0>>(?=\s*:)/.source, [
                        E51
                    ]),
                    lookbehind: !0,
                    alias: "punctuation"
                }
            }), t917.languages.insertBefore("csharp", "class-name", {
                namespace: {
                    pattern: n540(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source, [
                        E51
                    ]),
                    lookbehind: !0,
                    inside: {
                        punctuation: /\./
                    }
                },
                "type-expression": {
                    pattern: n540(/(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source, [
                        m127
                    ]),
                    lookbehind: !0,
                    alias: "class-name",
                    inside: R33
                },
                "return-type": {
                    pattern: n540(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source, [
                        _26,
                        h127
                    ]),
                    inside: R33,
                    alias: "class-name"
                },
                "constructor-invocation": {
                    pattern: n540(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [
                        _26
                    ]),
                    lookbehind: !0,
                    inside: R33,
                    alias: "class-name"
                },
                "generic-method": {
                    pattern: n540(/<<0>>\s*<<1>>(?=\s*\()/.source, [
                        E51,
                        b79
                    ]),
                    inside: {
                        function: n540(/^<<0>>/.source, [
                            E51
                        ]),
                        generic: {
                            pattern: RegExp(b79),
                            alias: "class-name",
                            inside: R33
                        }
                    }
                },
                "type-list": {
                    pattern: n540(/\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source, [
                        u243,
                        f147,
                        E51,
                        _26,
                        p175.source,
                        m127,
                        /\bnew\s*\(\s*\)/.source
                    ]),
                    lookbehind: !0,
                    inside: {
                        "record-arguments": {
                            pattern: n540(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [
                                f147,
                                m127
                            ]),
                            lookbehind: !0,
                            greedy: !0,
                            inside: t917.languages.csharp
                        },
                        keyword: p175,
                        "class-name": {
                            pattern: RegExp(_26),
                            greedy: !0,
                            inside: R33
                        },
                        punctuation: /[,()]/
                    }
                },
                preprocessor: {
                    pattern: /(^[\t ]*)#.*/m,
                    lookbehind: !0,
                    alias: "property",
                    inside: {
                        directive: {
                            pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
                            lookbehind: !0,
                            alias: "keyword"
                        }
                    }
                }
            });
            var k62 = O41 + "|" + D40, N32 = r651(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source, [
                k62
            ]), F42 = i546(r651(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
                N32
            ]), 2), U34 = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source, G25 = r651(/<<0>>(?:\s*\(<<1>>*\))?/.source, [
                h127,
                F42
            ]);
            t917.languages.insertBefore("csharp", "class-name", {
                attribute: {
                    pattern: n540(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source, [
                        U34,
                        G25
                    ]),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        target: {
                            pattern: n540(/^<<0>>(?=\s*:)/.source, [
                                U34
                            ]),
                            alias: "keyword"
                        },
                        "attribute-arguments": {
                            pattern: n540(/\(<<0>>*\)/.source, [
                                F42
                            ]),
                            inside: t917.languages.csharp
                        },
                        "class-name": {
                            pattern: RegExp(h127),
                            inside: {
                                punctuation: /\./
                            }
                        },
                        punctuation: /[:,]/
                    }
                }
            });
            var B39 = /:[^}\r\n]+/.source, Z15 = i546(r651(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
                N32
            ]), 2), $47 = r651(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
                Z15,
                B39
            ]), L30 = i546(r651(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source, [
                k62
            ]), 2), q43 = r651(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
                L30,
                B39
            ]);
            function P38(C, M37) {
                return {
                    interpolation: {
                        pattern: n540(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [
                            C
                        ]),
                        lookbehind: !0,
                        inside: {
                            "format-string": {
                                pattern: n540(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [
                                    M37,
                                    B39
                                ]),
                                lookbehind: !0,
                                inside: {
                                    punctuation: /^:/
                                }
                            },
                            punctuation: /^\{|\}$/,
                            expression: {
                                pattern: /[\s\S]+/,
                                alias: "language-csharp",
                                inside: t917.languages.csharp
                            }
                        }
                    },
                    string: /[\s\S]+/
                };
            }
            a33(P38, "createInterpolationInside"), t917.languages.insertBefore("csharp", "string", {
                "interpolation-string": [
                    {
                        pattern: n540(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source, [
                            $47
                        ]),
                        lookbehind: !0,
                        greedy: !0,
                        inside: P38($47, Z15)
                    },
                    {
                        pattern: n540(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [
                            q43
                        ]),
                        lookbehind: !0,
                        greedy: !0,
                        inside: P38(q43, L30)
                    }
                ],
                char: {
                    pattern: RegExp(D40),
                    greedy: !0
                }
            }), t917.languages.dotnet = t917.languages.cs = t917.languages.csharp;
        })(e1177);
    }
    a33(Le6, "csharp");
});
var _o = o17((IE, Ao)=>{
    "use strict";
    var Xm = W10();
    Ao.exports = xe7;
    xe7.displayName = "aspnet";
    xe7.aliases = [];
    function xe7(e1178) {
        e1178.register(Xm), e1178.languages.aspnet = e1178.languages.extend("markup", {
            "page-directive": {
                pattern: /<%\s*@.*%>/,
                alias: "tag",
                inside: {
                    "page-directive": {
                        pattern: /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
                        alias: "tag"
                    },
                    rest: e1178.languages.markup.tag.inside
                }
            },
            directive: {
                pattern: /<%.*%>/,
                alias: "tag",
                inside: {
                    directive: {
                        pattern: /<%\s*?[$=%#:]{0,2}|%>/,
                        alias: "tag"
                    },
                    rest: e1178.languages.csharp
                }
            }
        }), e1178.languages.aspnet.tag.pattern = /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/, e1178.languages.insertBefore("inside", "punctuation", {
            directive: e1178.languages.aspnet.directive
        }, e1178.languages.aspnet.tag.inside["attr-value"]), e1178.languages.insertBefore("aspnet", "comment", {
            "asp-comment": {
                pattern: /<%--[\s\S]*?--%>/,
                alias: [
                    "asp",
                    "comment"
                ]
            }
        }), e1178.languages.insertBefore("aspnet", e1178.languages.javascript ? "script" : "tag", {
            "asp-script": {
                pattern: /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
                lookbehind: !0,
                alias: [
                    "asp",
                    "script"
                ],
                inside: e1178.languages.csharp || {}
            }
        });
    }
    a33(xe7, "aspnet");
});
var Io = o17((NE, Ro)=>{
    "use strict";
    Ro.exports = De6;
    De6.displayName = "autohotkey";
    De6.aliases = [];
    function De6(e1179) {
        e1179.languages.autohotkey = {
            comment: [
                {
                    pattern: /(^|\s);.*/,
                    lookbehind: !0
                },
                {
                    pattern: /(^[\t ]*)\/\*(?:[\r\n](?![ \t]*\*\/)|[^\r\n])*(?:[\r\n][ \t]*\*\/)?/m,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            tag: {
                pattern: /^([ \t]*)[^\s,`":]+(?=:[ \t]*$)/m,
                lookbehind: !0
            },
            string: /"(?:[^"\n\r]|"")*"/,
            variable: /%\w+%/,
            number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
            operator: /\?|\/\/?=?|:=|\|[=|]?|&[=&]?|\+[=+]?|-[=-]?|\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\b(?:AND|NOT|OR)\b/,
            boolean: /\b(?:false|true)\b/,
            selector: /\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\b/i,
            constant: /\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\b/i,
            builtin: /\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\b/i,
            symbol: /\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\b/i,
            important: /#\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\b/i,
            keyword: /\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\b/i,
            function: /[^(); \t,\n+*\-=?>:\\\/<&%\[\]]+(?=\()/,
            punctuation: /[{}[\]():,]/
        };
    }
    a33(De6, "autohotkey");
});
var wo = o17((wE, No)=>{
    "use strict";
    No.exports = Me7;
    Me7.displayName = "autoit";
    Me7.aliases = [];
    function Me7(e1180) {
        e1180.languages.autoit = {
            comment: [
                /;.*/,
                {
                    pattern: /(^[\t ]*)#(?:comments-start|cs)[\s\S]*?^[ \t]*#(?:ce|comments-end)/m,
                    lookbehind: !0
                }
            ],
            url: {
                pattern: /(^[\t ]*#include\s+)(?:<[^\r\n>]+>|"[^\r\n"]+")/m,
                lookbehind: !0
            },
            string: {
                pattern: /(["'])(?:\1\1|(?!\1)[^\r\n])*\1/,
                greedy: !0,
                inside: {
                    variable: /([%$@])\w+\1/
                }
            },
            directive: {
                pattern: /(^[\t ]*)#[\w-]+/m,
                lookbehind: !0,
                alias: "keyword"
            },
            function: /\b\w+(?=\()/,
            variable: /[$@]\w+/,
            keyword: /\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\b/i,
            number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
            boolean: /\b(?:False|True)\b/i,
            operator: /<[=>]?|[-+*\/=&>]=?|[?^]|\b(?:And|Not|Or)\b/i,
            punctuation: /[\[\]().,:]/
        };
    }
    a33(Me7, "autoit");
});
var ko = o17((vE, vo)=>{
    "use strict";
    vo.exports = Fe7;
    Fe7.displayName = "avisynth";
    Fe7.aliases = [
        "avs"
    ];
    function Fe7(e1181) {
        (function(t918) {
            function r652(c156, g99) {
                return c156.replace(/<<(\d+)>>/g, function(b, m128) {
                    return g99[+m128];
                });
            }
            a33(r652, "replace");
            function n541(c157, g100, b80) {
                return RegExp(r652(c157, g100), b80 || "");
            }
            a33(n541, "re");
            var i547 = /bool|clip|float|int|string|val/.source, l261 = [
                /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,
                /apply|assert|default|eval|import|nop|select|undefined/.source,
                /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,
                /hex(?:value)?|value/.source,
                /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,
                /a?sinh?|a?cosh?|a?tan[2h]?/.source,
                /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,
                /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,
                /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,
                /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,
                /isversionorgreater|version(?:number|string)/.source,
                /buildpixeltype|colorspacenametopixeltype/.source,
                /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source
            ].join("|"), d115 = [
                /has(?:audio|video)/.source,
                /height|width/.source,
                /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,
                /getparity|is(?:field|frame)based/.source,
                /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,
                /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source
            ].join("|"), u244 = [
                /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,
                /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,
                /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,
                /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,
                /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,
                /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,
                /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,
                /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,
                /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,
                /imagewriter/.source,
                /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source
            ].join("|"), p176 = [
                l261,
                d115,
                u244
            ].join("|");
            t918.languages.avisynth = {
                comment: [
                    {
                        pattern: /(^|[^\\])\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|\[\*(?:[^\[*]|\[(?!\*)|\*(?!\]))*\*\])*\*\]/,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /(^|[^\\$])#.*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                argument: {
                    pattern: n541(/\b(?:<<0>>)\s+("?)\w+\1/.source, [
                        i547
                    ], "i"),
                    inside: {
                        keyword: /^\w+/
                    }
                },
                "argument-label": {
                    pattern: /([,(][\s\\]*)\w+\s*=(?!=)/,
                    lookbehind: !0,
                    inside: {
                        "argument-name": {
                            pattern: /^\w+/,
                            alias: "punctuation"
                        },
                        punctuation: /=$/
                    }
                },
                string: [
                    {
                        pattern: /"""[\s\S]*?"""/,
                        greedy: !0
                    },
                    {
                        pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
                        greedy: !0,
                        inside: {
                            constant: {
                                pattern: /\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\b/
                            }
                        }
                    }
                ],
                variable: /\b(?:last)\b/i,
                boolean: /\b(?:false|no|true|yes)\b/i,
                keyword: /\b(?:catch|else|for|function|global|if|return|try|while|__END__)\b/i,
                constant: /\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\b/,
                "builtin-function": {
                    pattern: n541(/\b(?:<<0>>)\b/.source, [
                        p176
                    ], "i"),
                    alias: "function"
                },
                "type-cast": {
                    pattern: n541(/\b(?:<<0>>)(?=\s*\()/.source, [
                        i547
                    ], "i"),
                    alias: "keyword"
                },
                function: {
                    pattern: /\b[a-z_]\w*(?=\s*\()|(\.)[a-z_]\w*\b/i,
                    lookbehind: !0
                },
                "line-continuation": {
                    pattern: /(^[ \t]*)\\|\\(?=[ \t]*$)/m,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                number: /\B\$(?:[\da-f]{6}|[\da-f]{8})\b|(?:(?:\b|\B-)\d+(?:\.\d*)?\b|\B\.\d+\b)/i,
                operator: /\+\+?|[!=<>]=?|&&|\|\||[?:*/%-]/,
                punctuation: /[{}\[\]();,.]/
            }, t918.languages.avs = t918.languages.avisynth;
        })(e1181);
    }
    a33(Fe7, "avisynth");
});
var Oo = o17((kE, Co)=>{
    "use strict";
    Co.exports = Ue5;
    Ue5.displayName = "avroIdl";
    Ue5.aliases = [];
    function Ue5(e1182) {
        e1182.languages["avro-idl"] = {
            comment: {
                pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
                greedy: !0
            },
            string: {
                pattern: /(^|[^\\])"(?:[^\r\n"\\]|\\.)*"/,
                lookbehind: !0,
                greedy: !0
            },
            annotation: {
                pattern: /@(?:[$\w.-]|`[^\r\n`]+`)+/,
                greedy: !0,
                alias: "function"
            },
            "function-identifier": {
                pattern: /`[^\r\n`]+`(?=\s*\()/,
                greedy: !0,
                alias: "function"
            },
            identifier: {
                pattern: /`[^\r\n`]+`/,
                greedy: !0
            },
            "class-name": {
                pattern: /(\b(?:enum|error|protocol|record|throws)\b\s+)[$\w]+/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: [
                {
                    pattern: /(^|[^\w.])-?(?:(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|0x(?:[a-f0-9]+(?:\.[a-f0-9]*)?|\.[a-f0-9]+)(?:p[+-]?\d+)?)[dfl]?(?![\w.])/i,
                    lookbehind: !0
                },
                /-?\b(?:Infinity|NaN)\b/
            ],
            operator: /=/,
            punctuation: /[()\[\]{}<>.:,;-]/
        }, e1182.languages.avdl = e1182.languages["avro-idl"];
    }
    a33(Ue5, "avroIdl");
});
var Pe6 = o17((CE, Lo)=>{
    "use strict";
    Lo.exports = Be6;
    Be6.displayName = "bash";
    Be6.aliases = [
        "shell"
    ];
    function Be6(e1183) {
        (function(t919) {
            var r653 = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b", n542 = {
                pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
                lookbehind: !0,
                alias: "punctuation",
                inside: null
            }, i548 = {
                bash: n542,
                environment: {
                    pattern: RegExp("\\$" + r653),
                    alias: "constant"
                },
                variable: [
                    {
                        pattern: /\$?\(\([\s\S]+?\)\)/,
                        greedy: !0,
                        inside: {
                            variable: [
                                {
                                    pattern: /(^\$\(\([\s\S]+)\)\)/,
                                    lookbehind: !0
                                },
                                /^\$\(\(/
                            ],
                            number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
                            operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
                            punctuation: /\(\(?|\)\)?|,|;/
                        }
                    },
                    {
                        pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
                        greedy: !0,
                        inside: {
                            variable: /^\$\(|^`|\)$|`$/
                        }
                    },
                    {
                        pattern: /\$\{[^}]+\}/,
                        greedy: !0,
                        inside: {
                            operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
                            punctuation: /[\[\]]/,
                            environment: {
                                pattern: RegExp("(\\{)" + r653),
                                lookbehind: !0,
                                alias: "constant"
                            }
                        }
                    },
                    /\$(?:\w+|[#?*!@$])/
                ],
                entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
            };
            t919.languages.bash = {
                shebang: {
                    pattern: /^#!\s*\/.*/,
                    alias: "important"
                },
                comment: {
                    pattern: /(^|[^"{\\$])#.*/,
                    lookbehind: !0
                },
                "function-name": [
                    {
                        pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
                        lookbehind: !0,
                        alias: "function"
                    },
                    {
                        pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
                        alias: "function"
                    }
                ],
                "for-or-select": {
                    pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
                    alias: "variable",
                    lookbehind: !0
                },
                "assign-left": {
                    pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
                    inside: {
                        environment: {
                            pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + r653),
                            lookbehind: !0,
                            alias: "constant"
                        }
                    },
                    alias: "variable",
                    lookbehind: !0
                },
                string: [
                    {
                        pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: i548
                    },
                    {
                        pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            bash: n542
                        }
                    },
                    {
                        pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: i548
                    },
                    {
                        pattern: /(^|[^$\\])'[^']*'/,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
                        greedy: !0,
                        inside: {
                            entity: i548.entity
                        }
                    }
                ],
                environment: {
                    pattern: RegExp("\\$?" + r653),
                    alias: "constant"
                },
                variable: i548.variable,
                function: {
                    pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
                    lookbehind: !0
                },
                keyword: {
                    pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
                    lookbehind: !0
                },
                builtin: {
                    pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
                    lookbehind: !0,
                    alias: "class-name"
                },
                boolean: {
                    pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
                    lookbehind: !0
                },
                "file-descriptor": {
                    pattern: /\B&\d\b/,
                    alias: "important"
                },
                operator: {
                    pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
                    inside: {
                        "file-descriptor": {
                            pattern: /^\d/,
                            alias: "important"
                        }
                    }
                },
                punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
                number: {
                    pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
                    lookbehind: !0
                }
            }, n542.inside = t919.languages.bash;
            for(var l262 = [
                "comment",
                "function-name",
                "for-or-select",
                "assign-left",
                "string",
                "environment",
                "function",
                "keyword",
                "builtin",
                "boolean",
                "file-descriptor",
                "operator",
                "punctuation",
                "number"
            ], d116 = i548.variable[1].inside, u245 = 0; u245 < l262.length; u245++)d116[l262[u245]] = t919.languages.bash[l262[u245]];
            t919.languages.shell = t919.languages.bash;
        })(e1183);
    }
    a33(Be6, "bash");
});
var $e3 = o17((OE, xo)=>{
    "use strict";
    xo.exports = Ge6;
    Ge6.displayName = "basic";
    Ge6.aliases = [];
    function Ge6(e1184) {
        e1184.languages.basic = {
            comment: {
                pattern: /(?:!|REM\b).+/i,
                inside: {
                    keyword: /^REM/i
                }
            },
            string: {
                pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
                greedy: !0
            },
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
            keyword: /\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,
            function: /\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\$|\b)/i,
            operator: /<[=>]?|>=?|[+\-*\/^=&]|\b(?:AND|EQV|IMP|NOT|OR|XOR)\b/i,
            punctuation: /[,;:()]/
        };
    }
    a33(Ge6, "basic");
});
var Mo = o17((LE, Do)=>{
    "use strict";
    Do.exports = qe6;
    qe6.displayName = "batch";
    qe6.aliases = [];
    function qe6(e1185) {
        (function(t920) {
            var r654 = /%%?[~:\w]+%?|!\S+!/, n543 = {
                pattern: /\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im,
                alias: "attr-name",
                inside: {
                    punctuation: /:/
                }
            }, i549 = /"(?:[\\"]"|[^"])*"(?!")/, l263 = /(?:\b|-)\d+\b/;
            t920.languages.batch = {
                comment: [
                    /^::.*/m,
                    {
                        pattern: /((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
                        lookbehind: !0
                    }
                ],
                label: {
                    pattern: /^:.*/m,
                    alias: "property"
                },
                command: [
                    {
                        pattern: /((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,
                        lookbehind: !0,
                        inside: {
                            keyword: /\b(?:do|in)\b|^for\b/i,
                            string: i549,
                            parameter: n543,
                            variable: r654,
                            number: l263,
                            punctuation: /[()',]/
                        }
                    },
                    {
                        pattern: /((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,
                        lookbehind: !0,
                        inside: {
                            keyword: /\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,
                            string: i549,
                            parameter: n543,
                            variable: r654,
                            number: l263,
                            operator: /\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i
                        }
                    },
                    {
                        pattern: /((?:^|[&()])[ \t]*)else\b/im,
                        lookbehind: !0,
                        inside: {
                            keyword: /^else\b/i
                        }
                    },
                    {
                        pattern: /((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
                        lookbehind: !0,
                        inside: {
                            keyword: /^set\b/i,
                            string: i549,
                            parameter: n543,
                            variable: [
                                r654,
                                /\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/
                            ],
                            number: l263,
                            operator: /[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,
                            punctuation: /[()',]/
                        }
                    },
                    {
                        pattern: /((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,
                        lookbehind: !0,
                        inside: {
                            keyword: /^\w+\b/,
                            string: i549,
                            parameter: n543,
                            label: {
                                pattern: /(^\s*):\S+/m,
                                lookbehind: !0,
                                alias: "property"
                            },
                            variable: r654,
                            number: l263,
                            operator: /\^/
                        }
                    }
                ],
                operator: /[&@]/,
                punctuation: /[()']/
            };
        })(e1185);
    }
    a33(qe6, "batch");
});
var Uo = o17((xE, Fo)=>{
    "use strict";
    Fo.exports = He6;
    He6.displayName = "bbcode";
    He6.aliases = [
        "shortcode"
    ];
    function He6(e1186) {
        e1186.languages.bbcode = {
            tag: {
                pattern: /\[\/?[^\s=\]]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))?(?:\s+[^\s=\]]+\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))*\s*\]/,
                inside: {
                    tag: {
                        pattern: /^\[\/?[^\s=\]]+/,
                        inside: {
                            punctuation: /^\[\/?/
                        }
                    },
                    "attr-value": {
                        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+)/,
                        inside: {
                            punctuation: [
                                /^=/,
                                {
                                    pattern: /^(\s*)["']|["']$/,
                                    lookbehind: !0
                                }
                            ]
                        }
                    },
                    punctuation: /\]/,
                    "attr-name": /[^\s=\]]+/
                }
            }
        }, e1186.languages.shortcode = e1186.languages.bbcode;
    }
    a33(He6, "bbcode");
});
var Po = o17((DE, Bo)=>{
    "use strict";
    Bo.exports = ze5;
    ze5.displayName = "bicep";
    ze5.aliases = [];
    function ze5(e1187) {
        e1187.languages.bicep = {
            comment: [
                {
                    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /(^|[^\\:])\/\/.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            property: [
                {
                    pattern: /([\r\n][ \t]*)[a-z_]\w*(?=[ \t]*:)/i,
                    lookbehind: !0
                },
                {
                    pattern: /([\r\n][ \t]*)'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'(?=[ \t]*:)/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: [
                {
                    pattern: /'''[^'][\s\S]*?'''/,
                    greedy: !0
                },
                {
                    pattern: /(^|[^\\'])'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            "interpolated-string": {
                pattern: /(^|[^\\'])'(?:\\.|\$(?:(?!\{)|\{[^{}\r\n]*\})|[^'\\\r\n$])*'/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /\$\{[^{}\r\n]*\}/,
                        inside: {
                            expression: {
                                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                                lookbehind: !0
                            },
                            punctuation: /^\$\{|\}$/
                        }
                    },
                    string: /[\s\S]+/
                }
            },
            datatype: {
                pattern: /(\b(?:output|param)\b[ \t]+\w+[ \t]+)\w+\b/,
                lookbehind: !0,
                alias: "class-name"
            },
            boolean: /\b(?:false|true)\b/,
            keyword: /\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\b/,
            decorator: /@\w+\b/,
            function: /\b[a-z_]\w*(?=[ \t]*\()/i,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
            operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,
            punctuation: /[{}[\];(),.:]/
        }, e1187.languages.bicep["interpolated-string"].inside.interpolation.inside.expression.inside = e1187.languages.bicep;
    }
    a33(ze5, "bicep");
});
var $o = o17((ME, Go)=>{
    "use strict";
    Go.exports = Ve6;
    Ve6.displayName = "birb";
    Ve6.aliases = [];
    function Ve6(e1188) {
        e1188.languages.birb = e1188.languages.extend("clike", {
            string: {
                pattern: /r?("|')(?:\\.|(?!\1)[^\\])*\1/,
                greedy: !0
            },
            "class-name": [
                /\b[A-Z](?:[\d_]*[a-zA-Z]\w*)?\b/,
                /\b(?:[A-Z]\w*|(?!(?:var|void)\b)[a-z]\w*)(?=\s+\w+\s*[;,=()])/
            ],
            keyword: /\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\b/,
            operator: /\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?|:/,
            variable: /\b[a-z_]\w*\b/
        }), e1188.languages.insertBefore("birb", "function", {
            metadata: {
                pattern: /<\w+>/,
                greedy: !0,
                alias: "symbol"
            }
        });
    }
    a33(Ve6, "birb");
});
var Ho = o17((FE, qo)=>{
    "use strict";
    var Qm = x39();
    qo.exports = We5;
    We5.displayName = "bison";
    We5.aliases = [];
    function We5(e1189) {
        e1189.register(Qm), e1189.languages.bison = e1189.languages.extend("c", {}), e1189.languages.insertBefore("bison", "comment", {
            bison: {
                pattern: /^(?:[^%]|%(?!%))*%%[\s\S]*?%%/,
                inside: {
                    c: {
                        pattern: /%\{[\s\S]*?%\}|\{(?:\{[^}]*\}|[^{}])*\}/,
                        inside: {
                            delimiter: {
                                pattern: /^%?\{|%?\}$/,
                                alias: "punctuation"
                            },
                            "bison-variable": {
                                pattern: /[$@](?:<[^\s>]+>)?[\w$]+/,
                                alias: "variable",
                                inside: {
                                    punctuation: /<|>/
                                }
                            },
                            rest: e1189.languages.c
                        }
                    },
                    comment: e1189.languages.c.comment,
                    string: e1189.languages.c.string,
                    property: /\S+(?=:)/,
                    keyword: /%\w+/,
                    number: {
                        pattern: /(^|[^@])\b(?:0x[\da-f]+|\d+)/i,
                        lookbehind: !0
                    },
                    punctuation: /%[%?]|[|:;\[\]<>]/
                }
            }
        });
    }
    a33(We5, "bison");
});
var Vo = o17((UE, zo)=>{
    "use strict";
    zo.exports = je7;
    je7.displayName = "bnf";
    je7.aliases = [
        "rbnf"
    ];
    function je7(e1190) {
        e1190.languages.bnf = {
            string: {
                pattern: /"[^\r\n"]*"|'[^\r\n']*'/
            },
            definition: {
                pattern: /<[^<>\r\n\t]+>(?=\s*::=)/,
                alias: [
                    "rule",
                    "keyword"
                ],
                inside: {
                    punctuation: /^<|>$/
                }
            },
            rule: {
                pattern: /<[^<>\r\n\t]+>/,
                inside: {
                    punctuation: /^<|>$/
                }
            },
            operator: /::=|[|()[\]{}*+?]|\.{3}/
        }, e1190.languages.rbnf = e1190.languages.bnf;
    }
    a33(je7, "bnf");
});
var jo = o17((BE, Wo)=>{
    "use strict";
    Wo.exports = Ye4;
    Ye4.displayName = "brainfuck";
    Ye4.aliases = [];
    function Ye4(e1191) {
        e1191.languages.brainfuck = {
            pointer: {
                pattern: /<|>/,
                alias: "keyword"
            },
            increment: {
                pattern: /\+/,
                alias: "inserted"
            },
            decrement: {
                pattern: /-/,
                alias: "deleted"
            },
            branching: {
                pattern: /\[|\]/,
                alias: "important"
            },
            operator: /[.,]/,
            comment: /\S+/
        };
    }
    a33(Ye4, "brainfuck");
});
var Ko = o17((PE, Yo)=>{
    "use strict";
    Yo.exports = Ke4;
    Ke4.displayName = "brightscript";
    Ke4.aliases = [];
    function Ke4(e1192) {
        e1192.languages.brightscript = {
            comment: /(?:\brem|').*/i,
            "directive-statement": {
                pattern: /(^[\t ]*)#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if).*/im,
                lookbehind: !0,
                alias: "property",
                inside: {
                    "error-message": {
                        pattern: /(^#error).+/,
                        lookbehind: !0
                    },
                    directive: {
                        pattern: /^#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if)/,
                        alias: "keyword"
                    },
                    expression: {
                        pattern: /[\s\S]+/,
                        inside: null
                    }
                }
            },
            property: {
                pattern: /([\r\n{,][\t ]*)(?:(?!\d)\w+|"(?:[^"\r\n]|"")*"(?!"))(?=[ \t]*:)/,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /"(?:[^"\r\n]|"")*"(?!")/,
                greedy: !0
            },
            "class-name": {
                pattern: /(\bAs[\t ]+)\w+/i,
                lookbehind: !0
            },
            keyword: /\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\b/i,
            boolean: /\b(?:false|true)\b/i,
            function: /\b(?!\d)\w+(?=[\t ]*\()/,
            number: /(?:\b\d+(?:\.\d+)?(?:[ed][+-]\d+)?|&h[a-f\d]+)\b[%&!#]?/i,
            operator: /--|\+\+|>>=?|<<=?|<>|[-+*/\\<>]=?|[:^=?]|\b(?:and|mod|not|or)\b/i,
            punctuation: /[.,;()[\]{}]/,
            constant: /\b(?:LINE_NUM)\b/i
        }, e1192.languages.brightscript["directive-statement"].inside.expression.inside = e1192.languages.brightscript;
    }
    a33(Ke4, "brightscript");
});
var Xo = o17((GE, Zo)=>{
    "use strict";
    Zo.exports = Ze3;
    Ze3.displayName = "bro";
    Ze3.aliases = [];
    function Ze3(e1193) {
        e1193.languages.bro = {
            comment: {
                pattern: /(^|[^\\$])#.*/,
                lookbehind: !0,
                inside: {
                    italic: /\b(?:FIXME|TODO|XXX)\b/
                }
            },
            string: {
                pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            boolean: /\b[TF]\b/,
            function: {
                pattern: /(\b(?:event|function|hook)[ \t]+)\w+(?:::\w+)?/,
                lookbehind: !0
            },
            builtin: /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,
            constant: {
                pattern: /(\bconst[ \t]+)\w+/i,
                lookbehind: !0
            },
            keyword: /\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\b/,
            operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&|\|\|?|\?|\*|\/|~|\^|%/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            punctuation: /[{}[\];(),.:]/
        };
    }
    a33(Ze3, "bro");
});
var Jo = o17(($E, Qo)=>{
    "use strict";
    Qo.exports = Xe5;
    Xe5.displayName = "bsl";
    Xe5.aliases = [];
    function Xe5(e1194) {
        e1194.languages.bsl = {
            comment: /\/\/.*/,
            string: [
                {
                    pattern: /"(?:[^"]|"")*"(?!")/,
                    greedy: !0
                },
                {
                    pattern: /'(?:[^'\r\n\\]|\\.)*'/
                }
            ],
            keyword: [
                {
                    pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
                    lookbehind: !0
                },
                {
                    pattern: /\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\b/i
                }
            ],
            number: {
                pattern: /(^(?=\d)|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:\d+(?:\.\d*)?|\.\d+)(?:E[+-]?\d+)?/i,
                lookbehind: !0
            },
            operator: [
                /[<>+\-*/]=?|[%=]/,
                {
                    pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:и|или|не)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
                    lookbehind: !0
                },
                {
                    pattern: /\b(?:and|not|or)\b/i
                }
            ],
            punctuation: /\(\.|\.\)|[()\[\]:;,.]/,
            directive: [
                {
                    pattern: /^([ \t]*)&.*/m,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "important"
                },
                {
                    pattern: /^([ \t]*)#.*/gm,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "important"
                }
            ]
        }, e1194.languages.oscript = e1194.languages.bsl;
    }
    a33(Xe5, "bsl");
});
var ts = o17((qE, es)=>{
    "use strict";
    es.exports = Qe4;
    Qe4.displayName = "cfscript";
    Qe4.aliases = [];
    function Qe4(e1195) {
        e1195.languages.cfscript = e1195.languages.extend("clike", {
            comment: [
                {
                    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                    lookbehind: !0,
                    inside: {
                        annotation: {
                            pattern: /(?:^|[^.])@[\w\.]+/,
                            alias: "punctuation"
                        }
                    }
                },
                {
                    pattern: /(^|[^\\:])\/\/.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            keyword: /\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\b(?!\s*=)/,
            operator: [
                /\+\+|--|&&|\|\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\?(?:\.|:)?|[?:]/,
                /\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/
            ],
            scope: {
                pattern: /\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/,
                alias: "global"
            },
            type: {
                pattern: /\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/,
                alias: "builtin"
            }
        }), e1195.languages.insertBefore("cfscript", "keyword", {
            "function-variable": {
                pattern: /[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
                alias: "function"
            }
        }), delete e1195.languages.cfscript["class-name"], e1195.languages.cfc = e1195.languages.cfscript;
    }
    a33(Qe4, "cfscript");
});
var rs = o17((HE, as)=>{
    "use strict";
    var Jm = Q5();
    as.exports = Je5;
    Je5.displayName = "chaiscript";
    Je5.aliases = [];
    function Je5(e1196) {
        e1196.register(Jm), e1196.languages.chaiscript = e1196.languages.extend("clike", {
            string: {
                pattern: /(^|[^\\])'(?:[^'\\]|\\[\s\S])*'/,
                lookbehind: !0,
                greedy: !0
            },
            "class-name": [
                {
                    pattern: /(\bclass\s+)\w+/,
                    lookbehind: !0
                },
                {
                    pattern: /(\b(?:attr|def)\s+)\w+(?=\s*::)/,
                    lookbehind: !0
                }
            ],
            keyword: /\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\b/,
            number: [
                e1196.languages.cpp.number,
                /\b(?:Infinity|NaN)\b/
            ],
            operator: />>=?|<<=?|\|\||&&|:[:=]?|--|\+\+|[=!<>+\-*/%|&^]=?|[?~]|`[^`\r\n]{1,4}`/
        }), e1196.languages.insertBefore("chaiscript", "operator", {
            "parameter-type": {
                pattern: /([,(]\s*)\w+(?=\s+\w)/,
                lookbehind: !0,
                alias: "class-name"
            }
        }), e1196.languages.insertBefore("chaiscript", "string", {
            "string-interpolation": {
                pattern: /(^|[^\\])"(?:[^"$\\]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*"/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}/,
                        lookbehind: !0,
                        inside: {
                            "interpolation-expression": {
                                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                                lookbehind: !0,
                                inside: e1196.languages.chaiscript
                            },
                            "interpolation-punctuation": {
                                pattern: /^\$\{|\}$/,
                                alias: "punctuation"
                            }
                        }
                    },
                    string: /[\s\S]+/
                }
            }
        });
    }
    a33(Je5, "chaiscript");
});
var is = o17((zE, ns)=>{
    "use strict";
    ns.exports = et5;
    et5.displayName = "cil";
    et5.aliases = [];
    function et5(e1197) {
        e1197.languages.cil = {
            comment: /\/\/.*/,
            string: {
                pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            directive: {
                pattern: /(^|\W)\.[a-z]+(?=\s)/,
                lookbehind: !0,
                alias: "class-name"
            },
            variable: /\[[\w\.]+\]/,
            keyword: /\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\b/,
            function: /\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\.)?(?:conv\.(?:[iu][1248]?|ovf\.[iu][1248]?(?:\.un)?|r\.un|r4|r8)|ldc\.(?:i4(?:\.\d+|\.[mM]1|\.s)?|i8|r4|r8)|ldelem(?:\.[iu][1248]?|\.r[48]|\.ref|a)?|ldind\.(?:[iu][1248]?|r[48]|ref)|stelem\.?(?:i[1248]?|r[48]|ref)?|stind\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\.[0-3s]|a(?:\.s)?)?|ldloc(?:\.\d+|\.s)?|sub(?:\.ovf(?:\.un)?)?|mul(?:\.ovf(?:\.un)?)?|add(?:\.ovf(?:\.un)?)?|stloc(?:\.[0-3s])?|refany(?:type|val)|blt(?:\.un)?(?:\.s)?|ble(?:\.un)?(?:\.s)?|bgt(?:\.un)?(?:\.s)?|bge(?:\.un)?(?:\.s)?|unbox(?:\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\.s)?|bne\.un(?:\.s)?|ldloca(?:\.s)?|brzero(?:\.s)?|brtrue(?:\.s)?|brnull(?:\.s)?|brinst(?:\.s)?|starg(?:\.s)?|leave(?:\.s)?|shr(?:\.un)?|rem(?:\.un)?|div(?:\.un)?|clt(?:\.un)?|alignment|castclass|ldvirtftn|beq(?:\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /\b-?(?:0x[0-9a-f]+|\d+)(?:\.[0-9a-f]+)?\b/i,
            punctuation: /[{}[\];(),:=]|IL_[0-9A-Za-z]+/
        };
    }
    a33(et5, "cil");
});
var ss = o17((VE, os1)=>{
    "use strict";
    os1.exports = tt4;
    tt4.displayName = "clojure";
    tt4.aliases = [];
    function tt4(e1198) {
        e1198.languages.clojure = {
            comment: {
                pattern: /;.*/,
                greedy: !0
            },
            string: {
                pattern: /"(?:[^"\\]|\\.)*"/,
                greedy: !0
            },
            char: /\\\w+/,
            symbol: {
                pattern: /(^|[\s()\[\]{},])::?[\w*+!?'<>=/.-]+/,
                lookbehind: !0
            },
            keyword: {
                pattern: /(\()(?:-|->|->>|\.|\.\.|\*|\/|\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[\s)]|$)/,
                lookbehind: !0
            },
            boolean: /\b(?:false|nil|true)\b/,
            number: {
                pattern: /(^|[^\w$@])(?:\d+(?:[/.]\d+)?(?:e[+-]?\d+)?|0x[a-f0-9]+|[1-9]\d?r[a-z0-9]+)[lmn]?(?![\w$@])/i,
                lookbehind: !0
            },
            function: {
                pattern: /((?:^|[^'])\()[\w*+!?'<>=/.-]+(?=[\s)]|$)/,
                lookbehind: !0
            },
            operator: /[#@^`~]/,
            punctuation: /[{}\[\](),]/
        };
    }
    a33(tt4, "clojure");
});
var us = o17((WE, ls)=>{
    "use strict";
    ls.exports = at5;
    at5.displayName = "cmake";
    at5.aliases = [];
    function at5(e1199) {
        e1199.languages.cmake = {
            comment: /#.*/,
            string: {
                pattern: /"(?:[^\\"]|\\.)*"/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,
                        inside: {
                            punctuation: /\$\{|\}/,
                            variable: /\w+/
                        }
                    }
                }
            },
            variable: /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\b/,
            property: /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
            keyword: /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
            boolean: /\b(?:FALSE|OFF|ON|TRUE)\b/,
            namespace: /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
            operator: /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
            inserted: {
                pattern: /\b\w+::\w+\b/,
                alias: "class-name"
            },
            number: /\b\d+(?:\.\d+)*\b/,
            function: /\b[a-z_]\w*(?=\s*\()\b/i,
            punctuation: /[()>}]|\$[<{]/
        };
    }
    a33(at5, "cmake");
});
var cs = o17((jE, ds)=>{
    "use strict";
    ds.exports = rt5;
    rt5.displayName = "cobol";
    rt5.aliases = [];
    function rt5(e1200) {
        e1200.languages.cobol = {
            comment: {
                pattern: /\*>.*|(^[ \t]*)\*.*/m,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i,
                greedy: !0
            },
            level: {
                pattern: /(^[ \t]*)\d+\b/m,
                lookbehind: !0,
                greedy: !0,
                alias: "number"
            },
            "class-name": {
                pattern: /(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,
                lookbehind: !0,
                inside: {
                    number: {
                        pattern: /(\()\d+/,
                        lookbehind: !0
                    },
                    punctuation: /[()]/
                }
            },
            keyword: {
                pattern: /(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,
                lookbehind: !0
            },
            boolean: {
                pattern: /(^|[^\w-])(?:false|true)(?![\w-])/i,
                lookbehind: !0
            },
            number: {
                pattern: /(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i,
                lookbehind: !0
            },
            operator: [
                /<>|[<>]=?|[=+*/&]/,
                {
                    pattern: /(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i,
                    lookbehind: !0
                }
            ],
            punctuation: /[.:,()]/
        };
    }
    a33(rt5, "cobol");
});
var gs = o17((YE, ps)=>{
    "use strict";
    ps.exports = nt4;
    nt4.displayName = "coffeescript";
    nt4.aliases = [
        "coffee"
    ];
    function nt4(e1201) {
        (function(t921) {
            var r655 = /#(?!\{).+/, n544 = {
                pattern: /#\{[^}]+\}/,
                alias: "variable"
            };
            t921.languages.coffeescript = t921.languages.extend("javascript", {
                comment: r655,
                string: [
                    {
                        pattern: /'(?:\\[\s\S]|[^\\'])*'/,
                        greedy: !0
                    },
                    {
                        pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                        greedy: !0,
                        inside: {
                            interpolation: n544
                        }
                    }
                ],
                keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
                "class-member": {
                    pattern: /@(?!\d)\w+/,
                    alias: "variable"
                }
            }), t921.languages.insertBefore("coffeescript", "comment", {
                "multiline-comment": {
                    pattern: /###[\s\S]+?###/,
                    alias: "comment"
                },
                "block-regex": {
                    pattern: /\/{3}[\s\S]*?\/{3}/,
                    alias: "regex",
                    inside: {
                        comment: r655,
                        interpolation: n544
                    }
                }
            }), t921.languages.insertBefore("coffeescript", "string", {
                "inline-javascript": {
                    pattern: /`(?:\\[\s\S]|[^\\`])*`/,
                    inside: {
                        delimiter: {
                            pattern: /^`|`$/,
                            alias: "punctuation"
                        },
                        script: {
                            pattern: /[\s\S]+/,
                            alias: "language-javascript",
                            inside: t921.languages.javascript
                        }
                    }
                },
                "multiline-string": [
                    {
                        pattern: /'''[\s\S]*?'''/,
                        greedy: !0,
                        alias: "string"
                    },
                    {
                        pattern: /"""[\s\S]*?"""/,
                        greedy: !0,
                        alias: "string",
                        inside: {
                            interpolation: n544
                        }
                    }
                ]
            }), t921.languages.insertBefore("coffeescript", "keyword", {
                property: /(?!\d)\w+(?=\s*:(?!:))/
            }), delete t921.languages.coffeescript["template-string"], t921.languages.coffee = t921.languages.coffeescript;
        })(e1201);
    }
    a33(nt4, "coffeescript");
});
var ms = o17((KE, bs)=>{
    "use strict";
    bs.exports = it4;
    it4.displayName = "concurnas";
    it4.aliases = [
        "conc"
    ];
    function it4(e1202) {
        e1202.languages.concurnas = {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*)/,
                lookbehind: !0,
                greedy: !0
            },
            langext: {
                pattern: /\b\w+\s*\|\|[\s\S]+?\|\|/,
                greedy: !0,
                inside: {
                    "class-name": /^\w+/,
                    string: {
                        pattern: /(^\s*\|\|)[\s\S]+(?=\|\|$)/,
                        lookbehind: !0
                    },
                    punctuation: /\|\|/
                }
            },
            function: {
                pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/,
                lookbehind: !0
            },
            keyword: /\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /\b0b[01][01_]*L?\b|\b0x(?:[\da-f_]*\.)?[\da-f_p+-]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfls]?/i,
            punctuation: /[{}[\];(),.:]/,
            operator: /<==|>==|=>|->|<-|<>|&==|&<>|\?:?|\.\?|\+\+|--|[-+*/=<>]=?|[!^~]|\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\b=?/,
            annotation: {
                pattern: /@(?:\w+:)?(?:\w+|\[[^\]]+\])?/,
                alias: "builtin"
            }
        }, e1202.languages.insertBefore("concurnas", "langext", {
            "regex-literal": {
                pattern: /\br("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                        lookbehind: !0,
                        inside: e1202.languages.concurnas
                    },
                    regex: /[\s\S]+/
                }
            },
            "string-literal": {
                pattern: /(?:\B|\bs)("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                        lookbehind: !0,
                        inside: e1202.languages.concurnas
                    },
                    string: /[\s\S]+/
                }
            }
        }), e1202.languages.conc = e1202.languages.concurnas;
    }
    a33(it4, "concurnas");
});
var Es = o17((ZE, fs)=>{
    "use strict";
    fs.exports = ot4;
    ot4.displayName = "coq";
    ot4.aliases = [];
    function ot4(e1203) {
        (function(t922) {
            for(var r656 = /\(\*(?:[^(*]|\((?!\*)|\*(?!\))|<self>)*\*\)/.source, n545 = 0; n545 < 2; n545++)r656 = r656.replace(/<self>/g, function() {
                return r656;
            });
            r656 = r656.replace(/<self>/g, "[]"), t922.languages.coq = {
                comment: RegExp(r656),
                string: {
                    pattern: /"(?:[^"]|"")*"(?!")/,
                    greedy: !0
                },
                attribute: [
                    {
                        pattern: RegExp(/#\[(?:[^\[\]("]|"(?:[^"]|"")*"(?!")|\((?!\*)|<comment>)*\]/.source.replace(/<comment>/g, function() {
                            return r656;
                        })),
                        greedy: !0,
                        alias: "attr-name",
                        inside: {
                            comment: RegExp(r656),
                            string: {
                                pattern: /"(?:[^"]|"")*"(?!")/,
                                greedy: !0
                            },
                            operator: /=/,
                            punctuation: /^#\[|\]$|[,()]/
                        }
                    },
                    {
                        pattern: /\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\b/,
                        alias: "attr-name"
                    }
                ],
                keyword: /\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\b/,
                number: /\b(?:0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]+)?(?:p[+-]?\d[\d_]*)?|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?\d[\d_]*)?)\b/i,
                punct: {
                    pattern: /@\{|\{\||\[=|:>/,
                    alias: "punctuation"
                },
                operator: /\/\\|\\\/|\.{2,3}|:{1,2}=|\*\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\|[-|]?|[-!%&*+/<=>?@^~']/,
                punctuation: /\.\(|`\(|@\{|`\{|\{\||\[=|:>|[:.,;(){}\[\]]/
            };
        })(e1203);
    }
    a33(ot4, "coq");
});
var j31 = o17((XE, Ss)=>{
    "use strict";
    Ss.exports = st3;
    st3.displayName = "ruby";
    st3.aliases = [
        "rb"
    ];
    function st3(e1204) {
        (function(t923) {
            t923.languages.ruby = t923.languages.extend("clike", {
                comment: {
                    pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
                    greedy: !0
                },
                "class-name": {
                    pattern: /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /[.\\]/
                    }
                },
                keyword: /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
                operator: /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
                punctuation: /[(){}[\].,;]/
            }), t923.languages.insertBefore("ruby", "operator", {
                "double-colon": {
                    pattern: /::/,
                    alias: "punctuation"
                }
            });
            var r657 = {
                pattern: /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
                lookbehind: !0,
                inside: {
                    content: {
                        pattern: /^(#\{)[\s\S]+(?=\}$)/,
                        lookbehind: !0,
                        inside: t923.languages.ruby
                    },
                    delimiter: {
                        pattern: /^#\{|\}$/,
                        alias: "punctuation"
                    }
                }
            };
            delete t923.languages.ruby.function;
            var n546 = "(?:" + [
                /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,
                /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,
                /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,
                /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source
            ].join("|") + ")", i550 = /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;
            t923.languages.insertBefore("ruby", "keyword", {
                "regex-literal": [
                    {
                        pattern: RegExp(/%r/.source + n546 + /[egimnosux]{0,6}/.source),
                        greedy: !0,
                        inside: {
                            interpolation: r657,
                            regex: /[\s\S]+/
                        }
                    },
                    {
                        pattern: /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: {
                            interpolation: r657,
                            regex: /[\s\S]+/
                        }
                    }
                ],
                variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
                symbol: [
                    {
                        pattern: RegExp(/(^|[^:]):/.source + i550),
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: RegExp(/([\r\n{(,][ \t]*)/.source + i550 + /(?=:(?!:))/.source),
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                "method-definition": {
                    pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
                    lookbehind: !0,
                    inside: {
                        function: /\b\w+$/,
                        keyword: /^self\b/,
                        "class-name": /^\w+/,
                        punctuation: /\./
                    }
                }
            }), t923.languages.insertBefore("ruby", "string", {
                "string-literal": [
                    {
                        pattern: RegExp(/%[qQiIwWs]?/.source + n546),
                        greedy: !0,
                        inside: {
                            interpolation: r657,
                            string: /[\s\S]+/
                        }
                    },
                    {
                        pattern: /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
                        greedy: !0,
                        inside: {
                            interpolation: r657,
                            string: /[\s\S]+/
                        }
                    },
                    {
                        pattern: /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                        alias: "heredoc-string",
                        greedy: !0,
                        inside: {
                            delimiter: {
                                pattern: /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
                                inside: {
                                    symbol: /\b\w+/,
                                    punctuation: /^<<[-~]?/
                                }
                            },
                            interpolation: r657,
                            string: /[\s\S]+/
                        }
                    },
                    {
                        pattern: /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
                        alias: "heredoc-string",
                        greedy: !0,
                        inside: {
                            delimiter: {
                                pattern: /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
                                inside: {
                                    symbol: /\b\w+/,
                                    punctuation: /^<<[-~]?'|'$/
                                }
                            },
                            string: /[\s\S]+/
                        }
                    }
                ],
                "command-literal": [
                    {
                        pattern: RegExp(/%x/.source + n546),
                        greedy: !0,
                        inside: {
                            interpolation: r657,
                            command: {
                                pattern: /[\s\S]+/,
                                alias: "string"
                            }
                        }
                    },
                    {
                        pattern: /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
                        greedy: !0,
                        inside: {
                            interpolation: r657,
                            command: {
                                pattern: /[\s\S]+/,
                                alias: "string"
                            }
                        }
                    }
                ]
            }), delete t923.languages.ruby.string, t923.languages.insertBefore("ruby", "number", {
                builtin: /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
                constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/
            }), t923.languages.rb = t923.languages.ruby;
        })(e1204);
    }
    a33(st3, "ruby");
});
var ys = o17((QE, hs)=>{
    "use strict";
    var ef = j31();
    hs.exports = lt4;
    lt4.displayName = "crystal";
    lt4.aliases = [];
    function lt4(e1205) {
        e1205.register(ef), function(t924) {
            t924.languages.crystal = t924.languages.extend("ruby", {
                keyword: [
                    /\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\b/,
                    {
                        pattern: /(\.\s*)(?:is_a|responds_to)\?/,
                        lookbehind: !0
                    }
                ],
                number: /\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\da-fA-F_]*[\da-fA-F]|(?:\d(?:[\d_]*\d)?)(?:\.[\d_]*\d)?(?:[eE][+-]?[\d_]*\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\b/,
                operator: [
                    /->/,
                    t924.languages.ruby.operator
                ],
                punctuation: /[(){}[\].,;\\]/
            }), t924.languages.insertBefore("crystal", "string-literal", {
                attribute: {
                    pattern: /@\[.*?\]/,
                    inside: {
                        delimiter: {
                            pattern: /^@\[|\]$/,
                            alias: "punctuation"
                        },
                        attribute: {
                            pattern: /^(\s*)\w+/,
                            lookbehind: !0,
                            alias: "class-name"
                        },
                        args: {
                            pattern: /\S(?:[\s\S]*\S)?/,
                            inside: t924.languages.crystal
                        }
                    }
                },
                expansion: {
                    pattern: /\{(?:\{.*?\}|%.*?%)\}/,
                    inside: {
                        content: {
                            pattern: /^(\{.)[\s\S]+(?=.\}$)/,
                            lookbehind: !0,
                            inside: t924.languages.crystal
                        },
                        delimiter: {
                            pattern: /^\{[\{%]|[\}%]\}$/,
                            alias: "operator"
                        }
                    }
                },
                char: {
                    pattern: /'(?:[^\\\r\n]{1,2}|\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\{[A-Fa-f0-9]{1,6}\})))'/,
                    greedy: !0
                }
            });
        }(e1205);
    }
    a33(lt4, "crystal");
});
var As = o17((JE, Ts)=>{
    "use strict";
    var tf = W10();
    Ts.exports = ut4;
    ut4.displayName = "cshtml";
    ut4.aliases = [
        "razor"
    ];
    function ut4(e1206) {
        e1206.register(tf), function(t925) {
            var r658 = /\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\//.source, n547 = /@(?!")|"(?:[^\r\n\\"]|\\.)*"|@"(?:[^\\"]|""|\\[\s\S])*"(?!")/.source + "|" + /'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!')))/.source;
            function i551(f148, h128) {
                for(var S72 = 0; S72 < h128; S72++)f148 = f148.replace(/<self>/g, function() {
                    return "(?:" + f148 + ")";
                });
                return f148.replace(/<self>/g, "[^\\s\\S]").replace(/<str>/g, "(?:" + n547 + ")").replace(/<comment>/g, "(?:" + r658 + ")");
            }
            a33(i551, "nested");
            var l264 = i551(/\((?:[^()'"@/]|<str>|<comment>|<self>)*\)/.source, 2), d117 = i551(/\[(?:[^\[\]'"@/]|<str>|<comment>|<self>)*\]/.source, 2), u246 = i551(/\{(?:[^{}'"@/]|<str>|<comment>|<self>)*\}/.source, 2), p177 = i551(/<(?:[^<>'"@/]|<str>|<comment>|<self>)*>/.source, 2), c158 = /(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?/.source, g101 = /(?!\d)[^\s>\/=$<%]+/.source + c158 + /\s*\/?>/.source, b81 = /\B@?/.source + "(?:" + /<([a-zA-Z][\w:]*)/.source + c158 + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + /<\/?(?!\1\b)/.source + g101 + "|" + i551(/<\1/.source + c158 + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + /<\/?(?!\1\b)/.source + g101 + "|<self>") + ")*" + /<\/\1\s*>/.source, 2)) + ")*" + /<\/\1\s*>/.source + "|" + /</.source + g101 + ")";
            t925.languages.cshtml = t925.languages.extend("markup", {});
            var m129 = t925.languages.insertBefore("csharp", "string", {
                html: {
                    pattern: RegExp(b81),
                    greedy: !0,
                    inside: t925.languages.cshtml
                }
            }, {
                csharp: t925.languages.extend("csharp", {})
            }), E52 = {
                pattern: /\S[\s\S]*/,
                alias: "language-csharp",
                inside: m129
            };
            t925.languages.insertBefore("cshtml", "prolog", {
                "razor-comment": {
                    pattern: /@\*[\s\S]*?\*@/,
                    greedy: !0,
                    alias: "comment"
                },
                block: {
                    pattern: RegExp(/(^|[^@])@/.source + "(?:" + [
                        u246,
                        /(?:code|functions)\s*/.source + u246,
                        /(?:for|foreach|lock|switch|using|while)\s*/.source + l264 + /\s*/.source + u246,
                        /do\s*/.source + u246 + /\s*while\s*/.source + l264 + /(?:\s*;)?/.source,
                        /try\s*/.source + u246 + /\s*catch\s*/.source + l264 + /\s*/.source + u246 + /\s*finally\s*/.source + u246,
                        /if\s*/.source + l264 + /\s*/.source + u246 + "(?:" + /\s*else/.source + "(?:" + /\s+if\s*/.source + l264 + ")?" + /\s*/.source + u246 + ")*"
                    ].join("|") + ")"),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        keyword: /^@\w*/,
                        csharp: E52
                    }
                },
                directive: {
                    pattern: /^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*/m,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        keyword: /^@\w+/,
                        csharp: E52
                    }
                },
                value: {
                    pattern: RegExp(/(^|[^@])@/.source + /(?:await\b\s*)?/.source + "(?:" + /\w+\b/.source + "|" + l264 + ")(?:" + /[?!]?\.\w+\b/.source + "|" + l264 + "|" + d117 + "|" + p177 + l264 + ")*"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "variable",
                    inside: {
                        keyword: /^@/,
                        csharp: E52
                    }
                },
                "delegate-operator": {
                    pattern: /(^|[^@])@(?=<)/,
                    lookbehind: !0,
                    alias: "operator"
                }
            }), t925.languages.razor = t925.languages.cshtml;
        }(e1206);
    }
    a33(ut4, "cshtml");
});
var Rs = o17((eS, _s)=>{
    "use strict";
    _s.exports = dt3;
    dt3.displayName = "csp";
    dt3.aliases = [];
    function dt3(e1207) {
        (function(t926) {
            function r659(n548) {
                return RegExp(/([ \t])/.source + "(?:" + n548 + ")" + /(?=[\s;]|$)/.source, "i");
            }
            a33(r659, "value"), t926.languages.csp = {
                directive: {
                    pattern: /(^|[\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\s;]|$)/i,
                    lookbehind: !0,
                    alias: "property"
                },
                scheme: {
                    pattern: r659(/[a-z][a-z0-9.+-]*:/.source),
                    lookbehind: !0
                },
                none: {
                    pattern: r659(/'none'/.source),
                    lookbehind: !0,
                    alias: "keyword"
                },
                nonce: {
                    pattern: r659(/'nonce-[-+/\w=]+'/.source),
                    lookbehind: !0,
                    alias: "number"
                },
                hash: {
                    pattern: r659(/'sha(?:256|384|512)-[-+/\w=]+'/.source),
                    lookbehind: !0,
                    alias: "number"
                },
                host: {
                    pattern: r659(/[a-z][a-z0-9.+-]*:\/\/[^\s;,']*/.source + "|" + /\*[^\s;,']*/.source + "|" + /[a-z0-9-]+(?:\.[a-z0-9-]+)+(?::[\d*]+)?(?:\/[^\s;,']*)?/.source),
                    lookbehind: !0,
                    alias: "url",
                    inside: {
                        important: /\*/
                    }
                },
                keyword: [
                    {
                        pattern: r659(/'unsafe-[a-z-]+'/.source),
                        lookbehind: !0,
                        alias: "unsafe"
                    },
                    {
                        pattern: r659(/'[a-z-]+'/.source),
                        lookbehind: !0,
                        alias: "safe"
                    }
                ],
                punctuation: /;/
            };
        })(e1207);
    }
    a33(dt3, "csp");
});
var Ns = o17((tS, Is)=>{
    "use strict";
    Is.exports = ct3;
    ct3.displayName = "cssExtras";
    ct3.aliases = [];
    function ct3(e1208) {
        (function(t927) {
            var r660 = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, n549;
            t927.languages.css.selector = {
                pattern: t927.languages.css.selector.pattern,
                lookbehind: !0,
                inside: n549 = {
                    "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
                    "pseudo-class": /:[-\w]+/,
                    class: /\.[-\w]+/,
                    id: /#[-\w]+/,
                    attribute: {
                        pattern: RegExp(`\\[(?:[^[\\]"']|` + r660.source + ")*\\]"),
                        greedy: !0,
                        inside: {
                            punctuation: /^\[|\]$/,
                            "case-sensitivity": {
                                pattern: /(\s)[si]$/i,
                                lookbehind: !0,
                                alias: "keyword"
                            },
                            namespace: {
                                pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
                                lookbehind: !0,
                                inside: {
                                    punctuation: /\|$/
                                }
                            },
                            "attr-name": {
                                pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
                                lookbehind: !0
                            },
                            "attr-value": [
                                r660,
                                {
                                    pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
                                    lookbehind: !0
                                }
                            ],
                            operator: /[|~*^$]?=/
                        }
                    },
                    "n-th": [
                        {
                            pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
                            lookbehind: !0,
                            inside: {
                                number: /[\dn]+/,
                                operator: /[+-]/
                            }
                        },
                        {
                            pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
                            lookbehind: !0
                        }
                    ],
                    combinator: />|\+|~|\|\|/,
                    punctuation: /[(),]/
                }
            }, t927.languages.css.atrule.inside["selector-function-argument"].inside = n549, t927.languages.insertBefore("css", "property", {
                variable: {
                    pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
                    lookbehind: !0
                }
            });
            var i552 = {
                pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/,
                lookbehind: !0
            }, l265 = {
                pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
                lookbehind: !0
            };
            t927.languages.insertBefore("css", "function", {
                operator: {
                    pattern: /(\s)[+\-*\/](?=\s)/,
                    lookbehind: !0
                },
                hexcode: {
                    pattern: /\B#[\da-f]{3,8}\b/i,
                    alias: "color"
                },
                color: [
                    {
                        pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
                        lookbehind: !0
                    },
                    {
                        pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
                        inside: {
                            unit: i552,
                            number: l265,
                            function: /[\w-]+(?=\()/,
                            punctuation: /[(),]/
                        }
                    }
                ],
                entity: /\\[\da-f]{1,8}/i,
                unit: i552,
                number: l265
            });
        })(e1208);
    }
    a33(ct3, "cssExtras");
});
var vs = o17((aS, ws)=>{
    "use strict";
    ws.exports = pt4;
    pt4.displayName = "csv";
    pt4.aliases = [];
    function pt4(e1209) {
        e1209.languages.csv = {
            value: /[^\r\n,"]+|"(?:[^"]|"")*"(?!")/,
            punctuation: /,/
        };
    }
    a33(pt4, "csv");
});
var Cs = o17((rS, ks)=>{
    "use strict";
    ks.exports = gt4;
    gt4.displayName = "cypher";
    gt4.aliases = [];
    function gt4(e1210) {
        e1210.languages.cypher = {
            comment: /\/\/.*/,
            string: {
                pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/,
                greedy: !0
            },
            "class-name": {
                pattern: /(:\s*)(?:\w+|`(?:[^`\\\r\n])*`)(?=\s*[{):])/,
                lookbehind: !0,
                greedy: !0
            },
            relationship: {
                pattern: /(-\[\s*(?:\w+\s*|`(?:[^`\\\r\n])*`\s*)?:\s*|\|\s*:\s*)(?:\w+|`(?:[^`\\\r\n])*`)/,
                lookbehind: !0,
                greedy: !0,
                alias: "property"
            },
            identifier: {
                pattern: /`(?:[^`\\\r\n])*`/,
                greedy: !0
            },
            variable: /\$\w+/,
            keyword: /\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\b/i,
            function: /\b\w+\b(?=\s*\()/,
            boolean: /\b(?:false|null|true)\b/i,
            number: /\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?)\b/,
            operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\.\.\.?/,
            punctuation: /[()[\]{},;.]/
        };
    }
    a33(gt4, "cypher");
});
var Ls = o17((nS, Os)=>{
    "use strict";
    Os.exports = bt4;
    bt4.displayName = "d";
    bt4.aliases = [];
    function bt4(e1211) {
        e1211.languages.d = e1211.languages.extend("clike", {
            comment: [
                {
                    pattern: /^\s*#!.+/,
                    greedy: !0
                },
                {
                    pattern: RegExp(/(^|[^\\])/.source + "(?:" + [
                        /\/\+(?:\/\+(?:[^+]|\+(?!\/))*\+\/|(?!\/\+)[\s\S])*?\+\//.source,
                        /\/\/.*/.source,
                        /\/\*[\s\S]*?\*\//.source
                    ].join("|") + ")"),
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: [
                {
                    pattern: RegExp([
                        /\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/.source,
                        /\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/.source,
                        /\bq"((?!\d)\w+)$[\s\S]*?^\1"/.source,
                        /\bq"(.)[\s\S]*?\2"/.source,
                        /(["`])(?:\\[\s\S]|(?!\3)[^\\])*\3[cwd]?/.source
                    ].join("|"), "m"),
                    greedy: !0
                },
                {
                    pattern: /\bq\{(?:\{[^{}]*\}|[^{}])*\}/,
                    greedy: !0,
                    alias: "token-string"
                }
            ],
            keyword: /\$|\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\b/,
            number: [
                /\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]{0,4}/i,
                {
                    pattern: /((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]{0,4}/i,
                    lookbehind: !0
                }
            ],
            operator: /\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/
        }), e1211.languages.insertBefore("d", "string", {
            char: /'(?:\\(?:\W|\w+)|[^\\])'/
        }), e1211.languages.insertBefore("d", "keyword", {
            property: /\B@\w*/
        }), e1211.languages.insertBefore("d", "function", {
            register: {
                pattern: /\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,
                alias: "variable"
            }
        });
    }
    a33(bt4, "d");
});
var Ds = o17((iS, xs)=>{
    "use strict";
    xs.exports = mt4;
    mt4.displayName = "dart";
    mt4.aliases = [];
    function mt4(e1212) {
        (function(t928) {
            var r661 = [
                /\b(?:async|sync|yield)\*/,
                /\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/
            ], n550 = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, i553 = {
                pattern: RegExp(n550 + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
                lookbehind: !0,
                inside: {
                    namespace: {
                        pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
                        inside: {
                            punctuation: /\./
                        }
                    }
                }
            };
            t928.languages.dart = t928.languages.extend("clike", {
                "class-name": [
                    i553,
                    {
                        pattern: RegExp(n550 + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),
                        lookbehind: !0,
                        inside: i553.inside
                    }
                ],
                keyword: r661,
                operator: /\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/
            }), t928.languages.insertBefore("dart", "string", {
                "string-literal": {
                    pattern: /r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
                            lookbehind: !0,
                            inside: {
                                punctuation: /^\$\{?|\}$/,
                                expression: {
                                    pattern: /[\s\S]+/,
                                    inside: t928.languages.dart
                                }
                            }
                        },
                        string: /[\s\S]+/
                    }
                },
                string: void 0
            }), t928.languages.insertBefore("dart", "class-name", {
                metadata: {
                    pattern: /@\w+/,
                    alias: "function"
                }
            }), t928.languages.insertBefore("dart", "class-name", {
                generics: {
                    pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
                    inside: {
                        "class-name": i553,
                        keyword: r661,
                        punctuation: /[<>(),.:]/,
                        operator: /[?&|]/
                    }
                }
            });
        })(e1212);
    }
    a33(mt4, "dart");
});
var Fs = o17((oS, Ms)=>{
    "use strict";
    Ms.exports = ft2;
    ft2.displayName = "dataweave";
    ft2.aliases = [];
    function ft2(e1213) {
        (function(t929) {
            t929.languages.dataweave = {
                url: /\b[A-Za-z]+:\/\/[\w/:.?=&-]+|\burn:[\w:.?=&-]+/,
                property: {
                    pattern: /(?:\b\w+#)?(?:"(?:\\.|[^\\"\r\n])*"|\b\w+)(?=\s*[:@])/,
                    greedy: !0
                },
                string: {
                    pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
                    greedy: !0
                },
                "mime-type": /\b(?:application|audio|image|multipart|text|video)\/[\w+-]+/,
                date: {
                    pattern: /\|[\w:+-]+\|/,
                    greedy: !0
                },
                comment: [
                    {
                        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /(^|[^\\:])\/\/.*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                regex: {
                    pattern: /\/(?:[^\\\/\r\n]|\\[^\r\n])+\//,
                    greedy: !0
                },
                keyword: /\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\b/,
                function: /\b[A-Z_]\w*(?=\s*\()/i,
                number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
                punctuation: /[{}[\];(),.:@]/,
                operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\+\+?|!|\?/,
                boolean: /\b(?:false|true)\b/
            };
        })(e1213);
    }
    a33(ft2, "dataweave");
});
var Bs = o17((sS, Us)=>{
    "use strict";
    Us.exports = Et3;
    Et3.displayName = "dax";
    Et3.aliases = [];
    function Et3(e1214) {
        e1214.languages.dax = {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/).*)/,
                lookbehind: !0
            },
            "data-field": {
                pattern: /'(?:[^']|'')*'(?!')(?:\[[ \w\xA0-\uFFFF]+\])?|\w+\[[ \w\xA0-\uFFFF]+\]/,
                alias: "symbol"
            },
            measure: {
                pattern: /\[[ \w\xA0-\uFFFF]+\]/,
                alias: "constant"
            },
            string: {
                pattern: /"(?:[^"]|"")*"(?!")/,
                greedy: !0
            },
            function: /\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\.DIST|BETA\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\.DIST|CHISQ\.DIST\.RT|CHISQ\.INV|CHISQ\.INV\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\.NORM|CONFIDENCE\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\.DIST|NORM\.INV|NORM\.S\.DIST|NORM\.S\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\.EXC|PERCENTILE\.INC|PERCENTILEX\.EXC|PERCENTILEX\.INC|PERMUT|PI|POISSON\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\.P|STDEV\.S|STDEVX\.P|STDEVX\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\.DIST|T\.DIST\.2T|T\.DIST\.RT|T\.INV|T\.INV\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\.P|VAR\.S|VARX\.P|VARX\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\s*\()/i,
            keyword: /\b(?:DEFINE|EVALUATE|MEASURE|ORDER\s+BY|RETURN|VAR|START\s+AT|ASC|DESC)\b/i,
            boolean: {
                pattern: /\b(?:FALSE|NULL|TRUE)\b/i,
                alias: "constant"
            },
            number: /\b\d+(?:\.\d*)?|\B\.\d+\b/,
            operator: /:=|[-+*\/=^]|&&?|\|\||<(?:=>?|<|>)?|>[>=]?|\b(?:IN|NOT)\b/i,
            punctuation: /[;\[\](){}`,.]/
        };
    }
    a33(Et3, "dax");
});
var Gs = o17((lS, Ps)=>{
    "use strict";
    Ps.exports = St4;
    St4.displayName = "dhall";
    St4.aliases = [];
    function St4(e1215) {
        e1215.languages.dhall = {
            comment: /--.*|\{-(?:[^-{]|-(?!\})|\{(?!-)|\{-(?:[^-{]|-(?!\})|\{(?!-))*-\})*-\}/,
            string: {
                pattern: /"(?:[^"\\]|\\.)*"|''(?:[^']|'(?!')|'''|''\$\{)*''(?!'|\$)/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /\$\{[^{}]*\}/,
                        inside: {
                            expression: {
                                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                                lookbehind: !0,
                                alias: "language-dhall",
                                inside: null
                            },
                            punctuation: /\$\{|\}/
                        }
                    }
                }
            },
            label: {
                pattern: /`[^`]*`/,
                greedy: !0
            },
            url: {
                pattern: /\bhttps?:\/\/[\w.:%!$&'*+;=@~-]+(?:\/[\w.:%!$&'*+;=@~-]*)*(?:\?[/?\w.:%!$&'*+;=@~-]*)?/,
                greedy: !0
            },
            env: {
                pattern: /\benv:(?:(?!\d)\w+|"(?:[^"\\=]|\\.)*")/,
                greedy: !0,
                inside: {
                    function: /^env/,
                    operator: /^:/,
                    variable: /[\s\S]+/
                }
            },
            hash: {
                pattern: /\bsha256:[\da-fA-F]{64}\b/,
                inside: {
                    function: /sha256/,
                    operator: /:/,
                    number: /[\da-fA-F]{64}/
                }
            },
            keyword: /\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\b|\u2200/,
            builtin: /\b(?:None|Some)\b/,
            boolean: /\b(?:False|True)\b/,
            number: /\bNaN\b|-?\bInfinity\b|[+-]?\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/,
            operator: /\/\\|\/\/\\\\|&&|\|\||===|[!=]=|\/\/|->|\+\+|::|[+*#@=:?<>|\\\u2227\u2a53\u2261\u2afd\u03bb\u2192]/,
            punctuation: /\.\.|[{}\[\](),./]/,
            "class-name": /\b[A-Z]\w*\b/
        }, e1215.languages.dhall.string.inside.interpolation.inside.expression.inside = e1215.languages.dhall;
    }
    a33(St4, "dhall");
});
var qs = o17((uS, $s)=>{
    "use strict";
    $s.exports = ht4;
    ht4.displayName = "diff";
    ht4.aliases = [];
    function ht4(e1216) {
        (function(t930) {
            t930.languages.diff = {
                coord: [
                    /^(?:\*{3}|-{3}|\+{3}).*$/m,
                    /^@@.*@@$/m,
                    /^\d.*$/m
                ]
            };
            var r662 = {
                "deleted-sign": "-",
                "deleted-arrow": "<",
                "inserted-sign": "+",
                "inserted-arrow": ">",
                unchanged: " ",
                diff: "!"
            };
            Object.keys(r662).forEach(function(n551) {
                var i554 = r662[n551], l266 = [];
                /^\w+$/.test(n551) || l266.push(/\w+/.exec(n551)[0]), n551 === "diff" && l266.push("bold"), t930.languages.diff[n551] = {
                    pattern: RegExp("^(?:[" + i554 + `].*(?:\r
?|
|(?![\\s\\S])))+`, "m"),
                    alias: l266,
                    inside: {
                        line: {
                            pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/,
                            lookbehind: !0
                        },
                        prefix: {
                            pattern: /[\s\S]/,
                            alias: /\w+/.exec(n551)[0]
                        }
                    }
                };
            }), Object.defineProperty(t930.languages.diff, "PREFIXES", {
                value: r662
            });
        })(e1216);
    }
    a33(ht4, "diff");
});
var w24 = o17((dS, Hs)=>{
    "use strict";
    Hs.exports = yt3;
    yt3.displayName = "markupTemplating";
    yt3.aliases = [];
    function yt3(e1217) {
        (function(t931) {
            function r663(n552, i555) {
                return "___" + n552.toUpperCase() + i555 + "___";
            }
            a33(r663, "getPlaceholder"), Object.defineProperties(t931.languages["markup-templating"] = {}, {
                buildPlaceholders: {
                    value: function(n553, i556, l267, d118) {
                        if (n553.language === i556) {
                            var u247 = n553.tokenStack = [];
                            n553.code = n553.code.replace(l267, function(p178) {
                                if (typeof d118 == "function" && !d118(p178)) return p178;
                                for(var c159 = u247.length, g102; n553.code.indexOf(g102 = r663(i556, c159)) !== -1;)++c159;
                                return u247[c159] = p178, g102;
                            }), n553.grammar = t931.languages.markup;
                        }
                    }
                },
                tokenizePlaceholders: {
                    value: function(n554, i557) {
                        if (n554.language !== i557 || !n554.tokenStack) return;
                        n554.grammar = t931.languages[i557];
                        var l268 = 0, d119 = Object.keys(n554.tokenStack);
                        function u248(p179) {
                            for(var c160 = 0; c160 < p179.length && !(l268 >= d119.length); c160++){
                                var g103 = p179[c160];
                                if (typeof g103 == "string" || g103.content && typeof g103.content == "string") {
                                    var b82 = d119[l268], m130 = n554.tokenStack[b82], E53 = typeof g103 == "string" ? g103 : g103.content, f149 = r663(i557, b82), h129 = E53.indexOf(f149);
                                    if (h129 > -1) {
                                        ++l268;
                                        var S73 = E53.substring(0, h129), T40 = new t931.Token(i557, t931.tokenize(m130, n554.grammar), "language-" + i557, m130), y82 = E53.substring(h129 + f149.length), A55 = [];
                                        S73 && A55.push.apply(A55, u248([
                                            S73
                                        ])), A55.push(T40), y82 && A55.push.apply(A55, u248([
                                            y82
                                        ])), typeof g103 == "string" ? p179.splice.apply(p179, [
                                            c160,
                                            1
                                        ].concat(A55)) : g103.content = A55;
                                    }
                                } else g103.content && u248(g103.content);
                            }
                            return p179;
                        }
                        a33(u248, "walkTokens"), u248(n554.tokens);
                    }
                }
            });
        })(e1217);
    }
    a33(yt3, "markupTemplating");
});
var Vs = o17((cS, zs)=>{
    "use strict";
    var af = w24();
    zs.exports = Tt4;
    Tt4.displayName = "django";
    Tt4.aliases = [
        "jinja2"
    ];
    function Tt4(e1218) {
        e1218.register(af), function(t932) {
            t932.languages.django = {
                comment: /^\{#[\s\S]*?#\}$/,
                tag: {
                    pattern: /(^\{%[+-]?\s*)\w+/,
                    lookbehind: !0,
                    alias: "keyword"
                },
                delimiter: {
                    pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/,
                    alias: "punctuation"
                },
                string: {
                    pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                    greedy: !0
                },
                filter: {
                    pattern: /(\|)\w+/,
                    lookbehind: !0,
                    alias: "function"
                },
                test: {
                    pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/,
                    lookbehind: !0,
                    alias: "function"
                },
                function: /\b[a-z_]\w+(?=\s*\()/i,
                keyword: /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
                operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
                number: /\b\d+(?:\.\d+)?\b/,
                boolean: /[Ff]alse|[Nn]one|[Tt]rue/,
                variable: /\b\w+\b/,
                punctuation: /[{}[\](),.:;]/
            };
            var r664 = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g, n555 = t932.languages["markup-templating"];
            t932.hooks.add("before-tokenize", function(i558) {
                n555.buildPlaceholders(i558, "django", r664);
            }), t932.hooks.add("after-tokenize", function(i559) {
                n555.tokenizePlaceholders(i559, "django");
            }), t932.languages.jinja2 = t932.languages.django, t932.hooks.add("before-tokenize", function(i560) {
                n555.buildPlaceholders(i560, "jinja2", r664);
            }), t932.hooks.add("after-tokenize", function(i561) {
                n555.tokenizePlaceholders(i561, "jinja2");
            });
        }(e1218);
    }
    a33(Tt4, "django");
});
var js = o17((pS, Ws)=>{
    "use strict";
    Ws.exports = At3;
    At3.displayName = "dnsZoneFile";
    At3.aliases = [];
    function At3(e1219) {
        e1219.languages["dns-zone-file"] = {
            comment: /;.*/,
            string: {
                pattern: /"(?:\\.|[^"\\\r\n])*"/,
                greedy: !0
            },
            variable: [
                {
                    pattern: /(^\$ORIGIN[ \t]+)\S+/m,
                    lookbehind: !0
                },
                {
                    pattern: /(^|\s)@(?=\s|$)/,
                    lookbehind: !0
                }
            ],
            keyword: /^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,
            class: {
                pattern: /(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/,
                lookbehind: !0,
                alias: "keyword"
            },
            type: {
                pattern: /(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,
                lookbehind: !0,
                alias: "keyword"
            },
            punctuation: /[()]/
        }, e1219.languages["dns-zone"] = e1219.languages["dns-zone-file"];
    }
    a33(At3, "dnsZoneFile");
});
var Ks = o17((gS, Ys)=>{
    "use strict";
    Ys.exports = _t4;
    _t4.displayName = "docker";
    _t4.aliases = [
        "dockerfile"
    ];
    function _t4(e1220) {
        (function(t933) {
            var r665 = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source, n556 = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function() {
                return r665;
            }), i562 = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source, l269 = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(/<STR>/g, function() {
                return i562;
            }), d120 = {
                pattern: RegExp(i562),
                greedy: !0
            }, u249 = {
                pattern: /(^[ \t]*)#.*/m,
                lookbehind: !0,
                greedy: !0
            };
            function p180(c161, g104) {
                return c161 = c161.replace(/<OPT>/g, function() {
                    return l269;
                }).replace(/<SP>/g, function() {
                    return n556;
                }), RegExp(c161, g104);
            }
            a33(p180, "re"), t933.languages.docker = {
                instruction: {
                    pattern: /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        options: {
                            pattern: p180(/(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, "i"),
                            lookbehind: !0,
                            greedy: !0,
                            inside: {
                                property: {
                                    pattern: /(^|\s)--[\w-]+/,
                                    lookbehind: !0
                                },
                                string: [
                                    d120,
                                    {
                                        pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/,
                                        lookbehind: !0
                                    }
                                ],
                                operator: /\\$/m,
                                punctuation: /=/
                            }
                        },
                        keyword: [
                            {
                                pattern: p180(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source, "i"),
                                lookbehind: !0,
                                greedy: !0
                            },
                            {
                                pattern: p180(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source, "i"),
                                lookbehind: !0,
                                greedy: !0
                            },
                            {
                                pattern: p180(/(^ONBUILD<SP>)\w+/.source, "i"),
                                lookbehind: !0,
                                greedy: !0
                            },
                            {
                                pattern: /^\w+/,
                                greedy: !0
                            }
                        ],
                        comment: u249,
                        string: d120,
                        variable: /\$(?:\w+|\{[^{}"'\\]*\})/,
                        operator: /\\$/m
                    }
                },
                comment: u249
            }, t933.languages.dockerfile = t933.languages.docker;
        })(e1220);
    }
    a33(_t4, "docker");
});
var Xs = o17((bS, Zs)=>{
    "use strict";
    Zs.exports = Rt3;
    Rt3.displayName = "dot";
    Rt3.aliases = [
        "gv"
    ];
    function Rt3(e1221) {
        (function(t934) {
            var r666 = "(?:" + [
                /[a-zA-Z_\x80-\uFFFF][\w\x80-\uFFFF]*/.source,
                /-?(?:\.\d+|\d+(?:\.\d*)?)/.source,
                /"[^"\\]*(?:\\[\s\S][^"\\]*)*"/.source,
                /<(?:[^<>]|(?!<!--)<(?:[^<>"']|"[^"]*"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source
            ].join("|") + ")", n557 = {
                markup: {
                    pattern: /(^<)[\s\S]+(?=>$)/,
                    lookbehind: !0,
                    alias: [
                        "language-markup",
                        "language-html",
                        "language-xml"
                    ],
                    inside: t934.languages.markup
                }
            };
            function i563(l270, d121) {
                return RegExp(l270.replace(/<ID>/g, function() {
                    return r666;
                }), d121);
            }
            a33(i563, "withID"), t934.languages.dot = {
                comment: {
                    pattern: /\/\/.*|\/\*[\s\S]*?\*\/|^#.*/m,
                    greedy: !0
                },
                "graph-name": {
                    pattern: i563(/(\b(?:digraph|graph|subgraph)[ \t\r\n]+)<ID>/.source, "i"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "class-name",
                    inside: n557
                },
                "attr-value": {
                    pattern: i563(/(=[ \t\r\n]*)<ID>/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: n557
                },
                "attr-name": {
                    pattern: i563(/([\[;, \t\r\n])<ID>(?=[ \t\r\n]*=)/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: n557
                },
                keyword: /\b(?:digraph|edge|graph|node|strict|subgraph)\b/i,
                "compass-point": {
                    pattern: /(:[ \t\r\n]*)(?:[ewc_]|[ns][ew]?)(?![\w\x80-\uFFFF])/,
                    lookbehind: !0,
                    alias: "builtin"
                },
                node: {
                    pattern: i563(/(^|[^-.\w\x80-\uFFFF\\])<ID>/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: n557
                },
                operator: /[=:]|-[->]/,
                punctuation: /[\[\]{};,]/
            }, t934.languages.gv = t934.languages.dot;
        })(e1221);
    }
    a33(Rt3, "dot");
});
var Js = o17((mS, Qs)=>{
    "use strict";
    Qs.exports = It3;
    It3.displayName = "ebnf";
    It3.aliases = [];
    function It3(e1222) {
        e1222.languages.ebnf = {
            comment: /\(\*[\s\S]*?\*\)/,
            string: {
                pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
                greedy: !0
            },
            special: {
                pattern: /\?[^?\r\n]*\?/,
                greedy: !0,
                alias: "class-name"
            },
            definition: {
                pattern: /^([\t ]*)[a-z]\w*(?:[ \t]+[a-z]\w*)*(?=\s*=)/im,
                lookbehind: !0,
                alias: [
                    "rule",
                    "keyword"
                ]
            },
            rule: /\b[a-z]\w*(?:[ \t]+[a-z]\w*)*\b/i,
            punctuation: /\([:/]|[:/]\)|[.,;()[\]{}]/,
            operator: /[-=|*/!]/
        };
    }
    a33(It3, "ebnf");
});
var tl = o17((fS, el2)=>{
    "use strict";
    el2.exports = Nt4;
    Nt4.displayName = "editorconfig";
    Nt4.aliases = [];
    function Nt4(e1223) {
        e1223.languages.editorconfig = {
            comment: /[;#].*/,
            section: {
                pattern: /(^[ \t]*)\[.+\]/m,
                lookbehind: !0,
                alias: "selector",
                inside: {
                    regex: /\\\\[\[\]{},!?.*]/,
                    operator: /[!?]|\.\.|\*{1,2}/,
                    punctuation: /[\[\]{},]/
                }
            },
            key: {
                pattern: /(^[ \t]*)[^\s=]+(?=[ \t]*=)/m,
                lookbehind: !0,
                alias: "attr-name"
            },
            value: {
                pattern: /=.*/,
                alias: "attr-value",
                inside: {
                    punctuation: /^=/
                }
            }
        };
    }
    a33(Nt4, "editorconfig");
});
var rl = o17((ES, al2)=>{
    "use strict";
    al2.exports = wt4;
    wt4.displayName = "eiffel";
    wt4.aliases = [];
    function wt4(e1224) {
        e1224.languages.eiffel = {
            comment: /--.*/,
            string: [
                {
                    pattern: /"([^[]*)\[[\s\S]*?\]\1"/,
                    greedy: !0
                },
                {
                    pattern: /"([^{]*)\{[\s\S]*?\}\1"/,
                    greedy: !0
                },
                {
                    pattern: /"(?:%(?:(?!\n)\s)*\n\s*%|%\S|[^%"\r\n])*"/,
                    greedy: !0
                }
            ],
            char: /'(?:%.|[^%'\r\n])+'/,
            keyword: /\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\b/i,
            boolean: /\b(?:False|True)\b/i,
            "class-name": /\b[A-Z][\dA-Z_]*\b/,
            number: [
                /\b0[xcb][\da-f](?:_*[\da-f])*\b/i,
                /(?:\b\d(?:_*\d)*)?\.(?:(?:\d(?:_*\d)*)?e[+-]?)?\d(?:_*\d)*\b|\b\d(?:_*\d)*\b\.?/i
            ],
            punctuation: /:=|<<|>>|\(\||\|\)|->|\.(?=\w)|[{}[\];(),:?]/,
            operator: /\\\\|\|\.\.\||\.\.|\/[~\/=]?|[><]=?|[-+*^=~]/
        };
    }
    a33(wt4, "eiffel");
});
var il1 = o17((SS, nl)=>{
    "use strict";
    var rf = w24();
    nl.exports = vt3;
    vt3.displayName = "ejs";
    vt3.aliases = [
        "eta"
    ];
    function vt3(e1225) {
        e1225.register(rf), function(t935) {
            t935.languages.ejs = {
                delimiter: {
                    pattern: /^<%[-_=]?|[-_]?%>$/,
                    alias: "punctuation"
                },
                comment: /^#[\s\S]*/,
                "language-javascript": {
                    pattern: /[\s\S]+/,
                    inside: t935.languages.javascript
                }
            }, t935.hooks.add("before-tokenize", function(r667) {
                var n558 = /<%(?!%)[\s\S]+?%>/g;
                t935.languages["markup-templating"].buildPlaceholders(r667, "ejs", n558);
            }), t935.hooks.add("after-tokenize", function(r668) {
                t935.languages["markup-templating"].tokenizePlaceholders(r668, "ejs");
            }), t935.languages.eta = t935.languages.ejs;
        }(e1225);
    }
    a33(vt3, "ejs");
});
var sl = o17((hS, ol)=>{
    "use strict";
    ol.exports = kt5;
    kt5.displayName = "elixir";
    kt5.aliases = [];
    function kt5(e1226) {
        e1226.languages.elixir = {
            doc: {
                pattern: /@(?:doc|moduledoc)\s+(?:("""|''')[\s\S]*?\1|("|')(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2)/,
                inside: {
                    attribute: /^@\w+/,
                    string: /['"][\s\S]+/
                }
            },
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            regex: {
                pattern: /~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,
                greedy: !0
            },
            string: [
                {
                    pattern: /~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|#(?!\{)|[^#\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,
                    greedy: !0,
                    inside: {}
                },
                {
                    pattern: /("""|''')[\s\S]*?\1/,
                    greedy: !0,
                    inside: {}
                },
                {
                    pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                    greedy: !0,
                    inside: {}
                }
            ],
            atom: {
                pattern: /(^|[^:]):\w+/,
                lookbehind: !0,
                alias: "symbol"
            },
            module: {
                pattern: /\b[A-Z]\w*\b/,
                alias: "class-name"
            },
            "attr-name": /\b\w+\??:(?!:)/,
            argument: {
                pattern: /(^|[^&])&\d+/,
                lookbehind: !0,
                alias: "variable"
            },
            attribute: {
                pattern: /@\w+/,
                alias: "variable"
            },
            function: /\b[_a-zA-Z]\w*[?!]?(?:(?=\s*(?:\.\s*)?\()|(?=\/\d))/,
            number: /\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,
            keyword: /\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\b/,
            boolean: /\b(?:false|nil|true)\b/,
            operator: [
                /\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,
                {
                    pattern: /([^<])<(?!<)/,
                    lookbehind: !0
                },
                {
                    pattern: /([^>])>(?!>)/,
                    lookbehind: !0
                }
            ],
            punctuation: /<<|>>|[.,%\[\]{}()]/
        }, e1226.languages.elixir.string.forEach(function(t936) {
            t936.inside = {
                interpolation: {
                    pattern: /#\{[^}]+\}/,
                    inside: {
                        delimiter: {
                            pattern: /^#\{|\}$/,
                            alias: "punctuation"
                        },
                        rest: e1226.languages.elixir
                    }
                }
            };
        });
    }
    a33(kt5, "elixir");
});
var ul1 = o17((yS, ll)=>{
    "use strict";
    ll.exports = Ct3;
    Ct3.displayName = "elm";
    Ct3.aliases = [];
    function Ct3(e1227) {
        e1227.languages.elm = {
            comment: /--.*|\{-[\s\S]*?-\}/,
            char: {
                pattern: /'(?:[^\\'\r\n]|\\(?:[abfnrtv\\']|\d+|x[0-9a-fA-F]+|u\{[0-9a-fA-F]+\}))'/,
                greedy: !0
            },
            string: [
                {
                    pattern: /"""[\s\S]*?"""/,
                    greedy: !0
                },
                {
                    pattern: /"(?:[^\\"\r\n]|\\.)*"/,
                    greedy: !0
                }
            ],
            "import-statement": {
                pattern: /(^[\t ]*)import\s+[A-Z]\w*(?:\.[A-Z]\w*)*(?:\s+as\s+(?:[A-Z]\w*)(?:\.[A-Z]\w*)*)?(?:\s+exposing\s+)?/m,
                lookbehind: !0,
                inside: {
                    keyword: /\b(?:as|exposing|import)\b/
                }
            },
            keyword: /\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\b/,
            builtin: /\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\b/,
            number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[0-9a-f]+)\b/i,
            operator: /\s\.\s|[+\-/*=.$<>:&|^?%#@~!]{2,}|[+\-/*=$<>:&|^?%#@~!]/,
            hvariable: /\b(?:[A-Z]\w*\.)*[a-z]\w*\b/,
            constant: /\b(?:[A-Z]\w*\.)*[A-Z]\w*\b/,
            punctuation: /[{}[\]|(),.:]/
        };
    }
    a33(Ct3, "elm");
});
var cl1 = o17((TS, dl2)=>{
    "use strict";
    var nf = j31(), of = w24();
    dl2.exports = Ot;
    Ot.displayName = "erb";
    Ot.aliases = [];
    function Ot(e1228) {
        e1228.register(nf), e1228.register(of), function(t937) {
            t937.languages.erb = {
                delimiter: {
                    pattern: /^(\s*)<%=?|%>(?=\s*$)/,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                ruby: {
                    pattern: /\s*\S[\s\S]*/,
                    alias: "language-ruby",
                    inside: t937.languages.ruby
                }
            }, t937.hooks.add("before-tokenize", function(r669) {
                var n559 = /<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g;
                t937.languages["markup-templating"].buildPlaceholders(r669, "erb", n559);
            }), t937.hooks.add("after-tokenize", function(r670) {
                t937.languages["markup-templating"].tokenizePlaceholders(r670, "erb");
            });
        }(e1228);
    }
    a33(Ot, "erb");
});
var gl1 = o17((AS, pl)=>{
    "use strict";
    pl.exports = Lt4;
    Lt4.displayName = "erlang";
    Lt4.aliases = [];
    function Lt4(e1229) {
        e1229.languages.erlang = {
            comment: /%.+/,
            string: {
                pattern: /"(?:\\.|[^\\"\r\n])*"/,
                greedy: !0
            },
            "quoted-function": {
                pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
                alias: "function"
            },
            "quoted-atom": {
                pattern: /'(?:\\.|[^\\'\r\n])+'/,
                alias: "atom"
            },
            boolean: /\b(?:false|true)\b/,
            keyword: /\b(?:after|case|catch|end|fun|if|of|receive|try|when)\b/,
            number: [
                /\$\\?./,
                /\b\d+#[a-z0-9]+/i,
                /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i
            ],
            function: /\b[a-z][\w@]*(?=\()/,
            variable: {
                pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
                lookbehind: !0
            },
            operator: [
                /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
                {
                    pattern: /(^|[^<])<(?!<)/,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^>])>(?!>)/,
                    lookbehind: !0
                }
            ],
            atom: /\b[a-z][\w@]*/,
            punctuation: /[()[\]{}:;,.#|]|<<|>>/
        };
    }
    a33(Lt4, "erlang");
});
var Dt1 = o17((_S, bl)=>{
    "use strict";
    bl.exports = xt3;
    xt3.displayName = "lua";
    xt3.aliases = [];
    function xt3(e1230) {
        e1230.languages.lua = {
            comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
            string: {
                pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,
                greedy: !0
            },
            number: /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
            keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
            function: /(?!\d)\w+(?=\s*(?:[({]))/,
            operator: [
                /[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,
                {
                    pattern: /(^|[^.])\.\.(?!\.)/,
                    lookbehind: !0
                }
            ],
            punctuation: /[\[\](){},;]|\.+|:+/
        };
    }
    a33(xt3, "lua");
});
var fl1 = o17((RS, ml2)=>{
    "use strict";
    var sf = Dt1(), lf = w24();
    ml2.exports = Mt2;
    Mt2.displayName = "etlua";
    Mt2.aliases = [];
    function Mt2(e1231) {
        e1231.register(sf), e1231.register(lf), function(t938) {
            t938.languages.etlua = {
                delimiter: {
                    pattern: /^<%[-=]?|-?%>$/,
                    alias: "punctuation"
                },
                "language-lua": {
                    pattern: /[\s\S]+/,
                    inside: t938.languages.lua
                }
            }, t938.hooks.add("before-tokenize", function(r671) {
                var n560 = /<%[\s\S]+?%>/g;
                t938.languages["markup-templating"].buildPlaceholders(r671, "etlua", n560);
            }), t938.hooks.add("after-tokenize", function(r672) {
                t938.languages["markup-templating"].tokenizePlaceholders(r672, "etlua");
            });
        }(e1231);
    }
    a33(Mt2, "etlua");
});
var Sl1 = o17((IS, El)=>{
    "use strict";
    El.exports = Ft5;
    Ft5.displayName = "excelFormula";
    Ft5.aliases = [];
    function Ft5(e1232) {
        e1232.languages["excel-formula"] = {
            comment: {
                pattern: /(\bN\(\s*)"(?:[^"]|"")*"(?=\s*\))/i,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /"(?:[^"]|"")*"(?!")/,
                greedy: !0
            },
            reference: {
                pattern: /(?:'[^']*'|(?:[^\s()[\]{}<>*?"';,$&]*\[[^^\s()[\]{}<>*?"']+\])?\w+)!/,
                greedy: !0,
                alias: "string",
                inside: {
                    operator: /!$/,
                    punctuation: /'/,
                    sheet: {
                        pattern: /[^[\]]+$/,
                        alias: "function"
                    },
                    file: {
                        pattern: /\[[^[\]]+\]$/,
                        inside: {
                            punctuation: /[[\]]/
                        }
                    },
                    path: /[\s\S]+/
                }
            },
            "function-name": {
                pattern: /\b[A-Z]\w*(?=\()/i,
                alias: "keyword"
            },
            range: {
                pattern: /\$?\b(?:[A-Z]+\$?\d+:\$?[A-Z]+\$?\d+|[A-Z]+:\$?[A-Z]+|\d+:\$?\d+)\b/i,
                alias: "property",
                inside: {
                    operator: /:/,
                    cell: /\$?[A-Z]+\$?\d+/i,
                    column: /\$?[A-Z]+/i,
                    row: /\$?\d+/
                }
            },
            cell: {
                pattern: /\b[A-Z]+\d+\b|\$[A-Za-z]+\$?\d+\b|\b[A-Za-z]+\$\d+\b/,
                alias: "property"
            },
            number: /(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?\b/i,
            boolean: /\b(?:FALSE|TRUE)\b/i,
            operator: /[-+*/^%=&,]|<[=>]?|>=?/,
            punctuation: /[[\]();{}|]/
        }, e1232.languages.xlsx = e1232.languages.xls = e1232.languages["excel-formula"];
    }
    a33(Ft5, "excelFormula");
});
var yl = o17((NS, hl2)=>{
    "use strict";
    hl2.exports = Ut2;
    Ut2.displayName = "factor";
    Ut2.aliases = [];
    function Ut2(e1233) {
        (function(t939) {
            var r673 = {
                function: /\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\?{2,}|!{2,})\b/
            }, n561 = {
                number: /\\[^\s']|%\w/
            }, i564 = {
                comment: [
                    {
                        pattern: /(^|\s)(?:! .*|!$)/,
                        lookbehind: !0,
                        inside: r673
                    },
                    {
                        pattern: /(^|\s)\/\*\s[\s\S]*?\*\/(?=\s|$)/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: r673
                    },
                    {
                        pattern: /(^|\s)!\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
                        lookbehind: !0,
                        greedy: !0,
                        inside: r673
                    }
                ],
                number: [
                    {
                        pattern: /(^|\s)[+-]?\d+(?=\s|$)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)[+-]?0(?:b[01]+|o[0-7]+|d\d+|x[\dA-F]+)(?=\s|$)/i,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)[+-]?\d+\/\d+\.?(?=\s|$)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)\+?\d+\+\d+\/\d+(?=\s|$)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)-\d+-\d+\/\d+(?=\s|$)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:e[+-]?\d+)?(?=\s|$)/i,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)NAN:\s+[\da-fA-F]+(?=\s|$)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|\s)[+-]?0(?:b1\.[01]*|o1\.[0-7]*|d1\.\d*|x1\.[\dA-F]*)p\d+(?=\s|$)/i,
                        lookbehind: !0
                    }
                ],
                regexp: {
                    pattern: /(^|\s)R\/\s(?:\\\S|[^\\/])*\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\s|$)/,
                    lookbehind: !0,
                    alias: "number",
                    inside: {
                        variable: /\\\S/,
                        keyword: /[+?*\[\]^$(){}.|]/,
                        operator: {
                            pattern: /(\/)[idmsr]+(?:-[idmsr]+)?/,
                            lookbehind: !0
                        }
                    }
                },
                boolean: {
                    pattern: /(^|\s)[tf](?=\s|$)/,
                    lookbehind: !0
                },
                "custom-string": {
                    pattern: /(^|\s)[A-Z0-9\-]+"\s(?:\\\S|[^"\\])*"/,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "string",
                    inside: {
                        number: /\\\S|%\w|\//
                    }
                },
                "multiline-string": [
                    {
                        pattern: /(^|\s)STRING:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*;(?=\s|$)/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "string",
                        inside: {
                            number: n561.number,
                            "semicolon-or-setlocal": {
                                pattern: /([\r\n][ \t]*);(?=\s|$)/,
                                lookbehind: !0,
                                alias: "function"
                            }
                        }
                    },
                    {
                        pattern: /(^|\s)HEREDOC:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*\S+(?=\s|$)/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "string",
                        inside: n561
                    },
                    {
                        pattern: /(^|\s)\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "string",
                        inside: n561
                    }
                ],
                "special-using": {
                    pattern: /(^|\s)USING:(?:\s\S+)*(?=\s+;(?:\s|$))/,
                    lookbehind: !0,
                    alias: "function",
                    inside: {
                        string: {
                            pattern: /(\s)[^:\s]+/,
                            lookbehind: !0
                        }
                    }
                },
                "stack-effect-delimiter": [
                    {
                        pattern: /(^|\s)(?:call|eval|execute)?\((?=\s)/,
                        lookbehind: !0,
                        alias: "operator"
                    },
                    {
                        pattern: /(\s)--(?=\s)/,
                        lookbehind: !0,
                        alias: "operator"
                    },
                    {
                        pattern: /(\s)\)(?=\s|$)/,
                        lookbehind: !0,
                        alias: "operator"
                    }
                ],
                combinators: {
                    pattern: null,
                    lookbehind: !0,
                    alias: "keyword"
                },
                "kernel-builtin": {
                    pattern: null,
                    lookbehind: !0,
                    alias: "variable"
                },
                "sequences-builtin": {
                    pattern: null,
                    lookbehind: !0,
                    alias: "variable"
                },
                "math-builtin": {
                    pattern: null,
                    lookbehind: !0,
                    alias: "variable"
                },
                "constructor-word": {
                    pattern: /(^|\s)<(?!=+>|-+>)\S+>(?=\s|$)/,
                    lookbehind: !0,
                    alias: "keyword"
                },
                "other-builtin-syntax": {
                    pattern: null,
                    lookbehind: !0,
                    alias: "operator"
                },
                "conventionally-named-word": {
                    pattern: /(^|\s)(?!")(?:(?:change|new|set|with)-\S+|\$\S+|>[^>\s]+|[^:>\s]+>|[^>\s]+>[^>\s]+|\+[^+\s]+\+|[^?\s]+\?|\?[^?\s]+|[^>\s]+>>|>>[^>\s]+|[^<\s]+<<|\([^()\s]+\)|[^!\s]+!|[^*\s]\S*\*|[^.\s]\S*\.)(?=\s|$)/,
                    lookbehind: !0,
                    alias: "keyword"
                },
                "colon-syntax": {
                    pattern: /(^|\s)(?:[A-Z0-9\-]+#?)?:{1,2}\s+(?:;\S+|(?!;)\S+)(?=\s|$)/,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "function"
                },
                "semicolon-or-setlocal": {
                    pattern: /(\s)(?:;|:>)(?=\s|$)/,
                    lookbehind: !0,
                    alias: "function"
                },
                "curly-brace-literal-delimiter": [
                    {
                        pattern: /(^|\s)[a-z]*\{(?=\s)/i,
                        lookbehind: !0,
                        alias: "operator"
                    },
                    {
                        pattern: /(\s)\}(?=\s|$)/,
                        lookbehind: !0,
                        alias: "operator"
                    }
                ],
                "quotation-delimiter": [
                    {
                        pattern: /(^|\s)\[(?=\s)/,
                        lookbehind: !0,
                        alias: "operator"
                    },
                    {
                        pattern: /(\s)\](?=\s|$)/,
                        lookbehind: !0,
                        alias: "operator"
                    }
                ],
                "normal-word": {
                    pattern: /(^|\s)[^"\s]\S*(?=\s|$)/,
                    lookbehind: !0
                },
                string: {
                    pattern: /"(?:\\\S|[^"\\])*"/,
                    greedy: !0,
                    inside: n561
                }
            }, l271 = a33(function(c162) {
                return (c162 + "").replace(/([.?*+\^$\[\]\\(){}|\-])/g, "\\$1");
            }, "escape"), d122 = a33(function(c163) {
                return new RegExp("(^|\\s)(?:" + c163.map(l271).join("|") + ")(?=\\s|$)");
            }, "arrToWordsRegExp"), u250 = {
                "kernel-builtin": [
                    "or",
                    "2nipd",
                    "4drop",
                    "tuck",
                    "wrapper",
                    "nip",
                    "wrapper?",
                    "callstack>array",
                    "die",
                    "dupd",
                    "callstack",
                    "callstack?",
                    "3dup",
                    "hashcode",
                    "pick",
                    "4nip",
                    "build",
                    ">boolean",
                    "nipd",
                    "clone",
                    "5nip",
                    "eq?",
                    "?",
                    "=",
                    "swapd",
                    "2over",
                    "clear",
                    "2dup",
                    "get-retainstack",
                    "not",
                    "tuple?",
                    "dup",
                    "3nipd",
                    "call",
                    "-rotd",
                    "object",
                    "drop",
                    "assert=",
                    "assert?",
                    "-rot",
                    "execute",
                    "boa",
                    "get-callstack",
                    "curried?",
                    "3drop",
                    "pickd",
                    "overd",
                    "over",
                    "roll",
                    "3nip",
                    "swap",
                    "and",
                    "2nip",
                    "rotd",
                    "throw",
                    "(clone)",
                    "hashcode*",
                    "spin",
                    "reach",
                    "4dup",
                    "equal?",
                    "get-datastack",
                    "assert",
                    "2drop",
                    "<wrapper>",
                    "boolean?",
                    "identity-hashcode",
                    "identity-tuple?",
                    "null",
                    "composed?",
                    "new",
                    "5drop",
                    "rot",
                    "-roll",
                    "xor",
                    "identity-tuple",
                    "boolean"
                ],
                "other-builtin-syntax": [
                    "=======",
                    "recursive",
                    "flushable",
                    ">>",
                    "<<<<<<",
                    "M\\",
                    "B",
                    "PRIVATE>",
                    "\\",
                    "======",
                    "final",
                    "inline",
                    "delimiter",
                    "deprecated",
                    "<PRIVATE",
                    ">>>>>>",
                    "<<<<<<<",
                    "parse-complex",
                    "malformed-complex",
                    "read-only",
                    ">>>>>>>",
                    "call-next-method",
                    "<<",
                    "foldable",
                    "$",
                    "$[",
                    "${"
                ],
                "sequences-builtin": [
                    "member-eq?",
                    "mismatch",
                    "append",
                    "assert-sequence=",
                    "longer",
                    "repetition",
                    "clone-like",
                    "3sequence",
                    "assert-sequence?",
                    "last-index-from",
                    "reversed",
                    "index-from",
                    "cut*",
                    "pad-tail",
                    "join-as",
                    "remove-eq!",
                    "concat-as",
                    "but-last",
                    "snip",
                    "nths",
                    "nth",
                    "sequence",
                    "longest",
                    "slice?",
                    "<slice>",
                    "remove-nth",
                    "tail-slice",
                    "empty?",
                    "tail*",
                    "member?",
                    "virtual-sequence?",
                    "set-length",
                    "drop-prefix",
                    "iota",
                    "unclip",
                    "bounds-error?",
                    "unclip-last-slice",
                    "non-negative-integer-expected",
                    "non-negative-integer-expected?",
                    "midpoint@",
                    "longer?",
                    "?set-nth",
                    "?first",
                    "rest-slice",
                    "prepend-as",
                    "prepend",
                    "fourth",
                    "sift",
                    "subseq-start",
                    "new-sequence",
                    "?last",
                    "like",
                    "first4",
                    "1sequence",
                    "reverse",
                    "slice",
                    "virtual@",
                    "repetition?",
                    "set-last",
                    "index",
                    "4sequence",
                    "max-length",
                    "set-second",
                    "immutable-sequence",
                    "first2",
                    "first3",
                    "supremum",
                    "unclip-slice",
                    "suffix!",
                    "insert-nth",
                    "tail",
                    "3append",
                    "short",
                    "suffix",
                    "concat",
                    "flip",
                    "immutable?",
                    "reverse!",
                    "2sequence",
                    "sum",
                    "delete-all",
                    "indices",
                    "snip-slice",
                    "<iota>",
                    "check-slice",
                    "sequence?",
                    "head",
                    "append-as",
                    "halves",
                    "sequence=",
                    "collapse-slice",
                    "?second",
                    "slice-error?",
                    "product",
                    "bounds-check?",
                    "bounds-check",
                    "immutable",
                    "virtual-exemplar",
                    "harvest",
                    "remove",
                    "pad-head",
                    "last",
                    "set-fourth",
                    "cartesian-product",
                    "remove-eq",
                    "shorten",
                    "shorter",
                    "reversed?",
                    "shorter?",
                    "shortest",
                    "head-slice",
                    "pop*",
                    "tail-slice*",
                    "but-last-slice",
                    "iota?",
                    "append!",
                    "cut-slice",
                    "new-resizable",
                    "head-slice*",
                    "sequence-hashcode",
                    "pop",
                    "set-nth",
                    "?nth",
                    "second",
                    "join",
                    "immutable-sequence?",
                    "<reversed>",
                    "3append-as",
                    "virtual-sequence",
                    "subseq?",
                    "remove-nth!",
                    "length",
                    "last-index",
                    "lengthen",
                    "assert-sequence",
                    "copy",
                    "move",
                    "third",
                    "first",
                    "tail?",
                    "set-first",
                    "prefix",
                    "bounds-error",
                    "<repetition>",
                    "exchange",
                    "surround",
                    "cut",
                    "min-length",
                    "set-third",
                    "push-all",
                    "head?",
                    "subseq-start-from",
                    "delete-slice",
                    "rest",
                    "sum-lengths",
                    "head*",
                    "infimum",
                    "remove!",
                    "glue",
                    "slice-error",
                    "subseq",
                    "push",
                    "replace-slice",
                    "subseq-as",
                    "unclip-last"
                ],
                "math-builtin": [
                    "number=",
                    "next-power-of-2",
                    "?1+",
                    "fp-special?",
                    "imaginary-part",
                    "float>bits",
                    "number?",
                    "fp-infinity?",
                    "bignum?",
                    "fp-snan?",
                    "denominator",
                    "gcd",
                    "*",
                    "+",
                    "fp-bitwise=",
                    "-",
                    "u>=",
                    "/",
                    ">=",
                    "bitand",
                    "power-of-2?",
                    "log2-expects-positive",
                    "neg?",
                    "<",
                    "log2",
                    ">",
                    "integer?",
                    "number",
                    "bits>double",
                    "2/",
                    "zero?",
                    "bits>float",
                    "float?",
                    "shift",
                    "ratio?",
                    "rect>",
                    "even?",
                    "ratio",
                    "fp-sign",
                    "bitnot",
                    ">fixnum",
                    "complex?",
                    "/i",
                    "integer>fixnum",
                    "/f",
                    "sgn",
                    ">bignum",
                    "next-float",
                    "u<",
                    "u>",
                    "mod",
                    "recip",
                    "rational",
                    ">float",
                    "2^",
                    "integer",
                    "fixnum?",
                    "neg",
                    "fixnum",
                    "sq",
                    "bignum",
                    ">rect",
                    "bit?",
                    "fp-qnan?",
                    "simple-gcd",
                    "complex",
                    "<fp-nan>",
                    "real",
                    ">fraction",
                    "double>bits",
                    "bitor",
                    "rem",
                    "fp-nan-payload",
                    "real-part",
                    "log2-expects-positive?",
                    "prev-float",
                    "align",
                    "unordered?",
                    "float",
                    "fp-nan?",
                    "abs",
                    "bitxor",
                    "integer>fixnum-strict",
                    "u<=",
                    "odd?",
                    "<=",
                    "/mod",
                    ">integer",
                    "real?",
                    "rational?",
                    "numerator"
                ]
            };
            Object.keys(u250).forEach(function(c164) {
                i564[c164].pattern = d122(u250[c164]);
            });
            var p181 = [
                "2bi",
                "while",
                "2tri",
                "bi*",
                "4dip",
                "both?",
                "same?",
                "tri@",
                "curry",
                "prepose",
                "3bi",
                "?if",
                "tri*",
                "2keep",
                "3keep",
                "curried",
                "2keepd",
                "when",
                "2bi*",
                "2tri*",
                "4keep",
                "bi@",
                "keepdd",
                "do",
                "unless*",
                "tri-curry",
                "if*",
                "loop",
                "bi-curry*",
                "when*",
                "2bi@",
                "2tri@",
                "with",
                "2with",
                "either?",
                "bi",
                "until",
                "3dip",
                "3curry",
                "tri-curry*",
                "tri-curry@",
                "bi-curry",
                "keepd",
                "compose",
                "2dip",
                "if",
                "3tri",
                "unless",
                "tuple",
                "keep",
                "2curry",
                "tri",
                "most",
                "while*",
                "dip",
                "composed",
                "bi-curry@",
                "find-last-from",
                "trim-head-slice",
                "map-as",
                "each-from",
                "none?",
                "trim-tail",
                "partition",
                "if-empty",
                "accumulate*",
                "reject!",
                "find-from",
                "accumulate-as",
                "collector-for-as",
                "reject",
                "map",
                "map-sum",
                "accumulate!",
                "2each-from",
                "follow",
                "supremum-by",
                "map!",
                "unless-empty",
                "collector",
                "padding",
                "reduce-index",
                "replicate-as",
                "infimum-by",
                "trim-tail-slice",
                "count",
                "find-index",
                "filter",
                "accumulate*!",
                "reject-as",
                "map-integers",
                "map-find",
                "reduce",
                "selector",
                "interleave",
                "2map",
                "filter-as",
                "binary-reduce",
                "map-index-as",
                "find",
                "produce",
                "filter!",
                "replicate",
                "cartesian-map",
                "cartesian-each",
                "find-index-from",
                "map-find-last",
                "3map-as",
                "3map",
                "find-last",
                "selector-as",
                "2map-as",
                "2map-reduce",
                "accumulate",
                "each",
                "each-index",
                "accumulate*-as",
                "when-empty",
                "all?",
                "collector-as",
                "push-either",
                "new-like",
                "collector-for",
                "2selector",
                "push-if",
                "2all?",
                "map-reduce",
                "3each",
                "any?",
                "trim-slice",
                "2reduce",
                "change-nth",
                "produce-as",
                "2each",
                "trim",
                "trim-head",
                "cartesian-find",
                "map-index",
                "if-zero",
                "each-integer",
                "unless-zero",
                "(find-integer)",
                "when-zero",
                "find-last-integer",
                "(all-integers?)",
                "times",
                "(each-integer)",
                "find-integer",
                "all-integers?",
                "unless-negative",
                "if-positive",
                "when-positive",
                "when-negative",
                "unless-positive",
                "if-negative",
                "case",
                "2cleave",
                "cond>quot",
                "case>quot",
                "3cleave",
                "wrong-values",
                "to-fixed-point",
                "alist>quot",
                "cond",
                "cleave",
                "call-effect",
                "recursive-hashcode",
                "spread",
                "deep-spread>quot",
                "2||",
                "0||",
                "n||",
                "0&&",
                "2&&",
                "3||",
                "1||",
                "1&&",
                "n&&",
                "3&&",
                "smart-unless*",
                "keep-inputs",
                "reduce-outputs",
                "smart-when*",
                "cleave>array",
                "smart-with",
                "smart-apply",
                "smart-if",
                "inputs/outputs",
                "output>sequence-n",
                "map-outputs",
                "map-reduce-outputs",
                "dropping",
                "output>array",
                "smart-map-reduce",
                "smart-2map-reduce",
                "output>array-n",
                "nullary",
                "input<sequence",
                "append-outputs",
                "drop-inputs",
                "inputs",
                "smart-2reduce",
                "drop-outputs",
                "smart-reduce",
                "preserving",
                "smart-when",
                "outputs",
                "append-outputs-as",
                "smart-unless",
                "smart-if*",
                "sum-outputs",
                "input<sequence-unsafe",
                "output>sequence"
            ];
            i564.combinators.pattern = d122(p181), t939.languages.factor = i564;
        })(e1233);
    }
    a33(Ut2, "factor");
});
var Al1 = o17((wS, Tl)=>{
    "use strict";
    Tl.exports = Bt2;
    Bt2.displayName = "$false";
    Bt2.aliases = [];
    function Bt2(e1234) {
        (function(t940) {
            t940.languages.false = {
                comment: {
                    pattern: /\{[^}]*\}/
                },
                string: {
                    pattern: /"[^"]*"/,
                    greedy: !0
                },
                "character-code": {
                    pattern: /'(?:[^\r]|\r\n?)/,
                    alias: "number"
                },
                "assembler-code": {
                    pattern: /\d+`/,
                    alias: "important"
                },
                number: /\d+/,
                operator: /[-!#$%&'*+,./:;=>?@\\^_`|~ßø]/,
                punctuation: /\[|\]/,
                variable: /[a-z]/,
                "non-standard": {
                    pattern: /[()<BDO®]/,
                    alias: "bold"
                }
            };
        })(e1234);
    }
    a33(Bt2, "$false");
});
var Rl = o17((vS, _l)=>{
    "use strict";
    _l.exports = Pt2;
    Pt2.displayName = "firestoreSecurityRules";
    Pt2.aliases = [];
    function Pt2(e1235) {
        e1235.languages["firestore-security-rules"] = e1235.languages.extend("clike", {
            comment: /\/\/.*/,
            keyword: /\b(?:allow|function|if|match|null|return|rules_version|service)\b/,
            operator: /&&|\|\||[<>!=]=?|[-+*/%]|\b(?:in|is)\b/
        }), delete e1235.languages["firestore-security-rules"]["class-name"], e1235.languages.insertBefore("firestore-security-rules", "keyword", {
            path: {
                pattern: /(^|[\s(),])(?:\/(?:[\w\xA0-\uFFFF]+|\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)))+/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    variable: {
                        pattern: /\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)/,
                        inside: {
                            operator: /=/,
                            keyword: /\*\*/,
                            punctuation: /[.$(){}]/
                        }
                    },
                    punctuation: /\//
                }
            },
            method: {
                pattern: /(\ballow\s+)[a-z]+(?:\s*,\s*[a-z]+)*(?=\s*[:;])/,
                lookbehind: !0,
                alias: "builtin",
                inside: {
                    punctuation: /,/
                }
            }
        });
    }
    a33(Pt2, "firestoreSecurityRules");
});
var Nl = o17((kS, Il2)=>{
    "use strict";
    Il2.exports = Gt2;
    Gt2.displayName = "flow";
    Gt2.aliases = [];
    function Gt2(e1236) {
        (function(t941) {
            t941.languages.flow = t941.languages.extend("javascript", {}), t941.languages.insertBefore("flow", "keyword", {
                type: [
                    {
                        pattern: /\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\b/,
                        alias: "tag"
                    }
                ]
            }), t941.languages.flow["function-variable"].pattern = /(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i, delete t941.languages.flow.parameter, t941.languages.insertBefore("flow", "operator", {
                "flow-punctuation": {
                    pattern: /\{\||\|\}/,
                    alias: "punctuation"
                }
            }), Array.isArray(t941.languages.flow.keyword) || (t941.languages.flow.keyword = [
                t941.languages.flow.keyword
            ]), t941.languages.flow.keyword.unshift({
                pattern: /(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,
                lookbehind: !0
            }, {
                pattern: /(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,
                lookbehind: !0
            });
        })(e1236);
    }
    a33(Gt2, "flow");
});
var vl1 = o17((CS, wl)=>{
    "use strict";
    wl.exports = $t2;
    $t2.displayName = "fortran";
    $t2.aliases = [];
    function $t2(e1237) {
        e1237.languages.fortran = {
            "quoted-number": {
                pattern: /[BOZ](['"])[A-F0-9]+\1/i,
                alias: "number"
            },
            string: {
                pattern: /(?:\b\w+_)?(['"])(?:\1\1|&(?:\r\n?|\n)(?:[ \t]*!.*(?:\r\n?|\n)|(?![ \t]*!))|(?!\1).)*(?:\1|&)/,
                inside: {
                    comment: {
                        pattern: /(&(?:\r\n?|\n)\s*)!.*/,
                        lookbehind: !0
                    }
                }
            },
            comment: {
                pattern: /!.*/,
                greedy: !0
            },
            boolean: /\.(?:FALSE|TRUE)\.(?:_\w+)?/i,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[ED][+-]?\d+)?(?:_\w+)?/i,
            keyword: [
                /\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\b/i,
                /\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\b/i,
                /\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\b/i,
                /\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\b/i
            ],
            operator: [
                /\*\*|\/\/|=>|[=\/]=|[<>]=?|::|[+\-*=%]|\.[A-Z]+\./i,
                {
                    pattern: /(^|(?!\().)\/(?!\))/,
                    lookbehind: !0
                }
            ],
            punctuation: /\(\/|\/\)|[(),;:&]/
        };
    }
    a33($t2, "fortran");
});
var Cl = o17((OS, kl)=>{
    "use strict";
    kl.exports = qt2;
    qt2.displayName = "fsharp";
    qt2.aliases = [];
    function qt2(e1238) {
        e1238.languages.fsharp = e1238.languages.extend("clike", {
            comment: [
                {
                    pattern: /(^|[^\\])\(\*(?!\))[\s\S]*?\*\)/,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /(^|[^\\:])\/\/.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: {
                pattern: /(?:"""[\s\S]*?"""|@"(?:""|[^"])*"|"(?:\\[\s\S]|[^\\"])*")B?/,
                greedy: !0
            },
            "class-name": {
                pattern: /(\b(?:exception|inherit|interface|new|of|type)\s+|\w\s*:\s*|\s:\??>\s*)[.\w]+\b(?:\s*(?:->|\*)\s*[.\w]+\b)*(?!\s*[:.])/,
                lookbehind: !0,
                inside: {
                    operator: /->|\*/,
                    punctuation: /\./
                }
            },
            keyword: /\b(?:let|return|use|yield)(?:!\B|\b)|\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\b/,
            number: [
                /\b0x[\da-fA-F]+(?:LF|lf|un)?\b/,
                /\b0b[01]+(?:uy|y)?\b/,
                /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[fm]|e[+-]?\d+)?\b/i,
                /\b\d+(?:[IlLsy]|UL|u[lsy]?)?\b/
            ],
            operator: /([<>~&^])\1\1|([*.:<>&])\2|<-|->|[!=:]=|<?\|{1,3}>?|\??(?:<=|>=|<>|[-+*/%=<>])\??|[!?^&]|~[+~-]|:>|:\?>?/
        }), e1238.languages.insertBefore("fsharp", "keyword", {
            preprocessor: {
                pattern: /(^[\t ]*)#.*/m,
                lookbehind: !0,
                alias: "property",
                inside: {
                    directive: {
                        pattern: /(^#)\b(?:else|endif|if|light|line|nowarn)\b/,
                        lookbehind: !0,
                        alias: "keyword"
                    }
                }
            }
        }), e1238.languages.insertBefore("fsharp", "punctuation", {
            "computation-expression": {
                pattern: /\b[_a-z]\w*(?=\s*\{)/i,
                alias: "keyword"
            }
        }), e1238.languages.insertBefore("fsharp", "string", {
            annotation: {
                pattern: /\[<.+?>\]/,
                greedy: !0,
                inside: {
                    punctuation: /^\[<|>\]$/,
                    "class-name": {
                        pattern: /^\w+$|(^|;\s*)[A-Z]\w*(?=\()/,
                        lookbehind: !0
                    },
                    "annotation-content": {
                        pattern: /[\s\S]+/,
                        inside: e1238.languages.fsharp
                    }
                }
            },
            char: {
                pattern: /'(?:[^\\']|\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8}))'B?/,
                greedy: !0
            }
        });
    }
    a33(qt2, "fsharp");
});
var Ll1 = o17((LS, Ol2)=>{
    "use strict";
    var uf = w24();
    Ol2.exports = Ht;
    Ht.displayName = "ftl";
    Ht.aliases = [];
    function Ht(e1239) {
        e1239.register(uf), function(t942) {
            for(var r674 = /[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source, n562 = 0; n562 < 2; n562++)r674 = r674.replace(/<expr>/g, function() {
                return r674;
            });
            r674 = r674.replace(/<expr>/g, /[^\s\S]/.source);
            var i565 = {
                comment: /<#--[\s\S]*?-->/,
                string: [
                    {
                        pattern: /\br("|')(?:(?!\1)[^\\]|\\.)*\1/,
                        greedy: !0
                    },
                    {
                        pattern: RegExp(/("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:(?!\})(?:<expr>))*\})*\1/.source.replace(/<expr>/g, function() {
                            return r674;
                        })),
                        greedy: !0,
                        inside: {
                            interpolation: {
                                pattern: RegExp(/((?:^|[^\\])(?:\\\\)*)\$\{(?:(?!\})(?:<expr>))*\}/.source.replace(/<expr>/g, function() {
                                    return r674;
                                })),
                                lookbehind: !0,
                                inside: {
                                    "interpolation-punctuation": {
                                        pattern: /^\$\{|\}$/,
                                        alias: "punctuation"
                                    },
                                    rest: null
                                }
                            }
                        }
                    }
                ],
                keyword: /\b(?:as)\b/,
                boolean: /\b(?:false|true)\b/,
                "builtin-function": {
                    pattern: /((?:^|[^?])\?\s*)\w+/,
                    lookbehind: !0,
                    alias: "function"
                },
                function: /\b\w+(?=\s*\()/,
                number: /\b\d+(?:\.\d+)?\b/,
                operator: /\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,
                punctuation: /[,;.:()[\]{}]/
            };
            i565.string[1].inside.interpolation.inside.rest = i565, t942.languages.ftl = {
                "ftl-comment": {
                    pattern: /^<#--[\s\S]*/,
                    alias: "comment"
                },
                "ftl-directive": {
                    pattern: /^<[\s\S]+>$/,
                    inside: {
                        directive: {
                            pattern: /(^<\/?)[#@][a-z]\w*/i,
                            lookbehind: !0,
                            alias: "keyword"
                        },
                        punctuation: /^<\/?|\/?>$/,
                        content: {
                            pattern: /\s*\S[\s\S]*/,
                            alias: "ftl",
                            inside: i565
                        }
                    }
                },
                "ftl-interpolation": {
                    pattern: /^\$\{[\s\S]*\}$/,
                    inside: {
                        punctuation: /^\$\{|\}$/,
                        content: {
                            pattern: /\s*\S[\s\S]*/,
                            alias: "ftl",
                            inside: i565
                        }
                    }
                }
            }, t942.hooks.add("before-tokenize", function(l272) {
                var d123 = RegExp(/<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(/<expr>/g, function() {
                    return r674;
                }), "gi");
                t942.languages["markup-templating"].buildPlaceholders(l272, "ftl", d123);
            }), t942.hooks.add("after-tokenize", function(l273) {
                t942.languages["markup-templating"].tokenizePlaceholders(l273, "ftl");
            });
        }(e1239);
    }
    a33(Ht, "ftl");
});
var Dl = o17((xS, xl2)=>{
    "use strict";
    xl2.exports = zt;
    zt.displayName = "gap";
    zt.aliases = [];
    function zt(e1240) {
        e1240.languages.gap = {
            shell: {
                pattern: /^gap>[\s\S]*?(?=^gap>|$(?![\s\S]))/m,
                greedy: !0,
                inside: {
                    gap: {
                        pattern: /^(gap>).+(?:(?:\r(?:\n|(?!\n))|\n)>.*)*/,
                        lookbehind: !0,
                        inside: null
                    },
                    punctuation: /^gap>/
                }
            },
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            string: {
                pattern: /(^|[^\\'"])(?:'(?:[^\r\n\\']|\\.){1,10}'|"(?:[^\r\n\\"]|\\.)*"(?!")|"""[\s\S]*?""")/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    continuation: {
                        pattern: /([\r\n])>/,
                        lookbehind: !0,
                        alias: "punctuation"
                    }
                }
            },
            keyword: /\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\b/,
            boolean: /\b(?:false|true)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: {
                pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
                lookbehind: !0
            },
            continuation: {
                pattern: /([\r\n])>/,
                lookbehind: !0,
                alias: "punctuation"
            },
            operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\.\./,
            punctuation: /[()[\]{},;.:]/
        }, e1240.languages.gap.shell.inside.gap.inside = e1240.languages.gap;
    }
    a33(zt, "gap");
});
var Fl = o17((DS, Ml2)=>{
    "use strict";
    Ml2.exports = Vt4;
    Vt4.displayName = "gcode";
    Vt4.aliases = [];
    function Vt4(e1241) {
        e1241.languages.gcode = {
            comment: /;.*|\B\(.*?\)\B/,
            string: {
                pattern: /"(?:""|[^"])*"/,
                greedy: !0
            },
            keyword: /\b[GM]\d+(?:\.\d+)?\b/,
            property: /\b[A-Z]/,
            checksum: {
                pattern: /(\*)\d+/,
                lookbehind: !0,
                alias: "number"
            },
            punctuation: /[:*]/
        };
    }
    a33(Vt4, "gcode");
});
var Bl = o17((MS, Ul)=>{
    "use strict";
    Ul.exports = Wt;
    Wt.displayName = "gdscript";
    Wt.aliases = [];
    function Wt(e1242) {
        e1242.languages.gdscript = {
            comment: /#.*/,
            string: {
                pattern: /@?(?:("|')(?:(?!\1)[^\n\\]|\\[\s\S])*\1(?!"|')|"""(?:[^\\]|\\[\s\S])*?""")/,
                greedy: !0
            },
            "class-name": {
                pattern: /(^(?:class|class_name|extends)[ \t]+|^export\([ \t]*|\bas[ \t]+|(?:\b(?:const|var)[ \t]|[,(])[ \t]*\w+[ \t]*:[ \t]*|->[ \t]*)[a-zA-Z_]\w*/m,
                lookbehind: !0
            },
            keyword: /\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\b/,
            function: /\b[a-z_]\w*(?=[ \t]*\()/i,
            variable: /\$\w+/,
            number: [
                /\b0b[01_]+\b|\b0x[\da-fA-F_]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.[\d_]+)(?:e[+-]?[\d_]+)?\b/,
                /\b(?:INF|NAN|PI|TAU)\b/
            ],
            constant: /\b[A-Z][A-Z_\d]*\b/,
            boolean: /\b(?:false|true)\b/,
            operator: /->|:=|&&|\|\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,
            punctuation: /[.:,;()[\]{}]/
        };
    }
    a33(Wt, "gdscript");
});
var Gl1 = o17((FS, Pl)=>{
    "use strict";
    Pl.exports = jt2;
    jt2.displayName = "gedcom";
    jt2.aliases = [];
    function jt2(e1243) {
        e1243.languages.gedcom = {
            "line-value": {
                pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?\w+ ).+/m,
                lookbehind: !0,
                inside: {
                    pointer: {
                        pattern: /^@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@$/,
                        alias: "variable"
                    }
                }
            },
            tag: {
                pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?)\w+/m,
                lookbehind: !0,
                alias: "string"
            },
            level: {
                pattern: /(^[\t ]*)\d+/m,
                lookbehind: !0,
                alias: "number"
            },
            pointer: {
                pattern: /@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@/,
                alias: "variable"
            }
        };
    }
    a33(jt2, "gedcom");
});
var ql = o17((US, $l2)=>{
    "use strict";
    $l2.exports = Yt;
    Yt.displayName = "gherkin";
    Yt.aliases = [];
    function Yt(e1244) {
        (function(t943) {
            var r675 = /(?:\r?\n|\r)[ \t]*\|.+\|(?:(?!\|).)*/.source;
            t943.languages.gherkin = {
                pystring: {
                    pattern: /("""|''')[\s\S]+?\1/,
                    alias: "string"
                },
                comment: {
                    pattern: /(^[ \t]*)#.*/m,
                    lookbehind: !0
                },
                tag: {
                    pattern: /(^[ \t]*)@\S*/m,
                    lookbehind: !0
                },
                feature: {
                    pattern: /((?:^|\r?\n|\r)[ \t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\r\n]+(?:\r?\n|\r|$))*/,
                    lookbehind: !0,
                    inside: {
                        important: {
                            pattern: /(:)[^\r\n]+/,
                            lookbehind: !0
                        },
                        keyword: /[^:\r\n]+:/
                    }
                },
                scenario: {
                    pattern: /(^[ \t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\r\n]*/m,
                    lookbehind: !0,
                    inside: {
                        important: {
                            pattern: /(:)[^\r\n]*/,
                            lookbehind: !0
                        },
                        keyword: /[^:\r\n]+:/
                    }
                },
                "table-body": {
                    pattern: RegExp("(" + r675 + ")(?:" + r675 + ")+"),
                    lookbehind: !0,
                    inside: {
                        outline: {
                            pattern: /<[^>]+>/,
                            alias: "variable"
                        },
                        td: {
                            pattern: /\s*[^\s|][^|]*/,
                            alias: "string"
                        },
                        punctuation: /\|/
                    }
                },
                "table-head": {
                    pattern: RegExp(r675),
                    inside: {
                        th: {
                            pattern: /\s*[^\s|][^|]*/,
                            alias: "variable"
                        },
                        punctuation: /\|/
                    }
                },
                atrule: {
                    pattern: /(^[ \t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \t])/m,
                    lookbehind: !0
                },
                string: {
                    pattern: /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,
                    inside: {
                        outline: {
                            pattern: /<[^>]+>/,
                            alias: "variable"
                        }
                    }
                },
                outline: {
                    pattern: /<[^>]+>/,
                    alias: "variable"
                }
            };
        })(e1244);
    }
    a33(Yt, "gherkin");
});
var zl1 = o17((BS, Hl)=>{
    "use strict";
    Hl.exports = Kt;
    Kt.displayName = "git";
    Kt.aliases = [];
    function Kt(e1245) {
        e1245.languages.git = {
            comment: /^#.*/m,
            deleted: /^[-–].*/m,
            inserted: /^\+.*/m,
            string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
            command: {
                pattern: /^.*\$ git .*$/m,
                inside: {
                    parameter: /\s--?\w+/
                }
            },
            coord: /^@@.*@@$/m,
            "commit-sha1": /^commit \w{40}$/m
        };
    }
    a33(Kt, "git");
});
var Wl = o17((PS, Vl2)=>{
    "use strict";
    var df = x39();
    Vl2.exports = Zt;
    Zt.displayName = "glsl";
    Zt.aliases = [];
    function Zt(e1246) {
        e1246.register(df), e1246.languages.glsl = e1246.languages.extend("c", {
            keyword: /\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/
        });
    }
    a33(Zt, "glsl");
});
var Yl = o17((GS, jl2)=>{
    "use strict";
    jl2.exports = Xt;
    Xt.displayName = "gml";
    Xt.aliases = [];
    function Xt(e1247) {
        e1247.languages.gamemakerlanguage = e1247.languages.gml = e1247.languages.extend("clike", {
            keyword: /\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\b/,
            number: /(?:\b0x[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ulf]{0,4}/i,
            operator: /--|\+\+|[-+%/=]=?|!=|\*\*?=?|<[<=>]?|>[=>]?|&&?|\^\^?|\|\|?|~|\b(?:and|at|not|or|with|xor)\b/,
            constant: /\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\d|numpad\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\w+)\b/,
            variable: /\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\d)|argument|global|local|other|self)\b/
        });
    }
    a33(Xt, "gml");
});
var Zl = o17(($S, Kl)=>{
    "use strict";
    Kl.exports = Qt2;
    Qt2.displayName = "gn";
    Qt2.aliases = [
        "gni"
    ];
    function Qt2(e1248) {
        e1248.languages.gn = {
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            "string-literal": {
                pattern: /(^|[^\\"])"(?:[^\r\n"\\]|\\.)*"/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[\s\S]*?\}|[a-zA-Z_]\w*|0x[a-fA-F0-9]{2})/,
                        lookbehind: !0,
                        inside: {
                            number: /^\$0x[\s\S]{2}$/,
                            variable: /^\$\w+$/,
                            "interpolation-punctuation": {
                                pattern: /^\$\{|\}$/,
                                alias: "punctuation"
                            },
                            expression: {
                                pattern: /[\s\S]+/,
                                inside: null
                            }
                        }
                    },
                    string: /[\s\S]+/
                }
            },
            keyword: /\b(?:else|if)\b/,
            boolean: /\b(?:false|true)\b/,
            "builtin-function": {
                pattern: /\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\s*\()/i,
                alias: "keyword"
            },
            function: /\b[a-z_]\w*(?=\s*\()/i,
            constant: /\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\b/,
            number: /-?\b\d+\b/,
            operator: /[-+!=<>]=?|&&|\|\|/,
            punctuation: /[(){}[\],.]/
        }, e1248.languages.gn["string-literal"].inside.interpolation.inside.expression.inside = e1248.languages.gn, e1248.languages.gni = e1248.languages.gn;
    }
    a33(Qt2, "gn");
});
var Ql = o17((qS, Xl1)=>{
    "use strict";
    Xl1.exports = Jt;
    Jt.displayName = "goModule";
    Jt.aliases = [];
    function Jt(e1249) {
        e1249.languages["go-mod"] = e1249.languages["go-module"] = {
            comment: {
                pattern: /\/\/.*/,
                greedy: !0
            },
            version: {
                pattern: /(^|[\s()[\],])v\d+\.\d+\.\d+(?:[+-][-+.\w]*)?(?![^\s()[\],])/,
                lookbehind: !0,
                alias: "number"
            },
            "go-version": {
                pattern: /((?:^|\s)go\s+)\d+(?:\.\d+){1,2}/,
                lookbehind: !0,
                alias: "number"
            },
            keyword: {
                pattern: /^([ \t]*)(?:exclude|go|module|replace|require|retract)\b/m,
                lookbehind: !0
            },
            operator: /=>/,
            punctuation: /[()[\],]/
        };
    }
    a33(Jt, "goModule");
});
var eu1 = o17((HS, Jl1)=>{
    "use strict";
    Jl1.exports = ea1;
    ea1.displayName = "go";
    ea1.aliases = [];
    function ea1(e1250) {
        e1250.languages.go = e1250.languages.extend("clike", {
            string: {
                pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
            boolean: /\b(?:_|false|iota|nil|true)\b/,
            number: [
                /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
                /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
                /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i
            ],
            operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
            builtin: /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
        }), e1250.languages.insertBefore("go", "string", {
            char: {
                pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
                greedy: !0
            }
        }), delete e1250.languages.go["class-name"];
    }
    a33(ea1, "go");
});
var au1 = o17((zS, tu1)=>{
    "use strict";
    tu1.exports = ta1;
    ta1.displayName = "graphql";
    ta1.aliases = [];
    function ta1(e1251) {
        e1251.languages.graphql = {
            comment: /#.*/,
            description: {
                pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
                greedy: !0,
                alias: "string",
                inside: {
                    "language-markdown": {
                        pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
                        lookbehind: !0,
                        inside: e1251.languages.markdown
                    }
                }
            },
            string: {
                pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
                greedy: !0
            },
            number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
            boolean: /\b(?:false|true)\b/,
            variable: /\$[a-z_]\w*/i,
            directive: {
                pattern: /@[a-z_]\w*/i,
                alias: "function"
            },
            "attr-name": {
                pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
                greedy: !0
            },
            "atom-input": {
                pattern: /\b[A-Z]\w*Input\b/,
                alias: "class-name"
            },
            scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
            constant: /\b[A-Z][A-Z_\d]*\b/,
            "class-name": {
                pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
                lookbehind: !0
            },
            fragment: {
                pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
                lookbehind: !0,
                alias: "function"
            },
            "definition-mutation": {
                pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
                lookbehind: !0,
                alias: "function"
            },
            "definition-query": {
                pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
                lookbehind: !0,
                alias: "function"
            },
            keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
            operator: /[!=|&]|\.{3}/,
            "property-query": /\w+(?=\s*\()/,
            object: /\w+(?=\s*\{)/,
            punctuation: /[!(){}\[\]:=,]/,
            property: /\w+/
        }, e1251.hooks.add("after-tokenize", a33(function(r676) {
            if (r676.language !== "graphql") return;
            var n563 = r676.tokens.filter(function(S74) {
                return typeof S74 != "string" && S74.type !== "comment" && S74.type !== "scalar";
            }), i566 = 0;
            function l274(S75) {
                return n563[i566 + S75];
            }
            a33(l274, "getToken");
            function d124(S76, T41) {
                T41 = T41 || 0;
                for(var y83 = 0; y83 < S76.length; y83++){
                    var A56 = l274(y83 + T41);
                    if (!A56 || A56.type !== S76[y83]) return !1;
                }
                return !0;
            }
            a33(d124, "isTokenType");
            function u251(S77, T42) {
                for(var y84 = 1, A57 = i566; A57 < n563.length; A57++){
                    var _27 = n563[A57], R34 = _27.content;
                    if (_27.type === "punctuation" && typeof R34 == "string") {
                        if (S77.test(R34)) y84++;
                        else if (T42.test(R34) && (y84--, y84 === 0)) return A57;
                    }
                }
                return -1;
            }
            a33(u251, "findClosingBracket");
            function p182(S78, T43) {
                var y85 = S78.alias;
                y85 ? Array.isArray(y85) || (S78.alias = y85 = [
                    y85
                ]) : S78.alias = y85 = [], y85.push(T43);
            }
            for(a33(p182, "addAlias"); i566 < n563.length;){
                var c165 = n563[i566++];
                if (c165.type === "keyword" && c165.content === "mutation") {
                    var g105 = [];
                    if (d124([
                        "definition-mutation",
                        "punctuation"
                    ]) && l274(1).content === "(") {
                        i566 += 2;
                        var b83 = u251(/^\($/, /^\)$/);
                        if (b83 === -1) continue;
                        for(; i566 < b83; i566++){
                            var m131 = l274(0);
                            m131.type === "variable" && (p182(m131, "variable-input"), g105.push(m131.content));
                        }
                        i566 = b83 + 1;
                    }
                    if (d124([
                        "punctuation",
                        "property-query"
                    ]) && l274(0).content === "{" && (i566++, p182(l274(0), "property-mutation"), g105.length > 0)) {
                        var E54 = u251(/^\{$/, /^\}$/);
                        if (E54 === -1) continue;
                        for(var f150 = i566; f150 < E54; f150++){
                            var h130 = n563[f150];
                            h130.type === "variable" && g105.indexOf(h130.content) >= 0 && p182(h130, "variable-input");
                        }
                    }
                }
            }
        }, "afterTokenizeGraphql"));
    }
    a33(ta1, "graphql");
});
var nu = o17((VS, ru1)=>{
    "use strict";
    ru1.exports = aa1;
    aa1.displayName = "groovy";
    aa1.aliases = [];
    function aa1(e1252) {
        e1252.languages.groovy = e1252.languages.extend("clike", {
            string: [
                {
                    pattern: /("""|''')(?:[^\\]|\\[\s\S])*?\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,
                    greedy: !0
                },
                {
                    pattern: /(["'/])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                    greedy: !0
                }
            ],
            keyword: /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
            number: /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
            operator: {
                pattern: /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
                lookbehind: !0
            },
            punctuation: /\.+|[{}[\];(),:$]/
        }), e1252.languages.insertBefore("groovy", "string", {
            shebang: {
                pattern: /#!.+/,
                alias: "comment"
            }
        }), e1252.languages.insertBefore("groovy", "punctuation", {
            "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/
        }), e1252.languages.insertBefore("groovy", "function", {
            annotation: {
                pattern: /(^|[^.])@\w+/,
                lookbehind: !0,
                alias: "punctuation"
            }
        }), e1252.hooks.add("wrap", function(t944) {
            if (t944.language === "groovy" && t944.type === "string") {
                var r677 = t944.content.value[0];
                if (r677 != "'") {
                    var n564 = /([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;
                    r677 === "$" && (n564 = /([^\$])(?:\$(?:\{.*?\}|[\w.]+))/), t944.content.value = t944.content.value.replace(/&lt;/g, "<").replace(/&amp;/g, "&"), t944.content = e1252.highlight(t944.content.value, {
                        expression: {
                            pattern: n564,
                            lookbehind: !0,
                            inside: e1252.languages.groovy
                        }
                    }), t944.classes.push(r677 === "/" ? "regex" : "gstring");
                }
            }
        });
    }
    a33(aa1, "groovy");
});
var ou = o17((WS, iu1)=>{
    "use strict";
    var cf = j31();
    iu1.exports = ra1;
    ra1.displayName = "haml";
    ra1.aliases = [];
    function ra1(e1253) {
        e1253.register(cf), function(t945) {
            t945.languages.haml = {
                "multiline-comment": {
                    pattern: /((?:^|\r?\n|\r)([\t ]*))(?:\/|-#).*(?:(?:\r?\n|\r)\2[\t ].+)*/,
                    lookbehind: !0,
                    alias: "comment"
                },
                "multiline-code": [
                    {
                        pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*,[\t ]*(?:(?:\r?\n|\r)\2[\t ].*,[\t ]*)*(?:(?:\r?\n|\r)\2[\t ].+)/,
                        lookbehind: !0,
                        inside: t945.languages.ruby
                    },
                    {
                        pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*\|[\t ]*(?:(?:\r?\n|\r)\2[\t ].*\|[\t ]*)*/,
                        lookbehind: !0,
                        inside: t945.languages.ruby
                    }
                ],
                filter: {
                    pattern: /((?:^|\r?\n|\r)([\t ]*)):[\w-]+(?:(?:\r?\n|\r)(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/,
                    lookbehind: !0,
                    inside: {
                        "filter-name": {
                            pattern: /^:[\w-]+/,
                            alias: "symbol"
                        }
                    }
                },
                markup: {
                    pattern: /((?:^|\r?\n|\r)[\t ]*)<.+/,
                    lookbehind: !0,
                    inside: t945.languages.markup
                },
                doctype: {
                    pattern: /((?:^|\r?\n|\r)[\t ]*)!!!(?: .+)?/,
                    lookbehind: !0
                },
                tag: {
                    pattern: /((?:^|\r?\n|\r)[\t ]*)[%.#][\w\-#.]*[\w\-](?:\([^)]+\)|\{(?:\{[^}]+\}|[^{}])+\}|\[[^\]]+\])*[\/<>]*/,
                    lookbehind: !0,
                    inside: {
                        attributes: [
                            {
                                pattern: /(^|[^#])\{(?:\{[^}]+\}|[^{}])+\}/,
                                lookbehind: !0,
                                inside: t945.languages.ruby
                            },
                            {
                                pattern: /\([^)]+\)/,
                                inside: {
                                    "attr-value": {
                                        pattern: /(=\s*)(?:"(?:\\.|[^\\"\r\n])*"|[^)\s]+)/,
                                        lookbehind: !0
                                    },
                                    "attr-name": /[\w:-]+(?=\s*!?=|\s*[,)])/,
                                    punctuation: /[=(),]/
                                }
                            },
                            {
                                pattern: /\[[^\]]+\]/,
                                inside: t945.languages.ruby
                            }
                        ],
                        punctuation: /[<>]/
                    }
                },
                code: {
                    pattern: /((?:^|\r?\n|\r)[\t ]*(?:[~-]|[&!]?=)).+/,
                    lookbehind: !0,
                    inside: t945.languages.ruby
                },
                interpolation: {
                    pattern: /#\{[^}]+\}/,
                    inside: {
                        delimiter: {
                            pattern: /^#\{|\}$/,
                            alias: "punctuation"
                        },
                        ruby: {
                            pattern: /[\s\S]+/,
                            inside: t945.languages.ruby
                        }
                    }
                },
                punctuation: {
                    pattern: /((?:^|\r?\n|\r)[\t ]*)[~=\-&!]+/,
                    lookbehind: !0
                }
            };
            for(var r678 = "((?:^|\\r?\\n|\\r)([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+", n565 = [
                "css",
                {
                    filter: "coffee",
                    language: "coffeescript"
                },
                "erb",
                "javascript",
                "less",
                "markdown",
                "ruby",
                "scss",
                "textile"
            ], i567 = {}, l275 = 0, d125 = n565.length; l275 < d125; l275++){
                var u252 = n565[l275];
                u252 = typeof u252 == "string" ? {
                    filter: u252,
                    language: u252
                } : u252, t945.languages[u252.language] && (i567["filter-" + u252.filter] = {
                    pattern: RegExp(r678.replace("{{filter_name}}", function() {
                        return u252.filter;
                    })),
                    lookbehind: !0,
                    inside: {
                        "filter-name": {
                            pattern: /^:[\w-]+/,
                            alias: "symbol"
                        },
                        text: {
                            pattern: /[\s\S]+/,
                            alias: [
                                u252.language,
                                "language-" + u252.language
                            ],
                            inside: t945.languages[u252.language]
                        }
                    }
                });
            }
            t945.languages.insertBefore("haml", "filter", i567);
        }(e1253);
    }
    a33(ra1, "haml");
});
var lu1 = o17((jS, su)=>{
    "use strict";
    var pf = w24();
    su.exports = na1;
    na1.displayName = "handlebars";
    na1.aliases = [
        "hbs"
    ];
    function na1(e1254) {
        e1254.register(pf), function(t946) {
            t946.languages.handlebars = {
                comment: /\{\{![\s\S]*?\}\}/,
                delimiter: {
                    pattern: /^\{\{\{?|\}\}\}?$/,
                    alias: "punctuation"
                },
                string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
                boolean: /\b(?:false|true)\b/,
                block: {
                    pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,
                    lookbehind: !0,
                    alias: "keyword"
                },
                brackets: {
                    pattern: /\[[^\]]+\]/,
                    inside: {
                        punctuation: /\[|\]/,
                        variable: /[\s\S]+/
                    }
                },
                punctuation: /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
                variable: /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/
            }, t946.hooks.add("before-tokenize", function(r679) {
                var n566 = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
                t946.languages["markup-templating"].buildPlaceholders(r679, "handlebars", n566);
            }), t946.hooks.add("after-tokenize", function(r680) {
                t946.languages["markup-templating"].tokenizePlaceholders(r680, "handlebars");
            }), t946.languages.hbs = t946.languages.handlebars;
        }(e1254);
    }
    a33(na1, "handlebars");
});
var J9 = o17((YS, uu1)=>{
    "use strict";
    uu1.exports = ia1;
    ia1.displayName = "haskell";
    ia1.aliases = [
        "hs"
    ];
    function ia1(e1255) {
        e1255.languages.haskell = {
            comment: {
                pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\/].*|$)|\{-[\s\S]*?-\})/m,
                lookbehind: !0
            },
            char: {
                pattern: /'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,
                alias: "string"
            },
            string: {
                pattern: /"(?:[^\\"]|\\(?:\S|\s+\\))*"/,
                greedy: !0
            },
            keyword: /\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,
            "import-statement": {
                pattern: /(^[\t ]*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
                lookbehind: !0,
                inside: {
                    keyword: /\b(?:as|hiding|import|qualified)\b/,
                    punctuation: /\./
                }
            },
            builtin: /\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,
            number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,
            operator: [
                {
                    pattern: /`(?:[A-Z][\w']*\.)*[_a-z][\w']*`/,
                    greedy: !0
                },
                {
                    pattern: /(\s)\.(?=\s)/,
                    lookbehind: !0
                },
                /[-!#$%*+=?&@|~:<>^\\\/][-!#$%*+=?&@|~.:<>^\\\/]*|\.[-!#$%*+=?&@|~.:<>^\\\/]+/
            ],
            hvariable: {
                pattern: /\b(?:[A-Z][\w']*\.)*[_a-z][\w']*/,
                inside: {
                    punctuation: /\./
                }
            },
            constant: {
                pattern: /\b(?:[A-Z][\w']*\.)*[A-Z][\w']*/,
                inside: {
                    punctuation: /\./
                }
            },
            punctuation: /[{}[\];(),.:]/
        }, e1255.languages.hs = e1255.languages.haskell;
    }
    a33(ia1, "haskell");
});
var cu1 = o17((KS, du)=>{
    "use strict";
    du.exports = oa1;
    oa1.displayName = "haxe";
    oa1.aliases = [];
    function oa1(e1256) {
        e1256.languages.haxe = e1256.languages.extend("clike", {
            string: {
                pattern: /"(?:[^"\\]|\\[\s\S])*"/,
                greedy: !0
            },
            "class-name": [
                {
                    pattern: /(\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\s+)[A-Z_]\w*/,
                    lookbehind: !0
                },
                /\b[A-Z]\w*/
            ],
            keyword: /\bthis\b|\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\.)\b/,
            function: {
                pattern: /\b[a-z_]\w*(?=\s*(?:<[^<>]*>\s*)?\()/i,
                greedy: !0
            },
            operator: /\.{3}|\+\+|--|&&|\|\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/
        }), e1256.languages.insertBefore("haxe", "string", {
            "string-interpolation": {
                pattern: /'(?:[^'\\]|\\[\s\S])*'/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /(^|[^\\])\$(?:\w+|\{[^{}]+\})/,
                        lookbehind: !0,
                        inside: {
                            "interpolation-punctuation": {
                                pattern: /^\$\{?|\}$/,
                                alias: "punctuation"
                            },
                            expression: {
                                pattern: /[\s\S]+/,
                                inside: e1256.languages.haxe
                            }
                        }
                    },
                    string: /[\s\S]+/
                }
            }
        }), e1256.languages.insertBefore("haxe", "class-name", {
            regex: {
                pattern: /~\/(?:[^\/\\\r\n]|\\.)+\/[a-z]*/,
                greedy: !0,
                inside: {
                    "regex-flags": /\b[a-z]+$/,
                    "regex-source": {
                        pattern: /^(~\/)[\s\S]+(?=\/$)/,
                        lookbehind: !0,
                        alias: "language-regex",
                        inside: e1256.languages.regex
                    },
                    "regex-delimiter": /^~\/|\/$/
                }
            }
        }), e1256.languages.insertBefore("haxe", "keyword", {
            preprocessor: {
                pattern: /#(?:else|elseif|end|if)\b.*/,
                alias: "property"
            },
            metadata: {
                pattern: /@:?[\w.]+/,
                alias: "symbol"
            },
            reification: {
                pattern: /\$(?:\w+|(?=\{))/,
                alias: "important"
            }
        });
    }
    a33(oa1, "haxe");
});
var gu = o17((ZS, pu)=>{
    "use strict";
    pu.exports = sa1;
    sa1.displayName = "hcl";
    sa1.aliases = [];
    function sa1(e1257) {
        e1257.languages.hcl = {
            comment: /(?:\/\/|#).*|\/\*[\s\S]*?(?:\*\/|$)/,
            heredoc: {
                pattern: /<<-?(\w+\b)[\s\S]*?^[ \t]*\1/m,
                greedy: !0,
                alias: "string"
            },
            keyword: [
                {
                    pattern: /(?:data|resource)\s+(?:"(?:\\[\s\S]|[^\\"])*")(?=\s+"[\w-]+"\s+\{)/i,
                    inside: {
                        type: {
                            pattern: /(resource|data|\s+)(?:"(?:\\[\s\S]|[^\\"])*")/i,
                            lookbehind: !0,
                            alias: "variable"
                        }
                    }
                },
                {
                    pattern: /(?:backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+(?=\{)/i,
                    inside: {
                        type: {
                            pattern: /(backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+/i,
                            lookbehind: !0,
                            alias: "variable"
                        }
                    }
                },
                /[\w-]+(?=\s+\{)/
            ],
            property: [
                /[-\w\.]+(?=\s*=(?!=))/,
                /"(?:\\[\s\S]|[^\\"])+"(?=\s*[:=])/
            ],
            string: {
                pattern: /"(?:[^\\$"]|\\[\s\S]|\$(?:(?=")|\$+(?!\$)|[^"${])|\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\})*"/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /(^|[^$])\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\}/,
                        lookbehind: !0,
                        inside: {
                            type: {
                                pattern: /(\b(?:count|data|local|module|path|self|terraform|var)\b\.)[\w\*]+/i,
                                lookbehind: !0,
                                alias: "variable"
                            },
                            keyword: /\b(?:count|data|local|module|path|self|terraform|var)\b/i,
                            function: /\w+(?=\()/,
                            string: {
                                pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                                greedy: !0
                            },
                            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
                            punctuation: /[!\$#%&'()*+,.\/;<=>@\[\\\]^`{|}~?:]/
                        }
                    }
                }
            },
            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
            boolean: /\b(?:false|true)\b/i,
            punctuation: /[=\[\]{}]/
        };
    }
    a33(sa1, "hcl");
});
var mu1 = o17((XS, bu)=>{
    "use strict";
    var gf = x39();
    bu.exports = la1;
    la1.displayName = "hlsl";
    la1.aliases = [];
    function la1(e1258) {
        e1258.register(gf), e1258.languages.hlsl = e1258.languages.extend("c", {
            "class-name": [
                e1258.languages.c["class-name"],
                /\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\b/
            ],
            keyword: [
                /\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\b/,
                /\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\b/
            ],
            number: /(?:(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?|\b0x[\da-fA-F]+)[fFhHlLuU]?\b/,
            boolean: /\b(?:false|true)\b/
        });
    }
    a33(la1, "hlsl");
});
var Eu = o17((QS, fu)=>{
    "use strict";
    fu.exports = ua1;
    ua1.displayName = "hoon";
    ua1.aliases = [];
    function ua1(e1259) {
        e1259.languages.hoon = {
            comment: {
                pattern: /::.*/,
                greedy: !0
            },
            string: {
                pattern: /"[^"]*"|'[^']*'/,
                greedy: !0
            },
            constant: /%(?:\.[ny]|[\w-]+)/,
            "class-name": /@(?:[a-z0-9-]*[a-z0-9])?|\*/i,
            function: /(?:\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,
            keyword: /\.[\^\+\*=\?]|![><:\.=\?!]|=[>|:,\.\-\^<+;/~\*\?]|\?[>|:\.\-\^<\+&~=@!]|\|[\$_%:\.\-\^~\*=@\?]|\+[|\$\+\*]|:[_\-\^\+~\*]|%[_:\.\-\^\+~\*=]|\^[|:\.\-\+&~\*=\?]|\$[|_%:<>\-\^&~@=\?]|;[:<\+;\/~\*=]|~[>|\$_%<\+\/&=\?!]|--|==/
        };
    }
    a33(ua1, "hoon");
});
var hu = o17((JS, Su)=>{
    "use strict";
    Su.exports = da1;
    da1.displayName = "hpkp";
    da1.aliases = [];
    function da1(e1260) {
        e1260.languages.hpkp = {
            directive: {
                pattern: /\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\s;=]|$)/i,
                alias: "property"
            },
            operator: /=/,
            punctuation: /;/
        };
    }
    a33(da1, "hpkp");
});
var Tu = o17((eh, yu)=>{
    "use strict";
    yu.exports = ca1;
    ca1.displayName = "hsts";
    ca1.aliases = [];
    function ca1(e1261) {
        e1261.languages.hsts = {
            directive: {
                pattern: /\b(?:includeSubDomains|max-age|preload)(?=[\s;=]|$)/i,
                alias: "property"
            },
            operator: /=/,
            punctuation: /;/
        };
    }
    a33(ca1, "hsts");
});
var _u = o17((th, Au)=>{
    "use strict";
    Au.exports = pa1;
    pa1.displayName = "http";
    pa1.aliases = [];
    function pa1(e1262) {
        (function(t947) {
            function r681(g106) {
                return RegExp("(^(?:" + g106 + "):[ 	]*(?![ 	]))[^]+", "i");
            }
            a33(r681, "headerValueOf"), t947.languages.http = {
                "request-line": {
                    pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,
                    inside: {
                        method: {
                            pattern: /^[A-Z]+\b/,
                            alias: "property"
                        },
                        "request-target": {
                            pattern: /^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,
                            lookbehind: !0,
                            alias: "url",
                            inside: t947.languages.uri
                        },
                        "http-version": {
                            pattern: /^(\s)HTTP\/[\d.]+/,
                            lookbehind: !0,
                            alias: "property"
                        }
                    }
                },
                "response-status": {
                    pattern: /^HTTP\/[\d.]+ \d+ .+/m,
                    inside: {
                        "http-version": {
                            pattern: /^HTTP\/[\d.]+/,
                            alias: "property"
                        },
                        "status-code": {
                            pattern: /^(\s)\d+(?=\s)/,
                            lookbehind: !0,
                            alias: "number"
                        },
                        "reason-phrase": {
                            pattern: /^(\s).+/,
                            lookbehind: !0,
                            alias: "string"
                        }
                    }
                },
                header: {
                    pattern: /^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,
                    inside: {
                        "header-value": [
                            {
                                pattern: r681(/Content-Security-Policy/.source),
                                lookbehind: !0,
                                alias: [
                                    "csp",
                                    "languages-csp"
                                ],
                                inside: t947.languages.csp
                            },
                            {
                                pattern: r681(/Public-Key-Pins(?:-Report-Only)?/.source),
                                lookbehind: !0,
                                alias: [
                                    "hpkp",
                                    "languages-hpkp"
                                ],
                                inside: t947.languages.hpkp
                            },
                            {
                                pattern: r681(/Strict-Transport-Security/.source),
                                lookbehind: !0,
                                alias: [
                                    "hsts",
                                    "languages-hsts"
                                ],
                                inside: t947.languages.hsts
                            },
                            {
                                pattern: r681(/[^:]+/.source),
                                lookbehind: !0
                            }
                        ],
                        "header-name": {
                            pattern: /^[^:]+/,
                            alias: "keyword"
                        },
                        punctuation: /^:/
                    }
                }
            };
            var n567 = t947.languages, i568 = {
                "application/javascript": n567.javascript,
                "application/json": n567.json || n567.javascript,
                "application/xml": n567.xml,
                "text/xml": n567.xml,
                "text/html": n567.html,
                "text/css": n567.css,
                "text/plain": n567.plain
            }, l276 = {
                "application/json": !0,
                "application/xml": !0
            };
            function d126(g107) {
                var b84 = g107.replace(/^[a-z]+\//, ""), m132 = "\\w+/(?:[\\w.-]+\\+)+" + b84 + "(?![+\\w.-])";
                return "(?:" + g107 + "|" + m132 + ")";
            }
            a33(d126, "getSuffixPattern");
            var u253;
            for(var p183 in i568)if (i568[p183]) {
                u253 = u253 || {};
                var c166 = l276[p183] ? d126(p183) : p183;
                u253[p183.replace(/\//g, "-")] = {
                    pattern: RegExp("(" + /content-type:\s*/.source + c166 + /(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source + ")" + /[^ \t\w-][\s\S]*/.source, "i"),
                    lookbehind: !0,
                    inside: i568[p183]
                };
            }
            u253 && t947.languages.insertBefore("http", "header", u253);
        })(e1262);
    }
    a33(pa1, "http");
});
var Iu = o17((ah, Ru)=>{
    "use strict";
    Ru.exports = ga1;
    ga1.displayName = "ichigojam";
    ga1.aliases = [];
    function ga1(e1263) {
        e1263.languages.ichigojam = {
            comment: /(?:\B'|REM)(?:[^\n\r]*)/i,
            string: {
                pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
                greedy: !0
            },
            number: /\B#[0-9A-F]+|\B`[01]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
            keyword: /\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\$|\b)/i,
            function: /\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\$|\b)/i,
            label: /(?:\B@\S+)/,
            operator: /<[=>]?|>=?|\|\||&&|[+\-*\/=|&^~!]|\b(?:AND|NOT|OR)\b/i,
            punctuation: /[\[,;:()\]]/
        };
    }
    a33(ga1, "ichigojam");
});
var wu = o17((rh, Nu)=>{
    "use strict";
    Nu.exports = ba1;
    ba1.displayName = "icon";
    ba1.aliases = [];
    function ba1(e1264) {
        e1264.languages.icon = {
            comment: /#.*/,
            string: {
                pattern: /(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/,
                greedy: !0
            },
            number: /\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,
            "builtin-keyword": {
                pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,
                alias: "variable"
            },
            directive: {
                pattern: /\$\w+/,
                alias: "builtin"
            },
            keyword: /\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,
            function: /\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,
            operator: /[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,
            punctuation: /[\[\](){},;]/
        };
    }
    a33(ba1, "icon");
});
var ku = o17((nh, vu)=>{
    "use strict";
    vu.exports = ma1;
    ma1.displayName = "icuMessageFormat";
    ma1.aliases = [];
    function ma1(e1265) {
        (function(t948) {
            function r682(p184, c167) {
                return c167 <= 0 ? /[]/.source : p184.replace(/<SELF>/g, function() {
                    return r682(p184, c167 - 1);
                });
            }
            a33(r682, "nested");
            var n568 = /'[{}:=,](?:[^']|'')*'(?!')/, i569 = {
                pattern: /''/,
                greedy: !0,
                alias: "operator"
            }, l277 = {
                pattern: n568,
                greedy: !0,
                inside: {
                    escape: i569
                }
            }, d127 = r682(/\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\}/.source.replace(/<STR>/g, function() {
                return n568.source;
            }), 8), u254 = {
                pattern: RegExp(d127),
                inside: {
                    message: {
                        pattern: /^(\{)[\s\S]+(?=\}$)/,
                        lookbehind: !0,
                        inside: null
                    },
                    "message-delimiter": {
                        pattern: /./,
                        alias: "punctuation"
                    }
                }
            };
            t948.languages["icu-message-format"] = {
                argument: {
                    pattern: RegExp(d127),
                    greedy: !0,
                    inside: {
                        content: {
                            pattern: /^(\{)[\s\S]+(?=\}$)/,
                            lookbehind: !0,
                            inside: {
                                "argument-name": {
                                    pattern: /^(\s*)[^{}:=,\s]+/,
                                    lookbehind: !0
                                },
                                "choice-style": {
                                    pattern: /^(\s*,\s*choice\s*,\s*)\S(?:[\s\S]*\S)?/,
                                    lookbehind: !0,
                                    inside: {
                                        punctuation: /\|/,
                                        range: {
                                            pattern: /^(\s*)[+-]?(?:\d+(?:\.\d*)?|\u221e)\s*[<#\u2264]/,
                                            lookbehind: !0,
                                            inside: {
                                                operator: /[<#\u2264]/,
                                                number: /\S+/
                                            }
                                        },
                                        rest: null
                                    }
                                },
                                "plural-style": {
                                    pattern: /^(\s*,\s*(?:plural|selectordinal)\s*,\s*)\S(?:[\s\S]*\S)?/,
                                    lookbehind: !0,
                                    inside: {
                                        offset: /^offset:\s*\d+/,
                                        "nested-message": u254,
                                        selector: {
                                            pattern: /=\d+|[^{}:=,\s]+/,
                                            inside: {
                                                keyword: /^(?:few|many|one|other|two|zero)$/
                                            }
                                        }
                                    }
                                },
                                "select-style": {
                                    pattern: /^(\s*,\s*select\s*,\s*)\S(?:[\s\S]*\S)?/,
                                    lookbehind: !0,
                                    inside: {
                                        "nested-message": u254,
                                        selector: {
                                            pattern: /[^{}:=,\s]+/,
                                            inside: {
                                                keyword: /^other$/
                                            }
                                        }
                                    }
                                },
                                keyword: /\b(?:choice|plural|select|selectordinal)\b/,
                                "arg-type": {
                                    pattern: /\b(?:date|duration|number|ordinal|spellout|time)\b/,
                                    alias: "keyword"
                                },
                                "arg-skeleton": {
                                    pattern: /(,\s*)::[^{}:=,\s]+/,
                                    lookbehind: !0
                                },
                                "arg-style": {
                                    pattern: /(,\s*)(?:currency|full|integer|long|medium|percent|short)(?=\s*$)/,
                                    lookbehind: !0
                                },
                                "arg-style-text": {
                                    pattern: RegExp(/(^\s*,\s*(?=\S))/.source + r682(/(?:[^{}']|'[^']*'|\{(?:<SELF>)?\})+/.source, 8) + "$"),
                                    lookbehind: !0,
                                    alias: "string"
                                },
                                punctuation: /,/
                            }
                        },
                        "argument-delimiter": {
                            pattern: /./,
                            alias: "operator"
                        }
                    }
                },
                escape: i569,
                string: l277
            }, u254.inside.message.inside = t948.languages["icu-message-format"], t948.languages["icu-message-format"].argument.inside.content.inside["choice-style"].inside.rest = t948.languages["icu-message-format"];
        })(e1265);
    }
    a33(ma1, "icuMessageFormat");
});
var Ou = o17((ih, Cu)=>{
    "use strict";
    var bf = J9();
    Cu.exports = fa1;
    fa1.displayName = "idris";
    fa1.aliases = [
        "idr"
    ];
    function fa1(e1266) {
        e1266.register(bf), e1266.languages.idris = e1266.languages.extend("haskell", {
            comment: {
                pattern: /(?:(?:--|\|\|\|).*$|\{-[\s\S]*?-\})/m
            },
            keyword: /\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\b/,
            builtin: void 0
        }), e1266.languages.insertBefore("idris", "keyword", {
            "import-statement": {
                pattern: /(^\s*import\s+)(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*/m,
                lookbehind: !0,
                inside: {
                    punctuation: /\./
                }
            }
        }), e1266.languages.idr = e1266.languages.idris;
    }
    a33(fa1, "idris");
});
var xu = o17((oh, Lu)=>{
    "use strict";
    Lu.exports = Ea1;
    Ea1.displayName = "iecst";
    Ea1.aliases = [];
    function Ea1(e1267) {
        e1267.languages.iecst = {
            comment: [
                {
                    pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\(\*[\s\S]*?(?:\*\)|$)|\{[\s\S]*?(?:\}|$))/,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /(^|[^\\:])\/\/.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: {
                pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            keyword: [
                /\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\b/i,
                /\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\b/
            ],
            "class-name": /\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\b/,
            address: {
                pattern: /%[IQM][XBWDL][\d.]*|%[IQ][\d.]*/,
                alias: "symbol"
            },
            number: /\b(?:16#[\da-f]+|2#[01_]+|0x[\da-f]+)\b|\b(?:D|DT|T|TOD)#[\d_shmd:]*|\b[A-Z]*#[\d.,_]*|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            boolean: /\b(?:FALSE|NULL|TRUE)\b/,
            operator: /S?R?:?=>?|&&?|\*\*?|<[=>]?|>=?|[-:^/+#]|\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            punctuation: /[()[\].,;]/
        };
    }
    a33(Ea1, "iecst");
});
var Mu = o17((sh, Du)=>{
    "use strict";
    Du.exports = Sa1;
    Sa1.displayName = "ignore";
    Sa1.aliases = [
        "gitignore",
        "hgignore",
        "npmignore"
    ];
    function Sa1(e1268) {
        (function(t949) {
            t949.languages.ignore = {
                comment: /^#.*/m,
                entry: {
                    pattern: /\S(?:.*(?:(?:\\ )|\S))?/,
                    alias: "string",
                    inside: {
                        operator: /^!|\*\*?|\?/,
                        regex: {
                            pattern: /(^|[^\\])\[[^\[\]]*\]/,
                            lookbehind: !0
                        },
                        punctuation: /\//
                    }
                }
            }, t949.languages.gitignore = t949.languages.ignore, t949.languages.hgignore = t949.languages.ignore, t949.languages.npmignore = t949.languages.ignore;
        })(e1268);
    }
    a33(Sa1, "ignore");
});
var Uu = o17((lh, Fu)=>{
    "use strict";
    Fu.exports = ha1;
    ha1.displayName = "inform7";
    ha1.aliases = [];
    function ha1(e1269) {
        e1269.languages.inform7 = {
            string: {
                pattern: /"[^"]*"/,
                inside: {
                    substitution: {
                        pattern: /\[[^\[\]]+\]/,
                        inside: {
                            delimiter: {
                                pattern: /\[|\]/,
                                alias: "punctuation"
                            }
                        }
                    }
                }
            },
            comment: {
                pattern: /\[[^\[\]]+\]/,
                greedy: !0
            },
            title: {
                pattern: /^[ \t]*(?:book|chapter|part(?! of)|section|table|volume)\b.+/im,
                alias: "important"
            },
            number: {
                pattern: /(^|[^-])(?:\b\d+(?:\.\d+)?(?:\^\d+)?(?:(?!\d)\w+)?|\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\b(?!-)/i,
                lookbehind: !0
            },
            verb: {
                pattern: /(^|[^-])\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\b(?!-)/i,
                lookbehind: !0,
                alias: "operator"
            },
            keyword: {
                pattern: /(^|[^-])\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\b(?!-)/i,
                lookbehind: !0
            },
            property: {
                pattern: /(^|[^-])\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\b(?!-)/i,
                lookbehind: !0,
                alias: "symbol"
            },
            position: {
                pattern: /(^|[^-])\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\b(?!-)/i,
                lookbehind: !0,
                alias: "keyword"
            },
            type: {
                pattern: /(^|[^-])\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\b(?!-)/i,
                lookbehind: !0,
                alias: "variable"
            },
            punctuation: /[.,:;(){}]/
        }, e1269.languages.inform7.string.inside.substitution.inside.rest = e1269.languages.inform7, e1269.languages.inform7.string.inside.substitution.inside.rest.text = {
            pattern: /\S(?:\s*\S)*/,
            alias: "comment"
        };
    }
    a33(ha1, "inform7");
});
var Pu = o17((uh, Bu)=>{
    "use strict";
    Bu.exports = ya1;
    ya1.displayName = "ini";
    ya1.aliases = [];
    function ya1(e1270) {
        e1270.languages.ini = {
            comment: {
                pattern: /(^[ \f\t\v]*)[#;][^\n\r]*/m,
                lookbehind: !0
            },
            section: {
                pattern: /(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,
                lookbehind: !0,
                inside: {
                    "section-name": {
                        pattern: /(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/,
                        lookbehind: !0,
                        alias: "selector"
                    },
                    punctuation: /\[|\]/
                }
            },
            key: {
                pattern: /(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m,
                lookbehind: !0,
                alias: "attr-name"
            },
            value: {
                pattern: /(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,
                lookbehind: !0,
                alias: "attr-value",
                inside: {
                    "inner-value": {
                        pattern: /^("|').+(?=\1$)/,
                        lookbehind: !0
                    }
                }
            },
            punctuation: /=/
        };
    }
    a33(ya1, "ini");
});
var $u = o17((dh, Gu)=>{
    "use strict";
    Gu.exports = Ta1;
    Ta1.displayName = "io";
    Ta1.aliases = [];
    function Ta1(e1271) {
        e1271.languages.io = {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*|#.*)/,
                lookbehind: !0,
                greedy: !0
            },
            "triple-quoted-string": {
                pattern: /"""(?:\\[\s\S]|(?!""")[^\\])*"""/,
                greedy: !0,
                alias: "string"
            },
            string: {
                pattern: /"(?:\\.|[^\\\r\n"])*"/,
                greedy: !0
            },
            keyword: /\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\b/,
            builtin: /\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\b/,
            boolean: /\b(?:false|nil|true)\b/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?/i,
            operator: /[=!*/%+\-^&|]=|>>?=?|<<?=?|:?:?=|\+\+?|--?|\*\*?|\/\/?|%|\|\|?|&&?|\b(?:and|not|or|return)\b|@@?|\?\??|\.\./,
            punctuation: /[{}[\];(),.:]/
        };
    }
    a33(Ta1, "io");
});
var Hu = o17((ch, qu)=>{
    "use strict";
    qu.exports = Aa1;
    Aa1.displayName = "j";
    Aa1.aliases = [];
    function Aa1(e1272) {
        e1272.languages.j = {
            comment: {
                pattern: /\bNB\..*/,
                greedy: !0
            },
            string: {
                pattern: /'(?:''|[^'\r\n])*'/,
                greedy: !0
            },
            keyword: /\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\w+|goto_\w+|if|label_\w+|return|select|throw|try|while|whilst)\.)/,
            verb: {
                pattern: /(?!\^:|;\.|[=!][.:])(?:\{(?:\.|::?)?|p(?:\.\.?|:)|[=!\]]|[<>+*\-%$|,#][.:]?|[?^]\.?|[;\[]:?|[~}"i][.:]|[ACeEIjLor]\.|(?:[_\/\\qsux]|_?\d):)/,
                alias: "keyword"
            },
            number: /\b_?(?:(?!\d:)\d+(?:\.\d+)?(?:(?:ad|ar|[ejpx])_?\d+(?:\.\d+)?)*(?:b_?[\da-z]+(?:\.[\da-z]+)?)?|_\b(?!\.))/,
            adverb: {
                pattern: /[~}]|[\/\\]\.?|[bfM]\.|t[.:]/,
                alias: "builtin"
            },
            operator: /[=a][.:]|_\./,
            conjunction: {
                pattern: /&(?:\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\.|`:?|[\^LS]:|"/,
                alias: "variable"
            },
            punctuation: /[()]/
        };
    }
    a33(Aa1, "j");
});
var ee4 = o17((ph, zu)=>{
    "use strict";
    zu.exports = _a1;
    _a1.displayName = "java";
    _a1.aliases = [];
    function _a1(e1273) {
        (function(t950) {
            var r683 = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/, n569 = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, i570 = {
                pattern: RegExp(n569 + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
                lookbehind: !0,
                inside: {
                    namespace: {
                        pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
                        inside: {
                            punctuation: /\./
                        }
                    },
                    punctuation: /\./
                }
            };
            t950.languages.java = t950.languages.extend("clike", {
                string: {
                    pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,
                    lookbehind: !0,
                    greedy: !0
                },
                "class-name": [
                    i570,
                    {
                        pattern: RegExp(n569 + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),
                        lookbehind: !0,
                        inside: i570.inside
                    }
                ],
                keyword: r683,
                function: [
                    t950.languages.clike.function,
                    {
                        pattern: /(::\s*)[a-z_]\w*/,
                        lookbehind: !0
                    }
                ],
                number: /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
                operator: {
                    pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,
                    lookbehind: !0
                }
            }), t950.languages.insertBefore("java", "string", {
                "triple-quoted-string": {
                    pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,
                    greedy: !0,
                    alias: "string"
                },
                char: {
                    pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/,
                    greedy: !0
                }
            }), t950.languages.insertBefore("java", "class-name", {
                annotation: {
                    pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                generics: {
                    pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
                    inside: {
                        "class-name": i570,
                        keyword: r683,
                        punctuation: /[<>(),.:]/,
                        operator: /[?&|]/
                    }
                },
                namespace: {
                    pattern: RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g, function() {
                        return r683.source;
                    })),
                    lookbehind: !0,
                    inside: {
                        punctuation: /\./
                    }
                }
            });
        })(e1273);
    }
    a33(_a1, "java");
});
var Y5 = o17((gh, Vu)=>{
    "use strict";
    Vu.exports = Ra1;
    Ra1.displayName = "javadoclike";
    Ra1.aliases = [];
    function Ra1(e1274) {
        (function(t951) {
            var r684 = t951.languages.javadoclike = {
                parameter: {
                    pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,
                    lookbehind: !0
                },
                keyword: {
                    pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,
                    lookbehind: !0
                },
                punctuation: /[{}]/
            };
            function n570(l278, d128) {
                var u255 = "doc-comment", p185 = t951.languages[l278];
                if (!!p185) {
                    var c168 = p185[u255];
                    if (!c168) {
                        var g108 = {};
                        g108[u255] = {
                            pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,
                            lookbehind: !0,
                            alias: "comment"
                        }, p185 = t951.languages.insertBefore(l278, "comment", g108), c168 = p185[u255];
                    }
                    if (c168 instanceof RegExp && (c168 = p185[u255] = {
                        pattern: c168
                    }), Array.isArray(c168)) for(var b85 = 0, m133 = c168.length; b85 < m133; b85++)c168[b85] instanceof RegExp && (c168[b85] = {
                        pattern: c168[b85]
                    }), d128(c168[b85]);
                    else d128(c168);
                }
            }
            a33(n570, "docCommentSupport");
            function i571(l279, d129) {
                typeof l279 == "string" && (l279 = [
                    l279
                ]), l279.forEach(function(u256) {
                    n570(u256, function(p186) {
                        p186.inside || (p186.inside = {}), p186.inside.rest = d129;
                    });
                });
            }
            a33(i571, "addSupport"), Object.defineProperty(r684, "addSupport", {
                value: i571
            }), r684.addSupport([
                "java",
                "javascript",
                "php"
            ], r684);
        })(e1274);
    }
    a33(Ra1, "javadoclike");
});
var ju = o17((bh, Wu)=>{
    "use strict";
    var mf = ee4(), ff = Y5();
    Wu.exports = Ia1;
    Ia1.displayName = "javadoc";
    Ia1.aliases = [];
    function Ia1(e1275) {
        e1275.register(mf), e1275.register(ff), function(t952) {
            var r685 = /(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m, n571 = /#\s*\w+(?:\s*\([^()]*\))?/.source, i572 = /(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function() {
                return n571;
            });
            t952.languages.javadoc = t952.languages.extend("javadoclike", {}), t952.languages.insertBefore("javadoc", "keyword", {
                reference: {
                    pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source + "(?:" + i572 + ")"),
                    lookbehind: !0,
                    inside: {
                        function: {
                            pattern: /(#\s*)\w+(?=\s*\()/,
                            lookbehind: !0
                        },
                        field: {
                            pattern: /(#\s*)\w+/,
                            lookbehind: !0
                        },
                        namespace: {
                            pattern: /\b(?:[a-z]\w*\s*\.\s*)+/,
                            inside: {
                                punctuation: /\./
                            }
                        },
                        "class-name": /\b[A-Z]\w*/,
                        keyword: t952.languages.java.keyword,
                        punctuation: /[#()[\],.]/
                    }
                },
                "class-name": {
                    pattern: /(@param\s+)<[A-Z]\w*>/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /[.<>]/
                    }
                },
                "code-section": [
                    {
                        pattern: /(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,
                        lookbehind: !0,
                        inside: {
                            code: {
                                pattern: r685,
                                lookbehind: !0,
                                inside: t952.languages.java,
                                alias: "language-java"
                            }
                        }
                    },
                    {
                        pattern: /(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,
                        lookbehind: !0,
                        inside: {
                            line: {
                                pattern: r685,
                                lookbehind: !0,
                                inside: {
                                    tag: t952.languages.markup.tag,
                                    entity: t952.languages.markup.entity,
                                    code: {
                                        pattern: /.+/,
                                        inside: t952.languages.java,
                                        alias: "language-java"
                                    }
                                }
                            }
                        }
                    }
                ],
                tag: t952.languages.markup.tag,
                entity: t952.languages.markup.entity
            }), t952.languages.javadoclike.addSupport("java", t952.languages.javadoc);
        }(e1275);
    }
    a33(Ia1, "javadoc");
});
var Ku = o17((mh, Yu)=>{
    "use strict";
    Yu.exports = Na1;
    Na1.displayName = "javastacktrace";
    Na1.aliases = [];
    function Na1(e1276) {
        e1276.languages.javastacktrace = {
            summary: {
                pattern: /^([\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread "[^"]*")[\t ]+)?[\w$.]+(?::.*)?$/m,
                lookbehind: !0,
                inside: {
                    keyword: {
                        pattern: /^([\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,
                        lookbehind: !0
                    },
                    string: {
                        pattern: /^(\s*)"[^"]*"/,
                        lookbehind: !0
                    },
                    exceptions: {
                        pattern: /^(:?\s*)[\w$.]+(?=:|$)/,
                        lookbehind: !0,
                        inside: {
                            "class-name": /[\w$]+$/,
                            namespace: /\b[a-z]\w*\b/,
                            punctuation: /\./
                        }
                    },
                    message: {
                        pattern: /(:\s*)\S.*/,
                        lookbehind: !0,
                        alias: "string"
                    },
                    punctuation: /:/
                }
            },
            "stack-frame": {
                pattern: /^([\t ]*)at (?:[\w$./]|@[\w$.+-]*\/)+(?:<init>)?\([^()]*\)/m,
                lookbehind: !0,
                inside: {
                    keyword: {
                        pattern: /^(\s*)at(?= )/,
                        lookbehind: !0
                    },
                    source: [
                        {
                            pattern: /(\()\w+\.\w+:\d+(?=\))/,
                            lookbehind: !0,
                            inside: {
                                file: /^\w+\.\w+/,
                                punctuation: /:/,
                                "line-number": {
                                    pattern: /\b\d+\b/,
                                    alias: "number"
                                }
                            }
                        },
                        {
                            pattern: /(\()[^()]*(?=\))/,
                            lookbehind: !0,
                            inside: {
                                keyword: /^(?:Native Method|Unknown Source)$/
                            }
                        }
                    ],
                    "class-name": /[\w$]+(?=\.(?:<init>|[\w$]+)\()/,
                    function: /(?:<init>|[\w$]+)(?=\()/,
                    "class-loader": {
                        pattern: /(\s)[a-z]\w*(?:\.[a-z]\w*)*(?=\/[\w@$.]*\/)/,
                        lookbehind: !0,
                        alias: "namespace",
                        inside: {
                            punctuation: /\./
                        }
                    },
                    module: {
                        pattern: /([\s/])[a-z]\w*(?:\.[a-z]\w*)*(?:@[\w$.+-]*)?(?=\/)/,
                        lookbehind: !0,
                        inside: {
                            version: {
                                pattern: /(@)[\s\S]+/,
                                lookbehind: !0,
                                alias: "number"
                            },
                            punctuation: /[@.]/
                        }
                    },
                    namespace: {
                        pattern: /(?:\b[a-z]\w*\.)+/,
                        inside: {
                            punctuation: /\./
                        }
                    },
                    punctuation: /[()/.]/
                }
            },
            more: {
                pattern: /^([\t ]*)\.{3} \d+ [a-z]+(?: [a-z]+)*/m,
                lookbehind: !0,
                inside: {
                    punctuation: /\.{3}/,
                    number: /\d+/,
                    keyword: /\b[a-z]+(?: [a-z]+)*\b/
                }
            }
        };
    }
    a33(Na1, "javastacktrace");
});
var Xu = o17((fh, Zu)=>{
    "use strict";
    Zu.exports = wa1;
    wa1.displayName = "jexl";
    wa1.aliases = [];
    function wa1(e1277) {
        e1277.languages.jexl = {
            string: /(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
            transform: {
                pattern: /(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,
                alias: "function",
                lookbehind: !0
            },
            function: /[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,
            number: /\b\d+(?:\.\d+)?\b|\B\.\d+\b/,
            operator: /[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,
            boolean: /\b(?:false|true)\b/,
            keyword: /\bin\b/,
            punctuation: /[{}[\](),.]/
        };
    }
    a33(wa1, "jexl");
});
var Ju = o17((Eh, Qu)=>{
    "use strict";
    Qu.exports = va1;
    va1.displayName = "jolie";
    va1.aliases = [];
    function va1(e1278) {
        e1278.languages.jolie = e1278.languages.extend("clike", {
            string: {
                pattern: /(^|[^\\])"(?:\\[\s\S]|[^"\\])*"/,
                lookbehind: !0,
                greedy: !0
            },
            "class-name": {
                pattern: /((?:\b(?:as|courier|embed|in|inputPort|outputPort|service)\b|@)[ \t]*)\w+/,
                lookbehind: !0
            },
            keyword: /\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\b/,
            function: /\b[a-z_]\w*(?=[ \t]*[@(])/i,
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?l?/i,
            operator: /-[-=>]?|\+[+=]?|<[<=]?|[>=*!]=?|&&|\|\||[?\/%^@|]/,
            punctuation: /[()[\]{},;.:]/,
            builtin: /\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\b/
        }), e1278.languages.insertBefore("jolie", "keyword", {
            aggregates: {
                pattern: /(\bAggregates\s*:\s*)(?:\w+(?:\s+with\s+\w+)?\s*,\s*)*\w+(?:\s+with\s+\w+)?/,
                lookbehind: !0,
                inside: {
                    keyword: /\bwith\b/,
                    "class-name": /\w+/,
                    punctuation: /,/
                }
            },
            redirects: {
                pattern: /(\bRedirects\s*:\s*)(?:\w+\s*=>\s*\w+\s*,\s*)*(?:\w+\s*=>\s*\w+)/,
                lookbehind: !0,
                inside: {
                    punctuation: /,/,
                    "class-name": /\w+/,
                    operator: /=>/
                }
            },
            property: {
                pattern: /\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\b(?=[ \t]*:)/
            }
        });
    }
    a33(va1, "jolie");
});
var td = o17((Sh, ed)=>{
    "use strict";
    ed.exports = ka1;
    ka1.displayName = "jq";
    ka1.aliases = [];
    function ka1(e1279) {
        (function(t953) {
            var r686 = /\\\((?:[^()]|\([^()]*\))*\)/.source, n572 = RegExp(/(^|[^\\])"(?:[^"\r\n\\]|\\[^\r\n(]|__)*"/.source.replace(/__/g, function() {
                return r686;
            })), i573 = {
                interpolation: {
                    pattern: RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + r686),
                    lookbehind: !0,
                    inside: {
                        content: {
                            pattern: /^(\\\()[\s\S]+(?=\)$)/,
                            lookbehind: !0,
                            inside: null
                        },
                        punctuation: /^\\\(|\)$/
                    }
                }
            }, l280 = t953.languages.jq = {
                comment: /#.*/,
                property: {
                    pattern: RegExp(n572.source + /(?=\s*:(?!:))/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: i573
                },
                string: {
                    pattern: n572,
                    lookbehind: !0,
                    greedy: !0,
                    inside: i573
                },
                function: {
                    pattern: /(\bdef\s+)[a-z_]\w+/i,
                    lookbehind: !0
                },
                variable: /\B\$\w+/,
                "property-literal": {
                    pattern: /\b[a-z_]\w*(?=\s*:(?!:))/i,
                    alias: "property"
                },
                keyword: /\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\b/,
                boolean: /\b(?:false|true)\b/,
                number: /(?:\b\d+\.|\B\.)?\b\d+(?:[eE][+-]?\d+)?\b/,
                operator: [
                    {
                        pattern: /\|=?/,
                        alias: "pipe"
                    },
                    /\.\.|[!=<>]?=|\?\/\/|\/\/=?|[-+*/%]=?|[<>?]|\b(?:and|not|or)\b/
                ],
                "c-style-function": {
                    pattern: /\b[a-z_]\w*(?=\s*\()/i,
                    alias: "function"
                },
                punctuation: /::|[()\[\]{},:;]|\.(?=\s*[\[\w$])/,
                dot: {
                    pattern: /\./,
                    alias: "important"
                }
            };
            i573.interpolation.inside.content.inside = l280;
        })(e1279);
    }
    a33(ka1, "jq");
});
var rd = o17((hh, ad)=>{
    "use strict";
    ad.exports = Ca1;
    Ca1.displayName = "jsExtras";
    Ca1.aliases = [];
    function Ca1(e1280) {
        (function(t954) {
            t954.languages.insertBefore("javascript", "function-variable", {
                "method-variable": {
                    pattern: RegExp("(\\.\\s*)" + t954.languages.javascript["function-variable"].pattern.source),
                    lookbehind: !0,
                    alias: [
                        "function-variable",
                        "method",
                        "function",
                        "property-access"
                    ]
                }
            }), t954.languages.insertBefore("javascript", "function", {
                method: {
                    pattern: RegExp("(\\.\\s*)" + t954.languages.javascript.function.source),
                    lookbehind: !0,
                    alias: [
                        "function",
                        "property-access"
                    ]
                }
            }), t954.languages.insertBefore("javascript", "constant", {
                "known-class-name": [
                    {
                        pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
                        alias: "class-name"
                    },
                    {
                        pattern: /\b(?:[A-Z]\w*)Error\b/,
                        alias: "class-name"
                    }
                ]
            });
            function r687(p187, c169) {
                return RegExp(p187.replace(/<ID>/g, function() {
                    return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
                }), c169);
            }
            a33(r687, "withId"), t954.languages.insertBefore("javascript", "keyword", {
                imports: {
                    pattern: r687(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),
                    lookbehind: !0,
                    inside: t954.languages.javascript
                },
                exports: {
                    pattern: r687(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),
                    lookbehind: !0,
                    inside: t954.languages.javascript
                }
            }), t954.languages.javascript.keyword.unshift({
                pattern: /\b(?:as|default|export|from|import)\b/,
                alias: "module"
            }, {
                pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,
                alias: "control-flow"
            }, {
                pattern: /\bnull\b/,
                alias: [
                    "null",
                    "nil"
                ]
            }, {
                pattern: /\bundefined\b/,
                alias: "nil"
            }), t954.languages.insertBefore("javascript", "operator", {
                spread: {
                    pattern: /\.{3}/,
                    alias: "operator"
                },
                arrow: {
                    pattern: /=>/,
                    alias: "operator"
                }
            }), t954.languages.insertBefore("javascript", "punctuation", {
                "property-access": {
                    pattern: r687(/(\.\s*)#?<ID>/.source),
                    lookbehind: !0
                },
                "maybe-class-name": {
                    pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
                    lookbehind: !0
                },
                dom: {
                    pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,
                    alias: "variable"
                },
                console: {
                    pattern: /\bconsole(?=\s*\.)/,
                    alias: "class-name"
                }
            });
            for(var n573 = [
                "function",
                "function-variable",
                "method",
                "method-variable",
                "property-access"
            ], i574 = 0; i574 < n573.length; i574++){
                var l281 = n573[i574], d130 = t954.languages.javascript[l281];
                t954.util.type(d130) === "RegExp" && (d130 = t954.languages.javascript[l281] = {
                    pattern: d130
                });
                var u257 = d130.inside || {};
                d130.inside = u257, u257["maybe-class-name"] = /^[A-Z][\s\S]*/;
            }
        })(e1280);
    }
    a33(Ca1, "jsExtras");
});
var id = o17((yh, nd)=>{
    "use strict";
    nd.exports = Oa1;
    Oa1.displayName = "jsTemplates";
    Oa1.aliases = [];
    function Oa1(e1281) {
        (function(t955) {
            var r688 = t955.languages.javascript["template-string"], n574 = r688.pattern.source, i575 = r688.inside.interpolation, l282 = i575.inside["interpolation-punctuation"], d131 = i575.pattern.source;
            function u258(f151, h131) {
                if (!!t955.languages[f151]) return {
                    pattern: RegExp("((?:" + h131 + ")\\s*)" + n574),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        "template-punctuation": {
                            pattern: /^`|`$/,
                            alias: "string"
                        },
                        "embedded-code": {
                            pattern: /[\s\S]+/,
                            alias: f151
                        }
                    }
                };
            }
            a33(u258, "createTemplate"), t955.languages.javascript["template-string"] = [
                u258("css", /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),
                u258("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),
                u258("svg", /\bsvg/.source),
                u258("markdown", /\b(?:markdown|md)/.source),
                u258("graphql", /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),
                u258("sql", /\bsql/.source),
                r688
            ].filter(Boolean);
            function p188(f152, h132) {
                return "___" + h132.toUpperCase() + "_" + f152 + "___";
            }
            a33(p188, "getPlaceholder");
            function c170(f153, h133, S79) {
                var T44 = {
                    code: f153,
                    grammar: h133,
                    language: S79
                };
                return t955.hooks.run("before-tokenize", T44), T44.tokens = t955.tokenize(T44.code, T44.grammar), t955.hooks.run("after-tokenize", T44), T44.tokens;
            }
            a33(c170, "tokenizeWithHooks");
            function g109(f154) {
                var h134 = {};
                h134["interpolation-punctuation"] = l282;
                var S80 = t955.tokenize(f154, h134);
                if (S80.length === 3) {
                    var T45 = [
                        1,
                        1
                    ];
                    T45.push.apply(T45, c170(S80[1], t955.languages.javascript, "javascript")), S80.splice.apply(S80, T45);
                }
                return new t955.Token("interpolation", S80, i575.alias, f154);
            }
            a33(g109, "tokenizeInterpolationExpression");
            function b86(f155, h135, S81) {
                var T46 = t955.tokenize(f155, {
                    interpolation: {
                        pattern: RegExp(d131),
                        lookbehind: !0
                    }
                }), y86 = 0, A58 = {}, _28 = T46.map(function(v67) {
                    if (typeof v67 == "string") return v67;
                    for(var k63 = v67.content, N33; f155.indexOf(N33 = p188(y86++, S81)) !== -1;);
                    return A58[N33] = k63, N33;
                }).join(""), R35 = c170(_28, h135, S81), D41 = Object.keys(A58);
                y86 = 0;
                function O42(v68) {
                    for(var k64 = 0; k64 < v68.length; k64++){
                        if (y86 >= D41.length) return;
                        var N34 = v68[k64];
                        if (typeof N34 == "string" || typeof N34.content == "string") {
                            var F43 = D41[y86], U35 = typeof N34 == "string" ? N34 : N34.content, G26 = U35.indexOf(F43);
                            if (G26 !== -1) {
                                ++y86;
                                var B40 = U35.substring(0, G26), Z16 = g109(A58[F43]), $48 = U35.substring(G26 + F43.length), L31 = [];
                                if (B40 && L31.push(B40), L31.push(Z16), $48) {
                                    var q44 = [
                                        $48
                                    ];
                                    O42(q44), L31.push.apply(L31, q44);
                                }
                                typeof N34 == "string" ? (v68.splice.apply(v68, [
                                    k64,
                                    1
                                ].concat(L31)), k64 += L31.length - 1) : N34.content = L31;
                            }
                        } else {
                            var P39 = N34.content;
                            Array.isArray(P39) ? O42(P39) : O42([
                                P39
                            ]);
                        }
                    }
                }
                return a33(O42, "walkTokens"), O42(R35), new t955.Token(S81, R35, "language-" + S81, f155);
            }
            a33(b86, "tokenizeEmbedded");
            var m134 = {
                javascript: !0,
                js: !0,
                typescript: !0,
                ts: !0,
                jsx: !0,
                tsx: !0
            };
            t955.hooks.add("after-tokenize", function(f156) {
                if (!(f156.language in m134)) return;
                function h136(S82) {
                    for(var T47 = 0, y87 = S82.length; T47 < y87; T47++){
                        var A59 = S82[T47];
                        if (typeof A59 != "string") {
                            var _29 = A59.content;
                            if (!Array.isArray(_29)) {
                                typeof _29 != "string" && h136([
                                    _29
                                ]);
                                continue;
                            }
                            if (A59.type === "template-string") {
                                var R36 = _29[1];
                                if (_29.length === 3 && typeof R36 != "string" && R36.type === "embedded-code") {
                                    var D42 = E55(R36), O43 = R36.alias, v69 = Array.isArray(O43) ? O43[0] : O43, k65 = t955.languages[v69];
                                    if (!k65) continue;
                                    _29[1] = b86(D42, k65, v69);
                                }
                            } else h136(_29);
                        }
                    }
                }
                a33(h136, "findTemplateStrings"), h136(f156.tokens);
            });
            function E55(f157) {
                return typeof f157 == "string" ? f157 : Array.isArray(f157) ? f157.map(E55).join("") : E55(f157.content);
            }
            a33(E55, "stringContent");
        })(e1281);
    }
    a33(Oa1, "jsTemplates");
});
var te4 = o17((Th, od)=>{
    "use strict";
    od.exports = La1;
    La1.displayName = "typescript";
    La1.aliases = [
        "ts"
    ];
    function La1(e1282) {
        (function(t956) {
            t956.languages.typescript = t956.languages.extend("javascript", {
                "class-name": {
                    pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: null
                },
                builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
            }), t956.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/, /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/, /\btype\b(?=\s*(?:[\{*]|$))/), delete t956.languages.typescript.parameter, delete t956.languages.typescript["literal-property"];
            var r689 = t956.languages.extend("typescript", {});
            delete r689["class-name"], t956.languages.typescript["class-name"].inside = r689, t956.languages.insertBefore("typescript", "function", {
                decorator: {
                    pattern: /@[$\w\xA0-\uFFFF]+/,
                    inside: {
                        at: {
                            pattern: /^@/,
                            alias: "operator"
                        },
                        function: /^[\s\S]+/
                    }
                },
                "generic-function": {
                    pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
                    greedy: !0,
                    inside: {
                        function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
                        generic: {
                            pattern: /<[\s\S]+/,
                            alias: "class-name",
                            inside: r689
                        }
                    }
                }
            }), t956.languages.ts = t956.languages.typescript;
        })(e1282);
    }
    a33(La1, "typescript");
});
var ld = o17((Ah, sd)=>{
    "use strict";
    var Ef = Y5(), Sf = te4();
    sd.exports = xa1;
    xa1.displayName = "jsdoc";
    xa1.aliases = [];
    function xa1(e1283) {
        e1283.register(Ef), e1283.register(Sf), function(t957) {
            var r690 = t957.languages.javascript, n575 = /\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source, i576 = "(@(?:arg|argument|param|property)\\s+(?:" + n575 + "\\s+)?)";
            t957.languages.jsdoc = t957.languages.extend("javadoclike", {
                parameter: {
                    pattern: RegExp(i576 + /(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source),
                    lookbehind: !0,
                    inside: {
                        punctuation: /\./
                    }
                }
            }), t957.languages.insertBefore("jsdoc", "keyword", {
                "optional-parameter": {
                    pattern: RegExp(i576 + /\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),
                    lookbehind: !0,
                    inside: {
                        parameter: {
                            pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/,
                            lookbehind: !0,
                            inside: {
                                punctuation: /\./
                            }
                        },
                        code: {
                            pattern: /(=)[\s\S]*(?=\]$)/,
                            lookbehind: !0,
                            inside: r690,
                            alias: "language-javascript"
                        },
                        punctuation: /[=[\]]/
                    }
                },
                "class-name": [
                    {
                        pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g, function() {
                            return n575;
                        })),
                        lookbehind: !0,
                        inside: {
                            punctuation: /\./
                        }
                    },
                    {
                        pattern: RegExp("(@[a-z]+\\s+)" + n575),
                        lookbehind: !0,
                        inside: {
                            string: r690.string,
                            number: r690.number,
                            boolean: r690.boolean,
                            keyword: t957.languages.typescript.keyword,
                            operator: /=>|\.\.\.|[&|?:*]/,
                            punctuation: /[.,;=<>{}()[\]]/
                        }
                    }
                ],
                example: {
                    pattern: /(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,
                    lookbehind: !0,
                    inside: {
                        code: {
                            pattern: /^([\t ]*(?:\*\s*)?)\S.*$/m,
                            lookbehind: !0,
                            inside: r690,
                            alias: "language-javascript"
                        }
                    }
                }
            }), t957.languages.javadoclike.addSupport("javascript", t957.languages.jsdoc);
        }(e1283);
    }
    a33(xa1, "jsdoc");
});
var ae5 = o17((_h, ud)=>{
    "use strict";
    ud.exports = Da1;
    Da1.displayName = "json";
    Da1.aliases = [
        "webmanifest"
    ];
    function Da1(e1284) {
        e1284.languages.json = {
            property: {
                pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
                lookbehind: !0,
                greedy: !0
            },
            comment: {
                pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
                greedy: !0
            },
            number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
            punctuation: /[{}[\],]/,
            operator: /:/,
            boolean: /\b(?:false|true)\b/,
            null: {
                pattern: /\bnull\b/,
                alias: "keyword"
            }
        }, e1284.languages.webmanifest = e1284.languages.json;
    }
    a33(Da1, "json");
});
var cd = o17((Rh, dd)=>{
    "use strict";
    var hf = ae5();
    dd.exports = Ma1;
    Ma1.displayName = "json5";
    Ma1.aliases = [];
    function Ma1(e1285) {
        e1285.register(hf), function(t958) {
            var r691 = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;
            t958.languages.json5 = t958.languages.extend("json", {
                property: [
                    {
                        pattern: RegExp(r691.source + "(?=\\s*:)"),
                        greedy: !0
                    },
                    {
                        pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/,
                        alias: "unquoted"
                    }
                ],
                string: {
                    pattern: r691,
                    greedy: !0
                },
                number: /[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/
            });
        }(e1285);
    }
    a33(Ma1, "json5");
});
var gd = o17((Ih, pd)=>{
    "use strict";
    var yf = ae5();
    pd.exports = Fa1;
    Fa1.displayName = "jsonp";
    Fa1.aliases = [];
    function Fa1(e1286) {
        e1286.register(yf), e1286.languages.jsonp = e1286.languages.extend("json", {
            punctuation: /[{}[\]();,.]/
        }), e1286.languages.insertBefore("jsonp", "punctuation", {
            function: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/
        });
    }
    a33(Fa1, "jsonp");
});
var md = o17((Nh, bd)=>{
    "use strict";
    bd.exports = Ua1;
    Ua1.displayName = "jsstacktrace";
    Ua1.aliases = [];
    function Ua1(e1287) {
        e1287.languages.jsstacktrace = {
            "error-message": {
                pattern: /^\S.*/m,
                alias: "string"
            },
            "stack-frame": {
                pattern: /(^[ \t]+)at[ \t].*/m,
                lookbehind: !0,
                inside: {
                    "not-my-code": {
                        pattern: /^at[ \t]+(?!\s)(?:node\.js|<unknown>|.*(?:node_modules|\(<anonymous>\)|\(<unknown>|<anonymous>$|\(internal\/|\(node\.js)).*/m,
                        alias: "comment"
                    },
                    filename: {
                        pattern: /(\bat\s+(?!\s)|\()(?:[a-zA-Z]:)?[^():]+(?=:)/,
                        lookbehind: !0,
                        alias: "url"
                    },
                    function: {
                        pattern: /(\bat\s+(?:new\s+)?)(?!\s)[_$a-zA-Z\xA0-\uFFFF<][.$\w\xA0-\uFFFF<>]*/,
                        lookbehind: !0,
                        inside: {
                            punctuation: /\./
                        }
                    },
                    punctuation: /[()]/,
                    keyword: /\b(?:at|new)\b/,
                    alias: {
                        pattern: /\[(?:as\s+)?(?!\s)[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\]/,
                        alias: "variable"
                    },
                    "line-number": {
                        pattern: /:\d+(?::\d+)?\b/,
                        alias: "number",
                        inside: {
                            punctuation: /:/
                        }
                    }
                }
            }
        };
    }
    a33(Ua1, "jsstacktrace");
});
var Pa1 = o17((wh, fd)=>{
    "use strict";
    fd.exports = Ba1;
    Ba1.displayName = "jsx";
    Ba1.aliases = [];
    function Ba1(e1288) {
        (function(t959) {
            var r692 = t959.util.clone(t959.languages.javascript), n576 = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source, i577 = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source, l283 = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
            function d132(c171, g110) {
                return c171 = c171.replace(/<S>/g, function() {
                    return n576;
                }).replace(/<BRACES>/g, function() {
                    return i577;
                }).replace(/<SPREAD>/g, function() {
                    return l283;
                }), RegExp(c171, g110);
            }
            a33(d132, "re"), l283 = d132(l283).source, t959.languages.jsx = t959.languages.extend("markup", r692), t959.languages.jsx.tag.pattern = d132(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source), t959.languages.jsx.tag.inside.tag.pattern = /^<\/?[^\s>\/]*/, t959.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/, t959.languages.jsx.tag.inside.tag.inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/, t959.languages.jsx.tag.inside.comment = r692.comment, t959.languages.insertBefore("inside", "attr-name", {
                spread: {
                    pattern: d132(/<SPREAD>/.source),
                    inside: t959.languages.jsx
                }
            }, t959.languages.jsx.tag), t959.languages.insertBefore("inside", "special-attr", {
                script: {
                    pattern: d132(/=<BRACES>/.source),
                    alias: "language-javascript",
                    inside: {
                        "script-punctuation": {
                            pattern: /^=(?=\{)/,
                            alias: "punctuation"
                        },
                        rest: t959.languages.jsx
                    }
                }
            }, t959.languages.jsx.tag);
            var u259 = a33(function(c172) {
                return c172 ? typeof c172 == "string" ? c172 : typeof c172.content == "string" ? c172.content : c172.content.map(u259).join("") : "";
            }, "stringifyToken"), p189 = a33(function(c173) {
                for(var g111 = [], b87 = 0; b87 < c173.length; b87++){
                    var m135 = c173[b87], E56 = !1;
                    if (typeof m135 != "string" && (m135.type === "tag" && m135.content[0] && m135.content[0].type === "tag" ? m135.content[0].content[0].content === "</" ? g111.length > 0 && g111[g111.length - 1].tagName === u259(m135.content[0].content[1]) && g111.pop() : m135.content[m135.content.length - 1].content === "/>" || g111.push({
                        tagName: u259(m135.content[0].content[1]),
                        openedBraces: 0
                    }) : g111.length > 0 && m135.type === "punctuation" && m135.content === "{" ? g111[g111.length - 1].openedBraces++ : g111.length > 0 && g111[g111.length - 1].openedBraces > 0 && m135.type === "punctuation" && m135.content === "}" ? g111[g111.length - 1].openedBraces-- : E56 = !0), (E56 || typeof m135 == "string") && g111.length > 0 && g111[g111.length - 1].openedBraces === 0) {
                        var f158 = u259(m135);
                        b87 < c173.length - 1 && (typeof c173[b87 + 1] == "string" || c173[b87 + 1].type === "plain-text") && (f158 += u259(c173[b87 + 1]), c173.splice(b87 + 1, 1)), b87 > 0 && (typeof c173[b87 - 1] == "string" || c173[b87 - 1].type === "plain-text") && (f158 = u259(c173[b87 - 1]) + f158, c173.splice(b87 - 1, 1), b87--), c173[b87] = new t959.Token("plain-text", f158, null, f158);
                    }
                    m135.content && typeof m135.content != "string" && p189(m135.content);
                }
            }, "walkTokens");
            t959.hooks.add("after-tokenize", function(c174) {
                c174.language !== "jsx" && c174.language !== "tsx" || p189(c174.tokens);
            });
        })(e1288);
    }
    a33(Ba1, "jsx");
});
var Sd = o17((vh, Ed)=>{
    "use strict";
    Ed.exports = Ga1;
    Ga1.displayName = "julia";
    Ga1.aliases = [];
    function Ga1(e1289) {
        e1289.languages.julia = {
            comment: {
                pattern: /(^|[^\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,
                lookbehind: !0
            },
            regex: {
                pattern: /r"(?:\\.|[^"\\\r\n])*"[imsx]{0,4}/,
                greedy: !0
            },
            string: {
                pattern: /"""[\s\S]+?"""|(?:\b\w+)?"(?:\\.|[^"\\\r\n])*"|`(?:[^\\`\r\n]|\\.)*`/,
                greedy: !0
            },
            char: {
                pattern: /(^|[^\w'])'(?:\\[^\r\n][^'\r\n]*|[^\\\r\n])'/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+(?:_[\da-f]+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[efp][+-]?\d+(?:_\d+)*)?j?/i,
            operator: /&&|\|\||[-+*^%÷⊻&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,
            punctuation: /::?|[{}[\]();,.?]/,
            constant: /\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\b|[πℯ]/
        };
    }
    a33(Ga1, "julia");
});
var yd = o17((kh, hd)=>{
    "use strict";
    hd.exports = $a1;
    $a1.displayName = "keepalived";
    $a1.aliases = [];
    function $a1(e1290) {
        e1290.languages.keepalived = {
            comment: {
                pattern: /[#!].*/,
                greedy: !0
            },
            string: {
                pattern: /(^|[^\\])(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/,
                lookbehind: !0,
                greedy: !0
            },
            ip: {
                pattern: RegExp(/\b(?:(?:(?:[\da-f]{1,4}:){7}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}:[\da-f]{1,4}|(?:[\da-f]{1,4}:){5}:(?:[\da-f]{1,4}:)?[\da-f]{1,4}|(?:[\da-f]{1,4}:){4}:(?:[\da-f]{1,4}:){0,2}[\da-f]{1,4}|(?:[\da-f]{1,4}:){3}:(?:[\da-f]{1,4}:){0,3}[\da-f]{1,4}|(?:[\da-f]{1,4}:){2}:(?:[\da-f]{1,4}:){0,4}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}<ipv4>|(?:[\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\da-f]{1,4}:){0,5}<ipv4>|[\da-f]{1,4}::(?:[\da-f]{1,4}:){0,5}[\da-f]{1,4}|::(?:[\da-f]{1,4}:){0,6}[\da-f]{1,4}|(?:[\da-f]{1,4}:){1,7}:)(?:\/\d{1,3})?|<ipv4>(?:\/\d{1,2})?)\b/.source.replace(/<ipv4>/g, function() {
                    return /(?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d))/.source;
                }), "i"),
                alias: "number"
            },
            path: {
                pattern: /(\s)\/(?:[^\/\s]+\/)*[^\/\s]*|\b[a-zA-Z]:\\(?:[^\\\s]+\\)*[^\\\s]*/,
                lookbehind: !0,
                alias: "string"
            },
            variable: /\$\{?\w+\}?/,
            email: {
                pattern: /[\w-]+@[\w-]+(?:\.[\w-]{2,3}){1,2}/,
                alias: "string"
            },
            "conditional-configuration": {
                pattern: /@\^?[\w-]+/,
                alias: "variable"
            },
            operator: /=/,
            property: /\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\b/,
            constant: /\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\b/,
            number: {
                pattern: /(^|[^\w.-])-?\d+(?:\.\d+)?/,
                lookbehind: !0
            },
            boolean: /\b(?:false|no|off|on|true|yes)\b/,
            punctuation: /[\{\}]/
        };
    }
    a33($a1, "keepalived");
});
var Ad = o17((Ch, Td)=>{
    "use strict";
    Td.exports = qa1;
    qa1.displayName = "keyman";
    qa1.aliases = [];
    function qa1(e1291) {
        e1291.languages.keyman = {
            comment: {
                pattern: /\bc .*/i,
                greedy: !0
            },
            string: {
                pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
                greedy: !0
            },
            "virtual-key": {
                pattern: /\[\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\s+)*(?:[TKU]_[\w?]+|[A-E]\d\d?|"[^"\r\n]*"|'[^'\r\n]*')\s*\]/i,
                greedy: !0,
                alias: "function"
            },
            "header-keyword": {
                pattern: /&\w+/,
                alias: "bold"
            },
            "header-statement": {
                pattern: /\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\b/i,
                alias: "bold"
            },
            "rule-keyword": {
                pattern: /\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\b/i,
                alias: "keyword"
            },
            "structural-keyword": {
                pattern: /\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\b/i,
                alias: "keyword"
            },
            "compile-target": {
                pattern: /\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,
                alias: "property"
            },
            number: /\b(?:U\+[\dA-F]+|d\d+|x[\da-f]+|\d+)\b/i,
            operator: /[+>\\$]|\.\./,
            punctuation: /[()=,]/
        };
    }
    a33(qa1, "keyman");
});
var Rd = o17((Oh, _d)=>{
    "use strict";
    _d.exports = Ha1;
    Ha1.displayName = "kotlin";
    Ha1.aliases = [
        "kt",
        "kts"
    ];
    function Ha1(e1292) {
        (function(t960) {
            t960.languages.kotlin = t960.languages.extend("clike", {
                keyword: {
                    pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
                    lookbehind: !0
                },
                function: [
                    {
                        pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,
                        greedy: !0
                    },
                    {
                        pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
                operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/
            }), delete t960.languages.kotlin["class-name"];
            var r693 = {
                "interpolation-punctuation": {
                    pattern: /^\$\{?|\}$/,
                    alias: "punctuation"
                },
                expression: {
                    pattern: /[\s\S]+/,
                    inside: t960.languages.kotlin
                }
            };
            t960.languages.insertBefore("kotlin", "string", {
                "string-literal": [
                    {
                        pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
                        alias: "multiline",
                        inside: {
                            interpolation: {
                                pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                                inside: r693
                            },
                            string: /[\s\S]+/
                        }
                    },
                    {
                        pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
                        alias: "singleline",
                        inside: {
                            interpolation: {
                                pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                                lookbehind: !0,
                                inside: r693
                            },
                            string: /[\s\S]+/
                        }
                    }
                ],
                char: {
                    pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,
                    greedy: !0
                }
            }), delete t960.languages.kotlin.string, t960.languages.insertBefore("kotlin", "keyword", {
                annotation: {
                    pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,
                    alias: "builtin"
                }
            }), t960.languages.insertBefore("kotlin", "function", {
                label: {
                    pattern: /\b\w+@|@\w+\b/,
                    alias: "symbol"
                }
            }), t960.languages.kt = t960.languages.kotlin, t960.languages.kts = t960.languages.kotlin;
        })(e1292);
    }
    a33(Ha1, "kotlin");
});
var Nd = o17((Lh, Id)=>{
    "use strict";
    Id.exports = za1;
    za1.displayName = "kumir";
    za1.aliases = [
        "kum"
    ];
    function za1(e1293) {
        (function(t961) {
            var r694 = /\s\x00-\x1f\x22-\x2f\x3a-\x3f\x5b-\x5e\x60\x7b-\x7e/.source;
            function n577(i578, l284) {
                return RegExp(i578.replace(/<nonId>/g, r694), l284);
            }
            a33(n577, "wrapId"), t961.languages.kumir = {
                comment: {
                    pattern: /\|.*/
                },
                prolog: {
                    pattern: /#.*/,
                    greedy: !0
                },
                string: {
                    pattern: /"[^\n\r"]*"|'[^\n\r']*'/,
                    greedy: !0
                },
                boolean: {
                    pattern: n577(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),
                    lookbehind: !0
                },
                "operator-word": {
                    pattern: n577(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),
                    lookbehind: !0,
                    alias: "keyword"
                },
                "system-variable": {
                    pattern: n577(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),
                    lookbehind: !0,
                    alias: "keyword"
                },
                type: [
                    {
                        pattern: n577(/(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\x20*таб)?(?=[<nonId>]|$)/.source),
                        lookbehind: !0,
                        alias: "builtin"
                    },
                    {
                        pattern: n577(/(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source),
                        lookbehind: !0,
                        alias: "important"
                    }
                ],
                keyword: {
                    pattern: n577(/(^|[<nonId>])(?:алг|арг(?:\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\x20+|_)исп)?|кц(?:(?:\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source),
                    lookbehind: !0
                },
                name: {
                    pattern: n577(/(^|[<nonId>])[^\d<nonId>][^<nonId>]*(?:\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source),
                    lookbehind: !0
                },
                number: {
                    pattern: n577(/(^|[<nonId>])(?:\B\$[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?=[<nonId>]|$)/.source, "i"),
                    lookbehind: !0
                },
                punctuation: /:=|[(),:;\[\]]/,
                "operator-char": {
                    pattern: /\*\*?|<[=>]?|>=?|[-+/=]/,
                    alias: "operator"
                }
            }, t961.languages.kum = t961.languages.kumir;
        })(e1293);
    }
    a33(za1, "kumir");
});
var vd = o17((xh, wd)=>{
    "use strict";
    wd.exports = Va1;
    Va1.displayName = "kusto";
    Va1.aliases = [];
    function Va1(e1294) {
        e1294.languages.kusto = {
            comment: {
                pattern: /\/\/.*/,
                greedy: !0
            },
            string: {
                pattern: /```[\s\S]*?```|[hH]?(?:"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\.)*'|@(?:"[^\r\n"]*"|'[^\r\n']*'))/,
                greedy: !0
            },
            verb: {
                pattern: /(\|\s*)[a-z][\w-]*/i,
                lookbehind: !0,
                alias: "keyword"
            },
            command: {
                pattern: /\.[a-z][a-z\d-]*\b/,
                alias: "keyword"
            },
            "class-name": /\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\b/,
            keyword: /\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\s+regex|nulls\s+(?:first|last))(?![\w-])/,
            boolean: /\b(?:false|null|true)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/,
            datetime: [
                {
                    pattern: /\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\s*,\s*)?\d{1,2}(?:\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\s+|-)\d{2}\s+\d{2}:\d{2}(?::\d{2})?(?:\s*(?:\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\d{4}))?\b/,
                    alias: "number"
                },
                {
                    pattern: /[+-]?\b(?:\d{4}-\d{2}-\d{2}(?:[ T]\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)?|\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)Z?/,
                    alias: "number"
                }
            ],
            number: /\b(?:0x[0-9A-Fa-f]+|\d+(?:\.\d+)?(?:[Ee][+-]?\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\b)?|[+-]?\binf\b/,
            operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\.\./,
            punctuation: /[()\[\]{},;.:]/
        };
    }
    a33(Va1, "kusto");
});
var Cd = o17((Dh, kd)=>{
    "use strict";
    kd.exports = Wa1;
    Wa1.displayName = "latex";
    Wa1.aliases = [
        "tex",
        "context"
    ];
    function Wa1(e1295) {
        (function(t962) {
            var r695 = /\\(?:[^a-z()[\]]|[a-z*]+)/i, n578 = {
                "equation-command": {
                    pattern: r695,
                    alias: "regex"
                }
            };
            t962.languages.latex = {
                comment: /%.*/,
                cdata: {
                    pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
                    lookbehind: !0
                },
                equation: [
                    {
                        pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
                        inside: n578,
                        alias: "string"
                    },
                    {
                        pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
                        lookbehind: !0,
                        inside: n578,
                        alias: "string"
                    }
                ],
                keyword: {
                    pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
                    lookbehind: !0
                },
                url: {
                    pattern: /(\\url\{)[^}]+(?=\})/,
                    lookbehind: !0
                },
                headline: {
                    pattern: /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
                    lookbehind: !0,
                    alias: "class-name"
                },
                function: {
                    pattern: r695,
                    alias: "selector"
                },
                punctuation: /[[\]{}&]/
            }, t962.languages.tex = t962.languages.latex, t962.languages.context = t962.languages.latex;
        })(e1295);
    }
    a33(Wa1, "latex");
});
var K11 = o17((Mh, Od)=>{
    "use strict";
    var Tf = w24();
    Od.exports = ja1;
    ja1.displayName = "php";
    ja1.aliases = [];
    function ja1(e1296) {
        e1296.register(Tf), function(t963) {
            var r696 = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/, n579 = [
                {
                    pattern: /\b(?:false|true)\b/i,
                    alias: "boolean"
                },
                {
                    pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,
                    greedy: !0,
                    lookbehind: !0
                },
                {
                    pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,
                    greedy: !0,
                    lookbehind: !0
                },
                /\b(?:null)\b/i,
                /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/
            ], i579 = /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i, l285 = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/, d133 = /[{}\[\](),:;]/;
            t963.languages.php = {
                delimiter: {
                    pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
                    alias: "important"
                },
                comment: r696,
                variable: /\$+(?:\w+\b|(?=\{))/,
                package: {
                    pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\\/
                    }
                },
                "class-name-definition": {
                    pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,
                    lookbehind: !0,
                    alias: "class-name"
                },
                "function-definition": {
                    pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,
                    lookbehind: !0,
                    alias: "function"
                },
                keyword: [
                    {
                        pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
                        alias: "type-casting",
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
                        alias: "type-hint",
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string|void)\b/i,
                        alias: "return-type",
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,
                        alias: "type-declaration",
                        greedy: !0
                    },
                    {
                        pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,
                        alias: "type-declaration",
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /\b(?:parent|self|static)(?=\s*::)/i,
                        alias: "static-context",
                        greedy: !0
                    },
                    {
                        pattern: /(\byield\s+)from\b/i,
                        lookbehind: !0
                    },
                    /\bclass\b/i,
                    {
                        pattern: /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
                        lookbehind: !0
                    }
                ],
                "argument-name": {
                    pattern: /([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i,
                    lookbehind: !0
                },
                "class-name": [
                    {
                        pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i,
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,
                        greedy: !0
                    },
                    {
                        pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
                        alias: "class-name-fully-qualified",
                        greedy: !0,
                        lookbehind: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    },
                    {
                        pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,
                        alias: "class-name-fully-qualified",
                        greedy: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    },
                    {
                        pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
                        alias: "class-name-fully-qualified",
                        greedy: !0,
                        lookbehind: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    },
                    {
                        pattern: /\b[a-z_]\w*(?=\s*\$)/i,
                        alias: "type-declaration",
                        greedy: !0
                    },
                    {
                        pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
                        alias: [
                            "class-name-fully-qualified",
                            "type-declaration"
                        ],
                        greedy: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    },
                    {
                        pattern: /\b[a-z_]\w*(?=\s*::)/i,
                        alias: "static-context",
                        greedy: !0
                    },
                    {
                        pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
                        alias: [
                            "class-name-fully-qualified",
                            "static-context"
                        ],
                        greedy: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    },
                    {
                        pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,
                        alias: "type-hint",
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
                        alias: [
                            "class-name-fully-qualified",
                            "type-hint"
                        ],
                        greedy: !0,
                        lookbehind: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    },
                    {
                        pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,
                        alias: "return-type",
                        greedy: !0,
                        lookbehind: !0
                    },
                    {
                        pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
                        alias: [
                            "class-name-fully-qualified",
                            "return-type"
                        ],
                        greedy: !0,
                        lookbehind: !0,
                        inside: {
                            punctuation: /\\/
                        }
                    }
                ],
                constant: n579,
                function: {
                    pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\\/
                    }
                },
                property: {
                    pattern: /(->\s*)\w+/,
                    lookbehind: !0
                },
                number: i579,
                operator: l285,
                punctuation: d133
            };
            var u260 = {
                pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
                lookbehind: !0,
                inside: t963.languages.php
            }, p190 = [
                {
                    pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
                    alias: "nowdoc-string",
                    greedy: !0,
                    inside: {
                        delimiter: {
                            pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
                            alias: "symbol",
                            inside: {
                                punctuation: /^<<<'?|[';]$/
                            }
                        }
                    }
                },
                {
                    pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
                    alias: "heredoc-string",
                    greedy: !0,
                    inside: {
                        delimiter: {
                            pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
                            alias: "symbol",
                            inside: {
                                punctuation: /^<<<"?|[";]$/
                            }
                        },
                        interpolation: u260
                    }
                },
                {
                    pattern: /`(?:\\[\s\S]|[^\\`])*`/,
                    alias: "backtick-quoted-string",
                    greedy: !0
                },
                {
                    pattern: /'(?:\\[\s\S]|[^\\'])*'/,
                    alias: "single-quoted-string",
                    greedy: !0
                },
                {
                    pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                    alias: "double-quoted-string",
                    greedy: !0,
                    inside: {
                        interpolation: u260
                    }
                }
            ];
            t963.languages.insertBefore("php", "variable", {
                string: p190,
                attribute: {
                    pattern: /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
                    greedy: !0,
                    inside: {
                        "attribute-content": {
                            pattern: /^(#\[)[\s\S]+(?=\]$)/,
                            lookbehind: !0,
                            inside: {
                                comment: r696,
                                string: p190,
                                "attribute-class-name": [
                                    {
                                        pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i,
                                        alias: "class-name",
                                        greedy: !0,
                                        lookbehind: !0
                                    },
                                    {
                                        pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                                        alias: [
                                            "class-name",
                                            "class-name-fully-qualified"
                                        ],
                                        greedy: !0,
                                        lookbehind: !0,
                                        inside: {
                                            punctuation: /\\/
                                        }
                                    }
                                ],
                                constant: n579,
                                number: i579,
                                operator: l285,
                                punctuation: d133
                            }
                        },
                        delimiter: {
                            pattern: /^#\[|\]$/,
                            alias: "punctuation"
                        }
                    }
                }
            }), t963.hooks.add("before-tokenize", function(c175) {
                if (!!/<\?/.test(c175.code)) {
                    var g112 = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
                    t963.languages["markup-templating"].buildPlaceholders(c175, "php", g112);
                }
            }), t963.hooks.add("after-tokenize", function(c176) {
                t963.languages["markup-templating"].tokenizePlaceholders(c176, "php");
            });
        }(e1296);
    }
    a33(ja1, "php");
});
var xd = o17((Fh, Ld)=>{
    "use strict";
    var Af = w24(), _f = K11();
    Ld.exports = Ya1;
    Ya1.displayName = "latte";
    Ya1.aliases = [];
    function Ya1(e1297) {
        e1297.register(Af), e1297.register(_f), function(t964) {
            t964.languages.latte = {
                comment: /^\{\*[\s\S]*/,
                "latte-tag": {
                    pattern: /(^\{(?:\/(?=[a-z]))?)(?:[=_]|[a-z]\w*\b(?!\())/i,
                    lookbehind: !0,
                    alias: "important"
                },
                delimiter: {
                    pattern: /^\{\/?|\}$/,
                    alias: "punctuation"
                },
                php: {
                    pattern: /\S(?:[\s\S]*\S)?/,
                    alias: "language-php",
                    inside: t964.languages.php
                }
            };
            var r697 = t964.languages.extend("markup", {});
            t964.languages.insertBefore("inside", "attr-value", {
                "n-attr": {
                    pattern: /n:[\w-]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+))?/,
                    inside: {
                        "attr-name": {
                            pattern: /^[^\s=]+/,
                            alias: "important"
                        },
                        "attr-value": {
                            pattern: /=[\s\S]+/,
                            inside: {
                                punctuation: [
                                    /^=/,
                                    {
                                        pattern: /^(\s*)["']|["']$/,
                                        lookbehind: !0
                                    }
                                ],
                                php: {
                                    pattern: /\S(?:[\s\S]*\S)?/,
                                    inside: t964.languages.php
                                }
                            }
                        }
                    }
                }
            }, r697.tag), t964.hooks.add("before-tokenize", function(n580) {
                if (n580.language === "latte") {
                    var i580 = /\{\*[\s\S]*?\*\}|\{[^'"\s{}*](?:[^"'/{}]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|\/\*(?:[^*]|\*(?!\/))*\*\/)*\}/g;
                    t964.languages["markup-templating"].buildPlaceholders(n580, "latte", i580), n580.grammar = r697;
                }
            }), t964.hooks.add("after-tokenize", function(n581) {
                t964.languages["markup-templating"].tokenizePlaceholders(n581, "latte");
            });
        }(e1297);
    }
    a33(Ya1, "latte");
});
var Md = o17((Uh, Dd)=>{
    "use strict";
    Dd.exports = Ka1;
    Ka1.displayName = "less";
    Ka1.aliases = [];
    function Ka1(e1298) {
        e1298.languages.less = e1298.languages.extend("css", {
            comment: [
                /\/\*[\s\S]*?\*\//,
                {
                    pattern: /(^|[^\\])\/\/.*/,
                    lookbehind: !0
                }
            ],
            atrule: {
                pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
                inside: {
                    punctuation: /[:()]/
                }
            },
            selector: {
                pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
                inside: {
                    variable: /@+[\w-]+/
                }
            },
            property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
            operator: /[+\-*\/]/
        }), e1298.languages.insertBefore("less", "property", {
            variable: [
                {
                    pattern: /@[\w-]+\s*:/,
                    inside: {
                        punctuation: /:/
                    }
                },
                /@@?[\w-]+/
            ],
            "mixin-usage": {
                pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
                lookbehind: !0,
                alias: "function"
            }
        });
    }
    a33(Ka1, "less");
});
var re5 = o17((Bh, Fd)=>{
    "use strict";
    Fd.exports = Za1;
    Za1.displayName = "scheme";
    Za1.aliases = [];
    function Za1(e1299) {
        (function(t965) {
            t965.languages.scheme = {
                comment: /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
                string: {
                    pattern: /"(?:[^"\\]|\\.)*"/,
                    greedy: !0
                },
                symbol: {
                    pattern: /'[^()\[\]#'\s]+/,
                    greedy: !0
                },
                char: {
                    pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,
                    greedy: !0
                },
                "lambda-parameter": [
                    {
                        pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,
                        lookbehind: !0
                    }
                ],
                keyword: {
                    pattern: /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
                    lookbehind: !0
                },
                builtin: {
                    pattern: /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
                    lookbehind: !0
                },
                operator: {
                    pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,
                    lookbehind: !0
                },
                number: {
                    pattern: RegExp(r698({
                        "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
                        "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
                        "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
                        "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
                        "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
                        "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
                        "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
                        "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
                        "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
                        "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
                        "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source
                    }), "i"),
                    lookbehind: !0
                },
                boolean: {
                    pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,
                    lookbehind: !0
                },
                function: {
                    pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,
                    lookbehind: !0
                },
                identifier: {
                    pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,
                    lookbehind: !0,
                    greedy: !0
                },
                punctuation: /[()\[\]']/
            };
            function r698(n582) {
                for(var i581 in n582)n582[i581] = n582[i581].replace(/<[\w\s]+>/g, function(l286) {
                    return "(?:" + n582[l286].trim() + ")";
                });
                return n582[i581];
            }
            a33(r698, "SortedBNF");
        })(e1299);
    }
    a33(Za1, "scheme");
});
var Bd = o17((Ph, Ud)=>{
    "use strict";
    var Rf = re5();
    Ud.exports = Xa1;
    Xa1.displayName = "lilypond";
    Xa1.aliases = [];
    function Xa1(e1300) {
        e1300.register(Rf), function(t966) {
            for(var r699 = /\((?:[^();"#\\]|\\[\s\S]|;.*(?!.)|"(?:[^"\\]|\\.)*"|#(?:\{(?:(?!#\})[\s\S])*#\}|[^{])|<expr>)*\)/.source, n583 = 5, i582 = 0; i582 < n583; i582++)r699 = r699.replace(/<expr>/g, function() {
                return r699;
            });
            r699 = r699.replace(/<expr>/g, /[^\s\S]/.source);
            var l287 = t966.languages.lilypond = {
                comment: /%(?:(?!\{).*|\{[\s\S]*?%\})/,
                "embedded-scheme": {
                    pattern: RegExp(/(^|[=\s])#(?:"(?:[^"\\]|\\.)*"|[^\s()"]*(?:[^\s()]|<expr>))/.source.replace(/<expr>/g, function() {
                        return r699;
                    }), "m"),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        scheme: {
                            pattern: /^(#)[\s\S]+$/,
                            lookbehind: !0,
                            alias: "language-scheme",
                            inside: {
                                "embedded-lilypond": {
                                    pattern: /#\{[\s\S]*?#\}/,
                                    greedy: !0,
                                    inside: {
                                        punctuation: /^#\{|#\}$/,
                                        lilypond: {
                                            pattern: /[\s\S]+/,
                                            alias: "language-lilypond",
                                            inside: null
                                        }
                                    }
                                },
                                rest: t966.languages.scheme
                            }
                        },
                        punctuation: /#/
                    }
                },
                string: {
                    pattern: /"(?:[^"\\]|\\.)*"/,
                    greedy: !0
                },
                "class-name": {
                    pattern: /(\\new\s+)[\w-]+/,
                    lookbehind: !0
                },
                keyword: {
                    pattern: /\\[a-z][-\w]*/i,
                    inside: {
                        punctuation: /^\\/
                    }
                },
                operator: /[=|]|<<|>>/,
                punctuation: {
                    pattern: /(^|[a-z\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\d))|[_^]\.?|[.!])|[{}()[\]<>^~]|\\[()[\]<>\\!]|--|__/,
                    lookbehind: !0
                },
                number: /\b\d+(?:\/\d+)?\b/
            };
            l287["embedded-scheme"].inside.scheme.inside["embedded-lilypond"].inside.lilypond.inside = l287, t966.languages.ly = l287;
        }(e1300);
    }
    a33(Xa1, "lilypond");
});
var Gd = o17((Gh, Pd)=>{
    "use strict";
    var If = w24();
    Pd.exports = Qa1;
    Qa1.displayName = "liquid";
    Qa1.aliases = [];
    function Qa1(e1301) {
        e1301.register(If), e1301.languages.liquid = {
            comment: {
                pattern: /(^\{%\s*comment\s*%\})[\s\S]+(?=\{%\s*endcomment\s*%\}$)/,
                lookbehind: !0
            },
            delimiter: {
                pattern: /^\{(?:\{\{|[%\{])-?|-?(?:\}\}|[%\}])\}$/,
                alias: "punctuation"
            },
            string: {
                pattern: /"[^"]*"|'[^']*'/,
                greedy: !0
            },
            keyword: /\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\b/,
            object: /\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\b/,
            function: [
                {
                    pattern: /(\|\s*)\w+/,
                    lookbehind: !0,
                    alias: "filter"
                },
                {
                    pattern: /(\.\s*)(?:first|last|size)/,
                    lookbehind: !0
                }
            ],
            boolean: /\b(?:false|nil|true)\b/,
            range: {
                pattern: /\.\./,
                alias: "operator"
            },
            number: /\b\d+(?:\.\d+)?\b/,
            operator: /[!=]=|<>|[<>]=?|[|?:=-]|\b(?:and|contains(?=\s)|or)\b/,
            punctuation: /[.,\[\]()]/,
            empty: {
                pattern: /\bempty\b/,
                alias: "keyword"
            }
        }, e1301.hooks.add("before-tokenize", function(t967) {
            var r700 = /\{%\s*comment\s*%\}[\s\S]*?\{%\s*endcomment\s*%\}|\{(?:%[\s\S]*?%|\{\{[\s\S]*?\}\}|\{[\s\S]*?\})\}/g, n584 = !1;
            e1301.languages["markup-templating"].buildPlaceholders(t967, "liquid", r700, function(i583) {
                var l288 = /^\{%-?\s*(\w+)/.exec(i583);
                if (l288) {
                    var d134 = l288[1];
                    if (d134 === "raw" && !n584) return n584 = !0, !0;
                    if (d134 === "endraw") return n584 = !1, !0;
                }
                return !n584;
            });
        }), e1301.hooks.add("after-tokenize", function(t968) {
            e1301.languages["markup-templating"].tokenizePlaceholders(t968, "liquid");
        });
    }
    a33(Qa1, "liquid");
});
var qd = o17(($h, $d)=>{
    "use strict";
    $d.exports = Ja1;
    Ja1.displayName = "lisp";
    Ja1.aliases = [];
    function Ja1(e1302) {
        (function(t969) {
            function r701(f159) {
                return RegExp(/(\()/.source + "(?:" + f159 + ")" + /(?=[\s\)])/.source);
            }
            a33(r701, "simple_form");
            function n585(f160) {
                return RegExp(/([\s([])/.source + "(?:" + f160 + ")" + /(?=[\s)])/.source);
            }
            a33(n585, "primitive");
            var i584 = /(?!\d)[-+*/~!@$%^=<>{}\w]+/.source, l289 = "&" + i584, d135 = "(\\()", u261 = "(?=\\))", p191 = "(?=\\s)", c177 = /(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source, g113 = {
                heading: {
                    pattern: /;;;.*/,
                    alias: [
                        "comment",
                        "title"
                    ]
                },
                comment: /;.*/,
                string: {
                    pattern: /"(?:[^"\\]|\\.)*"/,
                    greedy: !0,
                    inside: {
                        argument: /[-A-Z]+(?=[.,\s])/,
                        symbol: RegExp("`" + i584 + "'")
                    }
                },
                "quoted-symbol": {
                    pattern: RegExp("#?'" + i584),
                    alias: [
                        "variable",
                        "symbol"
                    ]
                },
                "lisp-property": {
                    pattern: RegExp(":" + i584),
                    alias: "property"
                },
                splice: {
                    pattern: RegExp(",@?" + i584),
                    alias: [
                        "symbol",
                        "variable"
                    ]
                },
                keyword: [
                    {
                        pattern: RegExp(d135 + "(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)" + p191),
                        lookbehind: !0
                    },
                    {
                        pattern: RegExp(d135 + "(?:append|by|collect|concat|do|finally|for|in|return)" + p191),
                        lookbehind: !0
                    }
                ],
                declare: {
                    pattern: r701(/declare/.source),
                    lookbehind: !0,
                    alias: "keyword"
                },
                interactive: {
                    pattern: r701(/interactive/.source),
                    lookbehind: !0,
                    alias: "keyword"
                },
                boolean: {
                    pattern: n585(/nil|t/.source),
                    lookbehind: !0
                },
                number: {
                    pattern: n585(/[-+]?\d+(?:\.\d*)?/.source),
                    lookbehind: !0
                },
                defvar: {
                    pattern: RegExp(d135 + "def(?:const|custom|group|var)\\s+" + i584),
                    lookbehind: !0,
                    inside: {
                        keyword: /^def[a-z]+/,
                        variable: RegExp(i584)
                    }
                },
                defun: {
                    pattern: RegExp(d135 + /(?:cl-)?(?:defmacro|defun\*?)\s+/.source + i584 + /\s+\(/.source + c177 + /\)/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        keyword: /^(?:cl-)?def\S+/,
                        arguments: null,
                        function: {
                            pattern: RegExp("(^\\s)" + i584),
                            lookbehind: !0
                        },
                        punctuation: /[()]/
                    }
                },
                lambda: {
                    pattern: RegExp(d135 + "lambda\\s+\\(\\s*(?:&?" + i584 + "(?:\\s+&?" + i584 + ")*\\s*)?\\)"),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        keyword: /^lambda/,
                        arguments: null,
                        punctuation: /[()]/
                    }
                },
                car: {
                    pattern: RegExp(d135 + i584),
                    lookbehind: !0
                },
                punctuation: [
                    /(?:['`,]?\(|[)\[\]])/,
                    {
                        pattern: /(\s)\.(?=\s)/,
                        lookbehind: !0
                    }
                ]
            }, b88 = {
                "lisp-marker": RegExp(l289),
                varform: {
                    pattern: RegExp(/\(/.source + i584 + /\s+(?=\S)/.source + c177 + /\)/.source),
                    inside: g113
                },
                argument: {
                    pattern: RegExp(/(^|[\s(])/.source + i584),
                    lookbehind: !0,
                    alias: "variable"
                },
                rest: g113
            }, m136 = "\\S+(?:\\s+\\S+)*", E57 = {
                pattern: RegExp(d135 + c177 + u261),
                lookbehind: !0,
                inside: {
                    "rest-vars": {
                        pattern: RegExp("&(?:body|rest)\\s+" + m136),
                        inside: b88
                    },
                    "other-marker-vars": {
                        pattern: RegExp("&(?:aux|optional)\\s+" + m136),
                        inside: b88
                    },
                    keys: {
                        pattern: RegExp("&key\\s+" + m136 + "(?:\\s+&allow-other-keys)?"),
                        inside: b88
                    },
                    argument: {
                        pattern: RegExp(i584),
                        alias: "variable"
                    },
                    punctuation: /[()]/
                }
            };
            g113.lambda.inside.arguments = E57, g113.defun.inside.arguments = t969.util.clone(E57), g113.defun.inside.arguments.inside.sublist = E57, t969.languages.lisp = g113, t969.languages.elisp = g113, t969.languages.emacs = g113, t969.languages["emacs-lisp"] = g113;
        })(e1302);
    }
    a33(Ja1, "lisp");
});
var zd = o17((qh, Hd)=>{
    "use strict";
    Hd.exports = er3;
    er3.displayName = "livescript";
    er3.aliases = [];
    function er3(e1303) {
        e1303.languages.livescript = {
            comment: [
                {
                    pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^\\])#.*/,
                    lookbehind: !0
                }
            ],
            "interpolated-string": {
                pattern: /(^|[^"])("""|")(?:\\[\s\S]|(?!\2)[^\\])*\2(?!")/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    variable: {
                        pattern: /(^|[^\\])#[a-z_](?:-?[a-z]|[\d_])*/m,
                        lookbehind: !0
                    },
                    interpolation: {
                        pattern: /(^|[^\\])#\{[^}]+\}/m,
                        lookbehind: !0,
                        inside: {
                            "interpolation-punctuation": {
                                pattern: /^#\{|\}$/,
                                alias: "variable"
                            }
                        }
                    },
                    string: /[\s\S]+/
                }
            },
            string: [
                {
                    pattern: /('''|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
                    greedy: !0
                },
                {
                    pattern: /<\[[\s\S]*?\]>/,
                    greedy: !0
                },
                /\\[^\s,;\])}]+/
            ],
            regex: [
                {
                    pattern: /\/\/(?:\[[^\r\n\]]*\]|\\.|(?!\/\/)[^\\\[])+\/\/[gimyu]{0,5}/,
                    greedy: !0,
                    inside: {
                        comment: {
                            pattern: /(^|[^\\])#.*/,
                            lookbehind: !0
                        }
                    }
                },
                {
                    pattern: /\/(?:\[[^\r\n\]]*\]|\\.|[^/\\\r\n\[])+\/[gimyu]{0,5}/,
                    greedy: !0
                }
            ],
            keyword: {
                pattern: /(^|(?!-).)\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\b/m,
                lookbehind: !0
            },
            "keyword-operator": {
                pattern: /(^|[^-])\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\b)/m,
                lookbehind: !0,
                alias: "operator"
            },
            boolean: {
                pattern: /(^|[^-])\b(?:false|no|off|on|true|yes)(?!-)\b/m,
                lookbehind: !0
            },
            argument: {
                pattern: /(^|(?!\.&\.)[^&])&(?!&)\d*/m,
                lookbehind: !0,
                alias: "variable"
            },
            number: /\b(?:\d+~[\da-z]+|\d[\d_]*(?:\.\d[\d_]*)?(?:[a-z]\w*)?)/i,
            identifier: /[a-z_](?:-?[a-z]|[\d_])*/i,
            operator: [
                {
                    pattern: /( )\.(?= )/,
                    lookbehind: !0
                },
                /\.(?:[=~]|\.\.?)|\.(?:[&|^]|<<|>>>?)\.|:(?:=|:=?)|&&|\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\+\+?|@@?|%%?|\*\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\^\^?|[\/?]/
            ],
            punctuation: /[(){}\[\]|.,:;`]/
        }, e1303.languages.livescript["interpolated-string"].inside.interpolation.inside.rest = e1303.languages.livescript;
    }
    a33(er3, "livescript");
});
var Wd = o17((Hh, Vd)=>{
    "use strict";
    Vd.exports = tr2;
    tr2.displayName = "llvm";
    tr2.aliases = [];
    function tr2(e1304) {
        (function(t970) {
            t970.languages.llvm = {
                comment: /;.*/,
                string: {
                    pattern: /"[^"]*"/,
                    greedy: !0
                },
                boolean: /\b(?:false|true)\b/,
                variable: /[%@!#](?:(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+|\d+)/i,
                label: /(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+:/i,
                type: {
                    pattern: /\b(?:double|float|fp128|half|i[1-9]\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\b/,
                    alias: "class-name"
                },
                keyword: /\b[a-z_][a-z_0-9]*\b/,
                number: /[+-]?\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-Fa-f]+\b|\b0xK[\dA-Fa-f]{20}\b|\b0x[ML][\dA-Fa-f]{32}\b|\b0xH[\dA-Fa-f]{4}\b/,
                punctuation: /[{}[\];(),.!*=<>]/
            };
        })(e1304);
    }
    a33(tr2, "llvm");
});
var Yd = o17((zh, jd)=>{
    "use strict";
    jd.exports = ar2;
    ar2.displayName = "log";
    ar2.aliases = [];
    function ar2(e1305) {
        e1305.languages.log = {
            string: {
                pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/,
                greedy: !0
            },
            exception: {
                pattern: /(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,
                lookbehind: !0,
                greedy: !0,
                alias: [
                    "javastacktrace",
                    "language-javastacktrace"
                ],
                inside: e1305.languages.javastacktrace || {
                    keyword: /\bat\b/,
                    function: /[a-z_][\w$]*(?=\()/,
                    punctuation: /[.:()]/
                }
            },
            level: [
                {
                    pattern: /\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/,
                    alias: [
                        "error",
                        "important"
                    ]
                },
                {
                    pattern: /\b(?:WARN|WARNING|WRN)\b/,
                    alias: [
                        "warning",
                        "important"
                    ]
                },
                {
                    pattern: /\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/,
                    alias: [
                        "info",
                        "keyword"
                    ]
                },
                {
                    pattern: /\b(?:DBG|DEBUG|FINE)\b/,
                    alias: [
                        "debug",
                        "keyword"
                    ]
                },
                {
                    pattern: /\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/,
                    alias: [
                        "trace",
                        "comment"
                    ]
                }
            ],
            property: {
                pattern: /((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im,
                lookbehind: !0
            },
            separator: {
                pattern: /(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m,
                lookbehind: !0,
                alias: "comment"
            },
            url: /\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,
            email: {
                pattern: /(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/,
                lookbehind: !0,
                alias: "url"
            },
            "ip-address": {
                pattern: /\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/,
                alias: "constant"
            },
            "mac-address": {
                pattern: /\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i,
                alias: "constant"
            },
            domain: {
                pattern: /(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/,
                lookbehind: !0,
                alias: "constant"
            },
            uuid: {
                pattern: /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i,
                alias: "constant"
            },
            hash: {
                pattern: /\b(?:[a-f0-9]{32}){1,2}\b/i,
                alias: "constant"
            },
            "file-path": {
                pattern: /\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,
                lookbehind: !0,
                greedy: !0,
                alias: "string"
            },
            date: {
                pattern: RegExp(/\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source + "|" + /\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source + "|" + /\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/.source, "i"),
                alias: "number"
            },
            time: {
                pattern: /\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/,
                alias: "number"
            },
            boolean: /\b(?:false|null|true)\b/i,
            number: {
                pattern: /(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i,
                lookbehind: !0
            },
            operator: /[;:?<=>~/@!$%&+\-|^(){}*#]/,
            punctuation: /[\[\].,]/
        };
    }
    a33(ar2, "log");
});
var Zd = o17((Vh, Kd)=>{
    "use strict";
    Kd.exports = rr7;
    rr7.displayName = "lolcode";
    rr7.aliases = [];
    function rr7(e1306) {
        e1306.languages.lolcode = {
            comment: [
                /\bOBTW\s[\s\S]*?\sTLDR\b/,
                /\bBTW.+/
            ],
            string: {
                pattern: /"(?::.|[^":])*"/,
                inside: {
                    variable: /:\{[^}]+\}/,
                    symbol: [
                        /:\([a-f\d]+\)/i,
                        /:\[[^\]]+\]/,
                        /:[)>o":]/
                    ]
                },
                greedy: !0
            },
            number: /(?:\B-)?(?:\b\d+(?:\.\d*)?|\B\.\d+)/,
            symbol: {
                pattern: /(^|\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\s|,|$)/,
                lookbehind: !0,
                inside: {
                    keyword: /A(?=\s)/
                }
            },
            label: {
                pattern: /((?:^|\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\w*/,
                lookbehind: !0,
                alias: "string"
            },
            function: {
                pattern: /((?:^|\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\w*/,
                lookbehind: !0
            },
            keyword: [
                {
                    pattern: /(^|\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\?|YA RLY|YR)(?=\s|,|$)/,
                    lookbehind: !0
                },
                /'Z(?=\s|,|$)/
            ],
            boolean: {
                pattern: /(^|\s)(?:FAIL|WIN)(?=\s|,|$)/,
                lookbehind: !0
            },
            variable: {
                pattern: /(^|\s)IT(?=\s|,|$)/,
                lookbehind: !0
            },
            operator: {
                pattern: /(^|\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\s|,|$)/,
                lookbehind: !0
            },
            punctuation: /\.{3}|…|,|!/
        };
    }
    a33(rr7, "lolcode");
});
var Qd = o17((Wh, Xd)=>{
    "use strict";
    Xd.exports = nr2;
    nr2.displayName = "magma";
    nr2.aliases = [];
    function nr2(e1307) {
        e1307.languages.magma = {
            output: {
                pattern: /^(>.*(?:\r(?:\n|(?!\n))|\n))(?!>)(?:.+|(?:\r(?:\n|(?!\n))|\n)(?!>).*)(?:(?:\r(?:\n|(?!\n))|\n)(?!>).*)*/m,
                lookbehind: !0,
                greedy: !0
            },
            comment: {
                pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
                greedy: !0
            },
            string: {
                pattern: /(^|[^\\"])"(?:[^\r\n\\"]|\\.)*"/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\b/,
            boolean: /\b(?:false|true)\b/,
            generator: {
                pattern: /\b[a-z_]\w*(?=\s*<)/i,
                alias: "class-name"
            },
            function: /\b[a-z_]\w*(?=\s*\()/i,
            number: {
                pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
                lookbehind: !0
            },
            operator: /->|[-+*/^~!|#=]|:=|\.\./,
            punctuation: /[()[\]{}<>,;.:]/
        };
    }
    a33(nr2, "magma");
});
var ec1 = o17((jh, Jd)=>{
    "use strict";
    Jd.exports = ir2;
    ir2.displayName = "makefile";
    ir2.aliases = [];
    function ir2(e1308) {
        e1308.languages.makefile = {
            comment: {
                pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
                lookbehind: !0
            },
            string: {
                pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            "builtin-target": {
                pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
                alias: "builtin"
            },
            target: {
                pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
                alias: "symbol",
                inside: {
                    variable: /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
                }
            },
            variable: /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
            keyword: /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
            function: {
                pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
                lookbehind: !0
            },
            operator: /(?:::|[?:+!])?=|[|@]/,
            punctuation: /[:;(){}]/
        };
    }
    a33(ir2, "makefile");
});
var ac1 = o17((Yh, tc1)=>{
    "use strict";
    tc1.exports = or2;
    or2.displayName = "markdown";
    or2.aliases = [
        "md"
    ];
    function or2(e1309) {
        (function(t971) {
            var r702 = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
            function n586(b89) {
                return b89 = b89.replace(/<inner>/g, function() {
                    return r702;
                }), RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + b89 + ")");
            }
            a33(n586, "createInline");
            var i585 = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source, l290 = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function() {
                return i585;
            }), d136 = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
            t971.languages.markdown = t971.languages.extend("markup", {}), t971.languages.insertBefore("markdown", "prolog", {
                "front-matter-block": {
                    pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        punctuation: /^---|---$/,
                        "front-matter": {
                            pattern: /\S+(?:\s+\S+)*/,
                            alias: [
                                "yaml",
                                "language-yaml"
                            ],
                            inside: t971.languages.yaml
                        }
                    }
                },
                blockquote: {
                    pattern: /^>(?:[\t ]*>)*/m,
                    alias: "punctuation"
                },
                table: {
                    pattern: RegExp("^" + l290 + d136 + "(?:" + l290 + ")*", "m"),
                    inside: {
                        "table-data-rows": {
                            pattern: RegExp("^(" + l290 + d136 + ")(?:" + l290 + ")*$"),
                            lookbehind: !0,
                            inside: {
                                "table-data": {
                                    pattern: RegExp(i585),
                                    inside: t971.languages.markdown
                                },
                                punctuation: /\|/
                            }
                        },
                        "table-line": {
                            pattern: RegExp("^(" + l290 + ")" + d136 + "$"),
                            lookbehind: !0,
                            inside: {
                                punctuation: /\||:?-{3,}:?/
                            }
                        },
                        "table-header-row": {
                            pattern: RegExp("^" + l290 + "$"),
                            inside: {
                                "table-header": {
                                    pattern: RegExp(i585),
                                    alias: "important",
                                    inside: t971.languages.markdown
                                },
                                punctuation: /\|/
                            }
                        }
                    }
                },
                code: [
                    {
                        pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
                        lookbehind: !0,
                        alias: "keyword"
                    },
                    {
                        pattern: /^```[\s\S]*?^```$/m,
                        greedy: !0,
                        inside: {
                            "code-block": {
                                pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
                                lookbehind: !0
                            },
                            "code-language": {
                                pattern: /^(```).+/,
                                lookbehind: !0
                            },
                            punctuation: /```/
                        }
                    }
                ],
                title: [
                    {
                        pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
                        alias: "important",
                        inside: {
                            punctuation: /==+$|--+$/
                        }
                    },
                    {
                        pattern: /(^\s*)#.+/m,
                        lookbehind: !0,
                        alias: "important",
                        inside: {
                            punctuation: /^#+|#+$/
                        }
                    }
                ],
                hr: {
                    pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                list: {
                    pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                "url-reference": {
                    pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
                    inside: {
                        variable: {
                            pattern: /^(!?\[)[^\]]+/,
                            lookbehind: !0
                        },
                        string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
                        punctuation: /^[\[\]!:]|[<>]/
                    },
                    alias: "url"
                },
                bold: {
                    pattern: n586(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        content: {
                            pattern: /(^..)[\s\S]+(?=..$)/,
                            lookbehind: !0,
                            inside: {}
                        },
                        punctuation: /\*\*|__/
                    }
                },
                italic: {
                    pattern: n586(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        content: {
                            pattern: /(^.)[\s\S]+(?=.$)/,
                            lookbehind: !0,
                            inside: {}
                        },
                        punctuation: /[*_]/
                    }
                },
                strike: {
                    pattern: n586(/(~~?)(?:(?!~)<inner>)+\2/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        content: {
                            pattern: /(^~~?)[\s\S]+(?=\1$)/,
                            lookbehind: !0,
                            inside: {}
                        },
                        punctuation: /~~?/
                    }
                },
                "code-snippet": {
                    pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
                    lookbehind: !0,
                    greedy: !0,
                    alias: [
                        "code",
                        "keyword"
                    ]
                },
                url: {
                    pattern: n586(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        operator: /^!/,
                        content: {
                            pattern: /(^\[)[^\]]+(?=\])/,
                            lookbehind: !0,
                            inside: {}
                        },
                        variable: {
                            pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
                            lookbehind: !0
                        },
                        url: {
                            pattern: /(^\]\()[^\s)]+/,
                            lookbehind: !0
                        },
                        string: {
                            pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
                            lookbehind: !0
                        }
                    }
                }
            }), [
                "url",
                "bold",
                "italic",
                "strike"
            ].forEach(function(b90) {
                [
                    "url",
                    "bold",
                    "italic",
                    "strike",
                    "code-snippet"
                ].forEach(function(m137) {
                    b90 !== m137 && (t971.languages.markdown[b90].inside.content.inside[m137] = t971.languages.markdown[m137]);
                });
            }), t971.hooks.add("after-tokenize", function(b91) {
                if (b91.language !== "markdown" && b91.language !== "md") return;
                function m138(E58) {
                    if (!(!E58 || typeof E58 == "string")) for(var f161 = 0, h137 = E58.length; f161 < h137; f161++){
                        var S83 = E58[f161];
                        if (S83.type !== "code") {
                            m138(S83.content);
                            continue;
                        }
                        var T48 = S83.content[1], y88 = S83.content[3];
                        if (T48 && y88 && T48.type === "code-language" && y88.type === "code-block" && typeof T48.content == "string") {
                            var A60 = T48.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
                            A60 = (/[a-z][\w-]*/i.exec(A60) || [
                                ""
                            ])[0].toLowerCase();
                            var _30 = "language-" + A60;
                            y88.alias ? typeof y88.alias == "string" ? y88.alias = [
                                y88.alias,
                                _30
                            ] : y88.alias.push(_30) : y88.alias = [
                                _30
                            ];
                        }
                    }
                }
                a33(m138, "walkTokens"), m138(b91.tokens);
            }), t971.hooks.add("wrap", function(b92) {
                if (b92.type === "code-block") {
                    for(var m139 = "", E59 = 0, f162 = b92.classes.length; E59 < f162; E59++){
                        var h138 = b92.classes[E59], S84 = /language-(.+)/.exec(h138);
                        if (S84) {
                            m139 = S84[1];
                            break;
                        }
                    }
                    var T49 = t971.languages[m139];
                    if (T49) b92.content = t971.highlight(g114(b92.content.value), T49, m139);
                    else if (m139 && m139 !== "none" && t971.plugins.autoloader) {
                        var y89 = "md-" + new Date().valueOf() + "-" + Math.floor(Math.random() * 1e16);
                        b92.attributes.id = y89, t971.plugins.autoloader.loadLanguages(m139, function() {
                            var A61 = document.getElementById(y89);
                            A61 && (A61.innerHTML = t971.highlight(A61.textContent, t971.languages[m139], m139));
                        });
                    }
                }
            });
            var u262 = RegExp(t971.languages.markup.tag.pattern.source, "gi"), p192 = {
                amp: "&",
                lt: "<",
                gt: ">",
                quot: '"'
            }, c178 = String.fromCodePoint || String.fromCharCode;
            function g114(b93) {
                var m140 = b93.replace(u262, "");
                return m140 = m140.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(E60, f163) {
                    if (f163 = f163.toLowerCase(), f163[0] === "#") {
                        var h139;
                        return f163[1] === "x" ? h139 = parseInt(f163.slice(2), 16) : h139 = Number(f163.slice(1)), c178(h139);
                    } else {
                        var S85 = p192[f163];
                        return S85 || E60;
                    }
                }), m140;
            }
            a33(g114, "textContent"), t971.languages.md = t971.languages.markdown;
        })(e1309);
    }
    a33(or2, "markdown");
});
var nc1 = o17((Kh, rc1)=>{
    "use strict";
    rc1.exports = sr;
    sr.displayName = "matlab";
    sr.aliases = [];
    function sr(e1310) {
        e1310.languages.matlab = {
            comment: [
                /%\{[\s\S]*?\}%/,
                /%.+/
            ],
            string: {
                pattern: /\B'(?:''|[^'\r\n])*'/,
                greedy: !0
            },
            number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
            keyword: /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
            function: /\b(?!\d)\w+(?=\s*\()/,
            operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
            punctuation: /\.{3}|[.,;\[\](){}!]/
        };
    }
    a33(sr, "matlab");
});
var oc = o17((Zh, ic1)=>{
    "use strict";
    ic1.exports = lr2;
    lr2.displayName = "maxscript";
    lr2.aliases = [];
    function lr2(e1311) {
        (function(t972) {
            var r703 = /\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\b/i;
            t972.languages.maxscript = {
                comment: {
                    pattern: /\/\*[\s\S]*?(?:\*\/|$)|--.*/,
                    greedy: !0
                },
                string: {
                    pattern: /(^|[^"\\@])(?:"(?:[^"\\]|\\[\s\S])*"|@"[^"]*")/,
                    lookbehind: !0,
                    greedy: !0
                },
                path: {
                    pattern: /\$(?:[\w/\\.*?]|'[^']*')*/,
                    greedy: !0,
                    alias: "string"
                },
                "function-call": {
                    pattern: RegExp("((?:" + (/^/.source + "|" + /[;=<>+\-*/^({\[]/.source + "|" + /\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\b/.source) + ")[ 	]*)(?!" + r703.source + ")" + /[a-z_]\w*\b/.source + "(?=[ 	]*(?:" + ("(?!" + r703.source + ")" + /[a-z_]/.source + "|" + /\d|-\.?\d/.source + "|" + /[({'"$@#?]/.source) + "))", "im"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "function"
                },
                "function-definition": {
                    pattern: /(\b(?:fn|function)\s+)\w+\b/i,
                    lookbehind: !0,
                    alias: "function"
                },
                argument: {
                    pattern: /\b[a-z_]\w*(?=:)/i,
                    alias: "attr-name"
                },
                keyword: r703,
                boolean: /\b(?:false|true)\b/,
                time: {
                    pattern: /(^|[^\w.])(?:(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?[msft])+|\d+:\d+(?:\.\d*)?)(?![\w.:])/,
                    lookbehind: !0,
                    alias: "number"
                },
                number: [
                    {
                        pattern: /(^|[^\w.])(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?|0x[a-fA-F0-9]+)(?![\w.:])/,
                        lookbehind: !0
                    },
                    /\b(?:e|pi)\b/
                ],
                constant: /\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\b/,
                color: {
                    pattern: /\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\b/i,
                    alias: "constant"
                },
                operator: /[-+*/<>=!]=?|[&^?]|#(?!\()/,
                punctuation: /[()\[\]{}.:,;]|#(?=\()|\\$/m
            };
        })(e1311);
    }
    a33(lr2, "maxscript");
});
var lc1 = o17((Xh, sc1)=>{
    "use strict";
    sc1.exports = ur2;
    ur2.displayName = "mel";
    ur2.aliases = [];
    function ur2(e1312) {
        e1312.languages.mel = {
            comment: /\/\/.*/,
            code: {
                pattern: /`(?:\\.|[^\\`\r\n])*`/,
                greedy: !0,
                alias: "italic",
                inside: {
                    delimiter: {
                        pattern: /^`|`$/,
                        alias: "punctuation"
                    }
                }
            },
            string: {
                pattern: /"(?:\\.|[^\\"\r\n])*"/,
                greedy: !0
            },
            variable: /\$\w+/,
            number: /\b0x[\da-fA-F]+\b|\b\d+(?:\.\d*)?|\B\.\d+/,
            flag: {
                pattern: /-[^\d\W]\w*/,
                alias: "operator"
            },
            keyword: /\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\b/,
            function: /\b\w+(?=\()|\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\b/,
            operator: [
                /\+[+=]?|-[-=]?|&&|\|\||[<>]=|[*\/!=]=?|[%^]/,
                {
                    pattern: /(^|[^<])<(?!<)/,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^>])>(?!>)/,
                    lookbehind: !0
                }
            ],
            punctuation: /<<|>>|[.,:;?\[\](){}]/
        }, e1312.languages.mel.code.inside.rest = e1312.languages.mel;
    }
    a33(ur2, "mel");
});
var dc1 = o17((Qh, uc)=>{
    "use strict";
    uc.exports = dr;
    dr.displayName = "mermaid";
    dr.aliases = [];
    function dr(e1313) {
        e1313.languages.mermaid = {
            comment: {
                pattern: /%%.*/,
                greedy: !0
            },
            style: {
                pattern: /^([ \t]*(?:classDef|linkStyle|style)[ \t]+[\w$-]+[ \t]+)\w.*[^\s;]/m,
                lookbehind: !0,
                inside: {
                    property: /\b\w[\w-]*(?=[ \t]*:)/,
                    operator: /:/,
                    punctuation: /,/
                }
            },
            "inter-arrow-label": {
                pattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \t]*(?:"[^"\r\n]*"|[^\s".=-](?:[^\r\n.=-]*[^\s.=-])?)[ \t]*(?:\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    arrow: {
                        pattern: /(?:\.+->?|--+[->]|==+[=>])$/,
                        alias: "operator"
                    },
                    label: {
                        pattern: /^([\s\S]{2}[ \t]*)\S(?:[\s\S]*\S)?/,
                        lookbehind: !0,
                        alias: "property"
                    },
                    "arrow-head": {
                        pattern: /^\S+/,
                        alias: [
                            "arrow",
                            "operator"
                        ]
                    }
                }
            },
            arrow: [
                {
                    pattern: /(^|[^{}|o.-])[|}][|o](?:--|\.\.)[|o][|{](?![{}|o.-])/,
                    lookbehind: !0,
                    alias: "operator"
                },
                {
                    pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\.*-)[>ox]?|(?:==+|--+|-\.*-)[>ox]|===+|---+|-\.+-)(?![<>ox.=-])/,
                    lookbehind: !0,
                    alias: "operator"
                },
                {
                    pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,
                    lookbehind: !0,
                    alias: "operator"
                },
                {
                    pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\|?(?:--|\.\.)|(?:--|\.\.)\|?>|--|\.\.)(?![<>|*o.-])/,
                    lookbehind: !0,
                    alias: "operator"
                }
            ],
            label: {
                pattern: /(^|[^|<])\|(?:[^\r\n"|]|"[^"\r\n]*")+\|/,
                lookbehind: !0,
                greedy: !0,
                alias: "property"
            },
            text: {
                pattern: /(?:[(\[{]+|\b>)(?:[^\r\n"()\[\]{}]|"[^"\r\n]*")+(?:[)\]}]+|>)/,
                alias: "string"
            },
            string: {
                pattern: /"[^"\r\n]*"/,
                greedy: !0
            },
            annotation: {
                pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\[\[(?:choice|fork|join)\]\]/i,
                alias: "important"
            },
            keyword: [
                {
                    pattern: /(^[ \t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\w$-])/m,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /(^[ \t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \t]+note)?|loop|opt|par|participant|rect|state|note[ \t]+(?:over|(?:left|right)[ \t]+of))(?![\w$-])/im,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            entity: /#[a-z0-9]+;/,
            operator: {
                pattern: /(\w[ \t]*)&(?=[ \t]*\w)|:::|:/,
                lookbehind: !0
            },
            punctuation: /[(){};]/
        };
    }
    a33(dr, "mermaid");
});
var pc1 = o17((Jh, cc1)=>{
    "use strict";
    cc1.exports = cr;
    cr.displayName = "mizar";
    cr.aliases = [];
    function cr(e1314) {
        e1314.languages.mizar = {
            comment: /::.+/,
            keyword: /@proof\b|\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\b/,
            parameter: {
                pattern: /\$(?:10|\d)/,
                alias: "variable"
            },
            variable: /\b\w+(?=:)/,
            number: /(?:\b|-)\d+\b/,
            operator: /\.\.\.|->|&|\.?=/,
            punctuation: /\(#|#\)|[,:;\[\](){}]/
        };
    }
    a33(cr, "mizar");
});
var bc1 = o17((ey, gc1)=>{
    "use strict";
    gc1.exports = pr2;
    pr2.displayName = "mongodb";
    pr2.aliases = [];
    function pr2(e1315) {
        (function(t973) {
            var r704 = [
                "$eq",
                "$gt",
                "$gte",
                "$in",
                "$lt",
                "$lte",
                "$ne",
                "$nin",
                "$and",
                "$not",
                "$nor",
                "$or",
                "$exists",
                "$type",
                "$expr",
                "$jsonSchema",
                "$mod",
                "$regex",
                "$text",
                "$where",
                "$geoIntersects",
                "$geoWithin",
                "$near",
                "$nearSphere",
                "$all",
                "$elemMatch",
                "$size",
                "$bitsAllClear",
                "$bitsAllSet",
                "$bitsAnyClear",
                "$bitsAnySet",
                "$comment",
                "$elemMatch",
                "$meta",
                "$slice",
                "$currentDate",
                "$inc",
                "$min",
                "$max",
                "$mul",
                "$rename",
                "$set",
                "$setOnInsert",
                "$unset",
                "$addToSet",
                "$pop",
                "$pull",
                "$push",
                "$pullAll",
                "$each",
                "$position",
                "$slice",
                "$sort",
                "$bit",
                "$addFields",
                "$bucket",
                "$bucketAuto",
                "$collStats",
                "$count",
                "$currentOp",
                "$facet",
                "$geoNear",
                "$graphLookup",
                "$group",
                "$indexStats",
                "$limit",
                "$listLocalSessions",
                "$listSessions",
                "$lookup",
                "$match",
                "$merge",
                "$out",
                "$planCacheStats",
                "$project",
                "$redact",
                "$replaceRoot",
                "$replaceWith",
                "$sample",
                "$set",
                "$skip",
                "$sort",
                "$sortByCount",
                "$unionWith",
                "$unset",
                "$unwind",
                "$setWindowFields",
                "$abs",
                "$accumulator",
                "$acos",
                "$acosh",
                "$add",
                "$addToSet",
                "$allElementsTrue",
                "$and",
                "$anyElementTrue",
                "$arrayElemAt",
                "$arrayToObject",
                "$asin",
                "$asinh",
                "$atan",
                "$atan2",
                "$atanh",
                "$avg",
                "$binarySize",
                "$bsonSize",
                "$ceil",
                "$cmp",
                "$concat",
                "$concatArrays",
                "$cond",
                "$convert",
                "$cos",
                "$dateFromParts",
                "$dateToParts",
                "$dateFromString",
                "$dateToString",
                "$dayOfMonth",
                "$dayOfWeek",
                "$dayOfYear",
                "$degreesToRadians",
                "$divide",
                "$eq",
                "$exp",
                "$filter",
                "$first",
                "$floor",
                "$function",
                "$gt",
                "$gte",
                "$hour",
                "$ifNull",
                "$in",
                "$indexOfArray",
                "$indexOfBytes",
                "$indexOfCP",
                "$isArray",
                "$isNumber",
                "$isoDayOfWeek",
                "$isoWeek",
                "$isoWeekYear",
                "$last",
                "$last",
                "$let",
                "$literal",
                "$ln",
                "$log",
                "$log10",
                "$lt",
                "$lte",
                "$ltrim",
                "$map",
                "$max",
                "$mergeObjects",
                "$meta",
                "$min",
                "$millisecond",
                "$minute",
                "$mod",
                "$month",
                "$multiply",
                "$ne",
                "$not",
                "$objectToArray",
                "$or",
                "$pow",
                "$push",
                "$radiansToDegrees",
                "$range",
                "$reduce",
                "$regexFind",
                "$regexFindAll",
                "$regexMatch",
                "$replaceOne",
                "$replaceAll",
                "$reverseArray",
                "$round",
                "$rtrim",
                "$second",
                "$setDifference",
                "$setEquals",
                "$setIntersection",
                "$setIsSubset",
                "$setUnion",
                "$size",
                "$sin",
                "$slice",
                "$split",
                "$sqrt",
                "$stdDevPop",
                "$stdDevSamp",
                "$strcasecmp",
                "$strLenBytes",
                "$strLenCP",
                "$substr",
                "$substrBytes",
                "$substrCP",
                "$subtract",
                "$sum",
                "$switch",
                "$tan",
                "$toBool",
                "$toDate",
                "$toDecimal",
                "$toDouble",
                "$toInt",
                "$toLong",
                "$toObjectId",
                "$toString",
                "$toLower",
                "$toUpper",
                "$trim",
                "$trunc",
                "$type",
                "$week",
                "$year",
                "$zip",
                "$count",
                "$dateAdd",
                "$dateDiff",
                "$dateSubtract",
                "$dateTrunc",
                "$getField",
                "$rand",
                "$sampleRate",
                "$setField",
                "$unsetField",
                "$comment",
                "$explain",
                "$hint",
                "$max",
                "$maxTimeMS",
                "$min",
                "$orderby",
                "$query",
                "$returnKey",
                "$showDiskLoc",
                "$natural"
            ], n587 = [
                "ObjectId",
                "Code",
                "BinData",
                "DBRef",
                "Timestamp",
                "NumberLong",
                "NumberDecimal",
                "MaxKey",
                "MinKey",
                "RegExp",
                "ISODate",
                "UUID"
            ];
            r704 = r704.map(function(l291) {
                return l291.replace("$", "\\$");
            });
            var i586 = "(?:" + r704.join("|") + ")\\b";
            t973.languages.mongodb = t973.languages.extend("javascript", {}), t973.languages.insertBefore("mongodb", "string", {
                property: {
                    pattern: /(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,
                    greedy: !0,
                    inside: {
                        keyword: RegExp(`^(['"])?` + i586 + "(?:\\1)?$")
                    }
                }
            }), t973.languages.mongodb.string.inside = {
                url: {
                    pattern: /https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i,
                    greedy: !0
                },
                entity: {
                    pattern: /\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/,
                    greedy: !0
                }
            }, t973.languages.insertBefore("mongodb", "constant", {
                builtin: {
                    pattern: RegExp("\\b(?:" + n587.join("|") + ")\\b"),
                    alias: "keyword"
                }
            });
        })(e1315);
    }
    a33(pr2, "mongodb");
});
var fc1 = o17((ty, mc)=>{
    "use strict";
    mc.exports = gr;
    gr.displayName = "monkey";
    gr.aliases = [];
    function gr(e1316) {
        e1316.languages.monkey = {
            comment: {
                pattern: /^#Rem\s[\s\S]*?^#End|'.+/im,
                greedy: !0
            },
            string: {
                pattern: /"[^"\r\n]*"/,
                greedy: !0
            },
            preprocessor: {
                pattern: /(^[ \t]*)#.+/m,
                lookbehind: !0,
                greedy: !0,
                alias: "property"
            },
            function: /\b\w+(?=\()/,
            "type-char": {
                pattern: /\b[?%#$]/,
                alias: "class-name"
            },
            number: {
                pattern: /((?:\.\.)?)(?:(?:\b|\B-\.?|\B\.)\d+(?:(?!\.\.)\.\d*)?|\$[\da-f]+)/i,
                lookbehind: !0
            },
            keyword: /\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\b/i,
            operator: /\.\.|<[=>]?|>=?|:?=|(?:[+\-*\/&~|]|\b(?:Mod|Shl|Shr)\b)=?|\b(?:And|Not|Or)\b/i,
            punctuation: /[.,:;()\[\]]/
        };
    }
    a33(gr, "monkey");
});
var Sc1 = o17((ay, Ec1)=>{
    "use strict";
    Ec1.exports = br2;
    br2.displayName = "moonscript";
    br2.aliases = [
        "moon"
    ];
    function br2(e1317) {
        e1317.languages.moonscript = {
            comment: /--.*/,
            string: [
                {
                    pattern: /'[^']*'|\[(=*)\[[\s\S]*?\]\1\]/,
                    greedy: !0
                },
                {
                    pattern: /"[^"]*"/,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /#\{[^{}]*\}/,
                            inside: {
                                moonscript: {
                                    pattern: /(^#\{)[\s\S]+(?=\})/,
                                    lookbehind: !0,
                                    inside: null
                                },
                                "interpolation-punctuation": {
                                    pattern: /#\{|\}/,
                                    alias: "punctuation"
                                }
                            }
                        }
                    }
                }
            ],
            "class-name": [
                {
                    pattern: /(\b(?:class|extends)[ \t]+)\w+/,
                    lookbehind: !0
                },
                /\b[A-Z]\w*/
            ],
            keyword: /\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\b/,
            variable: /@@?\w*/,
            property: {
                pattern: /\b(?!\d)\w+(?=:)|(:)(?!\d)\w+/,
                lookbehind: !0
            },
            function: {
                pattern: /\b(?:_G|_VERSION|assert|collectgarbage|coroutine\.(?:create|resume|running|status|wrap|yield)|debug\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\b/,
                inside: {
                    punctuation: /\./
                }
            },
            boolean: /\b(?:false|true)\b/,
            number: /(?:\B\.\d+|\b\d+\.\d+|\b\d+(?=[eE]))(?:[eE][-+]?\d+)?\b|\b(?:0x[a-fA-F\d]+|\d+)(?:U?LL)?\b/,
            operator: /\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\.\.)=?|[:#^]|\b(?:and|or)\b=?|\b(?:not)\b/,
            punctuation: /[.,()[\]{}\\]/
        }, e1317.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = e1317.languages.moonscript, e1317.languages.moon = e1317.languages.moonscript;
    }
    a33(br2, "moonscript");
});
var yc1 = o17((ry, hc1)=>{
    "use strict";
    hc1.exports = mr2;
    mr2.displayName = "n1ql";
    mr2.aliases = [];
    function mr2(e1318) {
        e1318.languages.n1ql = {
            comment: {
                pattern: /\/\*[\s\S]*?(?:$|\*\/)|--.*/,
                greedy: !0
            },
            string: {
                pattern: /(["'])(?:\\[\s\S]|(?!\1)[^\\]|\1\1)*\1/,
                greedy: !0
            },
            identifier: {
                pattern: /`(?:\\[\s\S]|[^\\`]|``)*`/,
                greedy: !0
            },
            parameter: /\$[\w.]+/,
            keyword: /\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\b/i,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            boolean: /\b(?:FALSE|TRUE)\b/i,
            number: /(?:\b\d+\.|\B\.)\d+e[+\-]?\d+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
            operator: /[-+*\/%]|!=|==?|\|\||<[>=]?|>=?|\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\b/i,
            punctuation: /[;[\](),.{}:]/
        };
    }
    a33(mr2, "n1ql");
});
var Ac1 = o17((ny, Tc1)=>{
    "use strict";
    Tc1.exports = fr2;
    fr2.displayName = "n4js";
    fr2.aliases = [
        "n4jsd"
    ];
    function fr2(e1319) {
        e1319.languages.n4js = e1319.languages.extend("javascript", {
            keyword: /\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/
        }), e1319.languages.insertBefore("n4js", "constant", {
            annotation: {
                pattern: /@+\w+/,
                alias: "operator"
            }
        }), e1319.languages.n4jsd = e1319.languages.n4js;
    }
    a33(fr2, "n4js");
});
var Rc1 = o17((iy, _c1)=>{
    "use strict";
    _c1.exports = Er2;
    Er2.displayName = "nand2tetrisHdl";
    Er2.aliases = [];
    function Er2(e1320) {
        e1320.languages["nand2tetris-hdl"] = {
            comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
            keyword: /\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\b/,
            boolean: /\b(?:false|true)\b/,
            function: /\b[A-Za-z][A-Za-z0-9]*(?=\()/,
            number: /\b\d+\b/,
            operator: /=|\.\./,
            punctuation: /[{}[\];(),:]/
        };
    }
    a33(Er2, "nand2tetrisHdl");
});
var Nc1 = o17((oy, Ic1)=>{
    "use strict";
    Ic1.exports = Sr2;
    Sr2.displayName = "naniscript";
    Sr2.aliases = [];
    function Sr2(e1321) {
        (function(t974) {
            var r705 = /\{[^\r\n\[\]{}]*\}/, n588 = {
                "quoted-string": {
                    pattern: /"(?:[^"\\]|\\.)*"/,
                    alias: "operator"
                },
                "command-param-id": {
                    pattern: /(\s)\w+:/,
                    lookbehind: !0,
                    alias: "property"
                },
                "command-param-value": [
                    {
                        pattern: r705,
                        alias: "selector"
                    },
                    {
                        pattern: /([\t ])\S+/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "operator"
                    },
                    {
                        pattern: /\S(?:.*\S)?/,
                        alias: "operator"
                    }
                ]
            };
            t974.languages.naniscript = {
                comment: {
                    pattern: /^([\t ]*);.*/m,
                    lookbehind: !0
                },
                define: {
                    pattern: /^>.+/m,
                    alias: "tag",
                    inside: {
                        value: {
                            pattern: /(^>\w+[\t ]+)(?!\s)[^{}\r\n]+/,
                            lookbehind: !0,
                            alias: "operator"
                        },
                        key: {
                            pattern: /(^>)\w+/,
                            lookbehind: !0
                        }
                    }
                },
                label: {
                    pattern: /^([\t ]*)#[\t ]*\w+[\t ]*$/m,
                    lookbehind: !0,
                    alias: "regex"
                },
                command: {
                    pattern: /^([\t ]*)@\w+(?=[\t ]|$).*/m,
                    lookbehind: !0,
                    alias: "function",
                    inside: {
                        "command-name": /^@\w+/,
                        expression: {
                            pattern: r705,
                            greedy: !0,
                            alias: "selector"
                        },
                        "command-params": {
                            pattern: /\s*\S[\s\S]*/,
                            inside: n588
                        }
                    }
                },
                "generic-text": {
                    pattern: /(^[ \t]*)[^#@>;\s].*/m,
                    lookbehind: !0,
                    alias: "punctuation",
                    inside: {
                        "escaped-char": /\\[{}\[\]"]/,
                        expression: {
                            pattern: r705,
                            greedy: !0,
                            alias: "selector"
                        },
                        "inline-command": {
                            pattern: /\[[\t ]*\w[^\r\n\[\]]*\]/,
                            greedy: !0,
                            alias: "function",
                            inside: {
                                "command-params": {
                                    pattern: /(^\[[\t ]*\w+\b)[\s\S]+(?=\]$)/,
                                    lookbehind: !0,
                                    inside: n588
                                },
                                "command-param-name": {
                                    pattern: /^(\[[\t ]*)\w+/,
                                    lookbehind: !0,
                                    alias: "name"
                                },
                                "start-stop-char": /[\[\]]/
                            }
                        }
                    }
                }
            }, t974.languages.nani = t974.languages.naniscript, t974.hooks.add("after-tokenize", function(d137) {
                var u263 = d137.tokens;
                u263.forEach(function(p193) {
                    if (typeof p193 != "string" && p193.type === "generic-text") {
                        var c179 = l292(p193);
                        i587(c179) || (p193.type = "bad-line", p193.content = c179);
                    }
                });
            });
            function i587(d138) {
                for(var u264 = "[]{}", p194 = [], c180 = 0; c180 < d138.length; c180++){
                    var g115 = d138[c180], b94 = u264.indexOf(g115);
                    if (b94 !== -1) {
                        if (b94 % 2 === 0) p194.push(b94 + 1);
                        else if (p194.pop() !== b94) return !1;
                    }
                }
                return p194.length === 0;
            }
            a33(i587, "isBracketsBalanced");
            function l292(d139) {
                return typeof d139 == "string" ? d139 : Array.isArray(d139) ? d139.map(l292).join("") : l292(d139.content);
            }
            a33(l292, "getTextContent");
        })(e1321);
    }
    a33(Sr2, "naniscript");
});
var vc1 = o17((sy, wc1)=>{
    "use strict";
    wc1.exports = hr2;
    hr2.displayName = "nasm";
    hr2.aliases = [];
    function hr2(e1322) {
        e1322.languages.nasm = {
            comment: /;.*$/m,
            string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
            label: {
                pattern: /(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m,
                lookbehind: !0,
                alias: "function"
            },
            keyword: [
                /\[?BITS (?:16|32|64)\]?/,
                {
                    pattern: /(^\s*)section\s*[a-z.]+:?/im,
                    lookbehind: !0
                },
                /(?:extern|global)[^;\r\n]*/i,
                /(?:CPU|DEFAULT|FLOAT).*$/m
            ],
            register: {
                pattern: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\b/i,
                alias: "variable"
            },
            number: /(?:\b|(?=\$))(?:0[hx](?:\.[\da-f]+|[\da-f]+(?:\.[\da-f]+)?)(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
            operator: /[\[\]*+\-\/%<>=&|$!]/
        };
    }
    a33(hr2, "nasm");
});
var Cc1 = o17((ly, kc1)=>{
    "use strict";
    kc1.exports = yr2;
    yr2.displayName = "neon";
    yr2.aliases = [];
    function yr2(e1323) {
        e1323.languages.neon = {
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            datetime: {
                pattern: /(^|[[{(=:,\s])\d\d\d\d-\d\d?-\d\d?(?:(?:[Tt]| +)\d\d?:\d\d:\d\d(?:\.\d*)? *(?:Z|[-+]\d\d?(?::?\d\d)?)?)?(?=$|[\]}),\s])/,
                lookbehind: !0,
                alias: "number"
            },
            key: {
                pattern: /(^|[[{(,\s])[^,:=[\]{}()'"\s]+(?=\s*:(?:$|[\]}),\s])|\s*=)/,
                lookbehind: !0,
                alias: "atrule"
            },
            number: {
                pattern: /(^|[[{(=:,\s])[+-]?(?:0x[\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:[eE][+-]?\d+)?)(?=$|[\]}),:=\s])/,
                lookbehind: !0
            },
            boolean: {
                pattern: /(^|[[{(=:,\s])(?:false|no|true|yes)(?=$|[\]}),:=\s])/i,
                lookbehind: !0
            },
            null: {
                pattern: /(^|[[{(=:,\s])(?:null)(?=$|[\]}),:=\s])/i,
                lookbehind: !0,
                alias: "keyword"
            },
            string: {
                pattern: /(^|[[{(=:,\s])(?:('''|""")\r?\n(?:(?:[^\r\n]|\r?\n(?![\t ]*\2))*\r?\n)?[\t ]*\2|'[^'\r\n]*'|"(?:\\.|[^\\"\r\n])*")/,
                lookbehind: !0,
                greedy: !0
            },
            literal: {
                pattern: /(^|[[{(=:,\s])(?:[^#"',:=[\]{}()\s`-]|[:-][^"',=[\]{}()\s])(?:[^,:=\]})(\s]|:(?![\s,\]})]|$)|[ \t]+[^#,:=\]})(\s])*/,
                lookbehind: !0,
                alias: "string"
            },
            punctuation: /[,:=[\]{}()-]/
        };
    }
    a33(yr2, "neon");
});
var Lc1 = o17((uy, Oc1)=>{
    "use strict";
    Oc1.exports = Tr;
    Tr.displayName = "nevod";
    Tr.aliases = [];
    function Tr(e1324) {
        e1324.languages.nevod = {
            comment: /\/\/.*|(?:\/\*[\s\S]*?(?:\*\/|$))/,
            string: {
                pattern: /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))!?\*?/,
                greedy: !0,
                inside: {
                    "string-attrs": /!$|!\*$|\*$/
                }
            },
            namespace: {
                pattern: /(@namespace\s+)[a-zA-Z0-9\-.]+(?=\s*\{)/,
                lookbehind: !0
            },
            pattern: {
                pattern: /(@pattern\s+)?#?[a-zA-Z0-9\-.]+(?:\s*\(\s*(?:~\s*)?[a-zA-Z0-9\-.]+\s*(?:,\s*(?:~\s*)?[a-zA-Z0-9\-.]*)*\))?(?=\s*=)/,
                lookbehind: !0,
                inside: {
                    "pattern-name": {
                        pattern: /^#?[a-zA-Z0-9\-.]+/,
                        alias: "class-name"
                    },
                    fields: {
                        pattern: /\(.*\)/,
                        inside: {
                            "field-name": {
                                pattern: /[a-zA-Z0-9\-.]+/,
                                alias: "variable"
                            },
                            punctuation: /[,()]/,
                            operator: {
                                pattern: /~/,
                                alias: "field-hidden-mark"
                            }
                        }
                    }
                }
            },
            search: {
                pattern: /(@search\s+|#)[a-zA-Z0-9\-.]+(?:\.\*)?(?=\s*;)/,
                alias: "function",
                lookbehind: !0
            },
            keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\b/,
            "standard-pattern": {
                pattern: /\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\b(?:\([a-zA-Z0-9\-.,\s+]*\))?/,
                inside: {
                    "standard-pattern-name": {
                        pattern: /^[a-zA-Z0-9\-.]+/,
                        alias: "builtin"
                    },
                    quantifier: {
                        pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
                        alias: "number"
                    },
                    "standard-pattern-attr": {
                        pattern: /[a-zA-Z0-9\-.]+/,
                        alias: "builtin"
                    },
                    punctuation: /[,()]/
                }
            },
            quantifier: {
                pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
                alias: "number"
            },
            operator: [
                {
                    pattern: /=/,
                    alias: "pattern-def"
                },
                {
                    pattern: /&/,
                    alias: "conjunction"
                },
                {
                    pattern: /~/,
                    alias: "exception"
                },
                {
                    pattern: /\?/,
                    alias: "optionality"
                },
                {
                    pattern: /[[\]]/,
                    alias: "repetition"
                },
                {
                    pattern: /[{}]/,
                    alias: "variation"
                },
                {
                    pattern: /[+_]/,
                    alias: "sequence"
                },
                {
                    pattern: /\.{2,3}/,
                    alias: "span"
                }
            ],
            "field-capture": [
                {
                    pattern: /([a-zA-Z0-9\-.]+\s*\()\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+(?:\s*,\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+)*(?=\s*\))/,
                    lookbehind: !0,
                    inside: {
                        "field-name": {
                            pattern: /[a-zA-Z0-9\-.]+/,
                            alias: "variable"
                        },
                        colon: /:/
                    }
                },
                {
                    pattern: /[a-zA-Z0-9\-.]+\s*:/,
                    inside: {
                        "field-name": {
                            pattern: /[a-zA-Z0-9\-.]+/,
                            alias: "variable"
                        },
                        colon: /:/
                    }
                }
            ],
            punctuation: /[:;,()]/,
            name: /[a-zA-Z0-9\-.]+/
        };
    }
    a33(Tr, "nevod");
});
var Dc1 = o17((dy, xc1)=>{
    "use strict";
    xc1.exports = Ar2;
    Ar2.displayName = "nginx";
    Ar2.aliases = [];
    function Ar2(e1325) {
        (function(t975) {
            var r706 = /\$(?:\w[a-z\d]*(?:_[^\x00-\x1F\s"'\\()$]*)?|\{[^}\s"'\\]+\})/i;
            t975.languages.nginx = {
                comment: {
                    pattern: /(^|[\s{};])#.*/,
                    lookbehind: !0,
                    greedy: !0
                },
                directive: {
                    pattern: /(^|\s)\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:#.*(?!.)|(?![#\s])))*?(?=\s*[;{])/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        string: {
                            pattern: /((?:^|[^\\])(?:\\\\)*)(?:"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*')/,
                            lookbehind: !0,
                            greedy: !0,
                            inside: {
                                escape: {
                                    pattern: /\\["'\\nrt]/,
                                    alias: "entity"
                                },
                                variable: r706
                            }
                        },
                        comment: {
                            pattern: /(\s)#.*/,
                            lookbehind: !0,
                            greedy: !0
                        },
                        keyword: {
                            pattern: /^\S+/,
                            greedy: !0
                        },
                        boolean: {
                            pattern: /(\s)(?:off|on)(?!\S)/,
                            lookbehind: !0
                        },
                        number: {
                            pattern: /(\s)\d+[a-z]*(?!\S)/i,
                            lookbehind: !0
                        },
                        variable: r706
                    }
                },
                punctuation: /[{};]/
            };
        })(e1325);
    }
    a33(Ar2, "nginx");
});
var Fc1 = o17((cy, Mc1)=>{
    "use strict";
    Mc1.exports = _r;
    _r.displayName = "nim";
    _r.aliases = [];
    function _r(e1326) {
        e1326.languages.nim = {
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            string: {
                pattern: /(?:\b(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+)?(?:"""[\s\S]*?"""(?!")|"(?:\\[\s\S]|""|[^"\\])*")/,
                greedy: !0
            },
            char: {
                pattern: /'(?:\\(?:\d+|x[\da-fA-F]{0,2}|.)|[^'])'/,
                greedy: !0
            },
            function: {
                pattern: /(?:(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+|`[^`\r\n]+`)\*?(?:\[[^\]]+\])?(?=\s*\()/,
                greedy: !0,
                inside: {
                    operator: /\*$/
                }
            },
            identifier: {
                pattern: /`[^`\r\n]+`/,
                greedy: !0,
                inside: {
                    punctuation: /`/
                }
            },
            number: /\b(?:0[xXoObB][\da-fA-F_]+|\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:[eE][+-]?\d[\d_]*)?)(?:'?[iuf]\d*)?/,
            keyword: /\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\b/,
            operator: {
                pattern: /(^|[({\[](?=\.\.)|(?![({\[]\.).)(?:(?:[=+\-*\/<>@$~&%|!?^:\\]|\.\.|\.(?![)}\]]))+|\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\b)/m,
                lookbehind: !0
            },
            punctuation: /[({\[]\.|\.[)}\]]|[`(){}\[\],:]/
        };
    }
    a33(_r, "nim");
});
var Bc1 = o17((py, Uc1)=>{
    "use strict";
    Uc1.exports = Rr1;
    Rr1.displayName = "nix";
    Rr1.aliases = [];
    function Rr1(e1327) {
        e1327.languages.nix = {
            comment: {
                pattern: /\/\*[\s\S]*?\*\/|#.*/,
                greedy: !0
            },
            string: {
                pattern: /"(?:[^"\\]|\\[\s\S])*"|''(?:(?!'')[\s\S]|''(?:'|\\|\$\{))*''/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /(^|(?:^|(?!'').)[^\\])\$\{(?:[^{}]|\{[^}]*\})*\}/,
                        lookbehind: !0,
                        inside: null
                    }
                }
            },
            url: [
                /\b(?:[a-z]{3,7}:\/\/)[\w\-+%~\/.:#=?&]+/,
                {
                    pattern: /([^\/])(?:[\w\-+%~.:#=?&]*(?!\/\/)[\w\-+%~\/.:#=?&])?(?!\/\/)\/[\w\-+%~\/.:#=?&]*/,
                    lookbehind: !0
                }
            ],
            antiquotation: {
                pattern: /\$(?=\{)/,
                alias: "important"
            },
            number: /\b\d+\b/,
            keyword: /\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\b/,
            function: /\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\b|\bfoldl'\B/,
            boolean: /\b(?:false|true)\b/,
            operator: /[=!<>]=?|\+\+?|\|\||&&|\/\/|->?|[?@]/,
            punctuation: /[{}()[\].,:;]/
        }, e1327.languages.nix.string.inside.interpolation.inside = e1327.languages.nix;
    }
    a33(Rr1, "nix");
});
var Gc1 = o17((gy, Pc1)=>{
    "use strict";
    Pc1.exports = Ir2;
    Ir2.displayName = "nsis";
    Ir2.aliases = [];
    function Ir2(e1328) {
        e1328.languages.nsis = {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|[#;].*)/,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            keyword: {
                pattern: /(^[\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\b/m,
                lookbehind: !0
            },
            property: /\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/,
            constant: /\$\{[!\w\.:\^-]+\}|\$\([!\w\.:\^-]+\)/,
            variable: /\$\w[\w\.]*/,
            number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
            operator: /--?|\+\+?|<=?|>=?|==?=?|&&?|\|\|?|[?*\/~^%]/,
            punctuation: /[{}[\];(),.:]/,
            important: {
                pattern: /(^[\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\b/im,
                lookbehind: !0
            }
        };
    }
    a33(Ir2, "nsis");
});
var qc1 = o17((by, $c1)=>{
    "use strict";
    var Nf = x39();
    $c1.exports = Nr;
    Nr.displayName = "objectivec";
    Nr.aliases = [
        "objc"
    ];
    function Nr(e1329) {
        e1329.register(Nf), e1329.languages.objectivec = e1329.languages.extend("c", {
            string: {
                pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
                greedy: !0
            },
            keyword: /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
            operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
        }), delete e1329.languages.objectivec["class-name"], e1329.languages.objc = e1329.languages.objectivec;
    }
    a33(Nr, "objectivec");
});
var zc1 = o17((my, Hc1)=>{
    "use strict";
    Hc1.exports = wr2;
    wr2.displayName = "ocaml";
    wr2.aliases = [];
    function wr2(e1330) {
        e1330.languages.ocaml = {
            comment: {
                pattern: /\(\*[\s\S]*?\*\)/,
                greedy: !0
            },
            char: {
                pattern: /'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,
                greedy: !0
            },
            string: [
                {
                    pattern: /"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,
                    greedy: !0
                },
                {
                    pattern: /\{([a-z_]*)\|[\s\S]*?\|\1\}/,
                    greedy: !0
                }
            ],
            number: [
                /\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,
                /\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,
                /\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i
            ],
            directive: {
                pattern: /\B#\w+/,
                alias: "property"
            },
            label: {
                pattern: /\B~\w+/,
                alias: "property"
            },
            "type-variable": {
                pattern: /\B'\w+/,
                alias: "function"
            },
            variant: {
                pattern: /`\w+/,
                alias: "symbol"
            },
            keyword: /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
            boolean: /\b(?:false|true)\b/,
            "operator-like-punctuation": {
                pattern: /\[[<>|]|[>|]\]|\{<|>\}/,
                alias: "punctuation"
            },
            operator: /\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
            punctuation: /;;|::|[(){}\[\].,:;#]|\b_\b/
        };
    }
    a33(wr2, "ocaml");
});
var Wc1 = o17((fy, Vc1)=>{
    "use strict";
    var wf = x39();
    Vc1.exports = vr1;
    vr1.displayName = "opencl";
    vr1.aliases = [];
    function vr1(e1331) {
        e1331.register(wf), function(t976) {
            t976.languages.opencl = t976.languages.extend("c", {
                keyword: /\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\b/,
                number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[fuhl]{0,4}/i,
                boolean: /\b(?:false|true)\b/,
                "constant-opencl-kernel": {
                    pattern: /\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\b/,
                    alias: "constant"
                }
            }), t976.languages.insertBefore("opencl", "class-name", {
                "builtin-type": {
                    pattern: /\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\b/,
                    alias: "keyword"
                }
            });
            var r707 = {
                "type-opencl-host": {
                    pattern: /\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\b/,
                    alias: "keyword"
                },
                "boolean-opencl-host": {
                    pattern: /\bCL_(?:FALSE|TRUE)\b/,
                    alias: "boolean"
                },
                "constant-opencl-host": {
                    pattern: /\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\b/,
                    alias: "constant"
                },
                "function-opencl-host": {
                    pattern: /\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\b/,
                    alias: "function"
                }
            };
            t976.languages.insertBefore("c", "keyword", r707), t976.languages.cpp && (r707["type-opencl-host-cpp"] = {
                pattern: /\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\b/,
                alias: "keyword"
            }, t976.languages.insertBefore("cpp", "keyword", r707));
        }(e1331);
    }
    a33(vr1, "opencl");
});
var Yc1 = o17((Ey, jc1)=>{
    "use strict";
    jc1.exports = kr1;
    kr1.displayName = "openqasm";
    kr1.aliases = [
        "qasm"
    ];
    function kr1(e1332) {
        e1332.languages.openqasm = {
            comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
            string: {
                pattern: /"[^"\r\n\t]*"|'[^'\r\n\t]*'/,
                greedy: !0
            },
            keyword: /\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\b|#pragma\b/,
            "class-name": /\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\b/,
            function: /\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\b(?=\s*\()/,
            constant: /\b(?:euler|pi|tau)\b|π|𝜏|ℇ/,
            number: {
                pattern: /(^|[^.\w$])(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?(?:dt|ns|us|µs|ms|s)?/i,
                lookbehind: !0
            },
            operator: /->|>>=?|<<=?|&&|\|\||\+\+|--|[!=<>&|~^+\-*/%]=?|@/,
            punctuation: /[(){}\[\];,:.]/
        }, e1332.languages.qasm = e1332.languages.openqasm;
    }
    a33(kr1, "openqasm");
});
var Zc1 = o17((Sy, Kc1)=>{
    "use strict";
    Kc1.exports = Cr1;
    Cr1.displayName = "oz";
    Cr1.aliases = [];
    function Cr1(e1333) {
        e1333.languages.oz = {
            comment: {
                pattern: /\/\*[\s\S]*?\*\/|%.*/,
                greedy: !0
            },
            string: {
                pattern: /"(?:[^"\\]|\\[\s\S])*"/,
                greedy: !0
            },
            atom: {
                pattern: /'(?:[^'\\]|\\[\s\S])*'/,
                greedy: !0,
                alias: "builtin"
            },
            keyword: /\$|\[\]|\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\b/,
            function: [
                /\b[a-z][A-Za-z\d]*(?=\()/,
                {
                    pattern: /(\{)[A-Z][A-Za-z\d]*\b/,
                    lookbehind: !0
                }
            ],
            number: /\b(?:0[bx][\da-f]+|\d+(?:\.\d*)?(?:e~?\d+)?)\b|&(?:[^\\]|\\(?:\d{3}|.))/i,
            variable: /`(?:[^`\\]|\\.)+`/,
            "attr-name": /\b\w+(?=[ \t]*:(?![:=]))/,
            operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\=:?|!!?|[|#+\-*\/,~^@]|\b(?:andthen|div|mod|orelse)\b/,
            punctuation: /[\[\](){}.:;?]/
        };
    }
    a33(Cr1, "oz");
});
var Qc1 = o17((hy, Xc1)=>{
    "use strict";
    Xc1.exports = Or;
    Or.displayName = "parigp";
    Or.aliases = [];
    function Or(e1334) {
        e1334.languages.parigp = {
            comment: /\/\*[\s\S]*?\*\/|\\\\.*/,
            string: {
                pattern: /"(?:[^"\\\r\n]|\\.)*"/,
                greedy: !0
            },
            keyword: function() {
                var t977 = [
                    "breakpoint",
                    "break",
                    "dbg_down",
                    "dbg_err",
                    "dbg_up",
                    "dbg_x",
                    "forcomposite",
                    "fordiv",
                    "forell",
                    "forpart",
                    "forprime",
                    "forstep",
                    "forsubgroup",
                    "forvec",
                    "for",
                    "iferr",
                    "if",
                    "local",
                    "my",
                    "next",
                    "return",
                    "until",
                    "while"
                ];
                return t977 = t977.map(function(r708) {
                    return r708.split("").join(" *");
                }).join("|"), RegExp("\\b(?:" + t977 + ")\\b");
            }(),
            function: /\b\w(?:[\w ]*\w)?(?= *\()/,
            number: {
                pattern: /((?:\. *\. *)?)(?:\b\d(?: *\d)*(?: *(?!\. *\.)\.(?: *\d)*)?|\. *\d(?: *\d)*)(?: *e *(?:[+-] *)?\d(?: *\d)*)?/i,
                lookbehind: !0
            },
            operator: /\. *\.|[*\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\(?: *\/)?(?: *=)?|&(?: *&)?|\| *\||['#~^]/,
            punctuation: /[\[\]{}().,:;|]/
        };
    }
    a33(Or, "parigp");
});
var ep = o17((yy, Jc1)=>{
    "use strict";
    Jc1.exports = Lr2;
    Lr2.displayName = "parser";
    Lr2.aliases = [];
    function Lr2(e1335) {
        (function(t978) {
            var r709 = t978.languages.parser = t978.languages.extend("markup", {
                keyword: {
                    pattern: /(^|[^^])(?:\^(?:case|eval|for|if|switch|throw)\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\b)/,
                    lookbehind: !0
                },
                variable: {
                    pattern: /(^|[^^])\B\$(?:\w+|(?=[.{]))(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\.|:+/
                    }
                },
                function: {
                    pattern: /(^|[^^])\B[@^]\w+(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
                    lookbehind: !0,
                    inside: {
                        keyword: {
                            pattern: /(^@)(?:GET_|SET_)/,
                            lookbehind: !0
                        },
                        punctuation: /\.|:+/
                    }
                },
                escape: {
                    pattern: /\^(?:[$^;@()\[\]{}"':]|#[a-f\d]*)/i,
                    alias: "builtin"
                },
                punctuation: /[\[\](){};]/
            });
            r709 = t978.languages.insertBefore("parser", "keyword", {
                "parser-comment": {
                    pattern: /(\s)#.*/,
                    lookbehind: !0,
                    alias: "comment"
                },
                expression: {
                    pattern: /(^|[^^])\((?:[^()]|\((?:[^()]|\((?:[^()])*\))*\))*\)/,
                    greedy: !0,
                    lookbehind: !0,
                    inside: {
                        string: {
                            pattern: /(^|[^^])(["'])(?:(?!\2)[^^]|\^[\s\S])*\2/,
                            lookbehind: !0
                        },
                        keyword: r709.keyword,
                        variable: r709.variable,
                        function: r709.function,
                        boolean: /\b(?:false|true)\b/,
                        number: /\b(?:0x[a-f\d]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?)\b/i,
                        escape: r709.escape,
                        operator: /[~+*\/\\%]|!(?:\|\|?|=)?|&&?|\|\|?|==|<[<=]?|>[>=]?|-[fd]?|\b(?:def|eq|ge|gt|in|is|le|lt|ne)\b/,
                        punctuation: r709.punctuation
                    }
                }
            }), t978.languages.insertBefore("inside", "punctuation", {
                expression: r709.expression,
                keyword: r709.keyword,
                variable: r709.variable,
                function: r709.function,
                escape: r709.escape,
                "parser-punctuation": {
                    pattern: r709.punctuation,
                    alias: "punctuation"
                }
            }, r709.tag.inside["attr-value"]);
        })(e1335);
    }
    a33(Lr2, "parser");
});
var ap = o17((Ty, tp)=>{
    "use strict";
    tp.exports = xr2;
    xr2.displayName = "pascal";
    xr2.aliases = [
        "objectpascal"
    ];
    function xr2(e1336) {
        e1336.languages.pascal = {
            directive: {
                pattern: /\{\$[\s\S]*?\}/,
                greedy: !0,
                alias: [
                    "marco",
                    "property"
                ]
            },
            comment: {
                pattern: /\(\*[\s\S]*?\*\)|\{[\s\S]*?\}|\/\/.*/,
                greedy: !0
            },
            string: {
                pattern: /(?:'(?:''|[^'\r\n])*'(?!')|#[&$%]?[a-f\d]+)+|\^[a-z]/i,
                greedy: !0
            },
            asm: {
                pattern: /(\basm\b)[\s\S]+?(?=\bend\s*[;[])/i,
                lookbehind: !0,
                greedy: !0,
                inside: null
            },
            keyword: [
                {
                    pattern: /(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^&])\b(?:dispose|exit|false|new|true)\b/i,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,
                    lookbehind: !0
                }
            ],
            number: [
                /(?:[&%]\d+|\$[a-f\d]+)/i,
                /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i
            ],
            operator: [
                /\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/,
                {
                    pattern: /(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/,
                    lookbehind: !0
                }
            ],
            punctuation: /\(\.|\.\)|[()\[\]:;,.]/
        }, e1336.languages.pascal.asm.inside = e1336.languages.extend("pascal", {
            asm: void 0,
            keyword: void 0,
            operator: void 0
        }), e1336.languages.objectpascal = e1336.languages.pascal;
    }
    a33(xr2, "pascal");
});
var np = o17((Ay, rp)=>{
    "use strict";
    rp.exports = Dr;
    Dr.displayName = "pascaligo";
    Dr.aliases = [];
    function Dr(e1337) {
        (function(t979) {
            var r710 = /\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\)/.source, n589 = /(?:\b\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function() {
                return r710;
            }), i588 = t979.languages.pascaligo = {
                comment: /\(\*[\s\S]+?\*\)|\/\/.*/,
                string: {
                    pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1|\^[a-z]/i,
                    greedy: !0
                },
                "class-name": [
                    {
                        pattern: RegExp(/(\btype\s+\w+\s+is\s+)<type>/.source.replace(/<type>/g, function() {
                            return n589;
                        }), "i"),
                        lookbehind: !0,
                        inside: null
                    },
                    {
                        pattern: RegExp(/<type>(?=\s+is\b)/.source.replace(/<type>/g, function() {
                            return n589;
                        }), "i"),
                        inside: null
                    },
                    {
                        pattern: RegExp(/(:\s*)<type>/.source.replace(/<type>/g, function() {
                            return n589;
                        })),
                        lookbehind: !0,
                        inside: null
                    }
                ],
                keyword: {
                    pattern: /(^|[^&])\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\b/i,
                    lookbehind: !0
                },
                boolean: {
                    pattern: /(^|[^&])\b(?:False|True)\b/i,
                    lookbehind: !0
                },
                builtin: {
                    pattern: /(^|[^&])\b(?:bool|int|list|map|nat|record|string|unit)\b/i,
                    lookbehind: !0
                },
                function: /\b\w+(?=\s*\()/,
                number: [
                    /%[01]+|&[0-7]+|\$[a-f\d]+/i,
                    /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?(?:mtz|n)?/i
                ],
                operator: /->|=\/=|\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=|]|\b(?:and|mod|or)\b/,
                punctuation: /\(\.|\.\)|[()\[\]:;,.{}]/
            }, l293 = [
                "comment",
                "keyword",
                "builtin",
                "operator",
                "punctuation"
            ].reduce(function(d140, u265) {
                return d140[u265] = i588[u265], d140;
            }, {});
            i588["class-name"].forEach(function(d141) {
                d141.inside = l293;
            });
        })(e1337);
    }
    a33(Dr, "pascaligo");
});
var op = o17((_y, ip)=>{
    "use strict";
    ip.exports = Mr;
    Mr.displayName = "pcaxis";
    Mr.aliases = [
        "px"
    ];
    function Mr(e1338) {
        e1338.languages.pcaxis = {
            string: /"[^"]*"/,
            keyword: {
                pattern: /((?:^|;)\s*)[-A-Z\d]+(?:\s*\[[-\w]+\])?(?:\s*\("[^"]*"(?:,\s*"[^"]*")*\))?(?=\s*=)/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    keyword: /^[-A-Z\d]+/,
                    language: {
                        pattern: /^(\s*)\[[-\w]+\]/,
                        lookbehind: !0,
                        inside: {
                            punctuation: /^\[|\]$/,
                            property: /[-\w]+/
                        }
                    },
                    "sub-key": {
                        pattern: /^(\s*)\S[\s\S]*/,
                        lookbehind: !0,
                        inside: {
                            parameter: {
                                pattern: /"[^"]*"/,
                                alias: "property"
                            },
                            punctuation: /^\(|\)$|,/
                        }
                    }
                }
            },
            operator: /=/,
            tlist: {
                pattern: /TLIST\s*\(\s*\w+(?:(?:\s*,\s*"[^"]*")+|\s*,\s*"[^"]*"-"[^"]*")?\s*\)/,
                greedy: !0,
                inside: {
                    function: /^TLIST/,
                    property: {
                        pattern: /^(\s*\(\s*)\w+/,
                        lookbehind: !0
                    },
                    string: /"[^"]*"/,
                    punctuation: /[(),]/,
                    operator: /-/
                }
            },
            punctuation: /[;,]/,
            number: {
                pattern: /(^|\s)\d+(?:\.\d+)?(?!\S)/,
                lookbehind: !0
            },
            boolean: /NO|YES/
        }, e1338.languages.px = e1338.languages.pcaxis;
    }
    a33(Mr, "pcaxis");
});
var lp = o17((Ry, sp)=>{
    "use strict";
    sp.exports = Fr2;
    Fr2.displayName = "peoplecode";
    Fr2.aliases = [
        "pcode"
    ];
    function Fr2(e1339) {
        e1339.languages.peoplecode = {
            comment: RegExp([
                /\/\*[\s\S]*?\*\//.source,
                /\bREM[^;]*;/.source,
                /<\*(?:[^<*]|\*(?!>)|<(?!\*)|<\*(?:(?!\*>)[\s\S])*\*>)*\*>/.source,
                /\/\+[\s\S]*?\+\//.source
            ].join("|")),
            string: {
                pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
                greedy: !0
            },
            variable: /%\w+/,
            "function-definition": {
                pattern: /((?:^|[^\w-])(?:function|method)\s+)\w+/i,
                lookbehind: !0,
                alias: "function"
            },
            "class-name": {
                pattern: /((?:^|[^-\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\s+)\w+(?::\w+)*/i,
                lookbehind: !0,
                inside: {
                    punctuation: /:/
                }
            },
            keyword: /\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\b/i,
            "operator-keyword": {
                pattern: /\b(?:and|not|or)\b/i,
                alias: "operator"
            },
            function: /[_a-z]\w*(?=\s*\()/i,
            boolean: /\b(?:false|true)\b/i,
            number: /\b\d+(?:\.\d+)?\b/,
            operator: /<>|[<>]=?|!=|\*\*|[-+*/|=@]/,
            punctuation: /[:.;,()[\]]/
        }, e1339.languages.pcode = e1339.languages.peoplecode;
    }
    a33(Fr2, "peoplecode");
});
var dp = o17((Iy, up)=>{
    "use strict";
    up.exports = Ur;
    Ur.displayName = "perl";
    Ur.aliases = [];
    function Ur(e1340) {
        (function(t980) {
            var r711 = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
            t980.languages.perl = {
                comment: [
                    {
                        pattern: /(^\s*)=\w[\s\S]*?=cut.*/m,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /(^|[^\\$])#.*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                string: [
                    {
                        pattern: RegExp(/\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                            /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                            /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                            r711
                        ].join("|") + ")"),
                        greedy: !0
                    },
                    {
                        pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,
                        greedy: !0
                    },
                    {
                        pattern: /'(?:[^'\\\r\n]|\\.)*'/,
                        greedy: !0
                    }
                ],
                regex: [
                    {
                        pattern: RegExp(/\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                            /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                            /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                            r711
                        ].join("|") + ")" + /[msixpodualngc]*/.source),
                        greedy: !0
                    },
                    {
                        pattern: RegExp(/(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                            /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                            /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
                            r711 + /\s*/.source + r711
                        ].join("|") + ")" + /[msixpodualngcer]*/.source),
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
                        greedy: !0
                    }
                ],
                variable: [
                    /[&*$@%]\{\^[A-Z]+\}/,
                    /[&*$@%]\^[A-Z_]/,
                    /[&*$@%]#?(?=\{)/,
                    /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
                    /[&*$@%]\d+/,
                    /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/
                ],
                filehandle: {
                    pattern: /<(?![<=])\S*?>|\b_\b/,
                    alias: "symbol"
                },
                "v-string": {
                    pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,
                    alias: "string"
                },
                function: {
                    pattern: /(\bsub[ \t]+)\w+/,
                    lookbehind: !0
                },
                keyword: /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
                number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
                operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
                punctuation: /[{}[\];(),:]/
            };
        })(e1340);
    }
    a33(Ur, "perl");
});
var pp = o17((Ny, cp)=>{
    "use strict";
    var vf = K11();
    cp.exports = Br;
    Br.displayName = "phpExtras";
    Br.aliases = [];
    function Br(e1341) {
        e1341.register(vf), e1341.languages.insertBefore("php", "variable", {
            this: {
                pattern: /\$this\b/,
                alias: "keyword"
            },
            global: /\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\b/,
            scope: {
                pattern: /\b[\w\\]+::/,
                inside: {
                    keyword: /\b(?:parent|self|static)\b/,
                    punctuation: /::|\\/
                }
            }
        });
    }
    a33(Br, "phpExtras");
});
var bp = o17((wy, gp)=>{
    "use strict";
    var kf = K11(), Cf = Y5();
    gp.exports = Pr;
    Pr.displayName = "phpdoc";
    Pr.aliases = [];
    function Pr(e1342) {
        e1342.register(kf), e1342.register(Cf), function(t981) {
            var r712 = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;
            t981.languages.phpdoc = t981.languages.extend("javadoclike", {
                parameter: {
                    pattern: RegExp("(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:" + r712 + "\\s+)?)\\$\\w+"),
                    lookbehind: !0
                }
            }), t981.languages.insertBefore("phpdoc", "keyword", {
                "class-name": [
                    {
                        pattern: RegExp("(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)" + r712),
                        lookbehind: !0,
                        inside: {
                            keyword: /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
                            punctuation: /[|\\[\]()]/
                        }
                    }
                ]
            }), t981.languages.javadoclike.addSupport("php", t981.languages.phpdoc);
        }(e1342);
    }
    a33(Pr, "phpdoc");
});
var fp = o17((vy, mp)=>{
    "use strict";
    var Of = X11();
    mp.exports = Gr;
    Gr.displayName = "plsql";
    Gr.aliases = [];
    function Gr(e1343) {
        e1343.register(Of), e1343.languages.plsql = e1343.languages.extend("sql", {
            comment: {
                pattern: /\/\*[\s\S]*?\*\/|--.*/,
                greedy: !0
            },
            keyword: /\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\b/i,
            operator: /:=?|=>|[<>^~!]=|\.\.|\|\||\*\*|[-+*/%<>=@]/
        }), e1343.languages.insertBefore("plsql", "operator", {
            label: {
                pattern: /<<\s*\w+\s*>>/,
                alias: "symbol"
            }
        });
    }
    a33(Gr, "plsql");
});
var Sp = o17((ky, Ep)=>{
    "use strict";
    Ep.exports = $r;
    $r.displayName = "powerquery";
    $r.aliases = [];
    function $r(e1344) {
        e1344.languages.powerquery = {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                lookbehind: !0,
                greedy: !0
            },
            "quoted-identifier": {
                pattern: /#"(?:[^"\r\n]|"")*"(?!")/,
                greedy: !0
            },
            string: {
                pattern: /(?:#!)?"(?:[^"\r\n]|"")*"(?!")/,
                greedy: !0
            },
            constant: [
                /\bDay\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\b/,
                /\bTraceLevel\.(?:Critical|Error|Information|Verbose|Warning)\b/,
                /\bOccurrence\.(?:All|First|Last)\b/,
                /\bOrder\.(?:Ascending|Descending)\b/,
                /\bRoundingMode\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\b/,
                /\bMissingField\.(?:Error|Ignore|UseNull)\b/,
                /\bQuoteStyle\.(?:Csv|None)\b/,
                /\bJoinKind\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\b/,
                /\bGroupKind\.(?:Global|Local)\b/,
                /\bExtraValues\.(?:Error|Ignore|List)\b/,
                /\bJoinAlgorithm\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\b/,
                /\bJoinSide\.(?:Left|Right)\b/,
                /\bPrecision\.(?:Decimal|Double)\b/,
                /\bRelativePosition\.From(?:End|Start)\b/,
                /\bTextEncoding\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\b/,
                /\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\.Type\b/,
                /\bnull\b/
            ],
            boolean: /\b(?:false|true)\b/,
            keyword: /\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\b/,
            function: {
                pattern: /(^|[^#\w.])[a-z_][\w.]*(?=\s*\()/i,
                lookbehind: !0
            },
            "data-type": {
                pattern: /\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\b/,
                alias: "class-name"
            },
            number: {
                pattern: /\b0x[\da-f]+\b|(?:[+-]?(?:\b\d+\.)?\b\d+|[+-]\.\d+|(^|[^.])\B\.\d+)(?:e[+-]?\d+)?\b/i,
                lookbehind: !0
            },
            operator: /[-+*\/&?@^]|<(?:=>?|>)?|>=?|=>?|\.\.\.?/,
            punctuation: /[,;\[\](){}]/
        }, e1344.languages.pq = e1344.languages.powerquery, e1344.languages.mscript = e1344.languages.powerquery;
    }
    a33($r, "powerquery");
});
var yp = o17((Cy, hp)=>{
    "use strict";
    hp.exports = qr;
    qr.displayName = "powershell";
    qr.aliases = [];
    function qr(e1345) {
        (function(t982) {
            var r713 = t982.languages.powershell = {
                comment: [
                    {
                        pattern: /(^|[^`])<#[\s\S]*?#>/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|[^`])#.*/,
                        lookbehind: !0
                    }
                ],
                string: [
                    {
                        pattern: /"(?:`[\s\S]|[^`"])*"/,
                        greedy: !0,
                        inside: null
                    },
                    {
                        pattern: /'(?:[^']|'')*'/,
                        greedy: !0
                    }
                ],
                namespace: /\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,
                boolean: /\$(?:false|true)\b/i,
                variable: /\$\w+\b/,
                function: [
                    /\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,
                    /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i
                ],
                keyword: /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,
                operator: {
                    pattern: /(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,
                    lookbehind: !0
                },
                punctuation: /[|{}[\];(),.]/
            };
            r713.string[0].inside = {
                function: {
                    pattern: /(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/,
                    lookbehind: !0,
                    inside: r713
                },
                boolean: r713.boolean,
                variable: r713.variable
            };
        })(e1345);
    }
    a33(qr, "powershell");
});
var Ap = o17((Oy, Tp)=>{
    "use strict";
    Tp.exports = Hr;
    Hr.displayName = "processing";
    Hr.aliases = [];
    function Hr(e1346) {
        e1346.languages.processing = e1346.languages.extend("clike", {
            keyword: /\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\b/,
            function: /\b\w+(?=\s*\()/,
            operator: /<[<=]?|>[>=]?|&&?|\|\|?|[%?]|[!=+\-*\/]=?/
        }), e1346.languages.insertBefore("processing", "number", {
            constant: /\b(?!XML\b)[A-Z][A-Z\d_]+\b/,
            type: {
                pattern: /\b(?:boolean|byte|char|color|double|float|int|[A-Z]\w*)\b/,
                alias: "class-name"
            }
        });
    }
    a33(Hr, "processing");
});
var Rp = o17((Ly, _p)=>{
    "use strict";
    _p.exports = zr2;
    zr2.displayName = "prolog";
    zr2.aliases = [];
    function zr2(e1347) {
        e1347.languages.prolog = {
            comment: {
                pattern: /\/\*[\s\S]*?\*\/|%.*/,
                greedy: !0
            },
            string: {
                pattern: /(["'])(?:\1\1|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1(?!\1)/,
                greedy: !0
            },
            builtin: /\b(?:fx|fy|xf[xy]?|yfx?)\b/,
            function: /\b[a-z]\w*(?:(?=\()|\/\d+)/,
            number: /\b\d+(?:\.\d*)?/,
            operator: /[:\\=><\-?*@\/;+^|!$.]+|\b(?:is|mod|not|xor)\b/,
            punctuation: /[(){}\[\],]/
        };
    }
    a33(zr2, "prolog");
});
var Np = o17((xy, Ip)=>{
    "use strict";
    Ip.exports = Vr;
    Vr.displayName = "promql";
    Vr.aliases = [];
    function Vr(e1348) {
        (function(t983) {
            var r714 = [
                "sum",
                "min",
                "max",
                "avg",
                "group",
                "stddev",
                "stdvar",
                "count",
                "count_values",
                "bottomk",
                "topk",
                "quantile"
            ], n590 = [
                "on",
                "ignoring",
                "group_right",
                "group_left",
                "by",
                "without"
            ], i589 = [
                "offset"
            ], l294 = r714.concat(n590, i589);
            t983.languages.promql = {
                comment: {
                    pattern: /(^[ \t]*)#.*/m,
                    lookbehind: !0
                },
                "vector-match": {
                    pattern: new RegExp("((?:" + n590.join("|") + ")\\s*)\\([^)]*\\)"),
                    lookbehind: !0,
                    inside: {
                        "label-key": {
                            pattern: /\b[^,]+\b/,
                            alias: "attr-name"
                        },
                        punctuation: /[(),]/
                    }
                },
                "context-labels": {
                    pattern: /\{[^{}]*\}/,
                    inside: {
                        "label-key": {
                            pattern: /\b[a-z_]\w*(?=\s*(?:=|![=~]))/,
                            alias: "attr-name"
                        },
                        "label-value": {
                            pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
                            greedy: !0,
                            alias: "attr-value"
                        },
                        punctuation: /\{|\}|=~?|![=~]|,/
                    }
                },
                "context-range": [
                    {
                        pattern: /\[[\w\s:]+\]/,
                        inside: {
                            punctuation: /\[|\]|:/,
                            "range-duration": {
                                pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
                                alias: "number"
                            }
                        }
                    },
                    {
                        pattern: /(\boffset\s+)\w+/,
                        lookbehind: !0,
                        inside: {
                            "range-duration": {
                                pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
                                alias: "number"
                            }
                        }
                    }
                ],
                keyword: new RegExp("\\b(?:" + l294.join("|") + ")\\b", "i"),
                function: /\b[a-z_]\w*(?=\s*\()/i,
                number: /[-+]?(?:(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[-+]?\d+)?\b|\b(?:0x[0-9a-f]+|nan|inf)\b)/i,
                operator: /[\^*/%+-]|==|!=|<=|<|>=|>|\b(?:and|or|unless)\b/i,
                punctuation: /[{};()`,.[\]]/
            };
        })(e1348);
    }
    a33(Vr, "promql");
});
var vp = o17((Dy, wp)=>{
    "use strict";
    wp.exports = Wr;
    Wr.displayName = "properties";
    Wr.aliases = [];
    function Wr(e1349) {
        e1349.languages.properties = {
            comment: /^[ \t]*[#!].*$/m,
            "attr-value": {
                pattern: /(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m,
                lookbehind: !0
            },
            "attr-name": /^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,
            punctuation: /[=:]/
        };
    }
    a33(Wr, "properties");
});
var Cp = o17((My, kp)=>{
    "use strict";
    kp.exports = jr;
    jr.displayName = "protobuf";
    jr.aliases = [];
    function jr(e1350) {
        (function(t984) {
            var r715 = /\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;
            t984.languages.protobuf = t984.languages.extend("clike", {
                "class-name": [
                    {
                        pattern: /(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/,
                        lookbehind: !0
                    }
                ],
                keyword: /\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,
                function: /\b[a-z_]\w*(?=\s*\()/i
            }), t984.languages.insertBefore("protobuf", "operator", {
                map: {
                    pattern: /\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,
                    alias: "class-name",
                    inside: {
                        punctuation: /[<>.,]/,
                        builtin: r715
                    }
                },
                builtin: r715,
                "positional-class-name": {
                    pattern: /(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,
                    alias: "class-name",
                    inside: {
                        punctuation: /\./
                    }
                },
                annotation: {
                    pattern: /(\[\s*)[a-z_]\w*(?=\s*=)/i,
                    lookbehind: !0
                }
            });
        })(e1350);
    }
    a33(jr, "protobuf");
});
var Lp = o17((Fy, Op)=>{
    "use strict";
    Op.exports = Yr;
    Yr.displayName = "psl";
    Yr.aliases = [];
    function Yr(e1351) {
        e1351.languages.psl = {
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            string: {
                pattern: /"(?:\\.|[^\\"])*"/,
                greedy: !0,
                inside: {
                    symbol: /\\[ntrbA-Z"\\]/
                }
            },
            "heredoc-string": {
                pattern: /<<<([a-zA-Z_]\w*)[\r\n](?:.*[\r\n])*?\1\b/,
                alias: "string",
                greedy: !0
            },
            keyword: /\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\b/,
            constant: /\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\b/,
            boolean: /\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\b/,
            variable: /\b(?:PslDebug|errno|exit_status)\b/,
            builtin: {
                pattern: /\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\b/,
                alias: "builtin-function"
            },
            "foreach-variable": {
                pattern: /(\bforeach\s+(?:(?:\w+\b|"(?:\\.|[^\\"])*")\s+){0,2})[_a-zA-Z]\w*(?=\s*\()/,
                lookbehind: !0,
                greedy: !0
            },
            function: /\b[_a-z]\w*\b(?=\s*\()/i,
            number: /\b(?:0x[0-9a-f]+|\d+(?:\.\d+)?)\b/i,
            operator: /--|\+\+|&&=?|\|\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\.|[:?]/,
            punctuation: /[(){}\[\];,]/
        };
    }
    a33(Yr, "psl");
});
var Dp = o17((Uy, xp)=>{
    "use strict";
    xp.exports = Kr;
    Kr.displayName = "pug";
    Kr.aliases = [];
    function Kr(e1352) {
        (function(t985) {
            t985.languages.pug = {
                comment: {
                    pattern: /(^([\t ]*))\/\/.*(?:(?:\r?\n|\r)\2[\t ].+)*/m,
                    lookbehind: !0
                },
                "multiline-script": {
                    pattern: /(^([\t ]*)script\b.*\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
                    lookbehind: !0,
                    inside: t985.languages.javascript
                },
                filter: {
                    pattern: /(^([\t ]*)):.+(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
                    lookbehind: !0,
                    inside: {
                        "filter-name": {
                            pattern: /^:[\w-]+/,
                            alias: "variable"
                        },
                        text: /\S[\s\S]*/
                    }
                },
                "multiline-plain-text": {
                    pattern: /(^([\t ]*)[\w\-#.]+\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
                    lookbehind: !0
                },
                markup: {
                    pattern: /(^[\t ]*)<.+/m,
                    lookbehind: !0,
                    inside: t985.languages.markup
                },
                doctype: {
                    pattern: /((?:^|\n)[\t ]*)doctype(?: .+)?/,
                    lookbehind: !0
                },
                "flow-control": {
                    pattern: /(^[\t ]*)(?:case|default|each|else|if|unless|when|while)\b(?: .+)?/m,
                    lookbehind: !0,
                    inside: {
                        each: {
                            pattern: /^each .+? in\b/,
                            inside: {
                                keyword: /\b(?:each|in)\b/,
                                punctuation: /,/
                            }
                        },
                        branch: {
                            pattern: /^(?:case|default|else|if|unless|when|while)\b/,
                            alias: "keyword"
                        },
                        rest: t985.languages.javascript
                    }
                },
                keyword: {
                    pattern: /(^[\t ]*)(?:append|block|extends|include|prepend)\b.+/m,
                    lookbehind: !0
                },
                mixin: [
                    {
                        pattern: /(^[\t ]*)mixin .+/m,
                        lookbehind: !0,
                        inside: {
                            keyword: /^mixin/,
                            function: /\w+(?=\s*\(|\s*$)/,
                            punctuation: /[(),.]/
                        }
                    },
                    {
                        pattern: /(^[\t ]*)\+.+/m,
                        lookbehind: !0,
                        inside: {
                            name: {
                                pattern: /^\+\w+/,
                                alias: "function"
                            },
                            rest: t985.languages.javascript
                        }
                    }
                ],
                script: {
                    pattern: /(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]).+/m,
                    lookbehind: !0,
                    inside: t985.languages.javascript
                },
                "plain-text": {
                    pattern: /(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]).+/m,
                    lookbehind: !0
                },
                tag: {
                    pattern: /(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m,
                    lookbehind: !0,
                    inside: {
                        attributes: [
                            {
                                pattern: /&[^(]+\([^)]+\)/,
                                inside: t985.languages.javascript
                            },
                            {
                                pattern: /\([^)]+\)/,
                                inside: {
                                    "attr-value": {
                                        pattern: /(=\s*(?!\s))(?:\{[^}]*\}|[^,)\r\n]+)/,
                                        lookbehind: !0,
                                        inside: t985.languages.javascript
                                    },
                                    "attr-name": /[\w-]+(?=\s*!?=|\s*[,)])/,
                                    punctuation: /[!=(),]+/
                                }
                            }
                        ],
                        punctuation: /:/,
                        "attr-id": /#[\w\-]+/,
                        "attr-class": /\.[\w\-]+/
                    }
                },
                code: [
                    {
                        pattern: /(^[\t ]*(?:-|!?=)).+/m,
                        lookbehind: !0,
                        inside: t985.languages.javascript
                    }
                ],
                punctuation: /[.\-!=|]+/
            };
            for(var r716 = /(^([\t ]*)):<filter_name>(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/.source, n591 = [
                {
                    filter: "atpl",
                    language: "twig"
                },
                {
                    filter: "coffee",
                    language: "coffeescript"
                },
                "ejs",
                "handlebars",
                "less",
                "livescript",
                "markdown",
                {
                    filter: "sass",
                    language: "scss"
                },
                "stylus"
            ], i590 = {}, l295 = 0, d142 = n591.length; l295 < d142; l295++){
                var u266 = n591[l295];
                u266 = typeof u266 == "string" ? {
                    filter: u266,
                    language: u266
                } : u266, t985.languages[u266.language] && (i590["filter-" + u266.filter] = {
                    pattern: RegExp(r716.replace("<filter_name>", function() {
                        return u266.filter;
                    }), "m"),
                    lookbehind: !0,
                    inside: {
                        "filter-name": {
                            pattern: /^:[\w-]+/,
                            alias: "variable"
                        },
                        text: {
                            pattern: /\S[\s\S]*/,
                            alias: [
                                u266.language,
                                "language-" + u266.language
                            ],
                            inside: t985.languages[u266.language]
                        }
                    }
                });
            }
            t985.languages.insertBefore("pug", "filter", i590);
        })(e1352);
    }
    a33(Kr, "pug");
});
var Fp = o17((By, Mp)=>{
    "use strict";
    Mp.exports = Zr;
    Zr.displayName = "puppet";
    Zr.aliases = [];
    function Zr(e1353) {
        (function(t986) {
            t986.languages.puppet = {
                heredoc: [
                    {
                        pattern: /(@\("([^"\r\n\/):]+)"(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
                        lookbehind: !0,
                        alias: "string",
                        inside: {
                            punctuation: /(?=\S).*\S(?= *$)/
                        }
                    },
                    {
                        pattern: /(@\(([^"\r\n\/):]+)(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "string",
                        inside: {
                            punctuation: /(?=\S).*\S(?= *$)/
                        }
                    },
                    {
                        pattern: /@\("?(?:[^"\r\n\/):]+)"?(?:\/[nrts$uL]*)?\)/,
                        alias: "string",
                        inside: {
                            punctuation: {
                                pattern: /(\().+?(?=\))/,
                                lookbehind: !0
                            }
                        }
                    }
                ],
                "multiline-comment": {
                    pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "comment"
                },
                regex: {
                    pattern: /((?:\bnode\s+|[~=\(\[\{,]\s*|[=+]>\s*|^\s*))\/(?:[^\/\\]|\\[\s\S])+\/(?:[imx]+\b|\B)/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        "extended-regex": {
                            pattern: /^\/(?:[^\/\\]|\\[\s\S])+\/[im]*x[im]*$/,
                            inside: {
                                comment: /#.*/
                            }
                        }
                    }
                },
                comment: {
                    pattern: /(^|[^\\])#.*/,
                    lookbehind: !0,
                    greedy: !0
                },
                string: {
                    pattern: /(["'])(?:\$\{(?:[^'"}]|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}|\$(?!\{)|(?!\1)[^\\$]|\\[\s\S])*\1/,
                    greedy: !0,
                    inside: {
                        "double-quoted": {
                            pattern: /^"[\s\S]*"$/,
                            inside: {}
                        }
                    }
                },
                variable: {
                    pattern: /\$(?:::)?\w+(?:::\w+)*/,
                    inside: {
                        punctuation: /::/
                    }
                },
                "attr-name": /(?:\b\w+|\*)(?=\s*=>)/,
                function: [
                    {
                        pattern: /(\.)(?!\d)\w+/,
                        lookbehind: !0
                    },
                    /\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\b|\b(?!\d)\w+(?=\()/
                ],
                number: /\b(?:0x[a-f\d]+|\d+(?:\.\d+)?(?:e-?\d+)?)\b/i,
                boolean: /\b(?:false|true)\b/,
                keyword: /\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\b/,
                datatype: {
                    pattern: /\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\b/,
                    alias: "symbol"
                },
                operator: /=[=~>]?|![=~]?|<(?:<\|?|[=~|-])?|>[>=]?|->?|~>|\|>?>?|[*\/%+?]|\b(?:and|in|or)\b/,
                punctuation: /[\[\]{}().,;]|:+/
            };
            var r717 = [
                {
                    pattern: /(^|[^\\])\$\{(?:[^'"{}]|\{[^}]*\}|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}/,
                    lookbehind: !0,
                    inside: {
                        "short-variable": {
                            pattern: /(^\$\{)(?!\w+\()(?:::)?\w+(?:::\w+)*/,
                            lookbehind: !0,
                            alias: "variable",
                            inside: {
                                punctuation: /::/
                            }
                        },
                        delimiter: {
                            pattern: /^\$/,
                            alias: "variable"
                        },
                        rest: t986.languages.puppet
                    }
                },
                {
                    pattern: /(^|[^\\])\$(?:::)?\w+(?:::\w+)*/,
                    lookbehind: !0,
                    alias: "variable",
                    inside: {
                        punctuation: /::/
                    }
                }
            ];
            t986.languages.puppet.heredoc[0].inside.interpolation = r717, t986.languages.puppet.string.inside["double-quoted"].inside.interpolation = r717;
        })(e1353);
    }
    a33(Zr, "puppet");
});
var Bp = o17((Py, Up)=>{
    "use strict";
    Up.exports = Xr;
    Xr.displayName = "pure";
    Xr.aliases = [];
    function Xr(e1354) {
        (function(t987) {
            t987.languages.pure = {
                comment: [
                    {
                        pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|[^\\:])\/\/.*/,
                        lookbehind: !0
                    },
                    /#!.+/
                ],
                "inline-lang": {
                    pattern: /%<[\s\S]+?%>/,
                    greedy: !0,
                    inside: {
                        lang: {
                            pattern: /(^%< *)-\*-.+?-\*-/,
                            lookbehind: !0,
                            alias: "comment"
                        },
                        delimiter: {
                            pattern: /^%<.*|%>$/,
                            alias: "punctuation"
                        }
                    }
                },
                string: {
                    pattern: /"(?:\\.|[^"\\\r\n])*"/,
                    greedy: !0
                },
                number: {
                    pattern: /((?:\.\.)?)(?:\b(?:inf|nan)\b|\b0x[\da-f]+|(?:\b(?:0b)?\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?L?)/i,
                    lookbehind: !0
                },
                keyword: /\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\b/,
                function: /\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\b/,
                special: {
                    pattern: /\b__[a-z]+__\b/i,
                    alias: "builtin"
                },
                operator: /(?:[!"#$%&'*+,\-.\/:<=>?@\\^`|~\u00a1-\u00bf\u00d7-\u00f7\u20d0-\u2bff]|\b_+\b)+|\b(?:and|div|mod|not|or)\b/,
                punctuation: /[(){}\[\];,|]/
            };
            var r718 = [
                "c",
                {
                    lang: "c++",
                    alias: "cpp"
                },
                "fortran"
            ], n592 = /%< *-\*- *<lang>\d* *-\*-[\s\S]+?%>/.source;
            r718.forEach(function(i591) {
                var l296 = i591;
                if (typeof i591 != "string" && (l296 = i591.alias, i591 = i591.lang), t987.languages[l296]) {
                    var d143 = {};
                    d143["inline-lang-" + l296] = {
                        pattern: RegExp(n592.replace("<lang>", i591.replace(/([.+*?\/\\(){}\[\]])/g, "\\$1")), "i"),
                        inside: t987.util.clone(t987.languages.pure["inline-lang"].inside)
                    }, d143["inline-lang-" + l296].inside.rest = t987.util.clone(t987.languages[l296]), t987.languages.insertBefore("pure", "inline-lang", d143);
                }
            }), t987.languages.c && (t987.languages.pure["inline-lang"].inside.rest = t987.util.clone(t987.languages.c));
        })(e1354);
    }
    a33(Xr, "pure");
});
var Gp = o17((Gy, Pp)=>{
    "use strict";
    Pp.exports = Qr;
    Qr.displayName = "purebasic";
    Qr.aliases = [];
    function Qr(e1355) {
        e1355.languages.purebasic = e1355.languages.extend("clike", {
            comment: /;.*/,
            keyword: /\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\b/i,
            function: /\b\w+(?:\.\w+)?\s*(?=\()/,
            number: /(?:\$[\da-f]+|\b-?(?:\d+(?:\.\d+)?|\.\d+)(?:e[+-]?\d+)?)\b/i,
            operator: /(?:@\*?|\?|\*)\w+|-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|?\||[~^%?*/@]/
        }), e1355.languages.insertBefore("purebasic", "keyword", {
            tag: /#\w+\$?/,
            asm: {
                pattern: /(^[\t ]*)!.*/m,
                lookbehind: !0,
                alias: "tag",
                inside: {
                    comment: /;.*/,
                    string: {
                        pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                        greedy: !0
                    },
                    "label-reference-anonymous": {
                        pattern: /(!\s*j[a-z]+\s+)@[fb]/i,
                        lookbehind: !0,
                        alias: "fasm-label"
                    },
                    "label-reference-addressed": {
                        pattern: /(!\s*j[a-z]+\s+)[A-Z._?$@][\w.?$@~#]*/i,
                        lookbehind: !0,
                        alias: "fasm-label"
                    },
                    keyword: [
                        /\b(?:extern|global)\b[^;\r\n]*/i,
                        /\b(?:CPU|DEFAULT|FLOAT)\b.*/
                    ],
                    function: {
                        pattern: /^([\t ]*!\s*)[\da-z]+(?=\s|$)/im,
                        lookbehind: !0
                    },
                    "function-inline": {
                        pattern: /(:\s*)[\da-z]+(?=\s)/i,
                        lookbehind: !0,
                        alias: "function"
                    },
                    label: {
                        pattern: /^([\t ]*!\s*)[A-Za-z._?$@][\w.?$@~#]*(?=:)/m,
                        lookbehind: !0,
                        alias: "fasm-label"
                    },
                    register: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\d+)\b/i,
                    number: /(?:\b|-|(?=\$))(?:0[hx](?:[\da-f]*\.)?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
                    operator: /[\[\]*+\-/%<>=&|$!,.:]/
                }
            }
        }), delete e1355.languages.purebasic["class-name"], delete e1355.languages.purebasic.boolean, e1355.languages.pbfasm = e1355.languages.purebasic;
    }
    a33(Qr, "purebasic");
});
var qp = o17(($y, $p)=>{
    "use strict";
    var Lf = J9();
    $p.exports = Jr;
    Jr.displayName = "purescript";
    Jr.aliases = [
        "purs"
    ];
    function Jr(e1356) {
        e1356.register(Lf), e1356.languages.purescript = e1356.languages.extend("haskell", {
            keyword: /\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b|∀/,
            "import-statement": {
                pattern: /(^[\t ]*)import\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*(?:\s+as\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
                lookbehind: !0,
                inside: {
                    keyword: /\b(?:as|hiding|import)\b/,
                    punctuation: /\./
                }
            },
            builtin: /\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\b/,
            operator: [
                e1356.languages.haskell.operator[0],
                e1356.languages.haskell.operator[2],
                /[\xa2-\xa6\xa8\xa9\xac\xae-\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u03f6\u0482\u058d-\u058f\u0606-\u0608\u060b\u060e\u060f\u06de\u06e9\u06fd\u06fe\u07f6\u07fe\u07ff\u09f2\u09f3\u09fa\u09fb\u0af1\u0b70\u0bf3-\u0bfa\u0c7f\u0d4f\u0d79\u0e3f\u0f01-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u109e\u109f\u1390-\u1399\u166d\u17db\u1940\u19de-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u2140-\u2144\u214a-\u214d\u214f\u218a\u218b\u2190-\u2307\u230c-\u2328\u232b-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2767\u2794-\u27c4\u27c7-\u27e5\u27f0-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2ce5-\u2cea\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u31c0-\u31e3\u3200-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua700-\ua716\ua720\ua721\ua789\ua78a\ua828-\ua82b\ua836-\ua839\uaa77-\uaa79\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufdfd\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]/
            ]
        }), e1356.languages.purs = e1356.languages.purescript;
    }
    a33(Jr, "purescript");
});
var zp = o17((qy, Hp)=>{
    "use strict";
    Hp.exports = en2;
    en2.displayName = "python";
    en2.aliases = [
        "py"
    ];
    function en2(e1357) {
        e1357.languages.python = {
            comment: {
                pattern: /(^|[^\\])#.*/,
                lookbehind: !0,
                greedy: !0
            },
            "string-interpolation": {
                pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
                        lookbehind: !0,
                        inside: {
                            "format-spec": {
                                pattern: /(:)[^:(){}]+(?=\}$)/,
                                lookbehind: !0
                            },
                            "conversion-option": {
                                pattern: /![sra](?=[:}]$)/,
                                alias: "punctuation"
                            },
                            rest: null
                        }
                    },
                    string: /[\s\S]+/
                }
            },
            "triple-quoted-string": {
                pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
                greedy: !0,
                alias: "string"
            },
            string: {
                pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
                greedy: !0
            },
            function: {
                pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
                lookbehind: !0
            },
            "class-name": {
                pattern: /(\bclass\s+)\w+/i,
                lookbehind: !0
            },
            decorator: {
                pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
                lookbehind: !0,
                alias: [
                    "annotation",
                    "punctuation"
                ],
                inside: {
                    punctuation: /\./
                }
            },
            keyword: /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
            builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
            boolean: /\b(?:False|None|True)\b/,
            number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
            operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
            punctuation: /[{}[\];(),.:]/
        }, e1357.languages.python["string-interpolation"].inside.interpolation.inside.rest = e1357.languages.python, e1357.languages.py = e1357.languages.python;
    }
    a33(en2, "python");
});
var Wp = o17((Hy, Vp)=>{
    "use strict";
    Vp.exports = tn2;
    tn2.displayName = "q";
    tn2.aliases = [];
    function tn2(e1358) {
        e1358.languages.q = {
            string: /"(?:\\.|[^"\\\r\n])*"/,
            comment: [
                {
                    pattern: /([\t )\]}])\/.*/,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r(?!\n)))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/,
                    lookbehind: !0,
                    greedy: !0
                },
                {
                    pattern: /^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m,
                    greedy: !0
                },
                {
                    pattern: /^#!.+/m,
                    greedy: !0
                }
            ],
            symbol: /`(?::\S+|[\w.]*)/,
            datetime: {
                pattern: /0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,
                alias: "number"
            },
            number: /\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\da-fA-F]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?[hjfeb]?)/,
            keyword: /\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,
            adverb: {
                pattern: /['\/\\]:?|\beach\b/,
                alias: "function"
            },
            verb: {
                pattern: /(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?~=|$&#@^]):?|\b_\b:?/,
                alias: "operator"
            },
            punctuation: /[(){}\[\];.]/
        };
    }
    a33(tn2, "q");
});
var Yp = o17((zy, jp)=>{
    "use strict";
    jp.exports = an2;
    an2.displayName = "qml";
    an2.aliases = [];
    function an2(e1359) {
        (function(t988) {
            for(var r719 = /"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source, n593 = /\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source, i592 = /(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source.replace(/<string>/g, function() {
                return r719;
            }).replace(/<comment>/g, function() {
                return n593;
            }), l297 = 0; l297 < 2; l297++)i592 = i592.replace(/<expr>/g, function() {
                return i592;
            });
            i592 = i592.replace(/<expr>/g, "[^\\s\\S]"), t988.languages.qml = {
                comment: {
                    pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
                    greedy: !0
                },
                "javascript-function": {
                    pattern: RegExp(/((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(/<js>/g, function() {
                        return i592;
                    }), "m"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "language-javascript",
                    inside: t988.languages.javascript
                },
                "class-name": {
                    pattern: /((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m,
                    lookbehind: !0
                },
                property: [
                    {
                        pattern: /((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
                        lookbehind: !0
                    },
                    {
                        pattern: /((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
                        lookbehind: !0,
                        inside: {
                            keyword: /^property/,
                            property: /\w+(?:\.\w+)*/
                        }
                    }
                ],
                "javascript-expression": {
                    pattern: RegExp(/(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function() {
                        return i592;
                    }), "m"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "language-javascript",
                    inside: t988.languages.javascript
                },
                string: {
                    pattern: /"(?:\\.|[^\\"\r\n])*"/,
                    greedy: !0
                },
                keyword: /\b(?:as|import|on)\b/,
                punctuation: /[{}[\]:;,]/
            };
        })(e1359);
    }
    a33(an2, "qml");
});
var Zp = o17((Vy, Kp)=>{
    "use strict";
    Kp.exports = rn2;
    rn2.displayName = "qore";
    rn2.aliases = [];
    function rn2(e1360) {
        e1360.languages.qore = e1360.languages.extend("clike", {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:\/\/|#).*)/,
                lookbehind: !0
            },
            string: {
                pattern: /("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
                greedy: !0
            },
            keyword: /\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b/,
            boolean: /\b(?:false|true)\b/i,
            function: /\$?\b(?!\d)\w+(?=\()/,
            number: /\b(?:0b[01]+|0x(?:[\da-f]*\.)?[\da-fp\-]+|(?:\d+(?:\.\d+)?|\.\d+)(?:e\d+)?[df]|(?:\d+(?:\.\d+)?|\.\d+))\b/i,
            operator: {
                pattern: /(^|[^.])(?:\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\|[|=]?|[*\/%^]=?|[~?])/,
                lookbehind: !0
            },
            variable: /\$(?!\d)\w+\b/
        });
    }
    a33(rn2, "qore");
});
var Qp = o17((Wy, Xp)=>{
    "use strict";
    Xp.exports = nn4;
    nn4.displayName = "qsharp";
    nn4.aliases = [
        "qs"
    ];
    function nn4(e1361) {
        (function(t989) {
            function r720(E61, f164) {
                return E61.replace(/<<(\d+)>>/g, function(h, S86) {
                    return "(?:" + f164[+S86] + ")";
                });
            }
            a33(r720, "replace");
            function n594(E62, f165, h140) {
                return RegExp(r720(E62, f165), h140 || "");
            }
            a33(n594, "re");
            function i593(E63, f166) {
                for(var h141 = 0; h141 < f166; h141++)E63 = E63.replace(/<<self>>/g, function() {
                    return "(?:" + E63 + ")";
                });
                return E63.replace(/<<self>>/g, "[^\\s\\S]");
            }
            a33(i593, "nested");
            var l298 = {
                type: "Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero",
                other: "Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within"
            };
            function d144(E64) {
                return "\\b(?:" + E64.trim().replace(/ /g, "|") + ")\\b";
            }
            a33(d144, "keywordsToPattern");
            var u267 = RegExp(d144(l298.type + " " + l298.other)), p195 = /\b[A-Za-z_]\w*\b/.source, c181 = r720(/<<0>>(?:\s*\.\s*<<0>>)*/.source, [
                p195
            ]), g116 = {
                keyword: u267,
                punctuation: /[<>()?,.:[\]]/
            }, b95 = /"(?:\\.|[^\\"])*"/.source;
            t989.languages.qsharp = t989.languages.extend("clike", {
                comment: /\/\/.*/,
                string: [
                    {
                        pattern: n594(/(^|[^$\\])<<0>>/.source, [
                            b95
                        ]),
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                "class-name": [
                    {
                        pattern: n594(/(\b(?:as|open)\s+)<<0>>(?=\s*(?:;|as\b))/.source, [
                            c181
                        ]),
                        lookbehind: !0,
                        inside: g116
                    },
                    {
                        pattern: n594(/(\bnamespace\s+)<<0>>(?=\s*\{)/.source, [
                            c181
                        ]),
                        lookbehind: !0,
                        inside: g116
                    }
                ],
                keyword: u267,
                number: /(?:\b0(?:x[\da-f]+|b[01]+|o[0-7]+)|(?:\B\.\d+|\b\d+(?:\.\d*)?)(?:e[-+]?\d+)?)l?\b/i,
                operator: /\band=|\bor=|\band\b|\bnot\b|\bor\b|<[-=]|[-=]>|>>>=?|<<<=?|\^\^\^=?|\|\|\|=?|&&&=?|w\/=?|~~~|[*\/+\-^=!%]=?/,
                punctuation: /::|[{}[\];(),.:]/
            }), t989.languages.insertBefore("qsharp", "number", {
                range: {
                    pattern: /\.\./,
                    alias: "operator"
                }
            });
            var m141 = i593(r720(/\{(?:[^"{}]|<<0>>|<<self>>)*\}/.source, [
                b95
            ]), 2);
            t989.languages.insertBefore("qsharp", "string", {
                "interpolation-string": {
                    pattern: n594(/\$"(?:\\.|<<0>>|[^\\"{])*"/.source, [
                        m141
                    ]),
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: n594(/((?:^|[^\\])(?:\\\\)*)<<0>>/.source, [
                                m141
                            ]),
                            lookbehind: !0,
                            inside: {
                                punctuation: /^\{|\}$/,
                                expression: {
                                    pattern: /[\s\S]+/,
                                    alias: "language-qsharp",
                                    inside: t989.languages.qsharp
                                }
                            }
                        },
                        string: /[\s\S]+/
                    }
                }
            });
        })(e1361), e1361.languages.qs = e1361.languages.qsharp;
    }
    a33(nn4, "qsharp");
});
var eg = o17((jy, Jp)=>{
    "use strict";
    Jp.exports = on2;
    on2.displayName = "r";
    on2.aliases = [];
    function on2(e1362) {
        e1362.languages.r = {
            comment: /#.*/,
            string: {
                pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            "percent-operator": {
                pattern: /%[^%\s]*%/,
                alias: "operator"
            },
            boolean: /\b(?:FALSE|TRUE)\b/,
            ellipsis: /\.\.(?:\.|\d+)/,
            number: [
                /\b(?:Inf|NaN)\b/,
                /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/
            ],
            keyword: /\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,
            operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
            punctuation: /[(){}\[\],;]/
        };
    }
    a33(on2, "r");
});
var ag = o17((Yy, tg)=>{
    "use strict";
    var xf = re5();
    tg.exports = sn3;
    sn3.displayName = "racket";
    sn3.aliases = [
        "rkt"
    ];
    function sn3(e1363) {
        e1363.register(xf), e1363.languages.racket = e1363.languages.extend("scheme", {
            "lambda-parameter": {
                pattern: /([(\[]lambda\s+[(\[])[^()\[\]'\s]+/,
                lookbehind: !0
            }
        }), e1363.languages.insertBefore("racket", "string", {
            lang: {
                pattern: /^#lang.+/m,
                greedy: !0,
                alias: "keyword"
            }
        }), e1363.languages.rkt = e1363.languages.racket;
    }
    a33(sn3, "racket");
});
var ng = o17((Ky, rg)=>{
    "use strict";
    rg.exports = ln3;
    ln3.displayName = "reason";
    ln3.aliases = [];
    function ln3(e1364) {
        e1364.languages.reason = e1364.languages.extend("clike", {
            string: {
                pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
                greedy: !0
            },
            "class-name": /\b[A-Z]\w*/,
            keyword: /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
            operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/
        }), e1364.languages.insertBefore("reason", "class-name", {
            char: {
                pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
                greedy: !0
            },
            constructor: /\b[A-Z]\w*\b(?!\s*\.)/,
            label: {
                pattern: /\b[a-z]\w*(?=::)/,
                alias: "symbol"
            }
        }), delete e1364.languages.reason.function;
    }
    a33(ln3, "reason");
});
var og = o17((Zy, ig)=>{
    "use strict";
    ig.exports = un2;
    un2.displayName = "regex";
    un2.aliases = [];
    function un2(e1365) {
        (function(t990) {
            var r721 = {
                pattern: /\\[\\(){}[\]^$+*?|.]/,
                alias: "escape"
            }, n595 = /\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/, i594 = {
                pattern: /\.|\\[wsd]|\\p\{[^{}]+\}/i,
                alias: "class-name"
            }, l299 = {
                pattern: /\\[wsd]|\\p\{[^{}]+\}/i,
                alias: "class-name"
            }, d145 = "(?:[^\\\\-]|" + n595.source + ")", u268 = RegExp(d145 + "-" + d145), p196 = {
                pattern: /(<|')[^<>']+(?=[>']$)/,
                lookbehind: !0,
                alias: "variable"
            };
            t990.languages.regex = {
                "char-class": {
                    pattern: /((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,
                    lookbehind: !0,
                    inside: {
                        "char-class-negation": {
                            pattern: /(^\[)\^/,
                            lookbehind: !0,
                            alias: "operator"
                        },
                        "char-class-punctuation": {
                            pattern: /^\[|\]$/,
                            alias: "punctuation"
                        },
                        range: {
                            pattern: u268,
                            inside: {
                                escape: n595,
                                "range-punctuation": {
                                    pattern: /-/,
                                    alias: "operator"
                                }
                            }
                        },
                        "special-escape": r721,
                        "char-set": l299,
                        escape: n595
                    }
                },
                "special-escape": r721,
                "char-set": i594,
                backreference: [
                    {
                        pattern: /\\(?![123][0-7]{2})[1-9]/,
                        alias: "keyword"
                    },
                    {
                        pattern: /\\k<[^<>']+>/,
                        alias: "keyword",
                        inside: {
                            "group-name": p196
                        }
                    }
                ],
                anchor: {
                    pattern: /[$^]|\\[ABbGZz]/,
                    alias: "function"
                },
                escape: n595,
                group: [
                    {
                        pattern: /\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,
                        alias: "punctuation",
                        inside: {
                            "group-name": p196
                        }
                    },
                    {
                        pattern: /\)/,
                        alias: "punctuation"
                    }
                ],
                quantifier: {
                    pattern: /(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,
                    alias: "number"
                },
                alternation: {
                    pattern: /\|/,
                    alias: "keyword"
                }
            };
        })(e1365);
    }
    a33(un2, "regex");
});
var lg = o17((Xy, sg)=>{
    "use strict";
    sg.exports = dn2;
    dn2.displayName = "rego";
    dn2.aliases = [];
    function dn2(e1366) {
        e1366.languages.rego = {
            comment: /#.*/,
            property: {
                pattern: /(^|[^\\.])(?:"(?:\\.|[^\\"\r\n])*"|`[^`]*`|\b[a-z_]\w*\b)(?=\s*:(?!=))/i,
                lookbehind: !0,
                greedy: !0
            },
            string: {
                pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"|`[^`]*`/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /\b(?:as|default|else|import|not|null|package|set(?=\s*\()|some|with)\b/,
            boolean: /\b(?:false|true)\b/,
            function: {
                pattern: /\b[a-z_]\w*\b(?:\s*\.\s*\b[a-z_]\w*\b)*(?=\s*\()/i,
                inside: {
                    namespace: /\b\w+\b(?=\s*\.)/,
                    punctuation: /\./
                }
            },
            number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
            operator: /[-+*/%|&]|[<>:=]=?|!=|\b_\b/,
            punctuation: /[,;.\[\]{}()]/
        };
    }
    a33(dn2, "rego");
});
var dg = o17((Qy, ug)=>{
    "use strict";
    ug.exports = cn2;
    cn2.displayName = "renpy";
    cn2.aliases = [
        "rpy"
    ];
    function cn2(e1367) {
        e1367.languages.renpy = {
            comment: {
                pattern: /(^|[^\\])#.+/,
                lookbehind: !0
            },
            string: {
                pattern: /("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\])*\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,
                greedy: !0
            },
            function: /\b[a-z_]\w*(?=\()/i,
            property: /\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\b/,
            tag: /\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\b|\$/,
            keyword: /\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\b/,
            boolean: /\b(?:[Ff]alse|[Tt]rue)\b/,
            number: /(?:\b(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?)|\B\.\d+)(?:e[+-]?\d+)?j?/i,
            operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:and|at|not|or|with)\b/,
            punctuation: /[{}[\];(),.:]/
        }, e1367.languages.rpy = e1367.languages.renpy;
    }
    a33(cn2, "renpy");
});
var pg = o17((Jy, cg)=>{
    "use strict";
    cg.exports = pn;
    pn.displayName = "rest";
    pn.aliases = [];
    function pn(e1368) {
        e1368.languages.rest = {
            table: [
                {
                    pattern: /(^[\t ]*)(?:\+[=-]+)+\+(?:\r?\n|\r)(?:\1[+|].+[+|](?:\r?\n|\r))+\1(?:\+[=-]+)+\+/m,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\||(?:\+[=-]+)+\+/
                    }
                },
                {
                    pattern: /(^[\t ]*)=+ [ =]*=(?:(?:\r?\n|\r)\1.+)+(?:\r?\n|\r)\1=+ [ =]*=(?=(?:\r?\n|\r){2}|\s*$)/m,
                    lookbehind: !0,
                    inside: {
                        punctuation: /[=-]+/
                    }
                }
            ],
            "substitution-def": {
                pattern: /(^[\t ]*\.\. )\|(?:[^|\s](?:[^|]*[^|\s])?)\| [^:]+::/m,
                lookbehind: !0,
                inside: {
                    substitution: {
                        pattern: /^\|(?:[^|\s]|[^|\s][^|]*[^|\s])\|/,
                        alias: "attr-value",
                        inside: {
                            punctuation: /^\||\|$/
                        }
                    },
                    directive: {
                        pattern: /( )(?! )[^:]+::/,
                        lookbehind: !0,
                        alias: "function",
                        inside: {
                            punctuation: /::$/
                        }
                    }
                }
            },
            "link-target": [
                {
                    pattern: /(^[\t ]*\.\. )\[[^\]]+\]/m,
                    lookbehind: !0,
                    alias: "string",
                    inside: {
                        punctuation: /^\[|\]$/
                    }
                },
                {
                    pattern: /(^[\t ]*\.\. )_(?:`[^`]+`|(?:[^:\\]|\\.)+):/m,
                    lookbehind: !0,
                    alias: "string",
                    inside: {
                        punctuation: /^_|:$/
                    }
                }
            ],
            directive: {
                pattern: /(^[\t ]*\.\. )[^:]+::/m,
                lookbehind: !0,
                alias: "function",
                inside: {
                    punctuation: /::$/
                }
            },
            comment: {
                pattern: /(^[\t ]*\.\.)(?:(?: .+)?(?:(?:\r?\n|\r).+)+| .+)(?=(?:\r?\n|\r){2}|$)/m,
                lookbehind: !0
            },
            title: [
                {
                    pattern: /^(([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+)(?:\r?\n|\r).+(?:\r?\n|\r)\1$/m,
                    inside: {
                        punctuation: /^[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+|[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
                        important: /.+/
                    }
                },
                {
                    pattern: /(^|(?:\r?\n|\r){2}).+(?:\r?\n|\r)([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+(?=\r?\n|\r|$)/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
                        important: /.+/
                    }
                }
            ],
            hr: {
                pattern: /((?:\r?\n|\r){2})([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2{3,}(?=(?:\r?\n|\r){2})/,
                lookbehind: !0,
                alias: "punctuation"
            },
            field: {
                pattern: /(^[\t ]*):[^:\r\n]+:(?= )/m,
                lookbehind: !0,
                alias: "attr-name"
            },
            "command-line-option": {
                pattern: /(^[\t ]*)(?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?)*(?=(?:\r?\n|\r)? {2,}\S)/im,
                lookbehind: !0,
                alias: "symbol"
            },
            "literal-block": {
                pattern: /::(?:\r?\n|\r){2}([ \t]+)(?![ \t]).+(?:(?:\r?\n|\r)\1.+)*/,
                inside: {
                    "literal-block-punctuation": {
                        pattern: /^::/,
                        alias: "punctuation"
                    }
                }
            },
            "quoted-literal-block": {
                pattern: /::(?:\r?\n|\r){2}([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]).*(?:(?:\r?\n|\r)\1.*)*/,
                inside: {
                    "literal-block-punctuation": {
                        pattern: /^(?:::|([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\1*)/m,
                        alias: "punctuation"
                    }
                }
            },
            "list-bullet": {
                pattern: /(^[\t ]*)(?:[*+\-•‣⁃]|\(?(?:\d+|[a-z]|[ivxdclm]+)\)|(?:\d+|[a-z]|[ivxdclm]+)\.)(?= )/im,
                lookbehind: !0,
                alias: "punctuation"
            },
            "doctest-block": {
                pattern: /(^[\t ]*)>>> .+(?:(?:\r?\n|\r).+)*/m,
                lookbehind: !0,
                inside: {
                    punctuation: /^>>>/
                }
            },
            inline: [
                {
                    pattern: /(^|[\s\-:\/'"<(\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\*\*?|``?|\|)(?!\s)(?:(?!\2).)*\S\2(?=[\s\-.,:;!?\\\/'")\]}]|$))/m,
                    lookbehind: !0,
                    inside: {
                        bold: {
                            pattern: /(^\*\*).+(?=\*\*$)/,
                            lookbehind: !0
                        },
                        italic: {
                            pattern: /(^\*).+(?=\*$)/,
                            lookbehind: !0
                        },
                        "inline-literal": {
                            pattern: /(^``).+(?=``$)/,
                            lookbehind: !0,
                            alias: "symbol"
                        },
                        role: {
                            pattern: /^:[^:]+:|:[^:]+:$/,
                            alias: "function",
                            inside: {
                                punctuation: /^:|:$/
                            }
                        },
                        "interpreted-text": {
                            pattern: /(^`).+(?=`$)/,
                            lookbehind: !0,
                            alias: "attr-value"
                        },
                        substitution: {
                            pattern: /(^\|).+(?=\|$)/,
                            lookbehind: !0,
                            alias: "attr-value"
                        },
                        punctuation: /\*\*?|``?|\|/
                    }
                }
            ],
            link: [
                {
                    pattern: /\[[^\[\]]+\]_(?=[\s\-.,:;!?\\\/'")\]}]|$)/,
                    alias: "string",
                    inside: {
                        punctuation: /^\[|\]_$/
                    }
                },
                {
                    pattern: /(?:\b[a-z\d]+(?:[_.:+][a-z\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\s\-.,:;!?\\\/'")\]}]|$)/i,
                    alias: "string",
                    inside: {
                        punctuation: /^_?`|`$|`?_?_$/
                    }
                }
            ],
            punctuation: {
                pattern: /(^[\t ]*)(?:\|(?= |$)|(?:---?|—|\.\.|__)(?= )|\.\.$)/m,
                lookbehind: !0
            }
        };
    }
    a33(pn, "rest");
});
var bg = o17((eT, gg)=>{
    "use strict";
    gg.exports = gn;
    gn.displayName = "rip";
    gn.aliases = [];
    function gn(e1369) {
        e1369.languages.rip = {
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            char: {
                pattern: /\B`[^\s`'",.:;#\/\\()<>\[\]{}]\b/,
                greedy: !0
            },
            string: {
                pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            regex: {
                pattern: /(^|[^/])\/(?!\/)(?:\[[^\n\r\]]*\]|\\.|[^/\\\r\n\[])+\/(?=\s*(?:$|[\r\n,.;})]))/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /(?:=>|->)|\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\b/,
            builtin: /@|\bSystem\b/,
            boolean: /\b(?:false|true)\b/,
            date: /\b\d{4}-\d{2}-\d{2}\b/,
            time: /\b\d{2}:\d{2}:\d{2}\b/,
            datetime: /\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\b/,
            symbol: /:[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,
            number: /[+-]?\b(?:\d+\.\d+|\d+)\b/,
            punctuation: /(?:\.{2,3})|[`,.:;=\/\\()<>\[\]{}]/,
            reference: /[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/
        };
    }
    a33(gn, "rip");
});
var fg = o17((tT, mg)=>{
    "use strict";
    mg.exports = bn;
    bn.displayName = "roboconf";
    bn.aliases = [];
    function bn(e1370) {
        e1370.languages.roboconf = {
            comment: /#.*/,
            keyword: {
                pattern: /(^|\s)(?:(?:external|import)\b|(?:facet|instance of)(?=[ \t]+[\w-]+[ \t]*\{))/,
                lookbehind: !0
            },
            component: {
                pattern: /[\w-]+(?=[ \t]*\{)/,
                alias: "variable"
            },
            property: /[\w.-]+(?=[ \t]*:)/,
            value: {
                pattern: /(=[ \t]*(?![ \t]))[^,;]+/,
                lookbehind: !0,
                alias: "attr-value"
            },
            optional: {
                pattern: /\(optional\)/,
                alias: "builtin"
            },
            wildcard: {
                pattern: /(\.)\*/,
                lookbehind: !0,
                alias: "operator"
            },
            punctuation: /[{},.;:=]/
        };
    }
    a33(bn, "roboconf");
});
var Sg = o17((aT, Eg)=>{
    "use strict";
    Eg.exports = mn3;
    mn3.displayName = "robotframework";
    mn3.aliases = [];
    function mn3(e1371) {
        (function(t991) {
            var r722 = {
                pattern: /(^[ \t]*| {2}|\t)#.*/m,
                lookbehind: !0,
                greedy: !0
            }, n596 = {
                pattern: /((?:^|[^\\])(?:\\{2})*)[$@&%]\{(?:[^{}\r\n]|\{[^{}\r\n]*\})*\}/,
                lookbehind: !0,
                inside: {
                    punctuation: /^[$@&%]\{|\}$/
                }
            };
            function i595(p197, c182) {
                var g117 = {};
                g117["section-header"] = {
                    pattern: /^ ?\*{3}.+?\*{3}/,
                    alias: "keyword"
                };
                for(var b96 in c182)g117[b96] = c182[b96];
                return g117.tag = {
                    pattern: /([\r\n](?: {2}|\t)[ \t]*)\[[-\w]+\]/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\[|\]/
                    }
                }, g117.variable = n596, g117.comment = r722, {
                    pattern: RegExp(/^ ?\*{3}[ \t]*<name>[ \t]*\*{3}(?:.|[\r\n](?!\*{3}))*/.source.replace(/<name>/g, function() {
                        return p197;
                    }), "im"),
                    alias: "section",
                    inside: g117
                };
            }
            a33(i595, "createSection");
            var l300 = {
                pattern: /(\[Documentation\](?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
                lookbehind: !0,
                alias: "string"
            }, d146 = {
                pattern: /([\r\n] ?)(?!#)(?:\S(?:[ \t]\S)*)+/,
                lookbehind: !0,
                alias: "function",
                inside: {
                    variable: n596
                }
            }, u269 = {
                pattern: /([\r\n](?: {2}|\t)[ \t]*)(?!\[|\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
                lookbehind: !0,
                inside: {
                    variable: n596
                }
            };
            t991.languages.robotframework = {
                settings: i595("Settings", {
                    documentation: {
                        pattern: /([\r\n] ?Documentation(?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
                        lookbehind: !0,
                        alias: "string"
                    },
                    property: {
                        pattern: /([\r\n] ?)(?!\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
                        lookbehind: !0
                    }
                }),
                variables: i595("Variables"),
                "test-cases": i595("Test Cases", {
                    "test-name": d146,
                    documentation: l300,
                    property: u269
                }),
                keywords: i595("Keywords", {
                    "keyword-name": d146,
                    documentation: l300,
                    property: u269
                }),
                tasks: i595("Tasks", {
                    "task-name": d146,
                    documentation: l300,
                    property: u269
                }),
                comment: r722
            }, t991.languages.robot = t991.languages.robotframework;
        })(e1371);
    }
    a33(mn3, "robotframework");
});
var yg = o17((rT, hg)=>{
    "use strict";
    hg.exports = fn;
    fn.displayName = "rust";
    fn.aliases = [];
    function fn(e1372) {
        (function(t992) {
            for(var r723 = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source, n597 = 0; n597 < 2; n597++)r723 = r723.replace(/<self>/g, function() {
                return r723;
            });
            r723 = r723.replace(/<self>/g, function() {
                return /[^\s\S]/.source;
            }), t992.languages.rust = {
                comment: [
                    {
                        pattern: RegExp(/(^|[^\\])/.source + r723),
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /(^|[^\\:])\/\/.*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                string: {
                    pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,
                    greedy: !0
                },
                char: {
                    pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,
                    greedy: !0
                },
                attribute: {
                    pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,
                    greedy: !0,
                    alias: "attr-name",
                    inside: {
                        string: null
                    }
                },
                "closure-params": {
                    pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        "closure-punctuation": {
                            pattern: /^\||\|$/,
                            alias: "punctuation"
                        },
                        rest: null
                    }
                },
                "lifetime-annotation": {
                    pattern: /'\w+/,
                    alias: "symbol"
                },
                "fragment-specifier": {
                    pattern: /(\$\w+:)[a-z]+/,
                    lookbehind: !0,
                    alias: "punctuation"
                },
                variable: /\$\w+/,
                "function-definition": {
                    pattern: /(\bfn\s+)\w+/,
                    lookbehind: !0,
                    alias: "function"
                },
                "type-definition": {
                    pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/,
                    lookbehind: !0,
                    alias: "class-name"
                },
                "module-declaration": [
                    {
                        pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,
                        lookbehind: !0,
                        alias: "namespace"
                    },
                    {
                        pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,
                        lookbehind: !0,
                        alias: "namespace",
                        inside: {
                            punctuation: /::/
                        }
                    }
                ],
                keyword: [
                    /\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,
                    /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/
                ],
                function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,
                macro: {
                    pattern: /\b\w+!/,
                    alias: "property"
                },
                constant: /\b[A-Z_][A-Z_\d]+\b/,
                "class-name": /\b[A-Z]\w*\b/,
                namespace: {
                    pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,
                    inside: {
                        punctuation: /::/
                    }
                },
                number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,
                boolean: /\b(?:false|true)\b/,
                punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,
                operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/
            }, t992.languages.rust["closure-params"].inside.rest = t992.languages.rust, t992.languages.rust.attribute.inside.string = t992.languages.rust.string;
        })(e1372);
    }
    a33(fn, "rust");
});
var Ag = o17((nT, Tg)=>{
    "use strict";
    Tg.exports = En;
    En.displayName = "sas";
    En.aliases = [];
    function En(e1373) {
        (function(t993) {
            var r724 = /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))/.source, n598 = /\b(?:\d[\da-f]*x|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i, i596 = {
                pattern: RegExp(r724 + "[bx]"),
                alias: "number"
            }, l301 = {
                pattern: /&[a-z_]\w*/i
            }, d147 = {
                pattern: /((?:^|\s|=|\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\b/i,
                lookbehind: !0,
                alias: "keyword"
            }, u270 = {
                pattern: /(^|\s)(?:proc\s+\w+|data(?!=)|quit|run)\b/i,
                alias: "keyword",
                lookbehind: !0
            }, p198 = [
                /\/\*[\s\S]*?\*\//,
                {
                    pattern: /(^[ \t]*|;\s*)\*[^;]*;/m,
                    lookbehind: !0
                }
            ], c183 = {
                pattern: RegExp(r724),
                greedy: !0
            }, g118 = /[$%@.(){}\[\];,\\]/, b97 = {
                pattern: /%?\b\w+(?=\()/,
                alias: "keyword"
            }, m142 = {
                function: b97,
                "arg-value": {
                    pattern: /(=\s*)[A-Z\.]+/i,
                    lookbehind: !0
                },
                operator: /=/,
                "macro-variable": l301,
                arg: {
                    pattern: /[A-Z]+/i,
                    alias: "keyword"
                },
                number: n598,
                "numeric-constant": i596,
                punctuation: g118,
                string: c183
            }, E65 = {
                pattern: /\b(?:format|put)\b=?[\w'$.]+/i,
                inside: {
                    keyword: /^(?:format|put)(?==)/i,
                    equals: /=/,
                    format: {
                        pattern: /(?:\w|\$\d)+\.\d?/,
                        alias: "number"
                    }
                }
            }, f167 = {
                pattern: /\b(?:format|put)\s+[\w']+(?:\s+[$.\w]+)+(?=;)/i,
                inside: {
                    keyword: /^(?:format|put)/i,
                    format: {
                        pattern: /[\w$]+\.\d?/,
                        alias: "number"
                    }
                }
            }, h142 = {
                pattern: /((?:^|\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\d?)\b/i,
                lookbehind: !0,
                alias: "keyword"
            }, S87 = {
                pattern: /(^|\s)(?:submit(?:\s+(?:load|norun|parseonly))?|endsubmit)\b/i,
                lookbehind: !0,
                alias: "keyword"
            }, T50 = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source, y90 = {
                pattern: RegExp(/(^|\s)(?:action\s+)?(?:<act>)\.[a-z]+\b[^;]+/.source.replace(/<act>/g, function() {
                    return T50;
                }), "i"),
                lookbehind: !0,
                inside: {
                    keyword: RegExp(/(?:<act>)\.[a-z]+\b/.source.replace(/<act>/g, function() {
                        return T50;
                    }), "i"),
                    action: {
                        pattern: /(?:action)/i,
                        alias: "keyword"
                    },
                    comment: p198,
                    function: b97,
                    "arg-value": m142["arg-value"],
                    operator: m142.operator,
                    argument: m142.arg,
                    number: n598,
                    "numeric-constant": i596,
                    punctuation: g118,
                    string: c183
                }
            }, A62 = {
                pattern: /((?:^|\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\s+do|then|title\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\b/i,
                lookbehind: !0
            };
            t993.languages.sas = {
                datalines: {
                    pattern: /^([ \t]*)(?:cards|(?:data)?lines);[\s\S]+?^[ \t]*;/im,
                    lookbehind: !0,
                    alias: "string",
                    inside: {
                        keyword: {
                            pattern: /^(?:cards|(?:data)?lines)/i
                        },
                        punctuation: /;/
                    }
                },
                "proc-sql": {
                    pattern: /(^proc\s+(?:fed)?sql(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        sql: {
                            pattern: RegExp(/^[ \t]*(?:select|alter\s+table|(?:create|describe|drop)\s+(?:index|table(?:\s+constraints)?|view)|create\s+unique\s+index|insert\s+into|update)(?:<str>|[^;"'])+;/.source.replace(/<str>/g, function() {
                                return r724;
                            }), "im"),
                            alias: "language-sql",
                            inside: t993.languages.sql
                        },
                        "global-statements": h142,
                        "sql-statements": {
                            pattern: /(^|\s)(?:disconnect\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\b/i,
                            lookbehind: !0,
                            alias: "keyword"
                        },
                        number: n598,
                        "numeric-constant": i596,
                        punctuation: g118,
                        string: c183
                    }
                },
                "proc-groovy": {
                    pattern: /(^proc\s+groovy(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        comment: p198,
                        groovy: {
                            pattern: RegExp(/(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {
                                return r724;
                            }), "im"),
                            lookbehind: !0,
                            alias: "language-groovy",
                            inside: t993.languages.groovy
                        },
                        keyword: A62,
                        "submit-statement": S87,
                        "global-statements": h142,
                        number: n598,
                        "numeric-constant": i596,
                        punctuation: g118,
                        string: c183
                    }
                },
                "proc-lua": {
                    pattern: /(^proc\s+lua(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        comment: p198,
                        lua: {
                            pattern: RegExp(/(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {
                                return r724;
                            }), "im"),
                            lookbehind: !0,
                            alias: "language-lua",
                            inside: t993.languages.lua
                        },
                        keyword: A62,
                        "submit-statement": S87,
                        "global-statements": h142,
                        number: n598,
                        "numeric-constant": i596,
                        punctuation: g118,
                        string: c183
                    }
                },
                "proc-cas": {
                    pattern: /(^proc\s+cas(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|quit|data);|(?![\s\S]))/im,
                    lookbehind: !0,
                    inside: {
                        comment: p198,
                        "statement-var": {
                            pattern: /((?:^|\s)=?)saveresult\s[^;]+/im,
                            lookbehind: !0,
                            inside: {
                                statement: {
                                    pattern: /^saveresult\s+\S+/i,
                                    inside: {
                                        keyword: /^(?:saveresult)/i
                                    }
                                },
                                rest: m142
                            }
                        },
                        "cas-actions": y90,
                        statement: {
                            pattern: /((?:^|\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,
                            lookbehind: !0,
                            inside: m142
                        },
                        step: u270,
                        keyword: A62,
                        function: b97,
                        format: E65,
                        altformat: f167,
                        "global-statements": h142,
                        number: n598,
                        "numeric-constant": i596,
                        punctuation: g118,
                        string: c183
                    }
                },
                "proc-args": {
                    pattern: RegExp(/(^proc\s+\w+\s+)(?!\s)(?:[^;"']|<str>)+;/.source.replace(/<str>/g, function() {
                        return r724;
                    }), "im"),
                    lookbehind: !0,
                    inside: m142
                },
                "macro-keyword": d147,
                "macro-variable": l301,
                "macro-string-functions": {
                    pattern: /((?:^|\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\(.*?(?:[^%]\))/i,
                    lookbehind: !0,
                    inside: {
                        function: {
                            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,
                            alias: "keyword"
                        },
                        "macro-keyword": d147,
                        "macro-variable": l301,
                        "escaped-char": {
                            pattern: /%['"()<>=¬^~;,#]/
                        },
                        punctuation: g118
                    }
                },
                "macro-declaration": {
                    pattern: /^%macro[^;]+(?=;)/im,
                    inside: {
                        keyword: /%macro/i
                    }
                },
                "macro-end": {
                    pattern: /^%mend[^;]+(?=;)/im,
                    inside: {
                        keyword: /%mend/i
                    }
                },
                macro: {
                    pattern: /%_\w+(?=\()/,
                    alias: "keyword"
                },
                input: {
                    pattern: /\binput\s[-\w\s/*.$&]+;/i,
                    inside: {
                        input: {
                            alias: "keyword",
                            pattern: /^input/i
                        },
                        comment: p198,
                        number: n598,
                        "numeric-constant": i596
                    }
                },
                "options-args": {
                    pattern: /(^options)[-'"|/\\<>*+=:()\w\s]*(?=;)/im,
                    lookbehind: !0,
                    inside: m142
                },
                "cas-actions": y90,
                comment: p198,
                function: b97,
                format: E65,
                altformat: f167,
                "numeric-constant": i596,
                datetime: {
                    pattern: RegExp(r724 + "(?:dt?|t)"),
                    alias: "number"
                },
                string: c183,
                step: u270,
                keyword: A62,
                "operator-keyword": {
                    pattern: /\b(?:eq|ge|gt|in|le|lt|ne|not)\b/i,
                    alias: "operator"
                },
                number: n598,
                operator: /\*\*?|\|\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\/=&]|[~¬^]=?/,
                punctuation: g118
            };
        })(e1373);
    }
    a33(En, "sas");
});
var Rg = o17((iT, _g)=>{
    "use strict";
    _g.exports = Sn2;
    Sn2.displayName = "sass";
    Sn2.aliases = [];
    function Sn2(e1374) {
        (function(t994) {
            t994.languages.sass = t994.languages.extend("css", {
                comment: {
                    pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
                    lookbehind: !0,
                    greedy: !0
                }
            }), t994.languages.insertBefore("sass", "atrule", {
                "atrule-line": {
                    pattern: /^(?:[ \t]*)[@+=].+/m,
                    greedy: !0,
                    inside: {
                        atrule: /(?:@[\w-]+|[+=])/
                    }
                }
            }), delete t994.languages.sass.atrule;
            var r725 = /\$[-\w]+|#\{\$[-\w]+\}/, n599 = [
                /[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,
                {
                    pattern: /(\s)-(?=\s)/,
                    lookbehind: !0
                }
            ];
            t994.languages.insertBefore("sass", "property", {
                "variable-line": {
                    pattern: /^[ \t]*\$.+/m,
                    greedy: !0,
                    inside: {
                        punctuation: /:/,
                        variable: r725,
                        operator: n599
                    }
                },
                "property-line": {
                    pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
                    greedy: !0,
                    inside: {
                        property: [
                            /[^:\s]+(?=\s*:)/,
                            {
                                pattern: /(:)[^:\s]+/,
                                lookbehind: !0
                            }
                        ],
                        punctuation: /:/,
                        variable: r725,
                        operator: n599,
                        important: t994.languages.sass.important
                    }
                }
            }), delete t994.languages.sass.property, delete t994.languages.sass.important, t994.languages.insertBefore("sass", "punctuation", {
                selector: {
                    pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
                    lookbehind: !0,
                    greedy: !0
                }
            });
        })(e1374);
    }
    a33(Sn2, "sass");
});
var Ng = o17((oT, Ig)=>{
    "use strict";
    var Df = ee4();
    Ig.exports = hn;
    hn.displayName = "scala";
    hn.aliases = [];
    function hn(e1375) {
        e1375.register(Df), e1375.languages.scala = e1375.languages.extend("java", {
            "triple-quoted-string": {
                pattern: /"""[\s\S]*?"""/,
                greedy: !0,
                alias: "string"
            },
            string: {
                pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            keyword: /<-|=>|\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\b/,
            number: /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
            builtin: /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
            symbol: /'[^\d\s\\]\w*/
        }), e1375.languages.insertBefore("scala", "triple-quoted-string", {
            "string-interpolation": {
                pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
                greedy: !0,
                inside: {
                    id: {
                        pattern: /^\w+/,
                        greedy: !0,
                        alias: "function"
                    },
                    escape: {
                        pattern: /\\\$"|\$[$"]/,
                        greedy: !0,
                        alias: "symbol"
                    },
                    interpolation: {
                        pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
                        greedy: !0,
                        inside: {
                            punctuation: /^\$\{?|\}$/,
                            expression: {
                                pattern: /[\s\S]+/,
                                inside: e1375.languages.scala
                            }
                        }
                    },
                    string: /[\s\S]+/
                }
            }
        }), delete e1375.languages.scala["class-name"], delete e1375.languages.scala.function;
    }
    a33(hn, "scala");
});
var vg = o17((sT, wg)=>{
    "use strict";
    wg.exports = yn;
    yn.displayName = "scss";
    yn.aliases = [];
    function yn(e1376) {
        e1376.languages.scss = e1376.languages.extend("css", {
            comment: {
                pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                lookbehind: !0
            },
            atrule: {
                pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
                inside: {
                    rule: /@[\w-]+/
                }
            },
            url: /(?:[-a-z]+-)?url(?=\()/i,
            selector: {
                pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
                inside: {
                    parent: {
                        pattern: /&/,
                        alias: "important"
                    },
                    placeholder: /%[-\w]+/,
                    variable: /\$[-\w]+|#\{\$[-\w]+\}/
                }
            },
            property: {
                pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
                inside: {
                    variable: /\$[-\w]+|#\{\$[-\w]+\}/
                }
            }
        }), e1376.languages.insertBefore("scss", "atrule", {
            keyword: [
                /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
                {
                    pattern: /( )(?:from|through)(?= )/,
                    lookbehind: !0
                }
            ]
        }), e1376.languages.insertBefore("scss", "important", {
            variable: /\$[-\w]+|#\{\$[-\w]+\}/
        }), e1376.languages.insertBefore("scss", "function", {
            "module-modifier": {
                pattern: /\b(?:as|hide|show|with)\b/i,
                alias: "keyword"
            },
            placeholder: {
                pattern: /%[-\w]+/,
                alias: "selector"
            },
            statement: {
                pattern: /\B!(?:default|optional)\b/i,
                alias: "keyword"
            },
            boolean: /\b(?:false|true)\b/,
            null: {
                pattern: /\bnull\b/,
                alias: "keyword"
            },
            operator: {
                pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
                lookbehind: !0
            }
        }), e1376.languages.scss.atrule.inside.rest = e1376.languages.scss;
    }
    a33(yn, "scss");
});
var Cg = o17((lT, kg)=>{
    "use strict";
    var Mf = Pe6();
    kg.exports = Tn3;
    Tn3.displayName = "shellSession";
    Tn3.aliases = [];
    function Tn3(e1377) {
        e1377.register(Mf), function(t995) {
            var r726 = [
                /"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,
                /'[^']*'/.source,
                /\$'(?:[^'\\]|\\[\s\S])*'/.source,
                /<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source
            ].join("|");
            t995.languages["shell-session"] = {
                command: {
                    pattern: RegExp(/^/.source + "(?:" + (/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source + "|" + /[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source) + ")?" + /[$#%](?=\s)/.source + /(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function() {
                        return r726;
                    }), "m"),
                    greedy: !0,
                    inside: {
                        info: {
                            pattern: /^[^#$%]+/,
                            alias: "punctuation",
                            inside: {
                                user: /^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/,
                                punctuation: /:/,
                                path: /[\s\S]+/
                            }
                        },
                        bash: {
                            pattern: /(^[$#%]\s*)\S[\s\S]*/,
                            lookbehind: !0,
                            alias: "language-bash",
                            inside: t995.languages.bash
                        },
                        "shell-symbol": {
                            pattern: /^[$#%]/,
                            alias: "important"
                        }
                    }
                },
                output: /.(?:.*(?:[\r\n]|.$))*/
            }, t995.languages["sh-session"] = t995.languages.shellsession = t995.languages["shell-session"];
        }(e1377);
    }
    a33(Tn3, "shellSession");
});
var Lg = o17((uT, Og)=>{
    "use strict";
    Og.exports = An;
    An.displayName = "smali";
    An.aliases = [];
    function An(e1378) {
        e1378.languages.smali = {
            comment: /#.*/,
            string: {
                pattern: /"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\(?:.|u[\da-fA-F]{4}))'/,
                greedy: !0
            },
            "class-name": {
                pattern: /(^|[^L])L(?:(?:\w+|`[^`\r\n]*`)\/)*(?:[\w$]+|`[^`\r\n]*`)(?=\s*;)/,
                lookbehind: !0,
                inside: {
                    "class-name": {
                        pattern: /(^L|\/)(?:[\w$]+|`[^`\r\n]*`)$/,
                        lookbehind: !0
                    },
                    namespace: {
                        pattern: /^(L)(?:(?:\w+|`[^`\r\n]*`)\/)+/,
                        lookbehind: !0,
                        inside: {
                            punctuation: /\//
                        }
                    },
                    builtin: /^L/
                }
            },
            builtin: [
                {
                    pattern: /([();\[])[BCDFIJSVZ]+/,
                    lookbehind: !0
                },
                {
                    pattern: /([\w$>]:)[BCDFIJSVZ]/,
                    lookbehind: !0
                }
            ],
            keyword: [
                {
                    pattern: /(\.end\s+)[\w-]+/,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^\w.-])\.(?!\d)[\w-]+/,
                    lookbehind: !0
                },
                {
                    pattern: /(^|[^\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\w.-])/,
                    lookbehind: !0
                }
            ],
            function: {
                pattern: /(^|[^\w.-])(?:\w+|<[\w$-]+>)(?=\()/,
                lookbehind: !0
            },
            field: {
                pattern: /[\w$]+(?=:)/,
                alias: "variable"
            },
            register: {
                pattern: /(^|[^\w.-])[vp]\d(?![\w.-])/,
                lookbehind: !0,
                alias: "variable"
            },
            boolean: {
                pattern: /(^|[^\w.-])(?:false|true)(?![\w.-])/,
                lookbehind: !0
            },
            number: {
                pattern: /(^|[^/\w.-])-?(?:NAN|INFINITY|0x(?:[\dA-F]+(?:\.[\dA-F]*)?|\.[\dA-F]+)(?:p[+-]?[\dA-F]+)?|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)[dflst]?(?![\w.-])/i,
                lookbehind: !0
            },
            label: {
                pattern: /(:)\w+/,
                lookbehind: !0,
                alias: "property"
            },
            operator: /->|\.\.|[\[=]/,
            punctuation: /[{}(),;:]/
        };
    }
    a33(An, "smali");
});
var Dg = o17((dT, xg)=>{
    "use strict";
    xg.exports = _n3;
    _n3.displayName = "smalltalk";
    _n3.aliases = [];
    function _n3(e1379) {
        e1379.languages.smalltalk = {
            comment: {
                pattern: /"(?:""|[^"])*"/,
                greedy: !0
            },
            char: {
                pattern: /\$./,
                greedy: !0
            },
            string: {
                pattern: /'(?:''|[^'])*'/,
                greedy: !0
            },
            symbol: /#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,
            "block-arguments": {
                pattern: /(\[\s*):[^\[|]*\|/,
                lookbehind: !0,
                inside: {
                    variable: /:[\da-z]+/i,
                    punctuation: /\|/
                }
            },
            "temporary-variables": {
                pattern: /\|[^|]+\|/,
                inside: {
                    variable: /[\da-z]+/i,
                    punctuation: /\|/
                }
            },
            keyword: /\b(?:new|nil|self|super)\b/,
            boolean: /\b(?:false|true)\b/,
            number: [
                /\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/,
                /\b\d+(?:\.\d+)?(?:e-?\d+)?/
            ],
            operator: /[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,
            punctuation: /[.;:?\[\](){}]/
        };
    }
    a33(_n3, "smalltalk");
});
var Fg = o17((cT, Mg)=>{
    "use strict";
    var Ff = w24();
    Mg.exports = Rn2;
    Rn2.displayName = "smarty";
    Rn2.aliases = [];
    function Rn2(e1380) {
        e1380.register(Ff), function(t996) {
            t996.languages.smarty = {
                comment: {
                    pattern: /^\{\*[\s\S]*?\*\}/,
                    greedy: !0
                },
                "embedded-php": {
                    pattern: /^\{php\}[\s\S]*?\{\/php\}/,
                    greedy: !0,
                    inside: {
                        smarty: {
                            pattern: /^\{php\}|\{\/php\}$/,
                            inside: null
                        },
                        php: {
                            pattern: /[\s\S]+/,
                            alias: "language-php",
                            inside: t996.languages.php
                        }
                    }
                },
                string: [
                    {
                        pattern: /"(?:\\.|[^"\\\r\n])*"/,
                        greedy: !0,
                        inside: {
                            interpolation: {
                                pattern: /\{[^{}]*\}|`[^`]*`/,
                                inside: {
                                    "interpolation-punctuation": {
                                        pattern: /^[{`]|[`}]$/,
                                        alias: "punctuation"
                                    },
                                    expression: {
                                        pattern: /[\s\S]+/,
                                        inside: null
                                    }
                                }
                            },
                            variable: /\$\w+/
                        }
                    },
                    {
                        pattern: /'(?:\\.|[^'\\\r\n])*'/,
                        greedy: !0
                    }
                ],
                keyword: {
                    pattern: /(^\{\/?)[a-z_]\w*\b(?!\()/i,
                    lookbehind: !0,
                    greedy: !0
                },
                delimiter: {
                    pattern: /^\{\/?|\}$/,
                    greedy: !0,
                    alias: "punctuation"
                },
                number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
                variable: [
                    /\$(?!\d)\w+/,
                    /#(?!\d)\w+#/,
                    {
                        pattern: /(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(\[)(?!\d)\w+(?=\])/,
                        lookbehind: !0
                    }
                ],
                function: {
                    pattern: /(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i,
                    lookbehind: !0
                },
                "attr-name": /\b[a-z_]\w*(?=\s*=)/i,
                boolean: /\b(?:false|no|off|on|true|yes)\b/,
                punctuation: /[\[\](){}.,:`]|->/,
                operator: [
                    /[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,
                    /\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,
                    /\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/
                ]
            }, t996.languages.smarty["embedded-php"].inside.smarty.inside = t996.languages.smarty, t996.languages.smarty.string[0].inside.interpolation.inside.expression.inside = t996.languages.smarty;
            var r727 = /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/, n600 = RegExp(/\{\*[\s\S]*?\*\}/.source + "|" + /\{php\}[\s\S]*?\{\/php\}/.source + "|" + /\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(/<str>/g, function() {
                return r727.source;
            }), "g");
            t996.hooks.add("before-tokenize", function(i597) {
                var l302 = "{literal}", d148 = "{/literal}", u271 = !1;
                t996.languages["markup-templating"].buildPlaceholders(i597, "smarty", n600, function(p199) {
                    return p199 === d148 && (u271 = !1), u271 ? !1 : (p199 === l302 && (u271 = !0), !0);
                });
            }), t996.hooks.add("after-tokenize", function(i598) {
                t996.languages["markup-templating"].tokenizePlaceholders(i598, "smarty");
            });
        }(e1380);
    }
    a33(Rn2, "smarty");
});
var Bg = o17((pT, Ug)=>{
    "use strict";
    Ug.exports = In3;
    In3.displayName = "sml";
    In3.aliases = [
        "smlnj"
    ];
    function In3(e1381) {
        (function(t997) {
            var r728 = /\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\b/i;
            t997.languages.sml = {
                comment: /\(\*(?:[^*(]|\*(?!\))|\((?!\*)|\(\*(?:[^*(]|\*(?!\))|\((?!\*))*\*\))*\*\)/,
                string: {
                    pattern: /#?"(?:[^"\\]|\\.)*"/,
                    greedy: !0
                },
                "class-name": [
                    {
                        pattern: RegExp(/((?:^|[^:]):\s*)<TERMINAL>(?:\s*(?:(?:\*|->)\s*<TERMINAL>|,\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function() {
                            return /\s*(?:[*,]|->)/.source;
                        }).replace(/<TERMINAL>/g, function() {
                            return /(?:'[\w']*|<LONG-ID>|\((?:[^()]|\([^()]*\))*\)|\{(?:[^{}]|\{[^{}]*\})*\})(?:\s+<LONG-ID>)*/.source;
                        }).replace(/<LONG-ID>/g, function() {
                            return /(?!<KEYWORD>)[a-z\d_][\w'.]*/.source;
                        }).replace(/<KEYWORD>/g, function() {
                            return r728.source;
                        }), "i"),
                        lookbehind: !0,
                        greedy: !0,
                        inside: null
                    },
                    {
                        pattern: /((?:^|[^\w'])(?:datatype|exception|functor|signature|structure|type)\s+)[a-z_][\w'.]*/i,
                        lookbehind: !0
                    }
                ],
                function: {
                    pattern: /((?:^|[^\w'])fun\s+)[a-z_][\w'.]*/i,
                    lookbehind: !0
                },
                keyword: r728,
                variable: {
                    pattern: /(^|[^\w'])'[\w']*/,
                    lookbehind: !0
                },
                number: /~?\b(?:\d+(?:\.\d+)?(?:e~?\d+)?|0x[\da-f]+)\b/i,
                word: {
                    pattern: /\b0w(?:\d+|x[\da-f]+)\b/i,
                    alias: "constant"
                },
                boolean: /\b(?:false|true)\b/i,
                operator: /\.\.\.|:[>=:]|=>?|->|[<>]=?|[!+\-*/^#|@~]/,
                punctuation: /[(){}\[\].:,;]/
            }, t997.languages.sml["class-name"][0].inside = t997.languages.sml, t997.languages.smlnj = t997.languages.sml;
        })(e1381);
    }
    a33(In3, "sml");
});
var Gg = o17((gT, Pg)=>{
    "use strict";
    Pg.exports = Nn2;
    Nn2.displayName = "solidity";
    Nn2.aliases = [
        "sol"
    ];
    function Nn2(e1382) {
        e1382.languages.solidity = e1382.languages.extend("clike", {
            "class-name": {
                pattern: /(\b(?:contract|enum|interface|library|new|struct|using)\s+)(?!\d)[\w$]+/,
                lookbehind: !0
            },
            keyword: /\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\b/,
            operator: /=>|->|:=|=:|\*\*|\+\+|--|\|\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/
        }), e1382.languages.insertBefore("solidity", "keyword", {
            builtin: /\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\d|3[0-2])?)\b/
        }), e1382.languages.insertBefore("solidity", "number", {
            version: {
                pattern: /([<>]=?|\^)\d+\.\d+\.\d+\b/,
                lookbehind: !0,
                alias: "number"
            }
        }), e1382.languages.sol = e1382.languages.solidity;
    }
    a33(Nn2, "solidity");
});
var qg = o17((bT, $g)=>{
    "use strict";
    $g.exports = wn2;
    wn2.displayName = "solutionFile";
    wn2.aliases = [];
    function wn2(e1383) {
        (function(t998) {
            var r729 = {
                pattern: /\{[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\}/i,
                alias: "constant",
                inside: {
                    punctuation: /[{}]/
                }
            };
            t998.languages["solution-file"] = {
                comment: {
                    pattern: /#.*/,
                    greedy: !0
                },
                string: {
                    pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
                    greedy: !0,
                    inside: {
                        guid: r729
                    }
                },
                object: {
                    pattern: /^([ \t]*)(?:([A-Z]\w*)\b(?=.*(?:\r\n?|\n)(?:\1[ \t].*(?:\r\n?|\n))*\1End\2(?=[ \t]*$))|End[A-Z]\w*(?=[ \t]*$))/m,
                    lookbehind: !0,
                    greedy: !0,
                    alias: "keyword"
                },
                property: {
                    pattern: /^([ \t]*)(?!\s)[^\r\n"#=()]*[^\s"#=()](?=\s*=)/m,
                    lookbehind: !0,
                    inside: {
                        guid: r729
                    }
                },
                guid: r729,
                number: /\b\d+(?:\.\d+)*\b/,
                boolean: /\b(?:FALSE|TRUE)\b/,
                operator: /=/,
                punctuation: /[(),]/
            }, t998.languages.sln = t998.languages["solution-file"];
        })(e1383);
    }
    a33(wn2, "solutionFile");
});
var zg = o17((mT, Hg)=>{
    "use strict";
    var Uf = w24();
    Hg.exports = vn2;
    vn2.displayName = "soy";
    vn2.aliases = [];
    function vn2(e1384) {
        e1384.register(Uf), function(t999) {
            var r730 = /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, n601 = /\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;
            t999.languages.soy = {
                comment: [
                    /\/\*[\s\S]*?\*\//,
                    {
                        pattern: /(\s)\/\/.*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                "command-arg": {
                    pattern: /(\{+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,
                    lookbehind: !0,
                    alias: "string",
                    inside: {
                        punctuation: /\./
                    }
                },
                parameter: {
                    pattern: /(\{+\/?\s*@?param\??\s+)\.?[\w.]+/,
                    lookbehind: !0,
                    alias: "variable"
                },
                keyword: [
                    {
                        pattern: /(\{+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,
                        lookbehind: !0
                    },
                    /\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\b/
                ],
                delimiter: {
                    pattern: /^\{+\/?|\/?\}+$/,
                    alias: "punctuation"
                },
                property: /\w+(?==)/,
                variable: {
                    pattern: /\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+\]))*/,
                    inside: {
                        string: {
                            pattern: r730,
                            greedy: !0
                        },
                        number: n601,
                        punctuation: /[\[\].?]/
                    }
                },
                string: {
                    pattern: r730,
                    greedy: !0
                },
                function: [
                    /\w+(?=\()/,
                    {
                        pattern: /(\|[^\S\r\n]*)\w+/,
                        lookbehind: !0
                    }
                ],
                boolean: /\b(?:false|true)\b/,
                number: n601,
                operator: /\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,
                punctuation: /[{}()\[\]|.,:]/
            }, t999.hooks.add("before-tokenize", function(i599) {
                var l303 = /\{\{.+?\}\}|\{.+?\}|\s\/\/.*|\/\*[\s\S]*?\*\//g, d149 = "{literal}", u272 = "{/literal}", p200 = !1;
                t999.languages["markup-templating"].buildPlaceholders(i599, "soy", l303, function(c184) {
                    return c184 === u272 && (p200 = !1), p200 ? !1 : (c184 === d149 && (p200 = !0), !0);
                });
            }), t999.hooks.add("after-tokenize", function(i600) {
                t999.languages["markup-templating"].tokenizePlaceholders(i600, "soy");
            });
        }(e1384);
    }
    a33(vn2, "soy");
});
var Cn1 = o17((fT, Vg)=>{
    "use strict";
    Vg.exports = kn2;
    kn2.displayName = "turtle";
    kn2.aliases = [];
    function kn2(e1385) {
        e1385.languages.turtle = {
            comment: {
                pattern: /#.*/,
                greedy: !0
            },
            "multiline-string": {
                pattern: /"""(?:(?:""?)?(?:[^"\\]|\\.))*"""|'''(?:(?:''?)?(?:[^'\\]|\\.))*'''/,
                greedy: !0,
                alias: "string",
                inside: {
                    comment: /#.*/
                }
            },
            string: {
                pattern: /"(?:[^\\"\r\n]|\\.)*"|'(?:[^\\'\r\n]|\\.)*'/,
                greedy: !0
            },
            url: {
                pattern: /<(?:[^\x00-\x20<>"{}|^`\\]|\\(?:u[\da-fA-F]{4}|U[\da-fA-F]{8}))*>/,
                greedy: !0,
                inside: {
                    punctuation: /[<>]/
                }
            },
            function: {
                pattern: /(?:(?![-.\d\xB7])[-.\w\xB7\xC0-\uFFFD]+)?:(?:(?![-.])(?:[-.:\w\xC0-\uFFFD]|%[\da-f]{2}|\\.)+)?/i,
                inside: {
                    "local-name": {
                        pattern: /([^:]*:)[\s\S]+/,
                        lookbehind: !0
                    },
                    prefix: {
                        pattern: /[\s\S]+/,
                        inside: {
                            punctuation: /:/
                        }
                    }
                }
            },
            number: /[+-]?\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
            punctuation: /[{}.,;()[\]]|\^\^/,
            boolean: /\b(?:false|true)\b/,
            keyword: [
                /(?:\ba|@prefix|@base)\b|=/,
                /\b(?:base|graph|prefix)\b/i
            ],
            tag: {
                pattern: /@[a-z]+(?:-[a-z\d]+)*/i,
                inside: {
                    punctuation: /@/
                }
            }
        }, e1385.languages.trig = e1385.languages.turtle;
    }
    a33(kn2, "turtle");
});
var jg = o17((ET, Wg)=>{
    "use strict";
    var Bf = Cn1();
    Wg.exports = On2;
    On2.displayName = "sparql";
    On2.aliases = [
        "rq"
    ];
    function On2(e1386) {
        e1386.register(Bf), e1386.languages.sparql = e1386.languages.extend("turtle", {
            boolean: /\b(?:false|true)\b/i,
            variable: {
                pattern: /[?$]\w+/,
                greedy: !0
            }
        }), e1386.languages.insertBefore("sparql", "punctuation", {
            keyword: [
                /\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\b/i,
                /\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\b(?=\s*\()/i,
                /\b(?:BASE|GRAPH|PREFIX)\b/i
            ]
        }), e1386.languages.rq = e1386.languages.sparql;
    }
    a33(On2, "sparql");
});
var Kg = o17((ST, Yg)=>{
    "use strict";
    Yg.exports = Ln2;
    Ln2.displayName = "splunkSpl";
    Ln2.aliases = [];
    function Ln2(e1387) {
        e1387.languages["splunk-spl"] = {
            comment: /`comment\("(?:\\.|[^\\"])*"\)`/,
            string: {
                pattern: /"(?:\\.|[^\\"])*"/,
                greedy: !0
            },
            keyword: /\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\b/i,
            "operator-word": {
                pattern: /\b(?:and|as|by|not|or|xor)\b/i,
                alias: "operator"
            },
            function: /\b\w+(?=\s*\()/,
            property: /\b\w+(?=\s*=(?!=))/,
            date: {
                pattern: /\b\d{1,2}\/\d{1,2}\/\d{1,4}(?:(?::\d{1,2}){3})?\b/,
                alias: "number"
            },
            number: /\b\d+(?:\.\d+)?\b/,
            boolean: /\b(?:f|false|t|true)\b/i,
            operator: /[<>=]=?|[-+*/%|]/,
            punctuation: /[()[\],]/
        };
    }
    a33(Ln2, "splunkSpl");
});
var Xg = o17((hT, Zg)=>{
    "use strict";
    Zg.exports = xn;
    xn.displayName = "sqf";
    xn.aliases = [];
    function xn(e1388) {
        e1388.languages.sqf = e1388.languages.extend("clike", {
            string: {
                pattern: /"(?:(?:"")?[^"])*"(?!")|'(?:[^'])*'/,
                greedy: !0
            },
            keyword: /\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\b/i,
            boolean: /\b(?:false|true)\b/i,
            function: /\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\b/i,
            number: /(?:\$|\b0x)[\da-f]+\b|(?:\B\.\d+|\b\d+(?:\.\d+)?)(?:e[+-]?\d+)?\b/i,
            operator: /##|>>|&&|\|\||[!=<>]=?|[-+*/%#^]|\b(?:and|mod|not|or)\b/i,
            "magic-variable": {
                pattern: /\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\b/i,
                alias: "keyword"
            },
            constant: /\bDIK(?:_[a-z\d]+)+\b/i
        }), e1388.languages.insertBefore("sqf", "string", {
            macro: {
                pattern: /(^[ \t]*)#[a-z](?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
                lookbehind: !0,
                greedy: !0,
                alias: "property",
                inside: {
                    directive: {
                        pattern: /#[a-z]+\b/i,
                        alias: "keyword"
                    },
                    comment: e1388.languages.sqf.comment
                }
            }
        }), delete e1388.languages.sqf["class-name"];
    }
    a33(xn, "sqf");
});
var Jg = o17((yT, Qg)=>{
    "use strict";
    Qg.exports = Dn;
    Dn.displayName = "squirrel";
    Dn.aliases = [];
    function Dn(e1389) {
        e1389.languages.squirrel = e1389.languages.extend("clike", {
            comment: [
                e1389.languages.clike.comment[0],
                {
                    pattern: /(^|[^\\:])(?:\/\/|#).*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: {
                pattern: /(^|[^\\"'@])(?:@"(?:[^"]|"")*"(?!")|"(?:[^\\\r\n"]|\\.)*")/,
                lookbehind: !0,
                greedy: !0
            },
            "class-name": {
                pattern: /(\b(?:class|enum|extends|instanceof)\s+)\w+(?:\.\w+)*/,
                lookbehind: !0,
                inside: {
                    punctuation: /\./
                }
            },
            keyword: /\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\b/,
            number: /\b(?:0x[0-9a-fA-F]+|\d+(?:\.(?:\d+|[eE][+-]?\d+))?)\b/,
            operator: /\+\+|--|<=>|<[-<]|>>>?|&&?|\|\|?|[-+*/%!=<>]=?|[~^]|::?/,
            punctuation: /[(){}\[\],;.]/
        }), e1389.languages.insertBefore("squirrel", "string", {
            char: {
                pattern: /(^|[^\\"'])'(?:[^\\']|\\(?:[xuU][0-9a-fA-F]{0,8}|[\s\S]))'/,
                lookbehind: !0,
                greedy: !0
            }
        }), e1389.languages.insertBefore("squirrel", "operator", {
            "attribute-punctuation": {
                pattern: /<\/|\/>/,
                alias: "important"
            },
            lambda: {
                pattern: /@(?=\()/,
                alias: "operator"
            }
        });
    }
    a33(Dn, "squirrel");
});
var tb = o17((TT, eb)=>{
    "use strict";
    eb.exports = Mn;
    Mn.displayName = "stan";
    Mn.aliases = [];
    function Mn(e1390) {
        (function(t1000) {
            var r731 = /\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\b/;
            t1000.languages.stan = {
                comment: /\/\/.*|\/\*[\s\S]*?\*\/|#(?!include).*/,
                string: {
                    pattern: /"[\x20\x21\x23-\x5B\x5D-\x7E]*"/,
                    greedy: !0
                },
                directive: {
                    pattern: /^([ \t]*)#include\b.*/m,
                    lookbehind: !0,
                    alias: "property"
                },
                "function-arg": {
                    pattern: RegExp("(" + r731.source + /\s*\(\s*/.source + ")" + /[a-zA-Z]\w*/.source),
                    lookbehind: !0,
                    alias: "function"
                },
                constraint: {
                    pattern: /(\b(?:int|matrix|real|row_vector|vector)\s*)<[^<>]*>/,
                    lookbehind: !0,
                    inside: {
                        expression: {
                            pattern: /(=\s*)\S(?:\S|\s+(?!\s))*?(?=\s*(?:>$|,\s*\w+\s*=))/,
                            lookbehind: !0,
                            inside: null
                        },
                        property: /\b[a-z]\w*(?=\s*=)/i,
                        operator: /=/,
                        punctuation: /^<|>$|,/
                    }
                },
                keyword: [
                    {
                        pattern: /\bdata(?=\s*\{)|\b(?:functions|generated|model|parameters|quantities|transformed)\b/,
                        alias: "program-block"
                    },
                    /\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\b/,
                    r731
                ],
                function: /\b[a-z]\w*(?=\s*\()/i,
                number: /(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:E[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
                boolean: /\b(?:false|true)\b/,
                operator: /<-|\.[*/]=?|\|\|?|&&|[!=<>+\-*/]=?|['^%~?:]/,
                punctuation: /[()\[\]{},;]/
            }, t1000.languages.stan.constraint.inside.expression.inside = t1000.languages.stan;
        })(e1390);
    }
    a33(Mn, "stan");
});
var rb = o17((AT, ab)=>{
    "use strict";
    ab.exports = Fn2;
    Fn2.displayName = "stylus";
    Fn2.aliases = [];
    function Fn2(e1391) {
        (function(t1001) {
            var r732 = {
                pattern: /(\b\d+)(?:%|[a-z]+)/,
                lookbehind: !0
            }, n602 = {
                pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
                lookbehind: !0
            }, i601 = {
                comment: {
                    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                    lookbehind: !0
                },
                url: {
                    pattern: /\burl\((["']?).*?\1\)/i,
                    greedy: !0
                },
                string: {
                    pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
                    greedy: !0
                },
                interpolation: null,
                func: null,
                important: /\B!(?:important|optional)\b/i,
                keyword: {
                    pattern: /(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,
                    lookbehind: !0
                },
                hexcode: /#[\da-f]{3,6}/i,
                color: [
                    /\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
                    {
                        pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
                        inside: {
                            unit: r732,
                            number: n602,
                            function: /[\w-]+(?=\()/,
                            punctuation: /[(),]/
                        }
                    }
                ],
                entity: /\\[\da-f]{1,8}/i,
                unit: r732,
                boolean: /\b(?:false|true)\b/,
                operator: [
                    /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/
                ],
                number: n602,
                punctuation: /[{}()\[\];:,]/
            };
            i601.interpolation = {
                pattern: /\{[^\r\n}:]+\}/,
                alias: "variable",
                inside: {
                    delimiter: {
                        pattern: /^\{|\}$/,
                        alias: "punctuation"
                    },
                    rest: i601
                }
            }, i601.func = {
                pattern: /[\w-]+\([^)]*\).*/,
                inside: {
                    function: /^[^(]+/,
                    rest: i601
                }
            }, t1001.languages.stylus = {
                "atrule-declaration": {
                    pattern: /(^[ \t]*)@.+/m,
                    lookbehind: !0,
                    inside: {
                        atrule: /^@[\w-]+/,
                        rest: i601
                    }
                },
                "variable-declaration": {
                    pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
                    lookbehind: !0,
                    inside: {
                        variable: /^\S+/,
                        rest: i601
                    }
                },
                statement: {
                    pattern: /(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,
                    lookbehind: !0,
                    inside: {
                        keyword: /^\S+/,
                        rest: i601
                    }
                },
                "property-declaration": {
                    pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,
                    lookbehind: !0,
                    inside: {
                        property: {
                            pattern: /^[^\s:]+/,
                            inside: {
                                interpolation: i601.interpolation
                            }
                        },
                        rest: i601
                    }
                },
                selector: {
                    pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,
                    lookbehind: !0,
                    inside: {
                        interpolation: i601.interpolation,
                        comment: i601.comment,
                        punctuation: /[{},]/
                    }
                },
                func: i601.func,
                string: i601.string,
                comment: {
                    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
                    lookbehind: !0,
                    greedy: !0
                },
                interpolation: i601.interpolation,
                punctuation: /[{}()\[\];:.]/
            };
        })(e1391);
    }
    a33(Fn2, "stylus");
});
var ib = o17((_T, nb)=>{
    "use strict";
    nb.exports = Un2;
    Un2.displayName = "swift";
    Un2.aliases = [];
    function Un2(e1392) {
        e1392.languages.swift = {
            comment: {
                pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,
                lookbehind: !0,
                greedy: !0
            },
            "string-literal": [
                {
                    pattern: RegExp(/(^|[^"#])/.source + "(?:" + /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/,
                            lookbehind: !0,
                            inside: null
                        },
                        "interpolation-punctuation": {
                            pattern: /^\)|\\\($/,
                            alias: "punctuation"
                        },
                        punctuation: /\\(?=[\r\n])/,
                        string: /[\s\S]+/
                    }
                },
                {
                    pattern: RegExp(/(^|[^"#])(#+)/.source + "(?:" + /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"),
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,
                            lookbehind: !0,
                            inside: null
                        },
                        "interpolation-punctuation": {
                            pattern: /^\)|\\#+\($/,
                            alias: "punctuation"
                        },
                        string: /[\s\S]+/
                    }
                }
            ],
            directive: {
                pattern: RegExp(/#/.source + "(?:" + (/(?:elseif|if)\b/.source + "(?:[ 	]*" + /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+") + "|" + /(?:else|endif)\b/.source + ")"),
                alias: "property",
                inside: {
                    "directive-name": /^#\w+/,
                    boolean: /\b(?:false|true)\b/,
                    number: /\b\d+(?:\.\d+)*\b/,
                    operator: /!|&&|\|\||[<>]=?/,
                    punctuation: /[(),]/
                }
            },
            literal: {
                pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,
                alias: "constant"
            },
            "other-directive": {
                pattern: /#\w+\b/,
                alias: "property"
            },
            attribute: {
                pattern: /@\w+/,
                alias: "atrule"
            },
            "function-definition": {
                pattern: /(\bfunc\s+)\w+/,
                lookbehind: !0,
                alias: "function"
            },
            label: {
                pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,
                lookbehind: !0,
                alias: "important"
            },
            keyword: /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
            boolean: /\b(?:false|true)\b/,
            nil: {
                pattern: /\bnil\b/,
                alias: "constant"
            },
            "short-argument": /\$\d+\b/,
            omit: {
                pattern: /\b_\b/,
                alias: "keyword"
            },
            number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
            "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
            operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
            punctuation: /[{}[\]();,.:\\]/
        }, e1392.languages.swift["string-literal"].forEach(function(t1002) {
            t1002.inside.interpolation.inside = e1392.languages.swift;
        });
    }
    a33(Un2, "swift");
});
var sb = o17((RT, ob)=>{
    "use strict";
    ob.exports = Bn2;
    Bn2.displayName = "systemd";
    Bn2.aliases = [];
    function Bn2(e1393) {
        (function(t1003) {
            var r733 = {
                pattern: /^[;#].*/m,
                greedy: !0
            }, n603 = /"(?:[^\r\n"\\]|\\(?:[^\r]|\r\n?))*"(?!\S)/.source;
            t1003.languages.systemd = {
                comment: r733,
                section: {
                    pattern: /^\[[^\n\r\[\]]*\](?=[ \t]*$)/m,
                    greedy: !0,
                    inside: {
                        punctuation: /^\[|\]$/,
                        "section-name": {
                            pattern: /[\s\S]+/,
                            alias: "selector"
                        }
                    }
                },
                key: {
                    pattern: /^[^\s=]+(?=[ \t]*=)/m,
                    greedy: !0,
                    alias: "attr-name"
                },
                value: {
                    pattern: RegExp(/(=[ \t]*(?!\s))/.source + "(?:" + n603 + `|(?=[^"\r
]))(?:` + (/[^\s\\]/.source + '|[ 	]+(?:(?![ 	"])|' + n603 + ")|" + /\\[\r\n]+(?:[#;].*[\r\n]+)*(?![#;])/.source) + ")*"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "attr-value",
                    inside: {
                        comment: r733,
                        quoted: {
                            pattern: RegExp(/(^|\s)/.source + n603),
                            lookbehind: !0,
                            greedy: !0
                        },
                        punctuation: /\\$/m,
                        boolean: {
                            pattern: /^(?:false|no|off|on|true|yes)$/,
                            greedy: !0
                        }
                    }
                },
                punctuation: /=/
            };
        })(e1393);
    }
    a33(Bn2, "systemd");
});
var ne6 = o17((IT, lb)=>{
    "use strict";
    lb.exports = Pn3;
    Pn3.displayName = "t4Templating";
    Pn3.aliases = [];
    function Pn3(e1394) {
        (function(t1004) {
            function r734(i602, l304, d150) {
                return {
                    pattern: RegExp("<#" + i602 + "[\\s\\S]*?#>"),
                    alias: "block",
                    inside: {
                        delimiter: {
                            pattern: RegExp("^<#" + i602 + "|#>$"),
                            alias: "important"
                        },
                        content: {
                            pattern: /[\s\S]+/,
                            inside: l304,
                            alias: d150
                        }
                    }
                };
            }
            a33(r734, "createBlock");
            function n604(i603) {
                var l305 = t1004.languages[i603], d151 = "language-" + i603;
                return {
                    block: {
                        pattern: /<#[\s\S]+?#>/,
                        inside: {
                            directive: r734("@", {
                                "attr-value": {
                                    pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/,
                                    inside: {
                                        punctuation: /^=|^["']|["']$/
                                    }
                                },
                                keyword: /\b\w+(?=\s)/,
                                "attr-name": /\b\w+/
                            }),
                            expression: r734("=", l305, d151),
                            "class-feature": r734("\\+", l305, d151),
                            standard: r734("", l305, d151)
                        }
                    }
                };
            }
            a33(n604, "createT4"), t1004.languages["t4-templating"] = Object.defineProperty({}, "createT4", {
                value: n604
            });
        })(e1394);
    }
    a33(Pn3, "t4Templating");
});
var db = o17((NT, ub)=>{
    "use strict";
    var Pf = ne6(), Gf = W10();
    ub.exports = Gn2;
    Gn2.displayName = "t4Cs";
    Gn2.aliases = [];
    function Gn2(e1395) {
        e1395.register(Pf), e1395.register(Gf), e1395.languages.t4 = e1395.languages["t4-cs"] = e1395.languages["t4-templating"].createT4("csharp");
    }
    a33(Gn2, "t4Cs");
});
var qn = o17((wT, cb)=>{
    "use strict";
    var $f = $e3();
    cb.exports = $n2;
    $n2.displayName = "vbnet";
    $n2.aliases = [];
    function $n2(e1396) {
        e1396.register($f), e1396.languages.vbnet = e1396.languages.extend("basic", {
            comment: [
                {
                    pattern: /(?:!|REM\b).+/i,
                    inside: {
                        keyword: /^REM/i
                    }
                },
                {
                    pattern: /(^|[^\\:])'.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            string: {
                pattern: /(^|[^"])"(?:""|[^"])*"(?!")/,
                lookbehind: !0,
                greedy: !0
            },
            keyword: /(?:\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,
            punctuation: /[,;:(){}]/
        });
    }
    a33($n2, "vbnet");
});
var gb = o17((vT, pb)=>{
    "use strict";
    var qf = ne6(), Hf = qn();
    pb.exports = Hn2;
    Hn2.displayName = "t4Vb";
    Hn2.aliases = [];
    function Hn2(e1397) {
        e1397.register(qf), e1397.register(Hf), e1397.languages["t4-vb"] = e1397.languages["t4-templating"].createT4("vbnet");
    }
    a33(Hn2, "t4Vb");
});
var Vn = o17((kT, bb)=>{
    "use strict";
    bb.exports = zn2;
    zn2.displayName = "yaml";
    zn2.aliases = [
        "yml"
    ];
    function zn2(e1398) {
        (function(t1005) {
            var r735 = /[*&][^\s[\]{},]+/, n605 = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/, i604 = "(?:" + n605.source + "(?:[ 	]+" + r735.source + ")?|" + r735.source + "(?:[ 	]+" + n605.source + ")?)", l306 = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {
                return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
            }), d152 = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
            function u273(p201, c185) {
                c185 = (c185 || "").replace(/m/g, "") + "m";
                var g119 = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
                    return i604;
                }).replace(/<<value>>/g, function() {
                    return p201;
                });
                return RegExp(g119, c185);
            }
            a33(u273, "createValuePattern"), t1005.languages.yaml = {
                scalar: {
                    pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function() {
                        return i604;
                    })),
                    lookbehind: !0,
                    alias: "string"
                },
                comment: /#.*/,
                key: {
                    pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
                        return i604;
                    }).replace(/<<key>>/g, function() {
                        return "(?:" + l306 + "|" + d152 + ")";
                    })),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "atrule"
                },
                directive: {
                    pattern: /(^[ \t]*)%.+/m,
                    lookbehind: !0,
                    alias: "important"
                },
                datetime: {
                    pattern: u273(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
                    lookbehind: !0,
                    alias: "number"
                },
                boolean: {
                    pattern: u273(/false|true/.source, "i"),
                    lookbehind: !0,
                    alias: "important"
                },
                null: {
                    pattern: u273(/null|~/.source, "i"),
                    lookbehind: !0,
                    alias: "important"
                },
                string: {
                    pattern: u273(d152),
                    lookbehind: !0,
                    greedy: !0
                },
                number: {
                    pattern: u273(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"),
                    lookbehind: !0
                },
                tag: n605,
                important: r735,
                punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
            }, t1005.languages.yml = t1005.languages.yaml;
        })(e1398);
    }
    a33(zn2, "yaml");
});
var fb = o17((CT, mb)=>{
    "use strict";
    var zf = Vn();
    mb.exports = Wn3;
    Wn3.displayName = "tap";
    Wn3.aliases = [];
    function Wn3(e1399) {
        e1399.register(zf), e1399.languages.tap = {
            fail: /not ok[^#{\n\r]*/,
            pass: /ok[^#{\n\r]*/,
            pragma: /pragma [+-][a-z]+/,
            bailout: /bail out!.*/i,
            version: /TAP version \d+/i,
            plan: /\b\d+\.\.\d+(?: +#.*)?/,
            subtest: {
                pattern: /# Subtest(?:: .*)?/,
                greedy: !0
            },
            punctuation: /[{}]/,
            directive: /#.*/,
            yamlish: {
                pattern: /(^[ \t]*)---[\s\S]*?[\r\n][ \t]*\.\.\.$/m,
                lookbehind: !0,
                inside: e1399.languages.yaml,
                alias: "language-yaml"
            }
        };
    }
    a33(Wn3, "tap");
});
var Sb = o17((OT, Eb)=>{
    "use strict";
    Eb.exports = jn;
    jn.displayName = "tcl";
    jn.aliases = [];
    function jn(e1400) {
        e1400.languages.tcl = {
            comment: {
                pattern: /(^|[^\\])#.*/,
                lookbehind: !0
            },
            string: {
                pattern: /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"/,
                greedy: !0
            },
            variable: [
                {
                    pattern: /(\$)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/,
                    lookbehind: !0
                },
                {
                    pattern: /(\$)\{[^}]+\}/,
                    lookbehind: !0
                },
                {
                    pattern: /(^[\t ]*set[ \t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/m,
                    lookbehind: !0
                }
            ],
            function: {
                pattern: /(^[\t ]*proc[ \t]+)\S+/m,
                lookbehind: !0
            },
            builtin: [
                {
                    pattern: /(^[\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\b/m,
                    lookbehind: !0
                },
                /\b(?:else|elseif)\b/
            ],
            scope: {
                pattern: /(^[\t ]*)(?:global|upvar|variable)\b/m,
                lookbehind: !0,
                alias: "constant"
            },
            keyword: {
                pattern: /(^[\t ]*|\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\b/m,
                lookbehind: !0
            },
            operator: /!=?|\*\*?|==|&&?|\|\|?|<[=<]?|>[=>]?|[-+~\/%?^]|\b(?:eq|in|ne|ni)\b/,
            punctuation: /[{}()\[\]]/
        };
    }
    a33(jn, "tcl");
});
var yb = o17((LT, hb)=>{
    "use strict";
    hb.exports = Yn2;
    Yn2.displayName = "textile";
    Yn2.aliases = [];
    function Yn2(e1401) {
        (function(t1006) {
            var r736 = /\([^|()\n]+\)|\[[^\]\n]+\]|\{[^}\n]+\}/.source, n606 = /\)|\((?![^|()\n]+\))/.source;
            function i605(b98, m143) {
                return RegExp(b98.replace(/<MOD>/g, function() {
                    return "(?:" + r736 + ")";
                }).replace(/<PAR>/g, function() {
                    return "(?:" + n606 + ")";
                }), m143 || "");
            }
            a33(i605, "withModifier");
            var l307 = {
                css: {
                    pattern: /\{[^{}]+\}/,
                    inside: {
                        rest: t1006.languages.css
                    }
                },
                "class-id": {
                    pattern: /(\()[^()]+(?=\))/,
                    lookbehind: !0,
                    alias: "attr-value"
                },
                lang: {
                    pattern: /(\[)[^\[\]]+(?=\])/,
                    lookbehind: !0,
                    alias: "attr-value"
                },
                punctuation: /[\\\/]\d+|\S/
            }, d153 = t1006.languages.textile = t1006.languages.extend("markup", {
                phrase: {
                    pattern: /(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,
                    lookbehind: !0,
                    inside: {
                        "block-tag": {
                            pattern: i605(/^[a-z]\w*(?:<MOD>|<PAR>|[<>=])*\./.source),
                            inside: {
                                modifier: {
                                    pattern: i605(/(^[a-z]\w*)(?:<MOD>|<PAR>|[<>=])+(?=\.)/.source),
                                    lookbehind: !0,
                                    inside: l307
                                },
                                tag: /^[a-z]\w*/,
                                punctuation: /\.$/
                            }
                        },
                        list: {
                            pattern: i605(/^[*#]+<MOD>*\s+\S.*/.source, "m"),
                            inside: {
                                modifier: {
                                    pattern: i605(/(^[*#]+)<MOD>+/.source),
                                    lookbehind: !0,
                                    inside: l307
                                },
                                punctuation: /^[*#]+/
                            }
                        },
                        table: {
                            pattern: i605(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\.\s*)?(?:\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.))[^|]*)+\|/.source, "m"),
                            inside: {
                                modifier: {
                                    pattern: i605(/(^|\|(?:\r?\n|\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+(?=\.)/.source),
                                    lookbehind: !0,
                                    inside: l307
                                },
                                punctuation: /\||^\./
                            }
                        },
                        inline: {
                            pattern: i605(/(^|[^a-zA-Z\d])(\*\*|__|\?\?|[*_%@+\-^~])<MOD>*.+?\2(?![a-zA-Z\d])/.source),
                            lookbehind: !0,
                            inside: {
                                bold: {
                                    pattern: i605(/(^(\*\*?)<MOD>*).+?(?=\2)/.source),
                                    lookbehind: !0
                                },
                                italic: {
                                    pattern: i605(/(^(__?)<MOD>*).+?(?=\2)/.source),
                                    lookbehind: !0
                                },
                                cite: {
                                    pattern: i605(/(^\?\?<MOD>*).+?(?=\?\?)/.source),
                                    lookbehind: !0,
                                    alias: "string"
                                },
                                code: {
                                    pattern: i605(/(^@<MOD>*).+?(?=@)/.source),
                                    lookbehind: !0,
                                    alias: "keyword"
                                },
                                inserted: {
                                    pattern: i605(/(^\+<MOD>*).+?(?=\+)/.source),
                                    lookbehind: !0
                                },
                                deleted: {
                                    pattern: i605(/(^-<MOD>*).+?(?=-)/.source),
                                    lookbehind: !0
                                },
                                span: {
                                    pattern: i605(/(^%<MOD>*).+?(?=%)/.source),
                                    lookbehind: !0
                                },
                                modifier: {
                                    pattern: i605(/(^\*\*|__|\?\?|[*_%@+\-^~])<MOD>+/.source),
                                    lookbehind: !0,
                                    inside: l307
                                },
                                punctuation: /[*_%?@+\-^~]+/
                            }
                        },
                        "link-ref": {
                            pattern: /^\[[^\]]+\]\S+$/m,
                            inside: {
                                string: {
                                    pattern: /(^\[)[^\]]+(?=\])/,
                                    lookbehind: !0
                                },
                                url: {
                                    pattern: /(^\])\S+$/,
                                    lookbehind: !0
                                },
                                punctuation: /[\[\]]/
                            }
                        },
                        link: {
                            pattern: i605(/"<MOD>*[^"]+":.+?(?=[^\w/]?(?:\s|$))/.source),
                            inside: {
                                text: {
                                    pattern: i605(/(^"<MOD>*)[^"]+(?=")/.source),
                                    lookbehind: !0
                                },
                                modifier: {
                                    pattern: i605(/(^")<MOD>+/.source),
                                    lookbehind: !0,
                                    inside: l307
                                },
                                url: {
                                    pattern: /(:).+/,
                                    lookbehind: !0
                                },
                                punctuation: /[":]/
                            }
                        },
                        image: {
                            pattern: i605(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\s()]+(?:\([^)]+\))?!(?::.+?(?=[^\w/]?(?:\s|$)))?/.source),
                            inside: {
                                source: {
                                    pattern: i605(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\s()]+(?:\([^)]+\))?(?=!)/.source),
                                    lookbehind: !0,
                                    alias: "url"
                                },
                                modifier: {
                                    pattern: i605(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),
                                    lookbehind: !0,
                                    inside: l307
                                },
                                url: {
                                    pattern: /(:).+/,
                                    lookbehind: !0
                                },
                                punctuation: /[!:]/
                            }
                        },
                        footnote: {
                            pattern: /\b\[\d+\]/,
                            alias: "comment",
                            inside: {
                                punctuation: /\[|\]/
                            }
                        },
                        acronym: {
                            pattern: /\b[A-Z\d]+\([^)]+\)/,
                            inside: {
                                comment: {
                                    pattern: /(\()[^()]+(?=\))/,
                                    lookbehind: !0
                                },
                                punctuation: /[()]/
                            }
                        },
                        mark: {
                            pattern: /\b\((?:C|R|TM)\)/,
                            alias: "comment",
                            inside: {
                                punctuation: /[()]/
                            }
                        }
                    }
                }
            }), u274 = d153.phrase.inside, p202 = {
                inline: u274.inline,
                link: u274.link,
                image: u274.image,
                footnote: u274.footnote,
                acronym: u274.acronym,
                mark: u274.mark
            };
            d153.tag.pattern = /<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;
            var c186 = u274.inline.inside;
            c186.bold.inside = p202, c186.italic.inside = p202, c186.inserted.inside = p202, c186.deleted.inside = p202, c186.span.inside = p202;
            var g120 = u274.table.inside;
            g120.inline = p202.inline, g120.link = p202.link, g120.image = p202.image, g120.footnote = p202.footnote, g120.acronym = p202.acronym, g120.mark = p202.mark;
        })(e1401);
    }
    a33(Yn2, "textile");
});
var Ab = o17((xT, Tb)=>{
    "use strict";
    Tb.exports = Kn2;
    Kn2.displayName = "toml";
    Kn2.aliases = [];
    function Kn2(e1402) {
        (function(t1007) {
            var r737 = /(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;
            function n607(i606) {
                return i606.replace(/__/g, function() {
                    return r737;
                });
            }
            a33(n607, "insertKey"), t1007.languages.toml = {
                comment: {
                    pattern: /#.*/,
                    greedy: !0
                },
                table: {
                    pattern: RegExp(n607(/(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source), "m"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "class-name"
                },
                key: {
                    pattern: RegExp(n607(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source), "m"),
                    lookbehind: !0,
                    greedy: !0,
                    alias: "property"
                },
                string: {
                    pattern: /"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/,
                    greedy: !0
                },
                date: [
                    {
                        pattern: /\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i,
                        alias: "number"
                    },
                    {
                        pattern: /\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/,
                        alias: "number"
                    }
                ],
                number: /(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,
                boolean: /\b(?:false|true)\b/,
                punctuation: /[.,=[\]{}]/
            };
        })(e1402);
    }
    a33(Kn2, "toml");
});
var Rb = o17((DT, _b)=>{
    "use strict";
    _b.exports = Zn2;
    Zn2.displayName = "tremor";
    Zn2.aliases = [];
    function Zn2(e1403) {
        (function(t1008) {
            t1008.languages.tremor = {
                comment: {
                    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
                    lookbehind: !0
                },
                "interpolated-string": null,
                extractor: {
                    pattern: /\b[a-z_]\w*\|(?:[^\r\n\\|]|\\(?:\r\n|[\s\S]))*\|/i,
                    greedy: !0,
                    inside: {
                        regex: {
                            pattern: /(^re)\|[\s\S]+/,
                            lookbehind: !0
                        },
                        function: /^\w+/,
                        value: /\|[\s\S]+/
                    }
                },
                identifier: {
                    pattern: /`[^`]*`/,
                    greedy: !0
                },
                function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())\b/,
                keyword: /\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\b/,
                boolean: /\b(?:false|null|true)\b/i,
                number: /\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee][+-]?[\d_]+)?)\b/,
                "pattern-punctuation": {
                    pattern: /%(?=[({[])/,
                    alias: "punctuation"
                },
                operator: /[-+*\/%~!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\b/,
                punctuation: /::|[;\[\]()\{\},.:]/
            };
            var r738 = /#\{(?:[^"{}]|\{[^{}]*\}|"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*")*\}/.source;
            t1008.languages.tremor["interpolated-string"] = {
                pattern: RegExp(/(^|[^\\])/.source + '(?:"""(?:' + /[^"\\#]|\\[\s\S]|"(?!"")|#(?!\{)/.source + "|" + r738 + ')*"""|"(?:' + /[^"\\\r\n#]|\\(?:\r\n|[\s\S])|#(?!\{)/.source + "|" + r738 + ')*")'),
                lookbehind: !0,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: RegExp(r738),
                        inside: {
                            punctuation: /^#\{|\}$/,
                            expression: {
                                pattern: /[\s\S]+/,
                                inside: t1008.languages.tremor
                            }
                        }
                    },
                    string: /[\s\S]+/
                }
            }, t1008.languages.troy = t1008.languages.tremor, t1008.languages.trickle = t1008.languages.tremor;
        })(e1403);
    }
    a33(Zn2, "tremor");
});
var Nb = o17((MT, Ib)=>{
    "use strict";
    var Vf = Pa1(), Wf = te4();
    Ib.exports = Xn3;
    Xn3.displayName = "tsx";
    Xn3.aliases = [];
    function Xn3(e1404) {
        e1404.register(Vf), e1404.register(Wf), function(t1009) {
            var r739 = t1009.util.clone(t1009.languages.typescript);
            t1009.languages.tsx = t1009.languages.extend("jsx", r739), delete t1009.languages.tsx.parameter, delete t1009.languages.tsx["literal-property"];
            var n608 = t1009.languages.tsx.tag;
            n608.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + "(?:" + n608.pattern.source + ")", n608.pattern.flags), n608.lookbehind = !0;
        }(e1404);
    }
    a33(Xn3, "tsx");
});
var vb = o17((FT, wb)=>{
    "use strict";
    var jf = w24();
    wb.exports = Qn;
    Qn.displayName = "tt2";
    Qn.aliases = [];
    function Qn(e1405) {
        e1405.register(jf), function(t1010) {
            t1010.languages.tt2 = t1010.languages.extend("clike", {
                comment: /#.*|\[%#[\s\S]*?%\]/,
                keyword: /\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\b/,
                punctuation: /[[\]{},()]/
            }), t1010.languages.insertBefore("tt2", "number", {
                operator: /=[>=]?|!=?|<=?|>=?|&&|\|\|?|\b(?:and|not|or)\b/,
                variable: {
                    pattern: /\b[a-z]\w*(?:\s*\.\s*(?:\d+|\$?[a-z]\w*))*\b/i
                }
            }), t1010.languages.insertBefore("tt2", "keyword", {
                delimiter: {
                    pattern: /^(?:\[%|%%)-?|-?%\]$/,
                    alias: "punctuation"
                }
            }), t1010.languages.insertBefore("tt2", "string", {
                "single-quoted-string": {
                    pattern: /'[^\\']*(?:\\[\s\S][^\\']*)*'/,
                    greedy: !0,
                    alias: "string"
                },
                "double-quoted-string": {
                    pattern: /"[^\\"]*(?:\\[\s\S][^\\"]*)*"/,
                    greedy: !0,
                    alias: "string",
                    inside: {
                        variable: {
                            pattern: /\$(?:[a-z]\w*(?:\.(?:\d+|\$?[a-z]\w*))*)/i
                        }
                    }
                }
            }), delete t1010.languages.tt2.string, t1010.hooks.add("before-tokenize", function(r740) {
                var n609 = /\[%[\s\S]+?%\]/g;
                t1010.languages["markup-templating"].buildPlaceholders(r740, "tt2", n609);
            }), t1010.hooks.add("after-tokenize", function(r741) {
                t1010.languages["markup-templating"].tokenizePlaceholders(r741, "tt2");
            });
        }(e1405);
    }
    a33(Qn, "tt2");
});
var Cb = o17((UT, kb)=>{
    "use strict";
    var Yf = w24();
    kb.exports = Jn;
    Jn.displayName = "twig";
    Jn.aliases = [];
    function Jn(e1406) {
        e1406.register(Yf), e1406.languages.twig = {
            comment: /^\{#[\s\S]*?#\}$/,
            "tag-name": {
                pattern: /(^\{%-?\s*)\w+/,
                lookbehind: !0,
                alias: "keyword"
            },
            delimiter: {
                pattern: /^\{[{%]-?|-?[%}]\}$/,
                alias: "punctuation"
            },
            string: {
                pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                inside: {
                    punctuation: /^['"]|['"]$/
                }
            },
            keyword: /\b(?:even|if|odd)\b/,
            boolean: /\b(?:false|null|true)\b/,
            number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
            operator: [
                {
                    pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
                    lookbehind: !0
                },
                /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
            ],
            punctuation: /[()\[\]{}:.,]/
        }, e1406.hooks.add("before-tokenize", function(t1011) {
            if (t1011.language === "twig") {
                var r742 = /\{(?:#[\s\S]*?#|%[\s\S]*?%|\{[\s\S]*?\})\}/g;
                e1406.languages["markup-templating"].buildPlaceholders(t1011, "twig", r742);
            }
        }), e1406.hooks.add("after-tokenize", function(t1012) {
            e1406.languages["markup-templating"].tokenizePlaceholders(t1012, "twig");
        });
    }
    a33(Jn, "twig");
});
var Lb = o17((BT, Ob)=>{
    "use strict";
    Ob.exports = ei;
    ei.displayName = "typoscript";
    ei.aliases = [
        "tsconfig"
    ];
    function ei(e1407) {
        (function(t1013) {
            var r743 = /\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\b/;
            t1013.languages.typoscript = {
                comment: [
                    {
                        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
                        lookbehind: !0
                    },
                    {
                        pattern: /(^|[^\\:= \t]|(?:^|[^= \t])[ \t]+)\/\/.*/,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /(^|[^"'])#.*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                function: [
                    {
                        pattern: /<INCLUDE_TYPOSCRIPT:\s*source\s*=\s*(?:"[^"\r\n]*"|'[^'\r\n]*')\s*>/,
                        inside: {
                            string: {
                                pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
                                inside: {
                                    keyword: r743
                                }
                            },
                            keyword: {
                                pattern: /INCLUDE_TYPOSCRIPT/
                            }
                        }
                    },
                    {
                        pattern: /@import\s*(?:"[^"\r\n]*"|'[^'\r\n]*')/,
                        inside: {
                            string: /"[^"\r\n]*"|'[^'\r\n]*'/
                        }
                    }
                ],
                string: {
                    pattern: /^([^=]*=[< ]?)(?:(?!\]\n).)*/,
                    lookbehind: !0,
                    inside: {
                        function: /\{\$.*\}/,
                        keyword: r743,
                        number: /^\d+$/,
                        punctuation: /[,|:]/
                    }
                },
                keyword: r743,
                number: {
                    pattern: /\b\d+\s*[.{=]/,
                    inside: {
                        operator: /[.{=]/
                    }
                },
                tag: {
                    pattern: /\.?[-\w\\]+\.?/,
                    inside: {
                        punctuation: /\./
                    }
                },
                punctuation: /[{}[\];(),.:|]/,
                operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/
            }, t1013.languages.tsconfig = t1013.languages.typoscript;
        })(e1407);
    }
    a33(ei, "typoscript");
});
var Db = o17((PT, xb)=>{
    "use strict";
    xb.exports = ti;
    ti.displayName = "unrealscript";
    ti.aliases = [
        "uc",
        "uscript"
    ];
    function ti(e1408) {
        e1408.languages.unrealscript = {
            comment: /\/\/.*|\/\*[\s\S]*?\*\//,
            string: {
                pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                greedy: !0
            },
            category: {
                pattern: /(\b(?:(?:autoexpand|hide|show)categories|var)\s*\()[^()]+(?=\))/,
                lookbehind: !0,
                greedy: !0,
                alias: "property"
            },
            metadata: {
                pattern: /(\w\s*)<\s*\w+\s*=[^<>|=\r\n]+(?:\|\s*\w+\s*=[^<>|=\r\n]+)*>/,
                lookbehind: !0,
                greedy: !0,
                inside: {
                    property: /\b\w+(?=\s*=)/,
                    operator: /=/,
                    punctuation: /[<>|]/
                }
            },
            macro: {
                pattern: /`\w+/,
                alias: "property"
            },
            "class-name": {
                pattern: /(\b(?:class|enum|extends|interface|state(?:\(\))?|struct|within)\s+)\w+/,
                lookbehind: !0
            },
            keyword: /\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\b/,
            function: /\b[a-z_]\w*(?=\s*\()/i,
            boolean: /\b(?:false|true)\b/,
            number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
            operator: />>|<<|--|\+\+|\*\*|[-+*/~!=<>$@]=?|&&?|\|\|?|\^\^?|[?:%]|\b(?:ClockwiseFrom|Cross|Dot)\b/,
            punctuation: /[()[\]{};,.]/
        }, e1408.languages.uc = e1408.languages.uscript = e1408.languages.unrealscript;
    }
    a33(ti, "unrealscript");
});
var Fb = o17((GT, Mb)=>{
    "use strict";
    Mb.exports = ai;
    ai.displayName = "uorazor";
    ai.aliases = [];
    function ai(e1409) {
        e1409.languages.uorazor = {
            "comment-hash": {
                pattern: /#.*/,
                alias: "comment",
                greedy: !0
            },
            "comment-slash": {
                pattern: /\/\/.*/,
                alias: "comment",
                greedy: !0
            },
            string: {
                pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
                inside: {
                    punctuation: /^['"]|['"]$/
                },
                greedy: !0
            },
            "source-layers": {
                pattern: /\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\b/i,
                alias: "function"
            },
            "source-commands": {
                pattern: /\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\b/,
                alias: "function"
            },
            "tag-name": {
                pattern: /(^\{%-?\s*)\w+/,
                lookbehind: !0,
                alias: "keyword"
            },
            delimiter: {
                pattern: /^\{[{%]-?|-?[%}]\}$/,
                alias: "punctuation"
            },
            function: /\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\b/,
            keyword: /\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\b/,
            boolean: /\b(?:false|null|true)\b/,
            number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
            operator: [
                {
                    pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
                    lookbehind: !0
                },
                /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
            ],
            punctuation: /[()\[\]{}:.,]/
        };
    }
    a33(ai, "uorazor");
});
var Bb = o17(($T, Ub)=>{
    "use strict";
    Ub.exports = ri;
    ri.displayName = "uri";
    ri.aliases = [
        "url"
    ];
    function ri(e1410) {
        e1410.languages.uri = {
            scheme: {
                pattern: /^[a-z][a-z0-9+.-]*:/im,
                greedy: !0,
                inside: {
                    "scheme-delimiter": /:$/
                }
            },
            fragment: {
                pattern: /#[\w\-.~!$&'()*+,;=%:@/?]*/,
                inside: {
                    "fragment-delimiter": /^#/
                }
            },
            query: {
                pattern: /\?[\w\-.~!$&'()*+,;=%:@/?]*/,
                inside: {
                    "query-delimiter": {
                        pattern: /^\?/,
                        greedy: !0
                    },
                    "pair-delimiter": /[&;]/,
                    pair: {
                        pattern: /^[^=][\s\S]*/,
                        inside: {
                            key: /^[^=]+/,
                            value: {
                                pattern: /(^=)[\s\S]+/,
                                lookbehind: !0
                            }
                        }
                    }
                }
            },
            authority: {
                pattern: RegExp(/^\/\//.source + /(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source + ("(?:" + /\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source + "|" + /[\w\-.~!$&'()*+,;=%]*/.source + ")") + /(?::\d*)?/.source, "m"),
                inside: {
                    "authority-delimiter": /^\/\//,
                    "user-info-segment": {
                        pattern: /^[\w\-.~!$&'()*+,;=%:]*@/,
                        inside: {
                            "user-info-delimiter": /@$/,
                            "user-info": /^[\w\-.~!$&'()*+,;=%:]+/
                        }
                    },
                    "port-segment": {
                        pattern: /:\d*$/,
                        inside: {
                            "port-delimiter": /^:/,
                            port: /^\d+/
                        }
                    },
                    host: {
                        pattern: /[\s\S]+/,
                        inside: {
                            "ip-literal": {
                                pattern: /^\[[\s\S]+\]$/,
                                inside: {
                                    "ip-literal-delimiter": /^\[|\]$/,
                                    "ipv-future": /^v[\s\S]+/,
                                    "ipv6-address": /^[\s\S]+/
                                }
                            },
                            "ipv4-address": /^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/
                        }
                    }
                }
            },
            path: {
                pattern: /^[\w\-.~!$&'()*+,;=%:@/]+/m,
                inside: {
                    "path-separator": /\//
                }
            }
        }, e1410.languages.url = e1410.languages.uri;
    }
    a33(ri, "uri");
});
var Gb = o17((qT, Pb)=>{
    "use strict";
    Pb.exports = ni;
    ni.displayName = "v";
    ni.aliases = [];
    function ni(e1411) {
        (function(t1014) {
            var r744 = {
                pattern: /[\s\S]+/,
                inside: null
            };
            t1014.languages.v = t1014.languages.extend("clike", {
                string: {
                    pattern: /r?(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
                    alias: "quoted-string",
                    greedy: !0,
                    inside: {
                        interpolation: {
                            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[^{}]*\}|\w+(?:\.\w+(?:\([^\(\)]*\))?|\[[^\[\]]+\])*)/,
                            lookbehind: !0,
                            inside: {
                                "interpolation-variable": {
                                    pattern: /^\$\w[\s\S]*$/,
                                    alias: "variable"
                                },
                                "interpolation-punctuation": {
                                    pattern: /^\$\{|\}$/,
                                    alias: "punctuation"
                                },
                                "interpolation-expression": r744
                            }
                        }
                    }
                },
                "class-name": {
                    pattern: /(\b(?:enum|interface|struct|type)\s+)(?:C\.)?\w+/,
                    lookbehind: !0
                },
                keyword: /(?:\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\$(?:else|for|if)|#(?:flag|include))\b/,
                number: /\b(?:0x[a-f\d]+(?:_[a-f\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?)\b/i,
                operator: /~|\?|[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\.?/,
                builtin: /\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\b/
            }), r744.inside = t1014.languages.v, t1014.languages.insertBefore("v", "string", {
                char: {
                    pattern: /`(?:\\`|\\?[^`]{1,2})`/,
                    alias: "rune"
                }
            }), t1014.languages.insertBefore("v", "operator", {
                attribute: {
                    pattern: /(^[\t ]*)\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\]/m,
                    lookbehind: !0,
                    alias: "annotation",
                    inside: {
                        punctuation: /[\[\]]/,
                        keyword: /\w+/
                    }
                },
                generic: {
                    pattern: /<\w+>(?=\s*[\)\{])/,
                    inside: {
                        punctuation: /[<>]/,
                        "class-name": /\w+/
                    }
                }
            }), t1014.languages.insertBefore("v", "function", {
                "generic-function": {
                    pattern: /\b\w+\s*<\w+>(?=\()/,
                    inside: {
                        function: /^\w+/,
                        generic: {
                            pattern: /<\w+>/,
                            inside: t1014.languages.v.generic.inside
                        }
                    }
                }
            });
        })(e1411);
    }
    a33(ni, "v");
});
var qb = o17((HT, $b)=>{
    "use strict";
    $b.exports = ii;
    ii.displayName = "vala";
    ii.aliases = [];
    function ii(e1412) {
        e1412.languages.vala = e1412.languages.extend("clike", {
            "class-name": [
                {
                    pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=(?:\?\s+|\*?\s+\*?)\w)/,
                    inside: {
                        punctuation: /\./
                    }
                },
                {
                    pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\./
                    }
                },
                {
                    pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\./
                    }
                },
                {
                    pattern: /((?:\b(?:class|enum|interface|new|struct)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/,
                    lookbehind: !0,
                    inside: {
                        punctuation: /\./
                    }
                }
            ],
            keyword: /\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\b/i,
            function: /\b\w+(?=\s*\()/,
            number: /(?:\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?:f|u?l?)?/i,
            operator: /\+\+|--|&&|\|\||<<=?|>>=?|=>|->|~|[+\-*\/%&^|=!<>]=?|\?\??|\.\.\./,
            punctuation: /[{}[\];(),.:]/,
            constant: /\b[A-Z0-9_]+\b/
        }), e1412.languages.insertBefore("vala", "string", {
            "raw-string": {
                pattern: /"""[\s\S]*?"""/,
                greedy: !0,
                alias: "string"
            },
            "template-string": {
                pattern: /@"[\s\S]*?"/,
                greedy: !0,
                inside: {
                    interpolation: {
                        pattern: /\$(?:\([^)]*\)|[a-zA-Z]\w*)/,
                        inside: {
                            delimiter: {
                                pattern: /^\$\(?|\)$/,
                                alias: "punctuation"
                            },
                            rest: e1412.languages.vala
                        }
                    },
                    string: /[\s\S]+/
                }
            }
        }), e1412.languages.insertBefore("vala", "keyword", {
            regex: {
                pattern: /\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[imsx]{0,4}(?=\s*(?:$|[\r\n,.;})\]]))/,
                greedy: !0,
                inside: {
                    "regex-source": {
                        pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
                        lookbehind: !0,
                        alias: "language-regex",
                        inside: e1412.languages.regex
                    },
                    "regex-delimiter": /^\//,
                    "regex-flags": /^[a-z]+$/
                }
            }
        });
    }
    a33(ii, "vala");
});
var zb = o17((zT, Hb)=>{
    "use strict";
    Hb.exports = oi;
    oi.displayName = "velocity";
    oi.aliases = [];
    function oi(e1413) {
        (function(t1015) {
            t1015.languages.velocity = t1015.languages.extend("markup", {});
            var r745 = {
                variable: {
                    pattern: /(^|[^\\](?:\\\\)*)\$!?(?:[a-z][\w-]*(?:\([^)]*\))?(?:\.[a-z][\w-]*(?:\([^)]*\))?|\[[^\]]+\])*|\{[^}]+\})/i,
                    lookbehind: !0,
                    inside: {}
                },
                string: {
                    pattern: /"[^"]*"|'[^']*'/,
                    greedy: !0
                },
                number: /\b\d+\b/,
                boolean: /\b(?:false|true)\b/,
                operator: /[=!<>]=?|[+*/%-]|&&|\|\||\.\.|\b(?:eq|g[et]|l[et]|n(?:e|ot))\b/,
                punctuation: /[(){}[\]:,.]/
            };
            r745.variable.inside = {
                string: r745.string,
                function: {
                    pattern: /([^\w-])[a-z][\w-]*(?=\()/,
                    lookbehind: !0
                },
                number: r745.number,
                boolean: r745.boolean,
                punctuation: r745.punctuation
            }, t1015.languages.insertBefore("velocity", "comment", {
                unparsed: {
                    pattern: /(^|[^\\])#\[\[[\s\S]*?\]\]#/,
                    lookbehind: !0,
                    greedy: !0,
                    inside: {
                        punctuation: /^#\[\[|\]\]#$/
                    }
                },
                "velocity-comment": [
                    {
                        pattern: /(^|[^\\])#\*[\s\S]*?\*#/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "comment"
                    },
                    {
                        pattern: /(^|[^\\])##.*/,
                        lookbehind: !0,
                        greedy: !0,
                        alias: "comment"
                    }
                ],
                directive: {
                    pattern: /(^|[^\\](?:\\\\)*)#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})(?:\s*\((?:[^()]|\([^()]*\))*\))?/i,
                    lookbehind: !0,
                    inside: {
                        keyword: {
                            pattern: /^#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})|\bin\b/,
                            inside: {
                                punctuation: /[{}]/
                            }
                        },
                        rest: r745
                    }
                },
                variable: r745.variable
            }), t1015.languages.velocity.tag.inside["attr-value"].inside.rest = t1015.languages.velocity;
        })(e1413);
    }
    a33(oi, "velocity");
});
var Wb = o17((VT, Vb)=>{
    "use strict";
    Vb.exports = si;
    si.displayName = "verilog";
    si.aliases = [];
    function si(e1414) {
        e1414.languages.verilog = {
            comment: {
                pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
                greedy: !0
            },
            string: {
                pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
                greedy: !0
            },
            "kernel-function": {
                pattern: /\B\$\w+\b/,
                alias: "property"
            },
            constant: /\B`\w+\b/,
            function: /\b\w+(?=\()/,
            keyword: /\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\b/,
            important: /\b(?:always|always_comb|always_ff|always_latch)\b(?: *@)?/,
            number: /\B##?\d+|(?:\b\d+)?'[odbh] ?[\da-fzx_?]+|\b(?:\d*[._])?\d+(?:e[-+]?\d+)?/i,
            operator: /[-+{}^~%*\/?=!<>&|]+/,
            punctuation: /[[\];(),.:]/
        };
    }
    a33(si, "verilog");
});
var Yb = o17((WT, jb)=>{
    "use strict";
    jb.exports = li;
    li.displayName = "vhdl";
    li.aliases = [];
    function li(e1415) {
        e1415.languages.vhdl = {
            comment: /--.+/,
            "vhdl-vectors": {
                pattern: /\b[oxb]"[\da-f_]+"|"[01uxzwlh-]+"/i,
                alias: "number"
            },
            "quoted-function": {
                pattern: /"\S+?"(?=\()/,
                alias: "function"
            },
            string: /"(?:[^\\"\r\n]|\\(?:\r\n|[\s\S]))*"/,
            constant: /\b(?:library|use)\b/i,
            keyword: /\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\b/i,
            boolean: /\b(?:false|true)\b/i,
            function: /\w+(?=\()/,
            number: /'[01uxzwlh-]'|\b(?:\d+#[\da-f_.]+#|\d[\d_.]*)(?:e[-+]?\d+)?/i,
            operator: /[<>]=?|:=|[-+*/&=]|\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\b/i,
            punctuation: /[{}[\];(),.:]/
        };
    }
    a33(li, "vhdl");
});
var Zb = o17((jT, Kb)=>{
    "use strict";
    Kb.exports = ui;
    ui.displayName = "vim";
    ui.aliases = [];
    function ui(e1416) {
        e1416.languages.vim = {
            string: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
            comment: /".*/,
            function: /\b\w+(?=\()/,
            keyword: /\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
            builtin: /\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,
            number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
            operator: /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
            punctuation: /[{}[\](),;:]/
        };
    }
    a33(ui, "vim");
});
var Qb = o17((YT, Xb)=>{
    "use strict";
    Xb.exports = di;
    di.displayName = "visualBasic";
    di.aliases = [];
    function di(e1417) {
        e1417.languages["visual-basic"] = {
            comment: {
                pattern: /(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,
                inside: {
                    keyword: /^REM/i
                }
            },
            directive: {
                pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\b_[ \t]*(?:\r\n?|\n)|.)+/i,
                alias: "property",
                greedy: !0
            },
            string: {
                pattern: /\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i,
                greedy: !0
            },
            date: {
                pattern: /#[ \t]*(?:\d+([/-])\d+\1\d+(?:[ \t]+(?:\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?))?|\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?)[ \t]*#/i,
                alias: "number"
            },
            number: /(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:[FRD]|U?[ILS])?/i,
            boolean: /\b(?:False|Nothing|True)\b/i,
            keyword: /\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\b/i,
            operator: /[+\-*/\\^<=>&#@$%!]|\b_(?=[ \t]*[\r\n])/,
            punctuation: /[{}().,:?]/
        }, e1417.languages.vb = e1417.languages["visual-basic"], e1417.languages.vba = e1417.languages["visual-basic"];
    }
    a33(di, "visualBasic");
});
var em = o17((KT, Jb)=>{
    "use strict";
    Jb.exports = ci;
    ci.displayName = "warpscript";
    ci.aliases = [];
    function ci(e1418) {
        e1418.languages.warpscript = {
            comment: /#.*|\/\/.*|\/\*[\s\S]*?\*\//,
            string: {
                pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'|<'(?:[^\\']|'(?!>)|\\.)*'>/,
                greedy: !0
            },
            variable: /\$\S+/,
            macro: {
                pattern: /@\S+/,
                alias: "property"
            },
            keyword: /\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\b/,
            number: /[+-]?\b(?:NaN|Infinity|\d+(?:\.\d*)?(?:[Ee][+-]?\d+)?|0x[\da-fA-F]+|0b[01]+)\b/,
            boolean: /\b(?:F|T|false|true)\b/,
            punctuation: /<%|%>|[{}[\]()]/,
            operator: /==|&&?|\|\|?|\*\*?|>>>?|<<|[<>!~]=?|[-/%^]|\+!?|\b(?:AND|NOT|OR)\b/
        };
    }
    a33(ci, "warpscript");
});
var am = o17((ZT, tm)=>{
    "use strict";
    tm.exports = pi;
    pi.displayName = "wasm";
    pi.aliases = [];
    function pi(e1419) {
        e1419.languages.wasm = {
            comment: [
                /\(;[\s\S]*?;\)/,
                {
                    pattern: /;;.*/,
                    greedy: !0
                }
            ],
            string: {
                pattern: /"(?:\\[\s\S]|[^"\\])*"/,
                greedy: !0
            },
            keyword: [
                {
                    pattern: /\b(?:align|offset)=/,
                    inside: {
                        operator: /=/
                    }
                },
                {
                    pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
                    inside: {
                        punctuation: /\./
                    }
                },
                /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/
            ],
            variable: /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
            number: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
            punctuation: /[()]/
        };
    }
    a33(pi, "wasm");
});
var nm = o17((XT, rm)=>{
    "use strict";
    rm.exports = gi;
    gi.displayName = "webIdl";
    gi.aliases = [];
    function gi(e1420) {
        (function(t1016) {
            var r746 = /(?:\B-|\b_|\b)[A-Za-z][\w-]*(?![\w-])/.source, n611 = "(?:" + /\b(?:unsigned\s+)?long\s+long(?![\w-])/.source + "|" + /\b(?:unrestricted|unsigned)\s+[a-z]+(?![\w-])/.source + "|" + /(?!(?:unrestricted|unsigned)\b)/.source + r746 + /(?:\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + ")" + /(?:\s*\?)?/.source, i607 = {};
            t1016.languages["web-idl"] = {
                comment: {
                    pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
                    greedy: !0
                },
                string: {
                    pattern: /"[^"]*"/,
                    greedy: !0
                },
                namespace: {
                    pattern: RegExp(/(\bnamespace\s+)/.source + r746),
                    lookbehind: !0
                },
                "class-name": [
                    {
                        pattern: /(^|[^\w-])(?:iterable|maplike|setlike)\s*<(?:[^<>]|<[^<>]*>)*>/,
                        lookbehind: !0,
                        inside: i607
                    },
                    {
                        pattern: RegExp(/(\b(?:attribute|const|deleter|getter|optional|setter)\s+)/.source + n611),
                        lookbehind: !0,
                        inside: i607
                    },
                    {
                        pattern: RegExp("(" + /\bcallback\s+/.source + r746 + /\s*=\s*/.source + ")" + n611),
                        lookbehind: !0,
                        inside: i607
                    },
                    {
                        pattern: RegExp(/(\btypedef\b\s*)/.source + n611),
                        lookbehind: !0,
                        inside: i607
                    },
                    {
                        pattern: RegExp(/(\b(?:callback|dictionary|enum|interface(?:\s+mixin)?)\s+)(?!(?:interface|mixin)\b)/.source + r746),
                        lookbehind: !0
                    },
                    {
                        pattern: RegExp(/(:\s*)/.source + r746),
                        lookbehind: !0
                    },
                    RegExp(r746 + /(?=\s+(?:implements|includes)\b)/.source),
                    {
                        pattern: RegExp(/(\b(?:implements|includes)\s+)/.source + r746),
                        lookbehind: !0
                    },
                    {
                        pattern: RegExp(n611 + "(?=" + /\s*(?:\.{3}\s*)?/.source + r746 + /\s*[(),;=]/.source + ")"),
                        inside: i607
                    }
                ],
                builtin: /\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\b/,
                keyword: [
                    /\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\b/,
                    /\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\b/
                ],
                boolean: /\b(?:false|true)\b/,
                number: {
                    pattern: /(^|[^\w-])-?(?:0x[0-9a-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|NaN|Infinity)(?![\w-])/i,
                    lookbehind: !0
                },
                operator: /\.{3}|[=:?<>-]/,
                punctuation: /[(){}[\].,;]/
            };
            for(var l308 in t1016.languages["web-idl"])l308 !== "class-name" && (i607[l308] = t1016.languages["web-idl"][l308]);
            t1016.languages.webidl = t1016.languages["web-idl"];
        })(e1420);
    }
    a33(gi, "webIdl");
});
var om = o17((QT, im)=>{
    "use strict";
    im.exports = bi;
    bi.displayName = "wiki";
    bi.aliases = [];
    function bi(e1421) {
        e1421.languages.wiki = e1421.languages.extend("markup", {
            "block-comment": {
                pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
                lookbehind: !0,
                alias: "comment"
            },
            heading: {
                pattern: /^(=+)[^=\r\n].*?\1/m,
                inside: {
                    punctuation: /^=+|=+$/,
                    important: /.+/
                }
            },
            emphasis: {
                pattern: /('{2,5}).+?\1/,
                inside: {
                    "bold-italic": {
                        pattern: /(''''').+?(?=\1)/,
                        lookbehind: !0,
                        alias: [
                            "bold",
                            "italic"
                        ]
                    },
                    bold: {
                        pattern: /(''')[^'](?:.*?[^'])?(?=\1)/,
                        lookbehind: !0
                    },
                    italic: {
                        pattern: /('')[^'](?:.*?[^'])?(?=\1)/,
                        lookbehind: !0
                    },
                    punctuation: /^''+|''+$/
                }
            },
            hr: {
                pattern: /^-{4,}/m,
                alias: "punctuation"
            },
            url: [
                /ISBN +(?:97[89][ -]?)?(?:\d[ -]?){9}[\dx]\b|(?:PMID|RFC) +\d+/i,
                /\[\[.+?\]\]|\[.+?\]/
            ],
            variable: [
                /__[A-Z]+__/,
                /\{{3}.+?\}{3}/,
                /\{\{.+?\}\}/
            ],
            symbol: [
                /^#redirect/im,
                /~{3,5}/
            ],
            "table-tag": {
                pattern: /((?:^|[|!])[|!])[^|\r\n]+\|(?!\|)/m,
                lookbehind: !0,
                inside: {
                    "table-bar": {
                        pattern: /\|$/,
                        alias: "punctuation"
                    },
                    rest: e1421.languages.markup.tag.inside
                }
            },
            punctuation: /^(?:\{\||\|\}|\|-|[*#:;!|])|\|\||!!/m
        }), e1421.languages.insertBefore("wiki", "tag", {
            nowiki: {
                pattern: /<(nowiki|pre|source)\b[^>]*>[\s\S]*?<\/\1>/i,
                inside: {
                    tag: {
                        pattern: /<(?:nowiki|pre|source)\b[^>]*>|<\/(?:nowiki|pre|source)>/i,
                        inside: e1421.languages.markup.tag.inside
                    }
                }
            }
        });
    }
    a33(bi, "wiki");
});
var lm = o17((JT, sm)=>{
    "use strict";
    sm.exports = mi;
    mi.displayName = "wolfram";
    mi.aliases = [
        "mathematica",
        "wl",
        "nb"
    ];
    function mi(e1422) {
        e1422.languages.wolfram = {
            comment: /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
            string: {
                pattern: /"(?:\\.|[^"\\\r\n])*"/,
                greedy: !0
            },
            keyword: /\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\b/,
            context: {
                pattern: /\b\w+`+\w*/,
                alias: "class-name"
            },
            blank: {
                pattern: /\b\w+_\b/,
                alias: "regex"
            },
            "global-variable": {
                pattern: /\$\w+/,
                alias: "variable"
            },
            boolean: /\b(?:False|True)\b/,
            number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,
            operator: /\/\.|;|=\.|\^=|\^:=|:=|<<|>>|<\||\|>|:>|\|->|->|<-|@@@|@@|@|\/@|=!=|===|==|=|\+|-|\^|\[\/-+%=\]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
            punctuation: /[{}[\];(),.:]/
        }, e1422.languages.mathematica = e1422.languages.wolfram, e1422.languages.wl = e1422.languages.wolfram, e1422.languages.nb = e1422.languages.wolfram;
    }
    a33(mi, "wolfram");
});
var dm = o17((eA, um)=>{
    "use strict";
    um.exports = fi;
    fi.displayName = "wren";
    fi.aliases = [];
    function fi(e1423) {
        e1423.languages.wren = {
            comment: [
                {
                    pattern: /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*))*\*\/)*\*\/)*\*\//,
                    greedy: !0
                },
                {
                    pattern: /(^|[^\\:])\/\/.*/,
                    lookbehind: !0,
                    greedy: !0
                }
            ],
            "triple-quoted-string": {
                pattern: /"""[\s\S]*?"""/,
                greedy: !0,
                alias: "string"
            },
            "string-literal": null,
            hashbang: {
                pattern: /^#!\/.+/,
                greedy: !0,
                alias: "comment"
            },
            attribute: {
                pattern: /#!?[ \t\u3000]*\w+/,
                alias: "keyword"
            },
            "class-name": [
                {
                    pattern: /(\bclass\s+)\w+/,
                    lookbehind: !0
                },
                /\b[A-Z][a-z\d_]*\b/
            ],
            constant: /\b[A-Z][A-Z\d_]*\b/,
            null: {
                pattern: /\bnull\b/,
                alias: "keyword"
            },
            keyword: /\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\b/,
            boolean: /\b(?:false|true)\b/,
            number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
            function: /\b[a-z_]\w*(?=\s*[({])/i,
            operator: /<<|>>|[=!<>]=?|&&|\|\||[-+*/%~^&|?:]|\.{2,3}/,
            punctuation: /[\[\](){}.,;]/
        }, e1423.languages.wren["string-literal"] = {
            pattern: /(^|[^\\"])"(?:[^\\"%]|\\[\s\S]|%(?!\()|%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\))*"/,
            lookbehind: !0,
            greedy: !0,
            inside: {
                interpolation: {
                    pattern: /((?:^|[^\\])(?:\\{2})*)%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\)/,
                    lookbehind: !0,
                    inside: {
                        expression: {
                            pattern: /^(%\()[\s\S]+(?=\)$)/,
                            lookbehind: !0,
                            inside: e1423.languages.wren
                        },
                        "interpolation-punctuation": {
                            pattern: /^%\(|\)$/,
                            alias: "punctuation"
                        }
                    }
                },
                string: /[\s\S]+/
            }
        };
    }
    a33(fi, "wren");
});
var pm = o17((tA, cm)=>{
    "use strict";
    cm.exports = Ei;
    Ei.displayName = "xeora";
    Ei.aliases = [
        "xeoracube"
    ];
    function Ei(e1424) {
        (function(t1017) {
            t1017.languages.xeora = t1017.languages.extend("markup", {
                constant: {
                    pattern: /\$(?:DomainContents|PageRenderDuration)\$/,
                    inside: {
                        punctuation: {
                            pattern: /\$/
                        }
                    }
                },
                variable: {
                    pattern: /\$@?(?:#+|[-+*~=^])?[\w.]+\$/,
                    inside: {
                        punctuation: {
                            pattern: /[$.]/
                        },
                        operator: {
                            pattern: /#+|[-+*~=^@]/
                        }
                    }
                },
                "function-inline": {
                    pattern: /\$F:[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\$/,
                    inside: {
                        variable: {
                            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\w.]+/,
                            inside: {
                                punctuation: {
                                    pattern: /[,.|]/
                                },
                                operator: {
                                    pattern: /#+|[-+*~=^@]/
                                }
                            }
                        },
                        punctuation: {
                            pattern: /\$\w:|[$:?.,|]/
                        }
                    },
                    alias: "function"
                },
                "function-block": {
                    pattern: /\$XF:\{[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\}:XF\$/,
                    inside: {
                        punctuation: {
                            pattern: /[$:{}?.,|]/
                        }
                    },
                    alias: "function"
                },
                "directive-inline": {
                    pattern: /\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\/\w.]+\$/,
                    inside: {
                        punctuation: {
                            pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
                            inside: {
                                tag: {
                                    pattern: /#\d/
                                }
                            }
                        }
                    },
                    alias: "function"
                },
                "directive-block-open": {
                    pattern: /\$\w+:\{|\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\w.]+:\{(?:![A-Z]+)?/,
                    inside: {
                        punctuation: {
                            pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
                            inside: {
                                tag: {
                                    pattern: /#\d/
                                }
                            }
                        },
                        attribute: {
                            pattern: /![A-Z]+$/,
                            inside: {
                                punctuation: {
                                    pattern: /!/
                                }
                            },
                            alias: "keyword"
                        }
                    },
                    alias: "function"
                },
                "directive-block-separator": {
                    pattern: /\}:[-\w.]+:\{/,
                    inside: {
                        punctuation: {
                            pattern: /[:{}]/
                        }
                    },
                    alias: "function"
                },
                "directive-block-close": {
                    pattern: /\}:[-\w.]+\$/,
                    inside: {
                        punctuation: {
                            pattern: /[:{}$]/
                        }
                    },
                    alias: "function"
                }
            }), t1017.languages.insertBefore("inside", "punctuation", {
                variable: t1017.languages.xeora["function-inline"].inside.variable
            }, t1017.languages.xeora["function-block"]), t1017.languages.xeoracube = t1017.languages.xeora;
        })(e1424);
    }
    a33(Ei, "xeora");
});
var bm = o17((aA, gm)=>{
    "use strict";
    gm.exports = Si;
    Si.displayName = "xmlDoc";
    Si.aliases = [];
    function Si(e1425) {
        (function(t1018) {
            function r747(d154, u275) {
                t1018.languages[d154] && t1018.languages.insertBefore(d154, "comment", {
                    "doc-comment": u275
                });
            }
            a33(r747, "insertDocComment");
            var n612 = t1018.languages.markup.tag, i608 = {
                pattern: /\/\/\/.*/,
                greedy: !0,
                alias: "comment",
                inside: {
                    tag: n612
                }
            }, l309 = {
                pattern: /'''.*/,
                greedy: !0,
                alias: "comment",
                inside: {
                    tag: n612
                }
            };
            r747("csharp", i608), r747("fsharp", i608), r747("vbnet", l309);
        })(e1425);
    }
    a33(Si, "xmlDoc");
});
var fm = o17((rA, mm)=>{
    "use strict";
    mm.exports = hi;
    hi.displayName = "xojo";
    hi.aliases = [];
    function hi(e1426) {
        e1426.languages.xojo = {
            comment: {
                pattern: /(?:'|\/\/|Rem\b).+/i,
                greedy: !0
            },
            string: {
                pattern: /"(?:""|[^"])*"/,
                greedy: !0
            },
            number: [
                /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
                /&[bchou][a-z\d]+/i
            ],
            directive: {
                pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\b/i,
                alias: "property"
            },
            keyword: /\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\b/i,
            operator: /<[=>]?|>=?|[+\-*\/\\^=]|\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\b/i,
            punctuation: /[.,;:()]/
        };
    }
    a33(hi, "xojo");
});
var Sm = o17((nA, Em)=>{
    "use strict";
    Em.exports = yi;
    yi.displayName = "xquery";
    yi.aliases = [];
    function yi(e1427) {
        (function(t1019) {
            t1019.languages.xquery = t1019.languages.extend("markup", {
                "xquery-comment": {
                    pattern: /\(:[\s\S]*?:\)/,
                    greedy: !0,
                    alias: "comment"
                },
                string: {
                    pattern: /(["'])(?:\1\1|(?!\1)[\s\S])*\1/,
                    greedy: !0
                },
                extension: {
                    pattern: /\(#.+?#\)/,
                    alias: "symbol"
                },
                variable: /\$[-\w:]+/,
                axis: {
                    pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,
                    lookbehind: !0,
                    alias: "operator"
                },
                "keyword-operator": {
                    pattern: /(^|[^:-])\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\b(?=$|[^:-])/,
                    lookbehind: !0,
                    alias: "operator"
                },
                keyword: {
                    pattern: /(^|[^:-])\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\b(?=$|[^:-])/,
                    lookbehind: !0
                },
                function: /[\w-]+(?::[\w-]+)*(?=\s*\()/,
                "xquery-element": {
                    pattern: /(element\s+)[\w-]+(?::[\w-]+)*/,
                    lookbehind: !0,
                    alias: "tag"
                },
                "xquery-attribute": {
                    pattern: /(attribute\s+)[\w-]+(?::[\w-]+)*/,
                    lookbehind: !0,
                    alias: "attr-name"
                },
                builtin: {
                    pattern: /(^|[^:-])\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\b(?=$|[^:-])/,
                    lookbehind: !0
                },
                number: /\b\d+(?:\.\d+)?(?:E[+-]?\d+)?/,
                operator: [
                    /[+*=?|@]|\.\.?|:=|!=|<[=<]?|>[=>]?/,
                    {
                        pattern: /(\s)-(?=\s)/,
                        lookbehind: !0
                    }
                ],
                punctuation: /[[\](){},;:/]/
            }), t1019.languages.xquery.tag.pattern = /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/, t1019.languages.xquery.tag.inside["attr-value"].pattern = /=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+)/, t1019.languages.xquery.tag.inside["attr-value"].inside.punctuation = /^="|"$/, t1019.languages.xquery.tag.inside["attr-value"].inside.expression = {
                pattern: /\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}/,
                inside: t1019.languages.xquery,
                alias: "language-xquery"
            };
            var r748 = a33(function(i609) {
                return typeof i609 == "string" ? i609 : typeof i609.content == "string" ? i609.content : i609.content.map(r748).join("");
            }, "stringifyToken"), n613 = a33(function(i610) {
                for(var l310 = [], d155 = 0; d155 < i610.length; d155++){
                    var u276 = i610[d155], p203 = !1;
                    if (typeof u276 != "string" && (u276.type === "tag" && u276.content[0] && u276.content[0].type === "tag" ? u276.content[0].content[0].content === "</" ? l310.length > 0 && l310[l310.length - 1].tagName === r748(u276.content[0].content[1]) && l310.pop() : u276.content[u276.content.length - 1].content === "/>" || l310.push({
                        tagName: r748(u276.content[0].content[1]),
                        openedBraces: 0
                    }) : l310.length > 0 && u276.type === "punctuation" && u276.content === "{" && (!i610[d155 + 1] || i610[d155 + 1].type !== "punctuation" || i610[d155 + 1].content !== "{") && (!i610[d155 - 1] || i610[d155 - 1].type !== "plain-text" || i610[d155 - 1].content !== "{") ? l310[l310.length - 1].openedBraces++ : l310.length > 0 && l310[l310.length - 1].openedBraces > 0 && u276.type === "punctuation" && u276.content === "}" ? l310[l310.length - 1].openedBraces-- : u276.type !== "comment" && (p203 = !0)), (p203 || typeof u276 == "string") && l310.length > 0 && l310[l310.length - 1].openedBraces === 0) {
                        var c187 = r748(u276);
                        d155 < i610.length - 1 && (typeof i610[d155 + 1] == "string" || i610[d155 + 1].type === "plain-text") && (c187 += r748(i610[d155 + 1]), i610.splice(d155 + 1, 1)), d155 > 0 && (typeof i610[d155 - 1] == "string" || i610[d155 - 1].type === "plain-text") && (c187 = r748(i610[d155 - 1]) + c187, i610.splice(d155 - 1, 1), d155--), /^\s+$/.test(c187) ? i610[d155] = c187 : i610[d155] = new t1019.Token("plain-text", c187, null, c187);
                    }
                    u276.content && typeof u276.content != "string" && n613(u276.content);
                }
            }, "walkTokens");
            t1019.hooks.add("after-tokenize", function(i611) {
                i611.language === "xquery" && n613(i611.tokens);
            });
        })(e1427);
    }
    a33(yi, "xquery");
});
var ym = o17((iA, hm)=>{
    "use strict";
    hm.exports = Ti;
    Ti.displayName = "yang";
    Ti.aliases = [];
    function Ti(e1428) {
        e1428.languages.yang = {
            comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
            string: {
                pattern: /"(?:[^\\"]|\\.)*"|'[^']*'/,
                greedy: !0
            },
            keyword: {
                pattern: /(^|[{};\r\n][ \t]*)[a-z_][\w.-]*/i,
                lookbehind: !0
            },
            namespace: {
                pattern: /(\s)[a-z_][\w.-]*(?=:)/i,
                lookbehind: !0
            },
            boolean: /\b(?:false|true)\b/,
            operator: /\+/,
            punctuation: /[{};:]/
        };
    }
    a33(Ti, "yang");
});
var Am = o17((oA, Tm)=>{
    "use strict";
    Tm.exports = Ai;
    Ai.displayName = "zig";
    Ai.aliases = [];
    function Ai(e1429) {
        (function(t1020) {
            function r749(c188) {
                return function() {
                    return c188;
                };
            }
            a33(r749, "literal");
            var n614 = /\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\b/, i612 = "\\b(?!" + n614.source + ")(?!\\d)\\w+\\b", l311 = /align\s*\((?:[^()]|\([^()]*\))*\)/.source, d156 = /(?:\?|\bpromise->|(?:\[[^[\]]*\]|\*(?!\*)|\*\*)(?:\s*<ALIGN>|\s*const\b|\s*volatile\b|\s*allowzero\b)*)/.source.replace(/<ALIGN>/g, r749(l311)), u277 = /(?:\bpromise\b|(?:\berror\.)?<ID>(?:\.<ID>)*(?!\s+<ID>))/.source.replace(/<ID>/g, r749(i612)), p204 = "(?!\\s)(?:!?\\s*(?:" + d156 + "\\s*)*" + u277 + ")+";
            t1020.languages.zig = {
                comment: [
                    {
                        pattern: /\/\/[/!].*/,
                        alias: "doc-comment"
                    },
                    /\/{2}.*/
                ],
                string: [
                    {
                        pattern: /(^|[^\\@])c?"(?:[^"\\\r\n]|\\.)*"/,
                        lookbehind: !0,
                        greedy: !0
                    },
                    {
                        pattern: /([\r\n])([ \t]+c?\\{2}).*(?:(?:\r\n?|\n)\2.*)*/,
                        lookbehind: !0,
                        greedy: !0
                    }
                ],
                char: {
                    pattern: /(^|[^\\])'(?:[^'\\\r\n]|[\uD800-\uDFFF]{2}|\\(?:.|x[a-fA-F\d]{2}|u\{[a-fA-F\d]{1,6}\}))'/,
                    lookbehind: !0,
                    greedy: !0
                },
                builtin: /\B@(?!\d)\w+(?=\s*\()/,
                label: {
                    pattern: /(\b(?:break|continue)\s*:\s*)\w+\b|\b(?!\d)\w+\b(?=\s*:\s*(?:\{|while\b))/,
                    lookbehind: !0
                },
                "class-name": [
                    /\b(?!\d)\w+(?=\s*=\s*(?:(?:extern|packed)\s+)?(?:enum|struct|union)\s*[({])/,
                    {
                        pattern: RegExp(/(:\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?[=;,)])|<TYPE>(?=\s*(?:<ALIGN>\s*)?\{)/.source.replace(/<TYPE>/g, r749(p204)).replace(/<ALIGN>/g, r749(l311))),
                        lookbehind: !0,
                        inside: null
                    },
                    {
                        pattern: RegExp(/(\)\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?;)/.source.replace(/<TYPE>/g, r749(p204)).replace(/<ALIGN>/g, r749(l311))),
                        lookbehind: !0,
                        inside: null
                    }
                ],
                "builtin-type": {
                    pattern: /\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\b/,
                    alias: "keyword"
                },
                keyword: n614,
                function: /\b(?!\d)\w+(?=\s*\()/,
                number: /\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\d]+(?:\.[a-fA-F\d]*)?(?:[pP][+-]?[a-fA-F\d]+)?|\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)\b/,
                boolean: /\b(?:false|true)\b/,
                operator: /\.[*?]|\.{2,3}|[-=]>|\*\*|\+\+|\|\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,
                punctuation: /[.:,;(){}[\]]/
            }, t1020.languages.zig["class-name"].forEach(function(c189) {
                c189.inside === null && (c189.inside = t1020.languages.zig);
            });
        })(e1429);
    }
    a33(Ai, "zig");
});
var _i = o17((sA, _m)=>{
    "use strict";
    var s314 = Fi();
    _m.exports = s314;
    s314.register(Bi());
    s314.register(Gi());
    s314.register(qi());
    s314.register(zi());
    s314.register(Wi());
    s314.register(Yi());
    s314.register(Zi());
    s314.register(Qi());
    s314.register(to());
    s314.register(ro());
    s314.register(io());
    s314.register(so());
    s314.register(po());
    s314.register(bo());
    s314.register(fo());
    s314.register(So());
    s314.register(yo());
    s314.register(_o());
    s314.register(Io());
    s314.register(wo());
    s314.register(ko());
    s314.register(Oo());
    s314.register(Pe6());
    s314.register($e3());
    s314.register(Mo());
    s314.register(Uo());
    s314.register(Po());
    s314.register($o());
    s314.register(Ho());
    s314.register(Vo());
    s314.register(jo());
    s314.register(Ko());
    s314.register(Xo());
    s314.register(Jo());
    s314.register(x39());
    s314.register(ts());
    s314.register(rs());
    s314.register(is());
    s314.register(ss());
    s314.register(us());
    s314.register(cs());
    s314.register(gs());
    s314.register(ms());
    s314.register(Es());
    s314.register(Q5());
    s314.register(ys());
    s314.register(W10());
    s314.register(As());
    s314.register(Rs());
    s314.register(Ns());
    s314.register(vs());
    s314.register(Cs());
    s314.register(Ls());
    s314.register(Ds());
    s314.register(Fs());
    s314.register(Bs());
    s314.register(Gs());
    s314.register(qs());
    s314.register(Vs());
    s314.register(js());
    s314.register(Ks());
    s314.register(Xs());
    s314.register(Js());
    s314.register(tl());
    s314.register(rl());
    s314.register(il1());
    s314.register(sl());
    s314.register(ul1());
    s314.register(cl1());
    s314.register(gl1());
    s314.register(fl1());
    s314.register(Sl1());
    s314.register(yl());
    s314.register(Al1());
    s314.register(Rl());
    s314.register(Nl());
    s314.register(vl1());
    s314.register(Cl());
    s314.register(Ll1());
    s314.register(Dl());
    s314.register(Fl());
    s314.register(Bl());
    s314.register(Gl1());
    s314.register(ql());
    s314.register(zl1());
    s314.register(Wl());
    s314.register(Yl());
    s314.register(Zl());
    s314.register(Ql());
    s314.register(eu1());
    s314.register(au1());
    s314.register(nu());
    s314.register(ou());
    s314.register(lu1());
    s314.register(J9());
    s314.register(cu1());
    s314.register(gu());
    s314.register(mu1());
    s314.register(Eu());
    s314.register(hu());
    s314.register(Tu());
    s314.register(_u());
    s314.register(Iu());
    s314.register(wu());
    s314.register(ku());
    s314.register(Ou());
    s314.register(xu());
    s314.register(Mu());
    s314.register(Uu());
    s314.register(Pu());
    s314.register($u());
    s314.register(Hu());
    s314.register(ee4());
    s314.register(ju());
    s314.register(Y5());
    s314.register(Ku());
    s314.register(Xu());
    s314.register(Ju());
    s314.register(td());
    s314.register(rd());
    s314.register(id());
    s314.register(ld());
    s314.register(ae5());
    s314.register(cd());
    s314.register(gd());
    s314.register(md());
    s314.register(Pa1());
    s314.register(Sd());
    s314.register(yd());
    s314.register(Ad());
    s314.register(Rd());
    s314.register(Nd());
    s314.register(vd());
    s314.register(Cd());
    s314.register(xd());
    s314.register(Md());
    s314.register(Bd());
    s314.register(Gd());
    s314.register(qd());
    s314.register(zd());
    s314.register(Wd());
    s314.register(Yd());
    s314.register(Zd());
    s314.register(Dt1());
    s314.register(Qd());
    s314.register(ec1());
    s314.register(ac1());
    s314.register(w24());
    s314.register(nc1());
    s314.register(oc());
    s314.register(lc1());
    s314.register(dc1());
    s314.register(pc1());
    s314.register(bc1());
    s314.register(fc1());
    s314.register(Sc1());
    s314.register(yc1());
    s314.register(Ac1());
    s314.register(Rc1());
    s314.register(Nc1());
    s314.register(vc1());
    s314.register(Cc1());
    s314.register(Lc1());
    s314.register(Dc1());
    s314.register(Fc1());
    s314.register(Bc1());
    s314.register(Gc1());
    s314.register(qc1());
    s314.register(zc1());
    s314.register(Wc1());
    s314.register(Yc1());
    s314.register(Zc1());
    s314.register(Qc1());
    s314.register(ep());
    s314.register(ap());
    s314.register(np());
    s314.register(op());
    s314.register(lp());
    s314.register(dp());
    s314.register(pp());
    s314.register(K11());
    s314.register(bp());
    s314.register(fp());
    s314.register(Sp());
    s314.register(yp());
    s314.register(Ap());
    s314.register(Rp());
    s314.register(Np());
    s314.register(vp());
    s314.register(Cp());
    s314.register(Lp());
    s314.register(Dp());
    s314.register(Fp());
    s314.register(Bp());
    s314.register(Gp());
    s314.register(qp());
    s314.register(zp());
    s314.register(Wp());
    s314.register(Yp());
    s314.register(Zp());
    s314.register(Qp());
    s314.register(eg());
    s314.register(ag());
    s314.register(ng());
    s314.register(og());
    s314.register(lg());
    s314.register(dg());
    s314.register(pg());
    s314.register(bg());
    s314.register(fg());
    s314.register(Sg());
    s314.register(j31());
    s314.register(yg());
    s314.register(Ag());
    s314.register(Rg());
    s314.register(Ng());
    s314.register(re5());
    s314.register(vg());
    s314.register(Cg());
    s314.register(Lg());
    s314.register(Dg());
    s314.register(Fg());
    s314.register(Bg());
    s314.register(Gg());
    s314.register(qg());
    s314.register(zg());
    s314.register(jg());
    s314.register(Kg());
    s314.register(Xg());
    s314.register(X11());
    s314.register(Jg());
    s314.register(tb());
    s314.register(rb());
    s314.register(ib());
    s314.register(sb());
    s314.register(db());
    s314.register(ne6());
    s314.register(gb());
    s314.register(fb());
    s314.register(Sb());
    s314.register(yb());
    s314.register(Ab());
    s314.register(Rb());
    s314.register(Nb());
    s314.register(vb());
    s314.register(Cn1());
    s314.register(Cb());
    s314.register(te4());
    s314.register(Lb());
    s314.register(Db());
    s314.register(Fb());
    s314.register(Bb());
    s314.register(Gb());
    s314.register(qb());
    s314.register(qn());
    s314.register(zb());
    s314.register(Wb());
    s314.register(Yb());
    s314.register(Zb());
    s314.register(Qb());
    s314.register(em());
    s314.register(am());
    s314.register(nm());
    s314.register(om());
    s314.register(lm());
    s314.register(dm());
    s314.register(pm());
    s314.register(bm());
    s314.register(fm());
    s314.register(Sm());
    s314.register(Vn());
    s314.register(ym());
    s314.register(Am());
});
var Rm = Ri(_i()), Kf = Ri(_i()), { default: Zf , ...Xf } = Kf, lA = (Rm.default ?? Zf) ?? Xf;
var s28 = Object.create;
var u27 = Object.defineProperty;
var v28 = Object.getOwnPropertyDescriptor;
var m31 = Object.getOwnPropertyNames;
var p39 = Object.getPrototypeOf, d26 = Object.prototype.hasOwnProperty;
var l30 = (r750, t1021)=>u27(r750, "name", {
        value: t1021,
        configurable: !0
    });
var x40 = (r751, t1022)=>()=>(t1022 || r751((t1022 = {
            exports: {}
        }).exports, t1022), t1022.exports);
var $29 = (r752, t1023, i613, n615)=>{
    if (t1023 && typeof t1023 == "object" || typeof t1023 == "function") for (let e1430 of m31(t1023))!d26.call(r752, e1430) && e1430 !== i613 && u27(r752, e1430, {
        get: ()=>t1023[e1430],
        enumerable: !(n615 = v28(t1023, e1430)) || n615.enumerable
    });
    return r752;
};
var f26 = (r753, t1024, i614)=>(i614 = r753 != null ? s28(p39(r753)) : {}, $29(t1024 || !r753 || !r753.__esModule ? u27(i614, "default", {
        value: r753,
        enumerable: !0
    }) : i614, r753));
var a34 = x40((k, o)=>{
    "use strict";
    o.exports = g121;
    function g121(r754) {
        return "children" in r754 ? c190(r754) : "value" in r754 ? r754.value : "";
    }
    l30(g121, "toString");
    function j60(r755) {
        return r755.type === "text" ? r755.value : r755.children ? c190(r755) : "";
    }
    l30(j60, "one");
    function c190(r756) {
        for(var t1025 = r756.children, i615 = t1025.length, n616 = -1, e1431 = []; ++n616 < i615;)e1431[n616] = j60(t1025[n616]);
        return e1431.join("");
    }
    l30(c190, "all");
});
var h32 = f26(a34()), w25 = f26(a34()), { default: y26 , ...S23 } = w25, q23 = (h32.default ?? y26) ?? S23;
var N16 = Object.create;
var l31 = Object.defineProperty;
var p40 = Object.getOwnPropertyDescriptor;
var $30 = Object.getOwnPropertyNames;
var q24 = Object.getPrototypeOf, w26 = Object.prototype.hasOwnProperty;
var n22 = (e1432, r757)=>l31(e1432, "name", {
        value: r757,
        configurable: !0
    }), c26 = ((e1433)=>typeof require != "undefined" ? require : typeof Proxy != "undefined" ? new Proxy(e1433, {
        get: (r758, t1026)=>(typeof require != "undefined" ? require : r758)[t1026]
    }) : e1433)(function(e1434) {
    if (typeof require != "undefined") return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e1434 + '" is not supported');
});
var x41 = (e1435, r759)=>()=>(r759 || e1435((r759 = {
            exports: {}
        }).exports, r759), r759.exports);
var L12 = (e1436, r760, t1027, a243)=>{
    if (r760 && typeof r760 == "object" || typeof r760 == "function") for (let s315 of $30(r760))!w26.call(e1436, s315) && s315 !== t1027 && l31(e1436, s315, {
        get: ()=>r760[s315],
        enumerable: !(a243 = p40(r760, s315)) || a243.enumerable
    });
    return e1436;
};
var f27 = (e1437, r761, t1028)=>(t1028 = e1437 != null ? N16(q24(e1437)) : {}, L12(r761 || !e1437 || !e1437.__esModule ? l31(t1028, "default", {
        value: e1437,
        enumerable: !0
    }) : t1028, e1437));
var u28 = x41((T, d157)=>{
    "use strict";
    var v70 = b21, k66 = q23, m144 = lA;
    d157.exports = (e1438)=>{
        return e1438 = e1438 || {}, e1438.alias && m144.alias(e1438.alias), (t1029)=>{
            v70(t1029, "element", r762);
        };
        function r762(t1030, a, s316) {
            if (!s316 || s316.tagName !== "pre" || t1030.tagName !== "code") return;
            let i616 = y91(t1030);
            if (i616 === null) return;
            let o;
            try {
                s316.properties.className = (s316.properties.className || []).concat("language-" + i616), o = m144.highlight(k66(t1030), i616);
            } catch (g122) {
                if (e1438.ignoreMissing && /Unknown language/.test(g122.message)) return;
                throw g122;
            }
            t1030.children = o;
        }
        n22(r762, "visitor");
    };
    function y91(e1439) {
        let r763 = e1439.properties.className || [];
        for (let t1031 of r763)if (t1031.slice(0, 9) === "language-") return t1031.slice(9).toLowerCase();
        return null;
    }
    n22(y91, "getLanguage");
});
var h33 = f27(u28()), C25 = f27(u28()), { default: I26 , ...M11 } = C25, U13 = (h33.default ?? I26) ?? M11;
async function mdxToHTML(mdxSrc) {
    const MDXSrc = await T10(mdxSrc, {
        outputFormat: "function-body",
        remarkPlugins: [
            [
                qe2,
                {
                    mode: "button"
                }
            ]
        ],
        rehypePlugins: [
            U13
        ]
    });
    const { default: MDXComponent  } = await L5(MDXSrc.value, mod4);
    const body = $l($e(MDXComponent, null));
    const html = makeHTMLPage({
        head: "<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/prism/9000.0.1/themes/prism-tomorrow.css' />",
        title: "Compile MDX",
        body
    });
    return html;
}
export { mdxToHTML as default };
